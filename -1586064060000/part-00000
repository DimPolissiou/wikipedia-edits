{"title_page": "Data type", "text_new": "[[File:Python 3. The standard type hierarchy.png|thumb|Python 3: the standard type hierarchy]]\n\nIn [[computer science]] and [[computer programming]], a '''data type''' or simply '''type''' is an attribute of [[data]] which tells the [[compiler]] or [[Interpreter (computing)|interpreter]] how the programmer intends to use the data. Most programming languages support basic data types of [[integer (computer science)|integer]] numbers (of varying sizes), [[floating point|Floating-point]] numbers (which approximate real numbers), [[Character (computing)|characters]] and [[boolean data type|Booleans]]. A data type constrains the values that an [[Expression (computer science)|expression]], such as a variable or a function, might take. This data type defines the operations that can be done on the data, the meaning of the data, and the way values of that type can be stored. A data type provides a set of values from which an [[Expression_(computer_science)|expression]] (i.e. variable, function, etc.) may take its values.<ref>{{FOLDOC|type|new=yes}}</ref><ref>{{cite book |last=Shaffer |first=C. A. |title=Data Structures & Algorithm Analysis in C++ |location=Mineola, NY |publisher=Dover |edition=3rd |year=2011 |at=1.2 |isbn=978-0-486-48582-9 }}</ref>\n\n== Concept ==\n\nData types are used within type systems, which offer various ways of defining, implementing and using them. Different type systems ensure varying degrees of [[type safety]].\n\nAlmost all programming languages explicitly include the notion of data type, though different languages may use different terminology.\n\nCommon data types include:\nyou can find any types of answer from this web site \n* [[Integer (computer science)|Integer]].\n* [[floating point|Floating-point]] number.\n* [[Character (computing)|Character]].\n* [[String (computer science)|String]].\n* [[Boolean data type|Boolean]].\n\nFor example, in the [[Java (programming language)|Java programming language]], the type ''int'' represents the set of [[32-bit]] [[Integer (computer science)|integers]] ranging in value from \u22122,147,483,648 to 2,147,483,647, as well as the operations that can be performed on integers, such as addition, subtraction, and multiplication. A color, on the other hand, might be represented by three [[byte]]s denoting the amounts each of red, green, and blue, and a string representing the color's name.\n\nMost programming languages also allow the programmer to define additional data types, usually by combining multiple elements of other types and defining the valid operations of the new data type.  For example, a programmer might create a new data type named \"[[complex number]]\" that would include real and imaginary parts. \nA data type also represents a constraint placed upon the interpretation of data in a [[type system]], describing representation, interpretation and structure of [[Value (computer science)|value]]s or [[object (computer science)|object]]s stored in computer memory. The type system uses data type information to check [[correctness of computer programs]] that access or manipulate the data.\n\nMost data types in statistics have comparable types in computer programming, and vice versa, as shown in the following table:\n\n{|class=\"wikitable\"\n|-\n! Statistics !! Programming\n|-\n| [[real-valued]] ([[interval scale]])\n| rowspan=2|[[floating-point]]\n|-\n| [[real-valued]] ([[ratio scale]])\n|-\n| [[count data]] (usually non-negative) || [[Integer (computer science)|integer]]\n|-\n| [[binary data]] || [[Boolean data type|Boolean]]\n|-\n| [[categorical data]] || [[enumerated type]]\n|-\n| [[random vector]] || [[list (abstract data type)|list]] or [[array data type|array]]\n|-\n| [[random matrix]] || two-dimensional [[array data type|array]]\n|-\n| [[random tree (disambiguation)|random tree]] || [[tree (data structure)|tree]]\n|}\n\n==Definition==\n{{harv|Parnas|Shore|Weiss|1976}} identified five definitions of a \"type\" that were used\u2014sometimes implicitly\u2014in the literature.  Types including behavior align more closely with [[object-oriented]] models, whereas a [[structured programming]] model would tend to not include code, and are called [[plain old data structure]]s.\n\nThe five types are:\n; Syntactic: A type is a purely [[syntax|syntactic]] label associated with a [[variable (computer science)|variable]] when it is declared. Such definitions of \"type\" do not give any [[semantic]] meaning to types.{{clarify|date=August 2016}}\n; Representation: A type is defined in terms of its composition of more primitive types\u2014often machine types.\n; Representation and behaviour: A type is defined as its representation and a set of [[operator (computer programming)|operator]]s manipulating these representations.\n; Value space: A type is a set of possible values which a variable can possess. Such definitions make it possible to speak about ([[disjoint union|disjoint]]) [[union (set theory)|union]]s or [[Cartesian product]]s of types.\n; Value space and behaviour: A type is a set of values which a variable can possess and a set of [[function (computer science)|function]]s that one can apply to these values.\n\nThe definition in terms of a representation was often done in imperative languages such as [[ALGOL]] and [[Pascal (programming language)|Pascal]], while the definition in terms of a value space and behaviour was used in higher-level languages such as [[Simula]] and [[CLU (programming language)|CLU]].\n\n==Classes of data types==\n===Primitive data types===\n[[Primitive data type]]s are typically types that are built-in or basic to a language implementation.\n\n==== Machine data types ====\n\nAll data in computers based on digital electronics is represented as [[bit]]s (alternatives 0 and 1) on the lowest level. The smallest addressable unit of data is usually a group of bits called a [[byte]] (usually an [[octet (computing)|octet]], which is 8 bits). The unit processed by [[machine code]] instructions is called a [[Word (data type)|word]] ({{as of|2011|lc=y}}, typically 32 or 64 bits). Most instructions interpret the word as a [[binary number]], such that a 32-bit word can represent unsigned integer values from 0 to <math>2^{32}-1</math> or signed integer values from <math>-2^{31}</math> to <math>2^{31}-1</math>. Because of [[two's complement]], the machine language and machine doesn't need to distinguish between these unsigned and signed data types for the most part.\n\nFloating point numbers used for floating point arithmetic use a different interpretation of the bits in a word. See [[Floating-point arithmetic]] for details.\n\nMachine data types need to be ''exposed'' or made available in [[systems programming|system]]s or [[low-level programming language]]s, allowing fine-grained control over hardware. The [[C programming language]], for instance, supplies integer types of various widths, such as <code>short</code> and <code>long</code>. If a corresponding native type does not exist on the target platform, the compiler will break them down into code using types that do exist. For instance, if a 32-bit integer is requested on a 16 bit platform, the compiler will tacitly treat it as an array of two 16 bit integers.\n\nIn higher level programming, machine data types are often hidden or ''abstracted'' as an implementation detail that would render code less portable if exposed.  For instance, a generic <code>numeric</code> type might be supplied instead of integers of some specific bit-width.\n\n====Boolean type====\nThe [[Boolean type]] represents the values [[logical truth|true]] and [[false (logic)|false]]. Although only two values are possible, they are rarely implemented as a single binary digit for efficiency reasons. Many programming languages do not have an explicit Boolean type, instead interpreting (for instance) 0 as false and other values as true.\nBoolean data refers to the logical structure of how the language is interpreted to the machine language. In this case a Boolean 0 refers to the logic False. True is always a non zero, especially a one which is known as Boolean 1.\n\n====Numeric types====\nSuch as:\n\n* The [[integer (computing)|integer]] data types, or \"non-fractional numbers\". May be sub-typed according to their ability to contain negative values (e.g. <code>unsigned</code> in C and C++). May also have a small number of predefined subtypes (such as <code>short</code> and <code>long</code> in C/C++); or allow users to freely define subranges such as 1..12 (e.g. [[Pascal (programming language)|Pascal]]/[[Ada (programming language)|Ada]]).\n* [[Floating point]] data types, usually represent values as high-precision fractional values ([[rational numbers]], mathematically), but are sometimes misleadingly called reals (evocative of mathematical [[real numbers]]). They usually have predefined limits on both their maximum values and their precision. Typically stored internally in the form {{math|a \u00d7 2<sup>b</sup>}} (where {{math|a}} and {{math|b}} are integers), but displayed in familiar [[decimal]] form.\n* [[Fixed point (computing)|Fixed point]] data types are convenient for representing monetary values. They are often implemented internally as integers, leading to predefined limits.\n* [[Bignum]] or [[arbitrary precision]] numeric types lack predefined limits. They are not primitive types, and are used sparingly for efficiency reasons.\n\n===Composite types===\n[[Composite type]]s are derived from more than one primitive type. This can be done in a number of ways. The ways they are combined are called [[data structure]]s. Composing a primitive type into a compound type generally results in a new type, e.g. ''array-of-integer'' is a different type to ''integer''.\n\n* An [[array data type|array]] (also called vector, [[List (abstract data type)|list]], or sequence) stores a number of elements and provide [[random access]] to individual elements. The elements of an array are typically (but not in all contexts) required to be of the same type. Arrays may be fixed-length or expandable. Indices into an array are typically required to be integers (if not, one may stress this relaxation by speaking about an [[associative array]]) from a specific range (if not all indices in that range correspond to elements, it may be a [[sparse array]]).\n* [[Record (computer science)|Record]] (also called tuple or struct) Records are among the simplest [[data structure]]s. A record is a value that contains other values, typically in fixed number and sequence and typically indexed by names. The elements of records are usually called ''fields'' or ''members''.\n* [[Union (computer science)|Union]]. A union type definition will specify which of a number of permitted primitive types may be stored in its instances, e.g. \"float or long integer\". Contrast with a [[record (computer science)|record]], which could be defined to contain a float ''and'' an integer; whereas, in a union, there is only one type allowed at a time.\n** A [[tagged union]] (also called a [[Variant type|variant]], variant record, discriminated union, or disjoint union) contains an additional field indicating its current type for enhanced type safety.\n* A [[set (abstract data type)|set]] is an [[abstract data structure]] that can store certain values, without any particular [[sequence|order]], and no repeated values. Values themselves are not retrieved from sets, rather one tests a value for membership to obtain a boolean \"in\" or \"not in\".\n* An [[object (computer science)|object]] contains a number of data fields, like a record, and also a number of subroutines for accessing or modifying them, called [[Method (computer programming)|methods]].\n\nMany others are possible, but they tend to be further variations and compounds of the above. For example a [[linked list]] can store the same data as an array, but provides [[sequential access]] rather than random and is built up of records in [[dynamic memory]]; though arguably a data structure rather than a type ''per se'', it is also common and distinct enough that including it in a discussion of composite types can be justified.\n\n====Enumerations====\nThe [[enumerated type]] has distinct values, which can be compared and assigned, but which do not necessarily have any particular concrete representation in the computer's memory; compilers and interpreters can represent them arbitrarily. For example, the four suits in a deck of playing cards may be four enumerators named ''CLUB'', ''DIAMOND'', ''HEART'', ''SPADE'', belonging to an enumerated type named ''suit''.  If a variable ''V'' is declared having ''suit'' as its data type, one can assign any of those four values to it. Some implementations allow programmers to assign integer values to the enumeration values, or even treat them as type-equivalent to integers.\n\n==== String and text types ====\n\nSuch as:\n\n* A [[Character (computing)|character]], which may be a letter of some [[alphabet]], a digit, a blank space, a punctuation mark, etc.\n* A [[String (computer science)|string]], which is a sequence of characters. Strings are typically used to represent words and text.\n\nCharacter and string types can store sequences of characters from a character set such as [[ASCII]]. Since most character sets include the [[Numerical digit|digits]], it is possible to have a numeric string, such as <code>\"1234\"</code>. However, many languages treat these as belonging to a different type to the numeric value <code>1234</code>.\n\nCharacter and string types can have different subtypes according to the required character \"width\". The original 7-bit wide ASCII was found to be limited, and superseded by 8 and 16-bit sets, which can encode a wide variety of non-Latin alphabets (such as [[Hebrew]] and [[Chinese language|Chinese]]) and other symbols. Strings may be either stretch-to-fit or of fixed size, even in the same programming language. They may also be subtyped by their maximum size.\n\nNote: Strings are not a primitive data type in all languages. In [[C (programming language)|C]], for instance, they are composed from an array of characters.\n\n===Other types===\nTypes can be based on, or derived from, the basic types explained above. In some languages, such as C, [[function (computer science)|function]]s have a type derived from the type of their [[return value]].\n\n====Pointers and references====\n{{Main|Reference (computer science)}}\nThe main non-composite, derived type is the [[pointer (computer programming)|pointer]], a data type whose value refers directly to (or \"points to\") another value stored elsewhere in the [[computer memory]] using its [[Memory address|address]]. It is a primitive kind of [[reference (computer science)|reference]]. (In everyday terms, a page number in a book could be considered a piece of data that refers to another one). Pointers are often stored in a format similar to an integer; however, attempting to dereference or \"look up\" a pointer whose value was never a valid memory address would cause a program to crash. To ameliorate this potential problem, pointers are considered a separate type to the type of data they point to, even if the underlying representation is the same.\n\n====Function types====\n{{Main|Function type}}\n{{Expand section|date=October 2012}}\n\n===Abstract data types===\nAny type that does not specify an implementation is an [[abstract data type]]. For instance, a [[stack (abstract data type)|stack]] (which is an abstract type) can be implemented as an array (a contiguous block of memory containing multiple values), or as a [[linked list]] (a set of non-contiguous memory blocks linked by [[pointer (computer science)|pointer]]s).\n\nAbstract types can be handled by code that does not know or \"care\" what underlying types are contained\nin them. Programming that is agnostic about concrete data types is called [[generic programming]]. Arrays and records can also contain underlying types, but are considered concrete because they specify how their contents or elements are laid out in memory.\n\nExamples include:\n\n* A [[Queue (data structure)|queue]] is a first-in first-out list. Variations are [[Deque]] and [[Priority queue]].\n* A [[Set (computer science)|set]] can store certain values, without any particular [[sequence|order]], and with no repeated values.\n* A [[Stack (data structure)|stack]] is a last-in, first out data structure.\n* A [[Tree (computer science)|tree]] is a [[hierarchical structure]].\n* A [[Graph (data structure)|graph]].\n* A [[List (abstract data type)|list]].\n* A [[hash table|hash]], dictionary, [[map (computer science)|map]] or [[associative array]] is a more flexible variation on a record, in which [[name-value pair]]s can be added and deleted freely.\n* A [[smart pointer]] is the abstract counterpart to a pointer. Both are kinds of [[reference (computer science)|reference]]s.\n\n===Utility types===\nFor convenience, high-level languages may supply ready-made \"real world\" data types, for instance ''times'', ''dates'' and ''monetary values'' and ''memory'', even where the language allows them to be built from primitive types.\n\n==Type systems==\nA [[type system]] associates types with computed values. By examining the flow of these values, a type system attempts to prove that no ''type errors'' can occur. The type system in question determines what constitutes a type error, but a type system generally seeks to guarantee that operations expecting a certain kind of value are not used with values for which that operation does not make sense.\n\nA [[compiler]] may use the static type of a value to optimize the storage it needs and the choice of algorithms for operations on the value. In many [[C (programming language)|C]] compilers the {{C-lang|float}} data type, for example, is represented in 32 [[bit]]s, in accord with the [[IEEE 754-2008|IEEE specification for single-precision floating point numbers]]. They will thus use floating-point-specific [[instruction set|microprocessor operations]] on those values (floating-point addition, multiplication, etc.).\n\nThe depth of type constraints and the manner of their evaluation affect the ''typing'' of the language. A [[programming language]] may further associate an operation with varying concrete algorithms on each type in the case of [[type polymorphism]]. [[Type theory]] is the study of type systems, although the concrete type systems of programming languages originate from practical issues of computer architecture, compiler implementation, and language design.\n\nType systems may be variously [[static typing|static]] or [[dynamic typing|dynamic]], [[strong typing|strong]] or [[weak typing]], and so forth.\n\n==See also==\n* [[C data types]]\n* [[Data dictionary]]\n* [[Functional programming]]\n* [[Kind (type theory)|Kind]]\n* [[Type theory]] for the mathematical models of types\n* [[Type system]] for different choices in programming language typing\n* [[Type conversion]]\n\n==References==\n{{Reflist}}\n\n==Further reading==\n*{{cite journal|last1 = Parnas|first1=David L.|authorlink1=David Parnas|first2=John E.|last2=Shore|first3=David|last3=Weiss|year=1976|title=Abstract types defined as classes of variables|journal=Proceedings of the 1976 Conference on Data : Abstraction, Definition and Structure|pages=149\u2013154|doi=10.1145/800237.807133|ref=harv}} \n*{{cite journal|last1 = Cardelli|first1=Luca|authorlink1=Luca Cardelli|last2=Wegner|first2=Peter|authorlink2=Peter Wegner|title = On Understanding Types, Data Abstraction, and Polymorphism|url=http://lucacardelli.name/Papers/OnUnderstanding.A4.pdf|journal = [[ACM Computing Surveys]]|date = December 1985| volume = 17|issue=4|issn = 0360-0300|pages = 471\u2013523|doi = 10.1145/6041.6042| ref = harv|citeseerx=10.1.1.117.695}}\n*{{cite book|first=J. Craig|last=Cleaveland|title=An Introduction to Data Types|year=1986|publisher=Addison-Wesley|isbn=978-0201119404}}\n\n==External links==\n*{{Commonscatinline|Data types}}\n\n{{Data types}}\n{{Authority control}}\n\n{{DEFAULTSORT:Data Type}}\n[[Category:Data types| ]]\n[[Category:Programming language concepts]]\n", "text_old": "[[File:Python 3. The standard type hierarchy.png|thumb|Python 3: the standard type hierarchy]]\n\nIn [[computer science]] and [[computer programming]], a '''data type''' or simply '''type''' is an attribute of [[data]] which tells the [[compiler]] or [[Interpreter (computing)|interpreter]] how the programmer intends to use the data. Most programming languages support basic data types of [[integer (computer science)|integer]] numbers (of varying sizes), [[floating point|Floating-point]] numbers (which approximate real numbers), [[Character (computing)|characters]] and [[boolean data type|Booleans]]. A data type constrains the values that an [[Expression (computer science)|expression]], such as a variable or a function, might take. This data type defines the operations that can be done on the data, the meaning of the data, and the way values of that type can be stored. A data type provides a set of values from which an [[Expression_(computer_science)|expression]] (i.e. variable, function, etc.) may take its values.<ref>{{FOLDOC|type|new=yes}}</ref><ref>{{cite book |last=Shaffer |first=C. A. |title=Data Structures & Algorithm Analysis in C++ |location=Mineola, NY |publisher=Dover |edition=3rd |year=2011 |at=1.2 |isbn=978-0-486-48582-9 }}</ref>\n\n== Concept ==\n\nData types are used within type systems, which offer various ways of defining, implementing and using them. Different type systems ensure varying degrees of [[type safety]].\n\nAlmost all programming languages explicitly include the notion of data type, though different languages may use different terminology.\n\nCommon data types include:\n\n* [[Integer (computer science)|Integer]].\n* [[floating point|Floating-point]] number.\n* [[Character (computing)|Character]].\n* [[String (computer science)|String]].\n* [[Boolean data type|Boolean]].\n\nFor example, in the [[Java (programming language)|Java programming language]], the type ''int'' represents the set of [[32-bit]] [[Integer (computer science)|integers]] ranging in value from \u22122,147,483,648 to 2,147,483,647, as well as the operations that can be performed on integers, such as addition, subtraction, and multiplication. A color, on the other hand, might be represented by three [[byte]]s denoting the amounts each of red, green, and blue, and a string representing the color's name.\n\nMost programming languages also allow the programmer to define additional data types, usually by combining multiple elements of other types and defining the valid operations of the new data type.  For example, a programmer might create a new data type named \"[[complex number]]\" that would include real and imaginary parts. \nA data type also represents a constraint placed upon the interpretation of data in a [[type system]], describing representation, interpretation and structure of [[Value (computer science)|value]]s or [[object (computer science)|object]]s stored in computer memory. The type system uses data type information to check [[correctness of computer programs]] that access or manipulate the data.\n\nMost data types in statistics have comparable types in computer programming, and vice versa, as shown in the following table:\n\n{|class=\"wikitable\"\n|-\n! Statistics !! Programming\n|-\n| [[real-valued]] ([[interval scale]])\n| rowspan=2|[[floating-point]]\n|-\n| [[real-valued]] ([[ratio scale]])\n|-\n| [[count data]] (usually non-negative) || [[Integer (computer science)|integer]]\n|-\n| [[binary data]] || [[Boolean data type|Boolean]]\n|-\n| [[categorical data]] || [[enumerated type]]\n|-\n| [[random vector]] || [[list (abstract data type)|list]] or [[array data type|array]]\n|-\n| [[random matrix]] || two-dimensional [[array data type|array]]\n|-\n| [[random tree (disambiguation)|random tree]] || [[tree (data structure)|tree]]\n|}\n\n==Definition==\n{{harv|Parnas|Shore|Weiss|1976}} identified five definitions of a \"type\" that were used\u2014sometimes implicitly\u2014in the literature.  Types including behavior align more closely with [[object-oriented]] models, whereas a [[structured programming]] model would tend to not include code, and are called [[plain old data structure]]s.\n\nThe five types are:\n; Syntactic: A type is a purely [[syntax|syntactic]] label associated with a [[variable (computer science)|variable]] when it is declared. Such definitions of \"type\" do not give any [[semantic]] meaning to types.{{clarify|date=August 2016}}\n; Representation: A type is defined in terms of its composition of more primitive types\u2014often machine types.\n; Representation and behaviour: A type is defined as its representation and a set of [[operator (computer programming)|operator]]s manipulating these representations.\n; Value space: A type is a set of possible values which a variable can possess. Such definitions make it possible to speak about ([[disjoint union|disjoint]]) [[union (set theory)|union]]s or [[Cartesian product]]s of types.\n; Value space and behaviour: A type is a set of values which a variable can possess and a set of [[function (computer science)|function]]s that one can apply to these values.\n\nThe definition in terms of a representation was often done in imperative languages such as [[ALGOL]] and [[Pascal (programming language)|Pascal]], while the definition in terms of a value space and behaviour was used in higher-level languages such as [[Simula]] and [[CLU (programming language)|CLU]].\n\n==Classes of data types==\n===Primitive data types===\n[[Primitive data type]]s are typically types that are built-in or basic to a language implementation.\n\n==== Machine data types ====\n\nAll data in computers based on digital electronics is represented as [[bit]]s (alternatives 0 and 1) on the lowest level. The smallest addressable unit of data is usually a group of bits called a [[byte]] (usually an [[octet (computing)|octet]], which is 8 bits). The unit processed by [[machine code]] instructions is called a [[Word (data type)|word]] ({{as of|2011|lc=y}}, typically 32 or 64 bits). Most instructions interpret the word as a [[binary number]], such that a 32-bit word can represent unsigned integer values from 0 to <math>2^{32}-1</math> or signed integer values from <math>-2^{31}</math> to <math>2^{31}-1</math>. Because of [[two's complement]], the machine language and machine doesn't need to distinguish between these unsigned and signed data types for the most part.\n\nFloating point numbers used for floating point arithmetic use a different interpretation of the bits in a word. See [[Floating-point arithmetic]] for details.\n\nMachine data types need to be ''exposed'' or made available in [[systems programming|system]]s or [[low-level programming language]]s, allowing fine-grained control over hardware. The [[C programming language]], for instance, supplies integer types of various widths, such as <code>short</code> and <code>long</code>. If a corresponding native type does not exist on the target platform, the compiler will break them down into code using types that do exist. For instance, if a 32-bit integer is requested on a 16 bit platform, the compiler will tacitly treat it as an array of two 16 bit integers.\n\nIn higher level programming, machine data types are often hidden or ''abstracted'' as an implementation detail that would render code less portable if exposed.  For instance, a generic <code>numeric</code> type might be supplied instead of integers of some specific bit-width.\n\n====Boolean type====\nThe [[Boolean type]] represents the values [[logical truth|true]] and [[false (logic)|false]]. Although only two values are possible, they are rarely implemented as a single binary digit for efficiency reasons. Many programming languages do not have an explicit Boolean type, instead interpreting (for instance) 0 as false and other values as true.\nBoolean data refers to the logical structure of how the language is interpreted to the machine language. In this case a Boolean 0 refers to the logic False. True is always a non zero, especially a one which is known as Boolean 1.\n\n====Numeric types====\nSuch as:\n\n* The [[integer (computing)|integer]] data types, or \"non-fractional numbers\". May be sub-typed according to their ability to contain negative values (e.g. <code>unsigned</code> in C and C++). May also have a small number of predefined subtypes (such as <code>short</code> and <code>long</code> in C/C++); or allow users to freely define subranges such as 1..12 (e.g. [[Pascal (programming language)|Pascal]]/[[Ada (programming language)|Ada]]).\n* [[Floating point]] data types, usually represent values as high-precision fractional values ([[rational numbers]], mathematically), but are sometimes misleadingly called reals (evocative of mathematical [[real numbers]]). They usually have predefined limits on both their maximum values and their precision. Typically stored internally in the form {{math|a \u00d7 2<sup>b</sup>}} (where {{math|a}} and {{math|b}} are integers), but displayed in familiar [[decimal]] form.\n* [[Fixed point (computing)|Fixed point]] data types are convenient for representing monetary values. They are often implemented internally as integers, leading to predefined limits.\n* [[Bignum]] or [[arbitrary precision]] numeric types lack predefined limits. They are not primitive types, and are used sparingly for efficiency reasons.\n\n===Composite types===\n[[Composite type]]s are derived from more than one primitive type. This can be done in a number of ways. The ways they are combined are called [[data structure]]s. Composing a primitive type into a compound type generally results in a new type, e.g. ''array-of-integer'' is a different type to ''integer''.\n\n* An [[array data type|array]] (also called vector, [[List (abstract data type)|list]], or sequence) stores a number of elements and provide [[random access]] to individual elements. The elements of an array are typically (but not in all contexts) required to be of the same type. Arrays may be fixed-length or expandable. Indices into an array are typically required to be integers (if not, one may stress this relaxation by speaking about an [[associative array]]) from a specific range (if not all indices in that range correspond to elements, it may be a [[sparse array]]).\n* [[Record (computer science)|Record]] (also called tuple or struct) Records are among the simplest [[data structure]]s. A record is a value that contains other values, typically in fixed number and sequence and typically indexed by names. The elements of records are usually called ''fields'' or ''members''.\n* [[Union (computer science)|Union]]. A union type definition will specify which of a number of permitted primitive types may be stored in its instances, e.g. \"float or long integer\". Contrast with a [[record (computer science)|record]], which could be defined to contain a float ''and'' an integer; whereas, in a union, there is only one type allowed at a time.\n** A [[tagged union]] (also called a [[Variant type|variant]], variant record, discriminated union, or disjoint union) contains an additional field indicating its current type for enhanced type safety.\n* A [[set (abstract data type)|set]] is an [[abstract data structure]] that can store certain values, without any particular [[sequence|order]], and no repeated values. Values themselves are not retrieved from sets, rather one tests a value for membership to obtain a boolean \"in\" or \"not in\".\n* An [[object (computer science)|object]] contains a number of data fields, like a record, and also a number of subroutines for accessing or modifying them, called [[Method (computer programming)|methods]].\n\nMany others are possible, but they tend to be further variations and compounds of the above. For example a [[linked list]] can store the same data as an array, but provides [[sequential access]] rather than random and is built up of records in [[dynamic memory]]; though arguably a data structure rather than a type ''per se'', it is also common and distinct enough that including it in a discussion of composite types can be justified.\n\n====Enumerations====\nThe [[enumerated type]] has distinct values, which can be compared and assigned, but which do not necessarily have any particular concrete representation in the computer's memory; compilers and interpreters can represent them arbitrarily. For example, the four suits in a deck of playing cards may be four enumerators named ''CLUB'', ''DIAMOND'', ''HEART'', ''SPADE'', belonging to an enumerated type named ''suit''.  If a variable ''V'' is declared having ''suit'' as its data type, one can assign any of those four values to it. Some implementations allow programmers to assign integer values to the enumeration values, or even treat them as type-equivalent to integers.\n\n==== String and text types ====\n\nSuch as:\n\n* A [[Character (computing)|character]], which may be a letter of some [[alphabet]], a digit, a blank space, a punctuation mark, etc.\n* A [[String (computer science)|string]], which is a sequence of characters. Strings are typically used to represent words and text.\n\nCharacter and string types can store sequences of characters from a character set such as [[ASCII]]. Since most character sets include the [[Numerical digit|digits]], it is possible to have a numeric string, such as <code>\"1234\"</code>. However, many languages treat these as belonging to a different type to the numeric value <code>1234</code>.\n\nCharacter and string types can have different subtypes according to the required character \"width\". The original 7-bit wide ASCII was found to be limited, and superseded by 8 and 16-bit sets, which can encode a wide variety of non-Latin alphabets (such as [[Hebrew]] and [[Chinese language|Chinese]]) and other symbols. Strings may be either stretch-to-fit or of fixed size, even in the same programming language. They may also be subtyped by their maximum size.\n\nNote: Strings are not a primitive data type in all languages. In [[C (programming language)|C]], for instance, they are composed from an array of characters.\n\n===Other types===\nTypes can be based on, or derived from, the basic types explained above. In some languages, such as C, [[function (computer science)|function]]s have a type derived from the type of their [[return value]].\n\n====Pointers and references====\n{{Main|Reference (computer science)}}\nThe main non-composite, derived type is the [[pointer (computer programming)|pointer]], a data type whose value refers directly to (or \"points to\") another value stored elsewhere in the [[computer memory]] using its [[Memory address|address]]. It is a primitive kind of [[reference (computer science)|reference]]. (In everyday terms, a page number in a book could be considered a piece of data that refers to another one). Pointers are often stored in a format similar to an integer; however, attempting to dereference or \"look up\" a pointer whose value was never a valid memory address would cause a program to crash. To ameliorate this potential problem, pointers are considered a separate type to the type of data they point to, even if the underlying representation is the same.\n\n====Function types====\n{{Main|Function type}}\n{{Expand section|date=October 2012}}\n\n===Abstract data types===\nAny type that does not specify an implementation is an [[abstract data type]]. For instance, a [[stack (abstract data type)|stack]] (which is an abstract type) can be implemented as an array (a contiguous block of memory containing multiple values), or as a [[linked list]] (a set of non-contiguous memory blocks linked by [[pointer (computer science)|pointer]]s).\n\nAbstract types can be handled by code that does not know or \"care\" what underlying types are contained\nin them. Programming that is agnostic about concrete data types is called [[generic programming]]. Arrays and records can also contain underlying types, but are considered concrete because they specify how their contents or elements are laid out in memory.\n\nExamples include:\n\n* A [[Queue (data structure)|queue]] is a first-in first-out list. Variations are [[Deque]] and [[Priority queue]].\n* A [[Set (computer science)|set]] can store certain values, without any particular [[sequence|order]], and with no repeated values.\n* A [[Stack (data structure)|stack]] is a last-in, first out data structure.\n* A [[Tree (computer science)|tree]] is a [[hierarchical structure]].\n* A [[Graph (data structure)|graph]].\n* A [[List (abstract data type)|list]].\n* A [[hash table|hash]], dictionary, [[map (computer science)|map]] or [[associative array]] is a more flexible variation on a record, in which [[name-value pair]]s can be added and deleted freely.\n* A [[smart pointer]] is the abstract counterpart to a pointer. Both are kinds of [[reference (computer science)|reference]]s.\n\n===Utility types===\nFor convenience, high-level languages may supply ready-made \"real world\" data types, for instance ''times'', ''dates'' and ''monetary values'' and ''memory'', even where the language allows them to be built from primitive types.\n\n==Type systems==\nA [[type system]] associates types with computed values. By examining the flow of these values, a type system attempts to prove that no ''type errors'' can occur. The type system in question determines what constitutes a type error, but a type system generally seeks to guarantee that operations expecting a certain kind of value are not used with values for which that operation does not make sense.\n\nA [[compiler]] may use the static type of a value to optimize the storage it needs and the choice of algorithms for operations on the value. In many [[C (programming language)|C]] compilers the {{C-lang|float}} data type, for example, is represented in 32 [[bit]]s, in accord with the [[IEEE 754-2008|IEEE specification for single-precision floating point numbers]]. They will thus use floating-point-specific [[instruction set|microprocessor operations]] on those values (floating-point addition, multiplication, etc.).\n\nThe depth of type constraints and the manner of their evaluation affect the ''typing'' of the language. A [[programming language]] may further associate an operation with varying concrete algorithms on each type in the case of [[type polymorphism]]. [[Type theory]] is the study of type systems, although the concrete type systems of programming languages originate from practical issues of computer architecture, compiler implementation, and language design.\n\nType systems may be variously [[static typing|static]] or [[dynamic typing|dynamic]], [[strong typing|strong]] or [[weak typing]], and so forth.\n\n==See also==\n* [[C data types]]\n* [[Data dictionary]]\n* [[Functional programming]]\n* [[Kind (type theory)|Kind]]\n* [[Type theory]] for the mathematical models of types\n* [[Type system]] for different choices in programming language typing\n* [[Type conversion]]\n\n==References==\n{{Reflist}}\n\n==Further reading==\n*{{cite journal|last1 = Parnas|first1=David L.|authorlink1=David Parnas|first2=John E.|last2=Shore|first3=David|last3=Weiss|year=1976|title=Abstract types defined as classes of variables|journal=Proceedings of the 1976 Conference on Data : Abstraction, Definition and Structure|pages=149\u2013154|doi=10.1145/800237.807133|ref=harv}} \n*{{cite journal|last1 = Cardelli|first1=Luca|authorlink1=Luca Cardelli|last2=Wegner|first2=Peter|authorlink2=Peter Wegner|title = On Understanding Types, Data Abstraction, and Polymorphism|url=http://lucacardelli.name/Papers/OnUnderstanding.A4.pdf|journal = [[ACM Computing Surveys]]|date = December 1985| volume = 17|issue=4|issn = 0360-0300|pages = 471\u2013523|doi = 10.1145/6041.6042| ref = harv|citeseerx=10.1.1.117.695}}\n*{{cite book|first=J. Craig|last=Cleaveland|title=An Introduction to Data Types|year=1986|publisher=Addison-Wesley|isbn=978-0201119404}}\n\n==External links==\n*{{Commonscatinline|Data types}}\n\n{{Data types}}\n{{Authority control}}\n\n{{DEFAULTSORT:Data Type}}\n[[Category:Data types| ]]\n[[Category:Programming language concepts]]\n", "name_user": "27.34.31.229", "label": "unsafe", "comment": "", "url_page": "//en.wikipedia.org/wiki/Data_type"}
{"title_page": "Cambridge University Wine Society", "text_new": "'''The Cambridge University Wine Society''' (CUWS; formerly known as the '''Cambridge University Wine and Food Society''') is a traditional membership club, one of the [[List of social activities at the University of Cambridge|Registered Clubs & Societies]] of [[University of Cambridge]], England, founded in 1792.<ref>{{cite web|title=Cambridge University Wine Society|url=http://www.cuws.co.uk|website=www.cuws.co.uk}}</ref><ref>{{cite web|title=Registered Clubs and Societies|url=http://www.societies.cam.ac.uk/|website=University of Cambridge|accessdate=2 July 2017}}</ref> The society aims to introduce university students to the world of wine through regular tastings during the academic term, and other activities and events.  Membership is open to the public.\n\nA number of past members have entered the international wine trade.<ref>{{cite book|last1=Roger|first1=Pol|title=Reds, whites and varsity blues : 60 years of the Oxford & Cambridge blind wine-tasting competition|date=2013|publisher=Pavilion|isbn=978-1-909108-28-8}}</ref> Prominent wine writer [[Hugh Johnson (wine writer)|Hugh Johnson]] joined as an undergraduate at [[King's College, Cambridge]] in the 1950s, with his roommate and fellow member [[Adrian Cowell]].<ref>{{cite news|last1=Sale|first1=Jonathon|title=Passed/Failed: An education in the life of Hugh Johnson, the world's bestselling wine author|url=https://www.independent.co.uk/news/people/profiles/passedfailed-an-education-in-the-life-of-hugh-johnson-the-worlds-bestselling-wine-author-770724.html|accessdate=2 July 2017|publisher=The Independent|date=17 January 2008}}</ref>  Members participate in the annual [[Varsity blind wine tasting match]], sponsored by [[champagne house]] [[Pol Roger]].<ref>{{cite web|title=blind wine tasting an exam for students|url=https://www.wsj.com/video/blind-wine-tasting-an-exam-for-students/F0A6ACC4-379E-4D36-A5B4-6E6AF9B3D37A.html|website=www.wsj.com}}</ref><ref>{{cite web|title=Wine talk: scholarly rivalry cambridge noses vs oxford palates|url=https://www.nytimes.com/1992/03/18/garden/wine-talk-scholarly-rivalry-cambridge-noses-vs-oxford-palates.html?mcubz=2|website=NY times}}</ref><ref>{{cite web|title=The wine race|url=https://www.ft.com/content/483cc100-66dd-11e2-a805-00144feab49a|website=Financial Times}}</ref> and other blind wine tasting competitions.<ref>{{cite web|title=Left Bank Bordeaux cup winners 2017|url=http://www.decanter.com/wine-news/see-left-bank-bordeaux-cup-2017-winners-371102/|website=Decanter}}</ref><ref>{{cite web|title=Imperial College London Business School and University of Cambridge qualify for Left Bank Bordeaux Cup final|url=http://www.decanter.com/wine-news/imperial-college-london-business-school-and-university-of-cambridge-qualify-for-left-bank-bordeaux-cup-final-1249/|website=Decanter}}</ref><ref>{{cite web|title=Resultats Left Bank Bordeaux Cup 2013|url=http://www.commanderiedubontemps.com/docs/en/Commanderie-du-bontemps_Left-Bank-Bordeaux-Cup2013-Resultats.pdf|website=Commanderie du bon temps}}</ref><ref>{{cite web|title=SPIT tasting|url=http://www.sciencespo.fr/en/news/news/weekend-international-winetasting-reims-0/2063|website=Science po}}</ref>.  The society and competitions were described in detail in the 2013 book \"Reds, Whites & Varsity Blues:  60 years of the Oxford & Cambridge Blind Wine-Tasting Competition\". \n\nIn January 2013 the Society marked the 350th anniversary of the day diarist [[Samuel Pepys]] \"drank a sort of French wine called [[Ch\u00e2teau Haut-Brion|Ho Bryan]], that hath a good and most particular taste that I never met with.\"  Pepys graduated from [[Magdalene College, Cambridge|Magdalene College]] in 1654.<ref>{{cite web|title=Haut-Brion celebrates 350th anniversary of Samuel Pepys connection in Cambridge|url=http://www.decanter.com/wine-news/haut-brion-celebrates-350th-anniversary-of-samuel-pepys-connection-in-cambridge-19919/#3DlYahwkQtIfUwUp.99|website=Decanter}}</ref>.\n\n== CUWS alumni ==\n\nNotable alumni include<ref>{{cite book|last1=Roger|first1=Pol|title=Reds, whites and varsity blues : 60 years of the Oxford & Cambridge blind wine-tasting competition|date=2013|publisher=Pavilion|isbn=978-1-909108-28-8}}</ref>:\n* [[Hugh Johnson (wine writer)|Hugh Johnson]], wine writer\n* [[David Peppercorn]], wine writer, president of the society (cellarer) in 1952\n* Robin Don, [[Master of Wine]]<ref>{{cite web|title=Robin Don|url=http://www.mastersofwine.org/en/meet-the-masters/profile/index.cfm/id/39b9a043-5e4b-e211-a20600155d6d822c|website=The Institute of Masters of Wine|accessdate=2 July 2017|archive-url=https://web.archive.org/web/20170306052247/http://www.mastersofwine.org/en/meet-the-masters/profile/index.cfm/id/39b9a043-5e4b-e211-a20600155d6d822c|archive-date=6 March 2017|url-status=dead}}</ref>\n* Julian Jeffs\n* [[John H. Plumb]], historian\n* [[Denis Mack Smith]], historian\n* [[Tom King, Baron King of Bridgwater]]\n* [[James Cropper (businessman)|James Cropper]], businessman\n\n== References ==\n{{reflist|2}}\n\n{{University of Cambridge}}\n\n[[Category:Organizations established in 1792]]\n[[Category:Clubs and societies of the University of Cambridge]]\n[[Category:Wine tasting]]\n[[Category:1792 establishments in England]]\n", "text_old": "'''The Cambridge University Wine Society''' (CUWS; formerly known as the '''Cambridge University Wine and Food Society''') is a traditional membership club, one of the [[List of social activities at the University of Cambridge|Registered Clubs & Societies]] of [[University of Cambridge]], England, founded in 1792.<ref>{{cite web|title=Cambridge University Wine Society|url=http://www.cuws.co.uk|website=www.cuws.co.uk}}</ref><ref>{{cite web|title=Registered Clubs and Societies|url=http://www.societies.cam.ac.uk/|website=University of Cambridge|accessdate=2 July 2017}}</ref> The society aims to introduce university students to the world of wine through regular tastings during the academic term, and other activities and events.  Membership is open to the public.\n\nA number of past members have entered the international wine trade<ref>{{cite book|last1=Roger|first1=Pol|title=Reds, whites and varsity blues : 60 years of the Oxford & Cambridge blind wine-tasting competition|date=2013|publisher=Pavilion|isbn=978-1-909108-28-8}}</ref>.  Prominent wine writer [[Hugh Johnson (wine writer)|Hugh Johnson]] joined as an undergraduate at [[King's College, Cambridge]] in the 1950s, with his roommate and fellow member [[Adrian Cowell]].<ref>{{cite news|last1=Sale|first1=Jonathon|title=Passed/Failed: An education in the life of Hugh Johnson, the world's bestselling wine author|url=https://www.independent.co.uk/news/people/profiles/passedfailed-an-education-in-the-life-of-hugh-johnson-the-worlds-bestselling-wine-author-770724.html|accessdate=2 July 2017|publisher=The Independent|date=17 January 2008}}</ref>  Members participate in the annual [[Varsity blind wine tasting match]], sponsored by [[champagne house]] [[Pol Roger]].<ref>{{cite web|title=blind wine tasting an exam for students|url=https://www.wsj.com/video/blind-wine-tasting-an-exam-for-students/F0A6ACC4-379E-4D36-A5B4-6E6AF9B3D37A.html|website=www.wsj.com}}</ref><ref>{{cite web|title=Wine talk: scholarly rivalry cambridge noses vs oxford palates|url=https://www.nytimes.com/1992/03/18/garden/wine-talk-scholarly-rivalry-cambridge-noses-vs-oxford-palates.html?mcubz=2|website=NY times}}</ref><ref>{{cite web|title=The wine race|url=https://www.ft.com/content/483cc100-66dd-11e2-a805-00144feab49a|website=Financial Times}}</ref> and other blind wine tasting competitions.<ref>{{cite web|title=Left Bank Bordeaux cup winners 2017|url=http://www.decanter.com/wine-news/see-left-bank-bordeaux-cup-2017-winners-371102/|website=Decanter}}</ref><ref>{{cite web|title=Imperial College London Business School and University of Cambridge qualify for Left Bank Bordeaux Cup final|url=http://www.decanter.com/wine-news/imperial-college-london-business-school-and-university-of-cambridge-qualify-for-left-bank-bordeaux-cup-final-1249/|website=Decanter}}</ref><ref>{{cite web|title=Resultats Left Bank Bordeaux Cup 2013|url=http://www.commanderiedubontemps.com/docs/en/Commanderie-du-bontemps_Left-Bank-Bordeaux-Cup2013-Resultats.pdf|website=Commanderie du bon temps}}</ref><ref>{{cite web|title=SPIT tasting|url=http://www.sciencespo.fr/en/news/news/weekend-international-winetasting-reims-0/2063|website=Science po}}</ref>.  The society and competitions were described in detail in the 2013 book \"Reds, Whites & Varsity Blues:  60 years of the Oxford & Cambridge Blind Wine-Tasting Competition\". \n\nIn January 2013 the Society marked the 350th anniversary of the day diarist [[Samuel Pepys]] \"drank a sort of French wine called [[Ch\u00e2teau Haut-Brion|Ho Bryan]], that hath a good and most particular taste that I never met with.\"  Pepys graduated from [[Magdalene College, Cambridge|Magdalene College]] in 1654.<ref>{{cite web|title=Haut-Brion celebrates 350th anniversary of Samuel Pepys connection in Cambridge|url=http://www.decanter.com/wine-news/haut-brion-celebrates-350th-anniversary-of-samuel-pepys-connection-in-cambridge-19919/#3DlYahwkQtIfUwUp.99|website=Decanter}}</ref>.\n\n== CUWS alumni ==\n\nNotable alumni include<ref>{{cite book|last1=Roger|first1=Pol|title=Reds, whites and varsity blues : 60 years of the Oxford & Cambridge blind wine-tasting competition|date=2013|publisher=Pavilion|isbn=978-1-909108-28-8}}</ref>:\n* [[Hugh Johnson (wine writer)|Hugh Johnson]], wine writer\n* [[David Peppercorn]], wine writer, president of the society (cellarer) in 1952\n* Robin Don, [[Master of Wine]]<ref>{{cite web|title=Robin Don|url=http://www.mastersofwine.org/en/meet-the-masters/profile/index.cfm/id/39b9a043-5e4b-e211-a20600155d6d822c|website=The Institute of Masters of Wine|accessdate=2 July 2017|archive-url=https://web.archive.org/web/20170306052247/http://www.mastersofwine.org/en/meet-the-masters/profile/index.cfm/id/39b9a043-5e4b-e211-a20600155d6d822c|archive-date=6 March 2017|url-status=dead}}</ref>\n* Julian Jeffs\n* [[John H. Plumb]], historian\n* [[Denis Mack Smith]], historian\n* [[Tom King, Baron King of Bridgwater]]\n* [[James Cropper (businessman)|James Cropper]], businessman\n\n== References ==\n{{reflist|2}}\n\n{{University of Cambridge}}\n\n[[Category:Organizations established in 1792]]\n[[Category:Clubs and societies of the University of Cambridge]]\n[[Category:Wine tasting]]\n[[Category:1792 establishments in England]]\n", "name_user": "DannyS712", "label": "safe", "comment": "Fixing the location of periods / full stops", "url_page": "//en.wikipedia.org/wiki/Cambridge_University_Wine_Society"}
{"title_page": "Cambridge News", "text_new": "{{Use dmy dates|date=February 2013}}\n{{Use British English|date=February 2013}}\n{{Infobox Newspaper\n| name                = Cambridge News\n| image               = CNHQ.jpg\n| image_size          = 300px\n| caption             = ''Cambridge News'' headquarters\n| type                = Daily [[newspaper]]\n| format              = [[Tabloid (newspaper format)|Tabloid]]\n| foundation          = 1888\n| ceased publication  =\n| price               =\n| owners              = [[Local World]]\n| publisher           =\n| chiefhreditor       =\n| assoceditor         =\n| staff               =\n| language            = English\n| political           =\n|circulation = 5,794 (June \u2013 December 2019)<ref name=\"circ\"/>\n\n| headquarters        = [[Waterbeach, Cambridgeshire|Waterbeach]], [[Cambridgeshire]]\n| oclc                =\n| ISSu               =\n| website             = [http://www.cambridge-news.co.uk/ www.cambridge-news.co.uk]\n}}\n\nThe '''''Cambridge News''''' (formerly the '''''Cambridge Evening News''''') is a [[United Kingdom|British]] daily newspaper. Published each weekday and on Saturdays, it is distributed from its [[Waterbeach, Cambridgeshire|Waterbeach]] base. In the period December 2010 \u2013 June 2011 it had an average daily circulation of 20,987,<ref>{{cite news |url=http://www.holdthefrontpage.co.uk/2011/news/norwich-daily-tops-regional-circulation-league |title=ABC figures: How the regional dailies performed |work=HoldTheFrontPage |location=UK |accessdate=25 September 2011 |date=31 August 2011}}</ref> but by December 2016 this had fallen to around 13,000.<ref>{{cite web |url=http://www.pressgazette.co.uk/cambridge-news-restructure-putting-seven-jobs-at-risk-trinity-mirror/ |accessdate=8 December 2017 |title=Cambridge News restructure putting seven jobs at risk as cuts to fall on design and features teams}}</ref> In 2018, the circulation of the newspaper fell to 8,005<ref>{{cite web |url=https://www.abc.org.uk/product/9730 |title=Cambridge News - Data - ABC {{!}} Audit Bureau of Circulations |website=www.abc.org.uk |language=en-gb |access-date=2018-10-05}}</ref> and by December 2019 the preceding 6 month average was 5,794 readers per issue.<ref name=\"circ\">{{cite web |url=https://www.abc.org.uk/product/9730 |title=Cambridge News - Data - ABC {{!}} Audit Bureau of Circulations |website=www.abc.org.uk |language=en-gb |access-date=2020-02-11}}</ref>\n\n==History==\n{{Refimprove section|date=February 2019}}\n{{POV section|date=May 2015|talk=NPOV: A14 campaign not presented in a neutral way}}\nThe paper was founded by William Farrow Taylor as the ''Cambridge Daily News'' in 1888,{{citation needed|date=May 2015}} and after a slow start saw sales rise as an appetite for knowledge of the news and sport grew among the [[Cambridge]] public.{{citation needed|date=May 2015}} As its following steadily grew, the fledgling paper survived the need for modernisation in the early twentieth century{{citation needed|date=May 2014}} (Captain Archibald Taylor, son of the founder, was the first managing director to introduce a standard typeface during this time, for example{{citation needed|date=May 2015}}), the uncertain economic climate during the 1920s and 1930s and the printing shortages of the [[Second World War]].{{citation needed|date=May 2015}}\n\nIn the 1920s the Taylors sold the paper to the [[Iliffe family]],{{citation needed|date=May 2015}} who sold it in 1938 and then reacquired it in 1959,{{citation needed|date=May 2015}} moving it to a larger premises on Newmarket Road:{{citation needed|date=May 2015}} they continued to turn the paper into a profit-making business under the new name of the ''Cambridge Evening News'', starting in 1969.{{citation needed|date=May 2015}}  The headquarters moved from Newmarket Road to Milton in 1998.{{citation needed|date=May 2015}} In 2012, [[Local World]] acquired the title from [[Yattendon Group plc|Yattendon Group]].<ref>{{cite news|url=https://www.bbc.co.uk/news/business-20424474|title=Daily Mail sells regional newspapers to Local World|work=BBC News|date=21 November 2012}}</ref>\n\nIn 2007, the paper started publishing an early morning \"Sunrise\" edition titled simply ''Cambridge News'', as well as the afternoon edition.{{citation needed|date=May 2015}} The evening edition was stopped the following year, and ''Evening'' was removed from the paper's title.{{citation needed|date=May 2015}}\n\nThe ''Cambridge News'' had eight sister papers with a more local circulation as part of the Weekly News series: [[Cambridge]], [[Ely, Cambridgeshire|Ely]], [[Huntingdon]], [[St Ives, Cambridgeshire|St Ives]] and [[St Neots]] (all in [[Cambridgeshire]]), [[Haverhill, Suffolk|Haverhill]] and [[Newmarket, Suffolk|Newmarket]] (in [[Suffolk]]), [[Royston, Hertfordshire|Royston]] (in [[Hertfordshire]]) and [[Saffron Walden]] (in [[Essex]]).{{citation needed|date=May 2015}}{{unreliable source?|date=May 2015}}\n\nUntil 2002 the [[St Neots]] edition was titled ''St Neots Evening News'' and the [[Huntingdon]] & [[St Ives, Cambridgeshire|St Ives]] edition ''Huntingdon and St Ives Evening News'' for around three years, before reverting to their original names.{{citation needed|date=May 2015}} The paper is also active in local community campaigns such as its long running 'Action on the [[A14 road (Great Britain)|A14]]' campaign which demands action be taken on the dangerous road{{citation needed|date=May 2015}} that bisects the paper's readership area, and also sponsors numerous local events such as the Village & Community Magazine Awards and the annual Business Excellence Awards, while running its own Community Awards to recognise readers who have made a difference in the area.{{citation needed|date=May 2015}} The editor from February 2008 until April 2016 was Paul Brackley.<ref>{{Cite web|url=https://www.holdthefrontpage.co.uk/2016/news/editor-in-chief-to-leave-newspaper-after-seven-years-in-charge/|title=Editor-in-chief to leave Cambridge News after seven years - Journalism News from HoldtheFrontPage|website=HoldtheFrontPage|language=en-GB|access-date=2019-11-11}}</ref> David Bartlett was appointed editor in June 2016.<ref>{{Cite web|url=https://www.holdthefrontpage.co.uk/2016/news/new-editors-unveiled-at-two-former-local-world-dailies/|title=New editors unveiled at Leicester Mercury and Cambridge News - Journalism News from HoldtheFrontPage|website=HoldtheFrontPage|language=en-GB|access-date=2019-11-11}}</ref>\n\nOn Saturday 13 September 2014, the newspaper was relaunched with a new design, alongside daily paid-for regional editions Hunts News, Royston News and Walden News replacing the free weekly publications.<ref>{{cite news|url=http://www.cambridge-news.co.uk/Cambridge-News-launches-bigger-better-brighter/story-22916154-detail/story.html|work=Cambridge News|location=UK|date=12 September 2014|accessdate=23 May 2015|title=Cambridge News launches bigger, brighter, better paper|archive-url=https://web.archive.org/web/20150923200126/http://www.cambridge-news.co.uk/Cambridge-News-launches-bigger-better-brighter/story-22916154-detail/story.html|archive-date=23 September 2015|url-status=dead|df=dmy-all}}</ref>\n\n==Awards==\nThe paper won Regional Newspaper of the Year at The Newspaper Awards held in 2009 and 2013. This award was part sponsored by its own parent organisation.<ref>{{cite news|url=http://www.cambridge-news.co.uk/News/Cambridge-News-wins-UK-Regional-Newspaper-of-the-Year-award-20130425134128.htm|title=Cambridge News wins UK Regional Newspaper of the Year award|date=25 April 2013|work=Cambridge News|location=UK|access-date=25 April 2013|archive-url=https://web.archive.org/web/20130428082917/http://www.cambridge-news.co.uk/News/Cambridge-News-wins-UK-Regional-Newspaper-of-the-Year-award-20130425134128.htm|archive-date=28 April 2013|url-status=dead|df=dmy-all}}</ref>\n\n==Online media==\n''Cambridge News'' publishes most of its news online via its website. The site can be viewed for free and without registration although the e-edition of the newspaper is behind a [[paywall]].<ref>{{Cite web|url=http://www.cambridge-news.co.uk/news/e-edition.html|title=Cambridge News {{!}} E-Edition|website=Cambridge News|access-date=2016-07-30|archive-url=https://web.archive.org/web/20151219213910/http://www.cambridge-news.co.uk/news/e-edition.html|archive-date=19 December 2015|url-status=dead|df=dmy-all}}</ref>\n\n==References==\n{{reflist}}\n\n==External links==\n* [http://www.cambridge-news.co.uk/ Cambridge News Online]\n* [https://web.archive.org/web/20100219143558/http://www.iliffeprint.co.uk/iliffeprint/ Iliffe Print Cambridge]\n\n{{Local World}}\n{{UK regional daily newspapers}}\n\n[[Category:Media in Cambridge]]\n[[Category:Newspapers published in Cambridgeshire]]\n[[Category:Publications established in 1888]]\n[[Category:Daily newspapers published in the United Kingdom]]\n", "text_old": "{{Use dmy dates|date=February 2013}}\n{{Use British English|date=February 2013}}\n{{Infobox Newspaper\n| name                = Cambridge News\n| image               = CNHQ.jpg\n| image_size          = 300px\n| caption             = ''Cambridge News'' headquarters\n| type                = Daily [[newspaper]]\n| format              = [[Tabloid (newspaper format)|Tabloid]]\n| foundation          = 1888\n| ceased publication  =\n| price               =\n| owners              = [[Local World]]\n| publisher           =\n| chiefhreditor       =\n| assoceditor         =\n| staff               =\n| language            = English\n| political           =\n|circulation = 5,794 (June \u2013 December 2019)<ref name=\"circ\"/>\n\n| headquarters        = [[Waterbeach, Cambridgeshire|Waterbeach]], [[Cambridgeshire]]\n| oclc                =\n| ISSu               =\n| website             = [http://www.cambridge-news.co.uk/ www.cambridge-news.co.uk]\n}}\n\nThe '''''Cambridge News''''' (formerly the '''''Cambridge Evening News''''') is a [[United Kingdom|British]] daily newspaper. Published each weekday and on Saturdays, it is distributed from its [[Waterbeach, Cambridgeshire|Waterbeach]] base. In the period December 2010 \u2013 June 2011 it had an average daily circulation of 20,987,<ref>{{cite news |url=http://www.holdthefrontpage.co.uk/2011/news/norwich-daily-tops-regional-circulation-league |title=ABC figures: How the regional dailies performed |work=HoldTheFrontPage |location=UK |accessdate=25 September 2011 |date=31 August 2011}}</ref> but by December 2016 this had fallen to around 13,000.<ref>{{cite web |url=http://www.pressgazette.co.uk/cambridge-news-restructure-putting-seven-jobs-at-risk-trinity-mirror/ |accessdate=8 December 2017 |title=Cambridge News restructure putting seven jobs at risk as cuts to fall on design and features teams}}</ref> In 2018, the circulation of the newspaper fell to 8,005<ref>{{cite web |url=https://www.abc.org.uk/product/9730 |title=Cambridge News - Data - ABC {{!}} Audit Bureau of Circulations |website=www.abc.org.uk |language=en-gb |access-date=2018-10-05}}</ref> and by December 2019 the preceding 6 month average was 5,794 readers per issue.<ref name=\"circ\">{{cite web |url=https://www.abc.org.uk/product/9730 |title=Cambridge News - Data - ABC {{!}} Audit Bureau of Circulations |website=www.abc.org.uk |language=en-gb |access-date=2020-02-11}}</ref>\n\n==History==\n{{Refimprove section|date=February 2019}}\n{{POV section|date=May 2015|talk=NPOV: A14 campaign not presented in a neutral way}}\nThe paper was founded by William Farrow Taylor as the ''Cambridge Daily News'' in 1888,{{citation needed|date=May 2015}} and after a slow start saw sales rise as an appetite for knowledge of the news and sport grew among the [[Cambridge]] public.{{citation needed|date=May 2015}} As its following steadily grew, the fledgling paper survived the need for modernisation in the early twentieth century{{citation needed|date=May 2014}} (Captain Archibald Taylor, son of the founder, was the first managing director to introduce a standard typeface during this time, for example{{citation needed|date=May 2015}}), the uncertain economic climate during the 1920s and 1930s and the printing shortages of the [[Second World War]].{{citation needed|date=May 2015}}\n\nIn the 1920s the Taylors sold the paper to the [[Iliffe family]],{{citation needed|date=May 2015}} who sold it in 1938 and then reacquired it in 1959,{{citation needed|date=May 2015}} moving it to a larger premises on Newmarket Road:{{citation needed|date=May 2015}} they continued to turn the paper into a profit-making business under the new name of the ''Cambridge Evening News'', starting in 1969.{{citation needed|date=May 2015}}  The headquarters moved from Newmarket Road to Milton in 1998.{{citation needed|date=May 2015}} In 2012, [[Local World]] acquired the title from [[Yattendon Group plc|Yattendon Group]].<ref>{{cite news|url=https://www.bbc.co.uk/news/business-20424474|title=Daily Mail sells regional newspapers to Local World|work=BBC News|date=21 November 2012}}</ref>\n\nIn 2007, the paper started publishing an early morning \"Sunrise\" edition titled simply ''Cambridge News'', as well as the afternoon edition.{{citation needed|date=May 2015}} The evening edition was stopped the following year, and ''Evening'' was removed from the paper's title.{{citation needed|date=May 2015}}\n\nThe ''Cambridge News'' had eight sister papers with a more local circulation as part of the Weekly News series: [[Cambridge]], [[Ely, Cambridgeshire|Ely]], [[Huntingdon]], [[St Ives, Cambridgeshire|St Ives]] and [[St Neots]] (all in [[Cambridgeshire]]), [[Haverhill, Suffolk|Haverhill]] and [[Newmarket, Suffolk|Newmarket]] (in [[Suffolk]]), [[Royston, Hertfordshire|Royston]] (in [[Hertfordshire]]) and [[Saffron Walden]] (in [[Essex]]).{{citation needed|date=May 2015}}{{unreliable source?|date=May 2015}}\n\nUntil 2002 the [[St Neots]] edition was titled ''St Neots Evening News'' and the [[Huntingdon]] & [[St Ives, Cambridgeshire|St Ives]] edition ''Huntingdon and St Ives Evening News'' for around three years, before reverting to their original names.{{citation needed|date=May 2015}} The paper is also active in local community campaigns such as its long running 'Action on the [[A14 road (Great Britain)|A14]]' campaign which demands action be taken on the dangerous road{{citation needed|date=May 2015}} that bisects the paper's readership area, and also sponsors numerous local events such as the Village & Community Magazine Awards and the annual Business Excellence Awards, while running its own Community Awards to recognise readers who have made a difference in the area.{{citation needed|date=May 2015}} The editor from February 2008 until April 2016 was Paul Brackley.<ref>{{Cite web|url=https://www.holdthefrontpage.co.uk/2016/news/editor-in-chief-to-leave-newspaper-after-seven-years-in-charge/|title=Editor-in-chief to leave Cambridge News after seven years - Journalism News from HoldtheFrontPage|website=HoldtheFrontPage|language=en-GB|access-date=2019-11-11}}</ref> David Bartlett was appointed editor in June 2016<ref>{{Cite web|url=https://www.holdthefrontpage.co.uk/2016/news/new-editors-unveiled-at-two-former-local-world-dailies/|title=New editors unveiled at Leicester Mercury and Cambridge News - Journalism News from HoldtheFrontPage|website=HoldtheFrontPage|language=en-GB|access-date=2019-11-11}}</ref>.\n\nOn Saturday 13 September 2014, the newspaper was relaunched with a new design, alongside daily paid-for regional editions Hunts News, Royston News and Walden News replacing the free weekly publications.<ref>{{cite news|url=http://www.cambridge-news.co.uk/Cambridge-News-launches-bigger-better-brighter/story-22916154-detail/story.html|work=Cambridge News|location=UK|date=12 September 2014|accessdate=23 May 2015|title=Cambridge News launches bigger, brighter, better paper|archive-url=https://web.archive.org/web/20150923200126/http://www.cambridge-news.co.uk/Cambridge-News-launches-bigger-better-brighter/story-22916154-detail/story.html|archive-date=23 September 2015|url-status=dead|df=dmy-all}}</ref>\n\n==Awards==\nThe paper won Regional Newspaper of the Year at The Newspaper Awards held in 2009 and 2013. This award was part sponsored by its own parent organisation.<ref>{{cite news|url=http://www.cambridge-news.co.uk/News/Cambridge-News-wins-UK-Regional-Newspaper-of-the-Year-award-20130425134128.htm|title=Cambridge News wins UK Regional Newspaper of the Year award|date=25 April 2013|work=Cambridge News|location=UK|access-date=25 April 2013|archive-url=https://web.archive.org/web/20130428082917/http://www.cambridge-news.co.uk/News/Cambridge-News-wins-UK-Regional-Newspaper-of-the-Year-award-20130425134128.htm|archive-date=28 April 2013|url-status=dead|df=dmy-all}}</ref>\n\n==Online media==\n''Cambridge News'' publishes most of its news online via its website. The site can be viewed for free and without registration although the e-edition of the newspaper is behind a [[paywall]].<ref>{{Cite web|url=http://www.cambridge-news.co.uk/news/e-edition.html|title=Cambridge News {{!}} E-Edition|website=Cambridge News|access-date=2016-07-30|archive-url=https://web.archive.org/web/20151219213910/http://www.cambridge-news.co.uk/news/e-edition.html|archive-date=19 December 2015|url-status=dead|df=dmy-all}}</ref>\n\n==References==\n{{reflist}}\n\n==External links==\n* [http://www.cambridge-news.co.uk/ Cambridge News Online]\n* [https://web.archive.org/web/20100219143558/http://www.iliffeprint.co.uk/iliffeprint/ Iliffe Print Cambridge]\n\n{{Local World}}\n{{UK regional daily newspapers}}\n\n[[Category:Media in Cambridge]]\n[[Category:Newspapers published in Cambridgeshire]]\n[[Category:Publications established in 1888]]\n[[Category:Daily newspapers published in the United Kingdom]]\n", "name_user": "DannyS712", "label": "safe", "comment": "Fixing the location of periods / full stops", "url_page": "//en.wikipedia.org/wiki/Cambridge_News"}
