{"title_page": "Transport Layer Security", "text_new": "{{short description|Cryptographic protocols for securing data in transit}}\n{{IPstack}}\n\n'''Transport Layer Security''' ('''TLS'''), and its now-deprecated predecessor, '''Secure Sockets Layer''' ('''SSL'''),<ref>{{cite web |url=http://tools.ietf.org/html/rfc7568 |title=Deprecating Secure Sockets Layer Version 3.0 |date=June 2015 |author1=R. Barnes |author2=M. Thomson |author3=A. Pironti |author4=A. Langley |url-status=live |archiveurl=https://web.archive.org/web/20180328080443/https://tools.ietf.org/html/rfc7568 |archivedate=2018-03-28}}</ref> are [[cryptographic protocol]]s designed to provide [[communications security]] over a [[computer network]].<ref name=RFC5246>{{cite web |url=http://tools.ietf.org/html/rfc5246 |title=The Transport Layer Security (TLS) Protocol, Version 1.2 |date=August 2008 |author1=T. Dierks |author2=E. Rescorla |url-status=live |archiveurl=https://web.archive.org/web/20171224222709/https://tools.ietf.org/html/rfc5246 |archivedate=2017-12-24}}</ref> Several versions of the protocols find widespread use in applications such as [[Web navigation|web browsing]], [[email]], [[instant messaging]], and [[voice over IP]] (VoIP). [[Website]]s can use TLS to secure all communications between their [[server (computing)|servers]] and [[web browser]]s.\n\nThe TLS protocol aims primarily to provide [[privacy]] and [[data integrity]] between two or more communicating computer applications.<ref name=RFC5246/>{{rp|3}} When secured by TLS, connections between a client (e.g., a web browser) and a server (e.g., wikipedia.org) should have one or more of the following properties:\n* The connection is ''private'' (or ''secure'') because [[Symmetric-key algorithm|symmetric cryptography]] is used to [[Encryption|encrypt]] the data transmitted. The [[Key (cryptography)|keys]] for this symmetric encryption are generated uniquely for each connection and are based on a [[shared secret]] that was negotiated at the start of the [[Session (computer science)|session]] (see [[#TLS handshake|\u00a7 TLS handshake]]). The server and client negotiate the details of which encryption algorithm and cryptographic keys to use before the first [[byte]] of data is transmitted (see [[#Algorithm|\u00a7 Algorithm]] below). The negotiation of a shared secret is both secure (the negotiated secret is unavailable to [[Eavesdropping|eavesdroppers]] and cannot be obtained, even by an attacker who places themselves in the middle of the connection) and reliable (no attacker can modify the communications during the negotiation without being detected).\n* The identity of the communicating parties can be ''authenticated'' using [[public-key cryptography]]. This authentication can be made optional, but is generally required for at least one of the parties (typically the server).\n* The connection is ''reliable'' because each message transmitted includes a message integrity check using a [[message authentication code]] to prevent undetected loss or alteration of the data during [[Data transmission|transmission]].<ref name=RFC5246/>{{rp|3}}\n\nIn addition to the properties above, careful [[Computer configuration|configuration]] of TLS can provide additional privacy-related properties such as [[forward secrecy]], ensuring that any future disclosure of encryption keys cannot be used to decrypt any TLS communications recorded in the past.<ref>[http://news.netcraft.com/archives/2013/06/25/ssl-intercepted-today-decrypted-tomorrow.html SSL: Intercepted today, decrypted tomorrow] {{webarchive|url=https://web.archive.org/web/20130921053551/http://news.netcraft.com/archives/2013/06/25/ssl-intercepted-today-decrypted-tomorrow.html |date=2013-09-21}}, Netcraft, 2013-06-25.</ref>\n\nTLS supports many different methods for exchanging keys, encrypting data, and authenticating message integrity (see [[#Algorithm|\u00a7 Algorithm]] below). As a result, secure configuration of TLS involves many configurable parameters, and not all choices provide all of the privacy-related properties described in the list above (see the [[#keyexchange-table|\u00a7 Key exchange]] (authentication), [[#cipher-table|\u00a7 Cipher security]], and [[#integrity-table|\u00a7 Data integrity]] tables).\n\nAttempts have been made to subvert aspects of the communications security that TLS seeks to provide, and the protocol has been revised several times to address these security threats (see [[#Security|\u00a7 Security]]). Developers of web browsers have also revised their products to defend against potential security weaknesses after these were discovered (see [[#Web browsers|TLS/SSL support history of web browsers]]).<ref name=\":0\" />\n\nThe TLS protocol comprises two layers: the [[#TLS record|TLS record]] and the [[#TLS handshake|TLS handshake]] protocols.\n\nTLS is a proposed Internet Engineering Task Force ([[IETF]]) [[Internet Standard|standard]], first defined in 1999, and the current version is TLS 1.3 defined in {{IETF RFC|8446}} (August 2018). TLS builds on the earlier SSL specifications (1994, 1995, 1996) developed by [[Netscape|Netscape Communications]]<ref name=RFC6101>\n{{cite web |url= http://tools.ietf.org/html/rfc6101 |title= The Secure Sockets Layer (SSL) Protocol Version 3.0 |date= August 2011 |author1= A. Freier |author2= P. Karlton |author3= P. Kocher |url-status=live |archiveurl= https://web.archive.org/web/20120115032035/http://tools.ietf.org/html/rfc6101 |archivedate= 2012-01-15}}</ref>\nfor adding the [[HTTP Secure|HTTPS]] protocol to their [[Netscape Navigator|Navigator]] web browser.\n\n{{toc limit}}\n\n==Description==\n[[Client\u2013server model|Client-server]] applications use the TLS [[Proprietary protocol|protocol]] to communicate across a network in a way designed to prevent eavesdropping and [[Tamper-evident|tampering]].\n\nSince applications can communicate either with or without TLS (or SSL), it is necessary for the [[Client (computing)|client]] to indicate to the server the setup of a TLS connection.<ref>{{cite web |last1=Lawrence |first1=Scott |last2=Khare |first2=Rohit |title=Upgrading to TLS Within HTTP/1.1  |url=https://tools.ietf.org/html/rfc2817 |website=tools.ietf.org |accessdate=15 December 2018 |language=en}}</ref> One of the main ways of achieving this is to use a different [[Port (computer networking)|port number]] for TLS connections, for example port 443 for [[HTTPS]]. Another mechanism is for the client to make a protocol-specific request to the server to switch the connection to TLS; for example, by making a [[Opportunistic TLS|STARTTLS]] request when using the mail and [[usenet|news]] protocols.\n\nOnce the client and server have agreed to use TLS, they negotiate a [[State (computer science)|stateful]] connection by using a [[#Protocol details|handshaking]] procedure.<ref>\"[https://technet.microsoft.com/en-us/library/cc785811.aspx SSL/TLS in Detail] {{webarchive|url=https://web.archive.org/web/20150206032944/https://technet.microsoft.com/en-us/library/cc785811.aspx |date=2015-02-06}}\". ''[[Microsoft TechNet]]''. Updated July 31, 2003.</ref> The protocols use a handshake with an [[asymmetric cipher]] to establish not only cipher settings but also a session-specific shared key with which further communication is encrypted using a [[symmetric cipher]]. During this handshake, the client and server agree on various parameters used to establish the connection's security:\n* The handshake begins when a client connects to a TLS-enabled server requesting a secure connection and the client presents a list of supported [[cipher suite]]s ([[encryption|ciphers]] and [[cryptographic hash function|hash functions]]).\n* From this list, the server picks a cipher and hash function that it also supports and notifies the client of the decision.\n* The server usually then provides identification in the form of a [[Public key certificate|digital certificate]]. The certificate contains the [[Hostname|server name]], the trusted [[certificate authority]] (CA) that vouches for the authenticity of the certificate, and the server's public encryption key.\n* The client confirms the validity of the certificate before proceeding.\n* To generate the session keys used for the secure connection, the client either:\n** encrypts a [[Random number generation|random number]] with the server's public key and sends the result to the server (which only the server should be able to decrypt with its private key); both parties then use the random number to generate a unique session key for subsequent encryption and decryption of data during the session\n** uses [[Diffie\u2013Hellman key exchange]] to securely generate a random and unique session key for encryption and decryption that has the additional property of forward secrecy: if the server's private key is disclosed in future, it cannot be used to decrypt the current session, even if the session is intercepted and recorded by a third party.\nThis concludes the handshake and begins the secured connection, which is encrypted and decrypted with the session key until the connection closes. If any one of the above steps fails, then the TLS handshake fails and the connection is not created.\n\nTLS and SSL do not fit neatly into any single layer of the [[OSI model]] or the [[Internet protocol suite|TCP/IP model]].<ref name=\"ccnp\">{{cite book\n |last1       = Hooper\n |first1      = Howard\n |title       = CCNP Security VPN 642-648 Official Cert Guide\n |date        = 2012\n |publisher   = Cisco Press\n |isbn        = 9780132966382\n |page        = 22\n |edition     = 2\n |url         = https://books.google.com/books?id=5PJisOKJ0k8C&pg=PA22\n }}</ref><ref name=\"stackex_layer\">{{cite web|url=https://security.stackexchange.com/a/93338|title=What layer is TLS?|website=Information Security Stack Exchange|first1=Andrew|last1=Spott|first2=Tom |last2=Leek|display-authors=etal}}</ref> TLS runs \"on top of some reliable transport protocol (e.g., TCP),\"<ref name=\"rfc_intro\">{{cite IETF |rfc=5246|title=The Transport Layer Security (TLS) Protocol Version 1.2|section=1|sectionname=Introduction|date=August 2008|author=T. Dierks, E. Rescorla}}</ref> which would imply that it is above the [[transport layer]]. It serves encryption to higher layers, which is normally the function of the [[presentation layer]]. However, applications generally use TLS as if it were a transport layer,<ref name=\"ccnp\" /><ref name=\"stackex_layer\" /> even though applications using TLS must actively control initiating TLS handshakes and handling of exchanged authentication certificates.<ref name=\"rfc_intro\" />\n\n==History and development==\n{| class=\"wikitable sortable\" style=\"float:right; text-align:center; margin-left:1em;\"\n|+SSL and TLS protocols\n|-\n!scope=\"col\"| Protocol\n!scope=\"col\"| Published\n!scope=\"col\"| Status\n|-\n!scope=\"row\"| SSL 1.0\n| {{n/a|Unpublished}}\n| {{n/a|Unpublished}}\n|-\n!scope=\"row\"| SSL 2.0\n| 1995\n|Deprecated in 2011 (RFC 6176)\n|-\n!scope=\"row\"| SSL 3.0\n| 1996\n|Deprecated in 2015 (RFC 7568)\n|-\n!scope=\"row\"| TLS 1.0\n| 1999\n|Deprecated in 2020<ref name=\":2\" /><ref name=\":3\">{{Cite web|url=https://www.ghacks.net/2020/03/10/here-is-what-is-new-and-changed-in-firefox-74-0-stable/|title=Here is what is new and changed in Firefox 74.0 Stable - gHacks Tech News|website=www.ghacks.net|access-date=2020-03-10}}</ref><ref name=\":4\">{{Cite web|url=https://chromestatus.com/feature/5759116003770368|title=TLS 1.0 and TLS 1.1 - Chrome Platform Status|website=chromestatus.com|access-date=2020-03-10}}</ref>\n|-\n!scope=\"row\"| TLS 1.1\n| 2006\n|Deprecated in 2020<ref name=\":2\" /><ref name=\":3\" /><ref name=\":4\" />\n|-\n!scope=\"row\"| TLS 1.2\n| 2008\n|\n|-\n!scope=\"row\"| TLS 1.3\n| 2018\n|\n|}\n==={{Anchor|SDNS}}Secure Data Network System===\nThe Transport Layer Security Protocol (TLS) together with several other basic network security platforms, were developed through a joint initiative begun in August 1986, among the National Security Agency, the National Bureau of Standards, the Defense Communications Agency, and twelve communications and computer corporations who initiated a special project called the Secure Data Network System (SDNS). The program was described in September 1987 at the 10th National Computer Security Conference in an extensive set of published papers.  The innovative research program focused on designing the next generation of secure computer communications network and product specifications to be implemented for applications on public and private internets. It was intended to complement the rapidly emerging new OSI internet standards moving forward both in the U.S. government's GOSIP Profiles and in the huge ITU-ISO JTC1 internet effort internationally. Originally known as the SP4 protocol, it was renamed TLS and subsequently published in 1995 as international standard ITU-T X.274| ISO/IEC 10736:1995.\n\n==={{Anchor|SNP}}Secure Network Programming===\nEarly research efforts towards transport layer security included the [[Secure Network Programming]] (SNP) [[application programming interface]] (API), which in 1993 explored the approach of having a secure transport layer API closely resembling [[Berkeley sockets]], to facilitate retrofitting pre-existing network applications with security measures.<ref name=\"Woo94\">Thomas Y. C. Woo, Raghuram Bindignavle, Shaowen Su and [[Simon S. Lam]], [//www.cs.utexas.edu/users/lam/Vita/Cpapers/WBSL94.pdf ''SNP: An interface for secure network programming''] Proceedings USENIX Summer Technical Conference, June '''1994'''</ref>\n\n===SSL 1.0, 2.0, and 3.0===\nNetscape developed the original SSL protocols, and [[Taher Elgamal]], chief scientist at Netscape Communications from 1995 to 1998, has been described as the \"father of SSL\".<ref name=\"Messmer\">{{cite news |last=Messmer |first=Ellen |title=Father of SSL, Dr. Taher Elgamal, Finds Fast-Moving IT Projects in the Middle East |url=http://www.networkworld.com/news/2012/120412-elgamal-264739.html |work=Network World |accessdate=30 May 2014 |url-status=dead |archiveurl= https://web.archive.org/web/20140531105537/http://www.networkworld.com/news/2012/120412-elgamal-264739.html |archivedate=31 May 2014}}</ref><ref name=\"Greene\">{{cite news |last=Greene |first=Tim |title=Father of SSL says despite attacks, the security linchpin has lots of life left |url= http://www.networkworld.com/news/2011/101111-elgamal-251806.html |work=Network World |accessdate=30 May 2014 |url-status=dead |archiveurl= https://web.archive.org/web/20140531105257/http://www.networkworld.com/news/2011/101111-elgamal-251806.html |archivedate=31 May 2014}}</ref><ref name=\"Oppliger\">{{cite book |title=SSL and TLS: Theory and Practice |edition=2nd |last=Oppliger |first=Rolf |year=2016 |chapter=Introduction |chapter-url=https://books.google.com/books?id=jm6uDgAAQBAJ&pg=PA15 |page=13 |publisher=[[Artech House]] |isbn=978-1-60807-999-5 |via=Google Books |access-date=2018-03-01}}</ref><ref>{{cite web |archiveurl= https://web.archive.org/web/19970614020952/http://home.netscape.com/newsref/std/SSL.html|archivedate=14 June 1997|title=THE SSL PROTOCOL|url=http://home.netscape.com/newsref/std/SSL.html|publisher=Netscape Corporation|year=2007}}</ref> SSLVersion 1.0 was never publicly released because of serious security flaws in the protocol. Version 2.0, released in February 1995, contained a number of security flaws which necessitated the design of version 3.0.<ref>Rescorla 2001</ref><ref name=\"Oppliger\"/> Released in 1996, SSL version 3.0 represented a complete redesign of the protocol produced by [[Paul Kocher]] working with Netscape engineers Phil Karlton and Alan Freier, with a reference implementation by Christopher Allen and Tim Dierks of Consensus Development. Newer versions of SSL/TLS are based on SSL 3.0. The 1996 draft of SSL 3.0 was published by IETF as a historical document in {{IETF RFC|6101}}.\n\nSSL 2.0 was deprecated in 2011 by {{IETF RFC|6176}}. In 2014, SSL 3.0 was found to be vulnerable to the [[POODLE]] attack that affects all [[block cipher]]s in SSL; [[RC4]], the only non-block cipher supported by SSL 3.0, is also feasibly broken as used in SSL 3.0.<ref name=\"Poodle\">{{cite web |url= https://access.redhat.com/articles/1232123 |title=POODLE: SSLv3 vulnerability (CVE-2014-3566) |accessdate=21 October 2014 |url-status=live |archiveurl= https://web.archive.org/web/20141205124712/https://access.redhat.com/articles/1232123 |archivedate=5 December 2014}}</ref> SSL 3.0 was deprecated in June 2015 by {{IETF RFC|7568}}.\n\n===TLS 1.0===\nTLS 1.0 was first defined in {{IETF RFC|2246}} in January 1999 as an upgrade of SSL Version 3.0, and written by Christopher Allen and Tim Dierks of Consensus Development. As stated in the RFC, \"the differences between this protocol and SSL 3.0 are not dramatic, but they are significant enough to preclude interoperability between TLS 1.0 and SSL 3.0\". Tim Dierks later wrote that these changes, and the renaming from \"SSL\" to \"TLS\", were a face-saving gesture to Microsoft, \"so it wouldn't look [like] the IETF was just rubberstamping Netscape's protocol\".<ref>{{Cite web|url=http://tim.dierks.org/2014/05/security-standards-and-name-changes-in.html|title=Security Standards and Name Changes in the Browser Wars|access-date=2020-02-29}}</ref>\n\nTLS 1.0 includes a means by which a TLS implementation can downgrade the connection to SSL 3.0, thus weakening security.<ref name=\"urlnvlpubs.nist.gov\">{{cite web|url=http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-52r1.pdf |title=Guidelines for the Selection, Configuration, and Use of Transport Layer Security (TLS) Implementations|authors=Polk, Tim; McKay, Terry; Chokhani, Santosh|date=April 2014 |publisher=National Institute of Standards and Technology|page=67 |archiveurl=https://web.archive.org/web/20140508025330/http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-52r1.pdf |archivedate=2014-05-08 |url-status=dead|accessdate=2014-05-07}}</ref>{{Rp|1\u20132}}\n\nThe [[Payment Card Industry Security Standards Council|PCI Council]] suggested that organizations migrate from TLS 1.0 to TLS 1.1 or higher before June 30, 2018.<ref>{{cite web |url=https://blog.pcisecuritystandards.org/migrating-from-ssl-and-early-tls |title=Date Change for Migrating from SSL and Early TLS |author=Laura K. Gray |date=2015-12-18 |website=[[Payment Card Industry Security Standards Council]] blog |access-date=2018-04-05}}</ref><ref>{{Cite news|url=https://www.forbes.com/sites/thesba/2018/05/30/changes-to-pci-compliance-are-coming-june-30-is-your-ecommerce-business-ready/|title=Changes to PCI Compliance are Coming June 30. Is Your Ecommerce Business Ready?|last=Company|first=Newtek - Your Business Solutions|work=Forbes|access-date=2018-06-20|language=en}}</ref> In October 2018, [[Apple Inc.|Apple]], [[Google]], [[Microsoft]], and [[Mozilla]] jointly announced they would deprecate TLS 1.0 and 1.1 in March 2020.<ref name=\":2\">{{cite web|url=https://arstechnica.com/gadgets/2018/10/browser-vendors-unite-to-end-support-for-20-year-old-tls-1-0/|title=Apple, Google, Microsoft, and Mozilla come together to end TLS 1.0|last=Bright|first=Peter|date=17 October 2018|accessdate=17 October 2018}}</ref>\n\n===TLS 1.1===\nTLS 1.1 was defined in {{IETF RFC|4346}} in April 2006.<ref>{{cite web |author1=Dierks, T. |author2=E. Rescorla |lastauthoramp=yes |title=The Transport Layer Security (TLS) Protocol Version 1.1 |rfc=4346 |date=April 2006 |url=http://tools.ietf.org/html/rfc5246#ref-TLS1.1 |url-status=live |archiveurl=https://web.archive.org/web/20171224222709/https://tools.ietf.org/html/rfc5246#ref-TLS1.1 |archivedate=2017-12-24}}</ref> It is an update from TLS version 1.0. Significant differences in this version include:\n* Added protection against [[Block cipher mode of operation#Cipher Block Chaining (CBC)|cipher-block chaining]] (CBC) attacks.\n** The implicit [[initialization vector]] (IV) was replaced with an explicit IV.\n** Change in handling of [[Block cipher mode of operation#Padding|padding errors]].\n* Support for [[Internet Assigned Numbers Authority|IANA]] registration of parameters.<ref name=\"urlnvlpubs.nist.gov\"/>{{Rp|2}}\n\n===TLS 1.2===\nTLS 1.2 was defined in {{IETF RFC|5246}} in August 2008. It is based on the earlier TLS 1.1 specification. Major differences include:\n* The [[MD5]]-[[SHA-1]] combination in the [[Pseudorandom function family|pseudorandom function]] (PRF) was replaced with [[SHA-2|SHA-256]], with an option to use [[cipher suite]] specified PRFs.\n* The MD5-SHA-1 combination in the finished message [[Hash function|hash]] was replaced with SHA-256, with an option to use cipher suite specific hash algorithms. However, the size of the hash in the finished message must still be at least 96 [[bit]]s.<ref>{{cite IETF |rfc=5246|title=The Transport Layer Security (TLS) Protocol Version 1.2|section=7.4.9|sectionname=Finished|date=August 2008|author=T. Dierks, E. Rescorla}}</ref>\n* The MD5-SHA-1 combination in the digitally signed element was replaced with a single hash negotiated during [[handshaking|handshake]], which defaults to SHA-1.\n* Enhancement in the client's and server's ability to specify which hashes and signature algorithms they accept.\n* Expansion of support for [[authenticated encryption]] ciphers, used mainly for [[Galois/Counter Mode]] (GCM) and [[CCM mode]] of [[Advanced Encryption Standard]] (AES) encryption.\n* TLS Extensions definition and AES cipher suites were added.<ref name=\"urlnvlpubs.nist.gov\"/>{{Rp|2}}\n\nAll TLS versions were further refined in {{IETF RFC|6176}} in March 2011, removing their backward compatibility with SSL such that TLS sessions never negotiate the use of Secure Sockets Layer (SSL) version 2.0.\n\n===TLS 1.3===\nTLS 1.3 was defined in {{IETF RFC|8446}} in August 2018. It is based on the earlier TLS 1.2 specification. Major differences from TLS 1.2 include:<ref name = \"WolfSSL, 2019\" >{{ Cite web | url = https://www.wolfssl.com/differences-between-tls-12-and-tls-13-9/ | title = Differences between TLS 1.2 and TLS 1.3 (#TLS13) | access-date = 2019-09-18 | date = 2019-09-18 | website = WolfSSL | archive-url = https://web.archive.org/web/20190919000200/https://www.wolfssl.com/differences-between-tls-12-and-tls-13-9/ | archive-date = 2019-09-19  | df = dmy-all }}</ref>\n* Separating key agreement and authentication algorithms from the cipher suites\n* Removing support for weak and less-used named [[elliptic-curve cryptography|elliptic curves]]\n* Removing support for MD5 and SHA-224 [[cryptographic hash function]]s\n* Requiring digital signatures even when a previous configuration is used\n* Integrating [[HKDF]] and the semi-ephemeral DH proposal\n* Replacing resumption with [[TLS-PSK|PSK]] and tickets\n* Supporting 1-[[round-trip delay time|RTT]] handshakes and initial support for 0-[[round-trip delay time|RTT]]\n* Mandating [[forward secrecy|perfect forward secrecy]], by means of using ephemeral keys during the (EC)DH key agreement\n* Dropping support for many insecure or obsolete features including [[Data compression|compression]], renegotiation, non-[[Authenticated encryption|AEAD]] ciphers, non-[[Forward secrecy|PFS]] key exchange (among which are static [[RSA (cryptosystem)|RSA]] and static [[Diffie\u2013Hellman key exchange|DH]] key exchanges), custom [[Diffie\u2013Hellman key exchange|DHE]] groups, EC point format negotiation, Change Cipher Spec protocol, Hello message UNIX time, and the length field AD input to AEAD ciphers\n* Prohibiting SSL or RC4 negotiation for backwards compatibility\n* Integrating use of session hash\n* Deprecating use of the record layer version number and freezing the number for improved backwards compatibility\n* Moving some security-related algorithm details from an appendix to the specification and relegating ClientKeyShare to an appendix\n* Adding the [[ChaCha20]] stream cipher with the [[Poly1305]] message authentication code\n* Adding the [[Ed25519]] and [[Ed448]] digital signature algorithms\n* Adding the [[x25519]] and [[x448]] key exchange protocols\n\n[[Network Security Services]] (NSS), the cryptography library developed by [[Mozilla]] and used by its web browser [[Firefox]], enabled TLS 1.3 by default in February 2017.<ref name=NSS-3.29>{{cite web|url=https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.29_release_notes|title=NSS 3.29 release notes|date=February 2017|publisher=Mozilla Developer Network|url-status=live|archiveurl=https://web.archive.org/web/20170222052829/https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.29_release_notes|archivedate=2017-02-22}}</ref> TLS 1.3 support was subsequently added \u2014 but due to compatibility issues for a small number of users, not automatically enabled<ref>{{cite web|url=https://bugzilla.mozilla.org/show_bug.cgi?id=1310516|title=Enable TLS 1.3 by default|date=16 October 2016|publisher=Bugzilla@Mozilla|accessdate=10 October 2017}}</ref> \u2014 to [[History of Firefox#Firefox 52 through 59|Firefox 52.0]], which was released in March 2017. TLS 1.3 was enabled by default in May 2018 with the release of [[History of Firefox#Firefox 60 through 67|Firefox 60.0]].<ref>{{Cite web|url=https://www.mozilla.org/en-US/firefox/60.0/releasenotes/|title=Firefox \u2014 Notes (60.0)|website=Mozilla|language=en-US|access-date=2018-05-10}}</ref>\n\n[[Google Chrome]] set TLS 1.3 as the default version for a short time in 2017. It then removed it as the default, due to incompatible middleboxes such as [[Blue Coat Systems|Blue Coat web proxies]].<ref>{{cite web |url=http://bluecoat.force.com/knowledgebase/articles/Technical_Alert/000032878 |title=ProxySG, ASG and WSS will interrupt SSL connections when clients using TLS 1.3 access sites also using TLS 1.3 |date=16 May 2017 |work=BlueTouch Online |accessdate=11 September 2017 |url-status=live |archiveurl=https://web.archive.org/web/20170912061432/http://bluecoat.force.com/knowledgebase/articles/Technical_Alert/000032878 |archivedate=12 September 2017}}</ref>\n\nDuring the IETF 100 [[Hackathon]] which took place in [[Singapore]], The TLS Group worked on adapting [[Open-source software|open-source applications]] to use TLS 1.3.<ref>{{Cite web|url=https://datatracker.ietf.org/meeting/100/materials/slides-100-hackathon-sessa-tls-13/|title=TLS 1.3 IETF 100 Hackathon|last=|first=|date=|website=|access-date=|url-status=dead|archiveurl=https://web.archive.org/web/20180115220635/https://datatracker.ietf.org/meeting/100/materials/slides-100-hackathon-sessa-tls-13/|archivedate=2018-01-15|df=}}</ref><ref name=\":1\">{{Citation|last=IETF \u2013 Internet Engineering Task Force|title=IETF Hackathon Presentations and Awards|date=2017-11-12|url=https://www.youtube.com/watch?v=33XW5yzjtME&t=2338|accessdate=2017-11-14}}</ref> The TLS group was made up of individuals from [[Japan]], [[United Kingdom]], and [[Mauritius]] via the cyberstorm.mu team.<ref name=\":1\" /> During the IETF 101 Hackathon which took place in [[London]], more work was done on application support of TLS 1.3.<ref>{{Cite news|url=https://www.theregister.co.uk/2018/03/27/with_tls_13_signed_off_its_implementation_time|title=Hurrah! TLS 1.3 is here. Now to implement it and put it into software|access-date=2018-03-28|language=en}}</ref> During IETF 102 Hackathon, work continued to inter-operate lesser known TLS 1.3 implementations along with application integration.<ref>{{Citation|last=IETF - Internet Engineering Task Force|title=IETF102-HACKATHON-20180715-1400|date=2018-07-15|url=https://www.youtube.com/watch?v=u6rz4PWA_As&t=4526|access-date=2018-07-18}}</ref>\n\n[[wolfSSL]] enabled the use of TLS 1.3 as of version 3.11.1, released in May 2017.<ref>{{cite web|url=https://www.wolfssl.com/wolfssl-tls-1-3-beta-release-now-available/|title=wolfSSL TLS 1.3 BETA Release Now Available|date=11 May 2017|publisher=info@wolfssl.com|accessdate=11 May 2017}}</ref> As the first commercial TLS 1.3 implementation, wolfSSL 3.11.1 supported Draft 18 and now supports Draft 28,<ref>{{cite web|url=https://www.wolfssl.com/docs/tls13/|title=TLS 1.3 PROTOCOL SUPPORT|publisher=info@wolfssl.com|date=|access-date=}}</ref> the final version, as well as many older versions. A series of blogs was published on the performance difference between TLS 1.2 and 1.3.<ref>{{cite web|url=https://www.wolfssl.com/tls-1-3-draft-28-support-wolfssl/|title=TLS 1.3 Draft 28 Support in wolfSSL|date=14 June 2018|publisher=info@wolfssl.com|accessdate=14 June 2018}}</ref>\n\nIn <time datetime=\"2018-09-11T12:00:00+00:00\">September 2018</time>, the popular [[OpenSSL]] project released version 1.1.1 of its library, in which support for TLS 1.3 was \"[t]he headline new feature\".<ref>{{cite web|url=https://www.openssl.org/blog/blog/2018/09/11/release111/|title=OpenSSL 1.1.1 Is Released|date=11 Sep 2018 <!-- 12:00:00 GMT --> |publisher=Matt Caswell|accessdate=19 Dec 2018 <!-- 05:44:54 GMT --> }}</ref>\n\n====Enterprise Transport Security====\nThe [[Electronic Frontier Foundation]] praised TLS 1.3 and expressed concern about the variant protocol '''Enterprise Transport Security''' ('''ETS''') that intentionally disables important security measures in TLS 1.3.<ref>{{Cite web|url=https://www.eff.org/deeplinks/2019/02/ets-isnt-tls-and-you-shouldnt-use-it|title=ETS Isn't TLS and You Shouldn't Use It|last=Hoffman-Andrews|first=Jacob|date=2019-02-26|website=[[Electronic Frontier Foundation]]|language=en|access-date=2019-02-27}}</ref> ETS is a published standard known as the '''ETSI TS103523-3''', \"Middlebox Security Protocol, Part3: Enterprise Transport Security\", and intended for use entirely within proprietary networks such as banking systems to enable detection of malware placement, unlawful data exfiltration, and compliance with regulatory auditing mandates.\n\n==Digital certificates==\n{{Main|Public key certificate}}\n[[File:Let's Encrypt Certificate Firefox example.png|thumb|Example of a website with digital certificate]]\nA digital certificate certifies the ownership of a public key by the named subject of the certificate, and indicates certain expected usages of that key. This allows others (relying parties) to rely upon signatures or on assertions made by the private key that corresponds to the certified public key.\n\n===Certificate authorities===\n{{Main|Certificate authority}}\nTLS typically relies on a set of trusted third-party certificate authorities to establish the authenticity of certificates. Trust is usually anchored in a list of certificates distributed with user agent software,<ref>{{Cite web|url=https://www.rsaconference.com/writable/presentations/file_upload/sec-t02_final.pdf|title=Alternatives to Certification Authorities for a Secure Web|last=Rea|first=Scott|date=2013|website=|publisher=RSA Conference Asia Pacific|access-date=7 September 2016|url-status=live|archiveurl=https://web.archive.org/web/20161007222635/https://www.rsaconference.com/writable/presentations/file_upload/sec-t02_final.pdf|archivedate=7 October 2016|df=}}</ref> and can be modified by the relying party.\n\nAccording to [[Netcraft]], who monitors active TLS certificates, the market-leading certificate authority (CA) has been [[NortonLifeLock|Symantec]] since the beginning of their survey (or [[Verisign|VeriSign]] before the authentication services business unit was purchased by Symantec). Symantec currently accounts for just under a third of all certificates and 44% of the valid certificates used by the 1 million busiest websites, as counted by Netcraft.<ref>[http://news.netcraft.com/archives/2015/05/13/counting-ssl-certificates.html Counting SSL certificates; netcraft; May 13, 2015.] {{webarchive|url=https://web.archive.org/web/20150516035536/http://news.netcraft.com/archives/2015/05/13/counting-ssl-certificates.html |date=May 16, 2015}}</ref>{{Update inline|reason=Symantec has since sold their CA business to DigiCert|date=August 2019}}\n\nAs a consequence of choosing [[X.509]] certificates, certificate authorities and a [[public key infrastructure]] are necessary to verify the relation between a certificate and its owner, as well as to generate, sign, and administer the validity of certificates. While this can be more convenient than verifying the identities via a [[web of trust]], the [[Global surveillance disclosures (2013\u2013present)|2013 mass surveillance disclosures]] made it more widely known that certificate authorities are a weak point from a security standpoint, allowing [[man-in-the-middle attack]]s (MITM) if the certificate authority cooperates (or is compromised).<ref>[https://www.wired.com/threatlevel/2010/03/packet-forensics/ Law Enforcement Appliance Subverts SSL] {{webarchive|url=https://web.archive.org/web/20140315064727/http://www.wired.com/threatlevel/2010/03/packet-forensics |date=2014-03-15}}, Wired, 2010-04-03.</ref><ref>[https://www.eff.org/deeplinks/2010/03/researchers-reveal-likelihood-governments-fake-ssl New Research Suggests That Governments May Fake SSL Certificates] {{webarchive|url=https://web.archive.org/web/20160104234608/https://www.eff.org/deeplinks/2010/03/researchers-reveal-likelihood-governments-fake-ssl |date=2016-01-04}}, EFF, 2010-03-24.</ref>\n\n==Algorithm==\n{{see also|Cipher suite}}\n\n===Key exchange or key agreement===\nBefore a client and server can begin to exchange information protected by TLS, they must securely exchange or agree upon an encryption key and a cipher to use when encrypting data (see [[#Cipher|\u00a7 Cipher]]). Among the methods used for key exchange/agreement are: public and private keys generated with [[RSA (algorithm)|RSA]] (denoted TLS_RSA in the TLS handshake protocol), [[Diffie\u2013Hellman]] (TLS_DH), ephemeral Diffie\u2013Hellman (TLS_DHE), [[elliptic-curve Diffie\u2013Hellman]] (TLS_ECDH), ephemeral elliptic-curve Diffie\u2013Hellman (TLS_ECDHE), [[Key-agreement protocol#Exponential key exchange|anonymous Diffie\u2013Hellman]] (TLS_DH_anon),<ref name=\"RFC5246\"/> [[TLS-PSK|pre-shared key]] (TLS_PSK)<ref name=RFC4279>{{cite web|title=Pre-Shared Key Ciphersuites for Transport Layer Security (TLS)|rfc=4279 |url=https://tools.ietf.org/html/rfc4279|publisher=Internet Engineering Task Force|accessdate=9 September 2013|author=P. Eronen, Ed.|url-status=live|archiveurl=https://web.archive.org/web/20130905074722/http://tools.ietf.org/html/rfc4279|archivedate=5 September 2013|df=}}</ref> and [[TLS-SRP|Secure Remote Password]] (TLS_SRP).<ref name=RFC5054>{{cite web |rfc=5054 |title=Using the Secure Remote Password (SRP) Protocol for TLS Authentication|url=https://tools.ietf.org/html/rfc5054|publisher=Internet Engineering Task Force|accessdate=December 21, 2014|author=D. Taylor, Ed.|url-status=live|archiveurl=https://web.archive.org/web/20141207151603/http://tools.ietf.org/html/rfc5054|archivedate=December 7, 2014|df=}}</ref>\n\nThe TLS_DH_anon and TLS_ECDH_anon key agreement methods do not authenticate the server or the user and hence are rarely used because those are vulnerable to [[man-in-the-middle attack]]s. Only TLS_DHE and TLS_ECDHE provide [[#Forward secrecy|forward secrecy]].\n\nPublic key certificates used during exchange/agreement also vary in the size of the public/private encryption keys used during the exchange and hence the robustness of the security provided. In July 2013, [[Google]] announced that it would no longer use 1024-bit public keys and would switch instead to 2048-bit keys to increase the security of the TLS encryption it provides to its users because the encryption strength is directly related to the [[key size]].<ref name=\":0\">{{cite web|last=Gothard|first=Peter|title=Google updates SSL certificates to 2048-bit encryption|url=http://www.computing.co.uk/ctg/news/2285984/google-updates-ssl-certificates-to-2048bit-encryption |work=Computing|publisher=Incisive Media|accessdate=9 September 2013|url-status=live |archiveurl=https://web.archive.org/web/20130922082322/http://www.computing.co.uk/ctg/news/2285984/google-updates-ssl-certificates-to-2048bit-encryption|archivedate=22 September 2013|df=}}</ref><ref>{{Cite news|url=http://searchsecurity.techtarget.com/answer/From-1024-to-2048-bit-The-security-effect-of-encryption-key-length|title=The value of 2,048-bit encryption: Why encryption key length matters |work=SearchSecurity|access-date=2017-12-18|language=en-US|url-status=live |archiveurl=https://web.archive.org/web/20180116081141/http://searchsecurity.techtarget.com/answer/From-1024-to-2048-bit-The-security-effect-of-encryption-key-length|archivedate=2018-01-16|df=}}</ref>\n\n{{anchor|keyexchange-table}}\n{| class=\"wikitable\" style=\"text-align:center\"\n|+ Key exchange/agreement and authentication\n! Algorithm !! SSL 2.0 !! SSL 3.0 !! TLS 1.0 !! TLS 1.1 !! TLS 1.2 !! TLS 1.3!! Status\n|-\n! {{Depends|[[RSA (cryptosystem)|RSA]]}}\n| {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{N/A|No}} || rowspan=\"19\"| Defined for TLS 1.2 in RFCs\n|-\n!{{Depends|[[Diffie\u2013Hellman key exchange|DH]]-[[RSA (cryptosystem)|RSA]]}}\n| {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{N/A|No}}\n|-\n!{{Good|[[Diffie\u2013Hellman key exchange|DHE]]-[[RSA (cryptosystem)|RSA]] ([[#Forward secrecy|forward secrecy]])}}\n| {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}}\n|-\n!{{Depends|[[Elliptic-curve Diffie\u2013Hellman|ECDH]]-[[RSA (cryptosystem)|RSA]]}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{N/A|No}}\n|-\n!{{Good|[[Elliptic-curve Diffie\u2013Hellman|ECDHE]]-[[RSA (cryptosystem)|RSA]] ([[#Forward secrecy|forward secrecy]])}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}}\n|-\n!{{Depends|[[Diffie\u2013Hellman key exchange|DH]]-[[Digital Signature Algorithm|DSS]]}}\n| {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{N/A|No}}\n|-\n!{{Good|[[Diffie\u2013Hellman key exchange|DHE]]-[[Digital Signature Algorithm|DSS]] ([[#Forward secrecy|forward secrecy]])}}\n| {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{N/A|No}}<ref>{{cite web|url=https://www.ietf.org/mail-archive/web/tls/current/msg17680.html|title=Consensus: remove DSA from TLS 1.3|date=September 17, 2015|author=Sean Turner|url-status=live|archiveurl=https://web.archive.org/web/20151003193113/http://www.ietf.org/mail-archive/web/tls/current/msg17680.html|archivedate=October 3, 2015|df=}}</ref>\n|-\n!{{Depends|[[Elliptic-curve Diffie\u2013Hellman|ECDH]]-[[Elliptic Curve DSA|ECDSA]]}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{N/A|No}}\n|-\n!{{Good|[[Elliptic-curve Diffie\u2013Hellman|ECDHE]]-[[Elliptic Curve DSA|ECDSA]] ([[#Forward secrecy|forward secrecy]])}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}}\n|-\n!{{Depends|[[TLS-PSK|PSK]]}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|-\n!{{Depends|[[Pre-shared key|PSK]]-[[RSA (cryptosystem)|RSA]]}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|-\n!{{Good|[[Diffie\u2013Hellman key exchange|DHE]]-[[Pre-shared key|PSK]] ([[#Forward secrecy|forward secrecy]])}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|-\n!{{Good|[[Elliptic-curve Diffie\u2013Hellman|ECDHE]]-[[Pre-shared key|PSK]] ([[#Forward secrecy|forward secrecy]])}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|-\n!{{Depends|[[TLS-SRP|SRP]]}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|-\n!{{Depends|[[Secure Remote Password protocol|SRP]]-[[Digital Signature Algorithm|DSS]]}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|-\n!{{Depends|[[Secure Remote Password protocol|SRP]]-[[RSA (cryptosystem)|RSA]]}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|-\n!{{Depends|[[Kerberos (protocol)|Kerberos]]}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|-\n! {{Bad|[[Diffie\u2013Hellman key exchange|DH]]-ANON (insecure)}}\n| {{N/a|No}} || {{No|Yes}} || {{No|Yes}} || {{No|Yes}} || {{No|Yes}} ||\n|-\n! {{Bad|[[Elliptic-curve Diffie\u2013Hellman|ECDH]]-ANON (insecure)}}\n| {{N/a|No}} || {{N/a|No}} || {{No|Yes}} || {{No|Yes}} || {{No|Yes}} ||\n|-\n!{{Good|[[GOST|GOST R 34.10-94 / 34.10-2001]]<ref name=gostlink>[//tools.ietf.org/html/draft-chudov-cryptopro-cptls-04 draft-chudov-cryptopro-cptls-04 \u2013 GOST 28147-89 Cipher Suites for Transport Layer Security (TLS)]</ref>}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n| Proposed in RFC drafts\n|}\n\n===Cipher===\n{{see also|Cipher suite|Block cipher|Cipher security summary}}\n{{Anchor|cipher-table}}\n{| class=\"wikitable\" style=\"text-align:center\"\n|+[[Cipher]] security against publicly known feasible attacks\n|-\n! colspan=\"3\"|Cipher !! colspan=\"6\"|Protocol version !! rowspan=\"2\"|Status\n|-\n! Type\n! Algorithm\n! Nominal strength (bits)\n! SSL 2.0\n! SSL 3.0<br /><ref group=\"n\" name=\"rfc5746\">{{IETF RFC|5746}} must be implemented to fix a renegotiation flaw that would otherwise break this protocol.</ref><ref group=\"n\" name=\"renegotiation\">If libraries implement fixes listed in {{IETF RFC|5746}}, this violates the SSL 3.0 specification, which the IETF cannot change unlike TLS. Most current libraries implement the fix and disregard the violation that this causes.</ref><ref group=\"n\" name=\"BEAST\">The [[#BEAST attack|BEAST]] attack breaks all block ciphers (CBC ciphers) used in SSL 3.0 and TLS 1.0 unless mitigated by the client and/or the server. See [[#Web browsers|\u00a7 Web browsers]].</ref><ref group=\"n\" name=\"POODLEciphertable\">The [[#POODLE|POODLE]] attack breaks all block ciphers (CBC ciphers) used in SSL 3.0 unless mitigated by the client and/or the server. See [[#Web browsers|\u00a7 Web browsers]].</ref>\n! TLS 1.0<br /><ref group=\"n\" name=\"rfc5746\"/><ref group=\"n\" name=\"BEAST\"/>\n! TLS 1.1<br /><ref group=\"n\" name=\"rfc5746\"/>\n! TLS 1.2<br /><ref group=\"n\" name=\"rfc5746\"/>\n! TLS 1.3<br />\n|-\n! rowspan=\"14\"|[[Block cipher]]<br />with<br />[[Block cipher mode of operation|mode of operation]]\n![[Advanced Encryption Standard|AES]] [[Galois/Counter Mode|GCM]]<ref name=\"aes-gcm\">{{IETF RFC|5288|5289}}</ref><ref group=\"n\" name=\"aead\">[[AEAD block cipher modes of operation|AEAD]] ciphers (such as [[Galois/Counter Mode|GCM]] and [[CCM mode|CCM]]) can only be used in TLS 1.2 or later.</ref>\n| rowspan=\"3\"| 256, 128\n| {{N/a}} || {{N/a}} || {{N/a}} || {{N/a}} || {{Good|Secure}} || {{Good|Secure}} || rowspan=\"9\"| Defined for TLS 1.2 in RFCs\n|-\n![[Advanced Encryption Standard|AES]] [[CCM mode|CCM]]<ref name=\"aes-ccm\">{{IETF RFC|6655|7251}}</ref><ref group=\"n\" name=\"aead\"/>\n| {{N/a}} || {{N/a}} || {{N/a}} || {{N/a}} || {{Good|Secure}} || {{Good|Secure}}\n|-\n![[Advanced Encryption Standard|AES]] [[Cipher block chaining|CBC]]<ref group=\"n\" name=\"Lucky13\"/>\n| {{N/a}} || {{N/a}} || {{Depends|Depends on mitigations}} || {{Depends|Depends on mitigations}} || {{Depends|Depends on mitigations}} || {{N/a}}\n|-\n![[Camellia (cipher)|Camellia]] [[Galois/Counter Mode|GCM]]<ref name=\"camellia-gcm\">{{IETF RFC|6367}}</ref><ref group=\"n\" name=\"aead\"/>\n| rowspan=\"2\"| 256, 128\n| {{N/a}} || {{N/a}} || {{N/a}} || {{N/a}} || {{Good|Secure}} || {{N/a}}\n|-\n![[Camellia (cipher)|Camellia]] [[Cipher block chaining|CBC]]<ref name=\"camellia-cbc\">{{IETF RFC|5932|6367}}</ref><ref group=\"n\" name=\"Lucky13\"/>\n| {{N/a}} || {{N/a}} || {{Depends|Depends on mitigations}} || {{Depends|Depends on mitigations}} || {{Depends|Depends on mitigations}} || {{N/a}}\n|-\n![[ARIA (cipher)|ARIA]] [[Galois/Counter Mode|GCM]]<ref name=aria/><ref group=\"n\" name=\"aead\"/>\n| rowspan=\"2\"| 256, 128\n| {{N/a}} || {{N/a}} || {{N/a}} || {{N/a}} || {{Good|Secure}} || {{N/a}}\n|-\n![[ARIA (cipher)|ARIA]] [[Cipher block chaining|CBC]]<ref name=\"aria\">{{IETF RFC|6209}}</ref><ref group=\"n\" name=\"Lucky13\"/>\n| {{N/a}} || {{N/a}} || {{Depends|Depends on mitigations}} || {{Depends|Depends on mitigations}} || {{Depends|Depends on mitigations}} || {{N/a}}\n|-\n![[SEED (cipher)|SEED]] [[Cipher block chaining|CBC]]<ref name=\"seed-cbc\">{{IETF RFC|4162}}</ref><ref group=\"n\" name=\"Lucky13\"/>\n| 128\n| {{N/a}} || {{N/a}} || {{Depends|Depends on mitigations}} || {{Depends|Depends on mitigations}} || {{Depends|Depends on mitigations}} || {{N/a}}\n|-\n! [[Triple DES|3DES EDE]] [[Cipher block chaining|CBC]]<ref group=\"n\" name=\"Lucky13\">CBC ciphers can be attacked with the [[Lucky Thirteen attack]] if the library is not written carefully to eliminate timing side channels.</ref>{{refn|group=\"n\"|name=\"Sweet32\"|The Sweet32 attack breaks block ciphers with a block size of 64 bits.<ref name=\"sweet32\">{{cite web |url=https://sweet32.info/SWEET32_CCS16.pdf |title=On the Practical (In-)Security of 64-bit Block Ciphers \u2014 Collision Attacks on HTTP over TLS and OpenVPN |date=2016-10-28 |accessdate=2017-06-08 |url-status=live |archiveurl=https://web.archive.org/web/20170424021101/https://sweet32.info/SWEET32_CCS16.pdf |archivedate=2017-04-24}}</ref>}}\n| 112{{refn|group=\"n\"|name=\"3des\"|Although the key length of 3DES is 168 bits, effective security strength of 3DES is only 112 bits,<ref name=NIST_SP_800-57>{{cite web|url=http://csrc.nist.gov/publications/nistpubs/800-57/sp800-57-Part1-revised2_Mar08-2007.pdf |title=NIST Special Publication 800-57 ''Recommendation for Key Management \u2014 Part 1: General (Revised)'' |date=2007-03-08 |accessdate=2014-07-03 |url-status=dead |archiveurl=https://web.archive.org/web/20140606050814/http://csrc.nist.gov/publications/nistpubs/800-57/sp800-57-Part1-revised2_Mar08-2007.pdf |archivedate=June 6, 2014}}</ref> which is below the recommended minimum of 128 bits.<ref name=\"best-practices\">{{cite web|url=https://www.ssllabs.com/projects/best-practices/index.html|title=SSL/TLS Deployment Best Practices|author=Qualys SSL Labs|accessdate=2 June 2015|url-status=live|archiveurl=https://web.archive.org/web/20150704101956/https://www.ssllabs.com/projects/best-practices/index.html|archivedate=4 July 2015|df=}}</ref>}}\n| {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}}\n|-\n![[GOST (block cipher)|GOST 28147-89]] [[Block cipher mode of operation#Counter (CTR)|CNT]]<ref name=gostlink/><ref group=\"n\" name=\"Sweet32\"/>\n| 256\n| {{N/a}} || {{N/a}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}} || Defined in {{IETF RFC|4357}}\n|-\n![[International Data Encryption Algorithm|IDEA]] [[Cipher block chaining|CBC]]<ref group=\"n\" name=\"Lucky13\"/><ref group=\"n\" name=\"Sweet32\"/>{{refn|group=\"n\"|name=\"removal_from_tls1.2\"|IDEA and DES have been removed from TLS 1.2.<ref>{{IETF RFC|5469}}</ref>}}\n| 128\n| {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}} || {{N/a}} || rowspan=\"2\"| Removed from TLS 1.2\n|-\n!rowspan=\"2\"| [[Data Encryption Standard|DES]] [[Cipher block chaining|CBC]]<ref group=\"n\" name=\"Lucky13\"/><ref group=\"n\" name=\"Sweet32\"/><ref group=\"n\" name=\"removal_from_tls1.2\"/>\n| {{0}}56\n| {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}} || {{N/a}}\n|-\n| {{0}}40<ref group=\"n\" name=\"EXPORT\">40-bit strength cipher suites were intentionally designed with reduced key lengths to comply with since-rescinded US regulations forbidding the export of cryptographic software containing certain strong encryption algorithms (see [[Export of cryptography from the United States]]). These weak suites are forbidden in TLS 1.1 and later.</ref>\n| {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}} || {{N/a}} || {{N/a}} || rowspan=\"2\"| Forbidden in TLS 1.1 and later\n|-\n![[RC2]] [[Cipher block chaining|CBC]]<ref group=\"n\" name=\"Lucky13\"/><ref group=\"n\" name=\"Sweet32\"/>\n| {{0}}40<ref group=\"n\" name=\"EXPORT\"/>\n| {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}} || {{N/a}} || {{N/a}}\n|-\n! rowspan=\"3\"|[[Stream cipher]]\n![[ChaCha20]]-[[Poly1305]]<ref name=\"chacha20poly1305\">{{IETF RFC|7905}}</ref><ref group=\"n\" name=\"aead\"/>\n| 256\n| {{N/a}} || {{N/a}} || {{N/a}} || {{N/a}} || {{Good|Secure}} || {{Good|Secure}} || Defined for TLS 1.2 in RFCs\n|-\n!rowspan=\"2\"| [[RC4]]<ref group=\"n\" name=\"RC4\">Use of RC4 in all versions of TLS is prohibited by {{IETF RFC|7465}} (because [[#RC4 attacks|RC4 attacks]] weaken or break RC4 used in SSL/TLS).</ref>\n| 128\n| {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}} || rowspan=\"2\"| Prohibited in all versions of TLS by {{IETF RFC|7465}}\n|-\n| {{0}}40<ref group=\"n\" name=\"EXPORT\"/>\n| {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}} || {{N/a}} || {{N/a}}\n|-\n! None\n! Null<ref group=\"n\">Authentication only, no encryption.</ref>\n| \u2013\n| {{N/a}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}} || Defined for TLS 1.2 in RFCs\n|}\n;Notes\n{{reflist|group=\"n\"}}\n\n===Data integrity===\nA [[message authentication code]] (MAC) is used for data integrity. [[HMAC]] is used for [[Cipher block chaining|CBC]] mode of block ciphers and stream ciphers. [[AEAD block cipher modes of operation|AEAD]] is used for [[authenticated encryption]] such as [[Galois/Counter Mode|GCM mode]] and [[CCM mode]].\n{{Anchor|integrity-table}}\n{| class=\"wikitable\" style=\"text-align:center\"\n|+ Data integrity\n! Algorithm !! SSL 2.0 !! SSL 3.0 !! TLS 1.0 !! TLS 1.1 !! TLS 1.2 !! TLS 1.3 !! Status\n|-\n! [[HMAC]]-[[MD5]]\n| {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{No}} || rowspan=\"4\" | Defined for TLS 1.2 in RFCs\n|-\n! [[HMAC]]-[[SHA-1|SHA1]]\n| {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{No}}\n|-\n! [[HMAC]]-[[SHA-2|SHA256/384]]\n| {{No}} || {{No}} || {{No}} || {{No}} || {{Yes}} || {{No}}\n|-\n! [[AEAD block cipher modes of operation|AEAD]]\n| {{No}} || {{No}} || {{No}} || {{No}} || {{Yes}} || {{Yes}}\n|-\n! [[GOST 28147-89|GOST 28147-89 IMIT]]<ref name=gostlink/>\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || || rowspan=\"2\" | Proposed in RFC drafts\n|-\n! [[GOST (hash function)|GOST R 34.11-94]]<ref name=gostlink/>\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|}\n\n==Applications and adoption==\nIn applications design, TLS is usually implemented on top of Transport Layer protocols, encrypting all of the protocol-related data of protocols such as [[Hypertext Transfer Protocol|HTTP]], [[File Transfer Protocol|FTP]], [[Simple Mail Transfer Protocol|SMTP]], [[Network News Transfer Protocol|NNTP]] and [[Extensible Messaging and Presence Protocol|XMPP]].\n\nHistorically, TLS has been used primarily with reliable transport protocols such as the [[Transmission Control Protocol]] (TCP). However, it has also been implemented with datagram-oriented transport protocols, such as the [[User Datagram Protocol]] (UDP) and the [[Datagram Congestion Control Protocol]] (DCCP), usage of which has been standardized independently using the term [[Datagram Transport Layer Security]] (DTLS).\n\n===Websites===\nA primary use of TLS is to secure [[World Wide Web]] traffic between a [[website]] and a [[web browser]] encoded with the HTTP protocol. This use of TLS to secure HTTP traffic constitutes the [[https|HTTPS]] protocol.<ref>{{cite web |url=https://www.instantssl.com/ssl-certificate-products/https.html |title=Http vs https |accessdate=2015-02-12 |url-status=live |archiveurl=https://web.archive.org/web/20150212105201/https://www.instantssl.com/ssl-certificate-products/https.html |archivedate=2015-02-12}}</ref>\n{|class=\"wikitable\" style=\"text-align: center;\"\n|+Website protocol support\n|-\n!Protocol<br />version\n!Website<br />support<ref name=\"trustworthy_ssl_pulse\">As of August 3, 2019. {{cite web |url=https://www.ssllabs.com/ssl-pulse/ |title=SSL Pulse: Survey of the SSL Implementation of the Most Popular Websites |website=[[Qualys]] |accessdate=2019-09-01}}</ref>\n!Security<ref name=\"trustworthy_ssl_pulse\"/><ref name=\"community.qualys\">{{cite web|url=https://community.qualys.com/blogs/securitylabs/2013/03/19/rc4-in-tls-is-broken-now-what|accessdate=2013-07-30|publisher=Qualsys Security Labs|author=ivanr|title=RC4 in TLS is Broken: Now What?|url-status=live|archiveurl=https://web.archive.org/web/20130827044512/https://community.qualys.com/blogs/securitylabs/2013/03/19/rc4-in-tls-is-broken-now-what|archivedate=2013-08-27}}</ref>\n|-\n!SSL 2.0\n|1.6%\n|{{Bad|Insecure}}\n|-\n!SSL 3.0\n|6.7%\n|{{Bad|Insecure<ref name=\"poodle_pdf\" />}}\n|-\n!TLS 1.0\n|65.0%\n|{{Depends|Depends on cipher<ref group=\"n\" name=\"ciphers\">see [[#Cipher|\u00a7 Cipher]] table above</ref> and client mitigations<ref group=\"n\" name=\"mitigations\">see [[#Web browsers|\u00a7 Web browsers]] and [[#Attacks against TLS/SSL|\u00a7 Attacks against TLS/SSL]] sections</ref>}}\n|-\n!TLS 1.1\n|75.1%\n|{{Depends|Depends on cipher<ref group=\"n\" name=\"ciphers\"/> and client mitigations<ref group=\"n\" name=\"mitigations\"/>}}\n|-\n!TLS 1.2\n|96.0%\n|{{Depends|Depends on cipher<ref group=\"n\" name=\"ciphers\"/> and client mitigations<ref group=\"n\" name=\"mitigations\"/>}}\n|-\n!TLS 1.3\n|18.4%\n|{{Good|Secure}}\n|}\n;Notes\n{{reflist|group=\"n\"}}\n\n===Web browsers===\n{{Further|Comparison of web browsers}}\n{{As of|2016|04}}, the latest versions of all major web browsers support TLS 1.0, 1.1, and 1.2, and have them enabled by default. However, not all supported [[List of Microsoft operating systems|Microsoft operating systems]] support the latest version of IE. Additionally, many operating systems currently support multiple versions of IE, but this has changed according to Microsoft's [https://support.microsoft.com/en-us/gp/microsoft-internet-explorer Internet Explorer Support Lifecycle Policy FAQ], \"beginning January 12, 2016, only the most current version of Internet Explorer available for a supported operating system will receive technical support and security updates.\" The page then goes on to list the latest supported version of IE at that date for each operating system. The next critical date would be when an operating system reaches the end of life stage, which is in Microsoft's [https://windows.microsoft.com/en-us/windows/lifecycle Windows lifecycle fact sheet].\n\nMitigations against known attacks are not enough yet:\n* Mitigations against [[#POODLE attack|POODLE attack]]: some browsers already prevent fallback to SSL 3.0; however, this mitigation needs to be supported by not only clients but also servers. Disabling SSL 3.0 itself, implementation of \"anti-POODLE record splitting\", or denying CBC ciphers in SSL 3.0 is required.\n** Google Chrome: complete (TLS_FALLBACK_SCSV is implemented since version 33, fallback to SSL 3.0 is disabled since version 39, SSL 3.0 itself is disabled by default since version 40. Support of SSL 3.0 itself was dropped since version 44.)\n** Mozilla Firefox: complete (support of SSL 3.0 itself is dropped since [[History of Firefox#Version 38\u201344|version 39]]. SSL 3.0 itself is disabled by default and fallback to SSL 3.0 are disabled since [[History of Firefox#Version 31\u201337|version 34]], TLS_FALLBACK_SCSV is implemented since version 35. In ESR, SSL 3.0 itself is disabled by default and TLS_FALLBACK_SCSV is implemented since ESR 31.3.)\n** Internet Explorer: partial (only in version 11, SSL 3.0 is disabled by default since April 2015. Version 10 and older are still vulnerable against POODLE.)\n** [[Opera (web browser)|Opera]]: complete (TLS_FALLBACK_SCSV is implemented since version 20, \"anti-POODLE record splitting\", which is effective only with client-side implementation, is implemented since version 25, SSL 3.0 itself is disabled by default since version 27. Support of SSL 3.0 itself will be dropped since version 31.)\n** Safari: complete (only on OS X 10.8 and later and iOS 8, CBC ciphers during fallback to SSL 3.0 is denied, but this means it will use RC4, which is not recommended as well. Support of SSL 3.0 itself is dropped on OS X 10.11 and later and iOS 9.)\n* Mitigation against [[#RC4 attacks|RC4 attacks]]:\n** Google Chrome disabled RC4 except as a fallback since version 43. RC4 is disabled since Chrome 48.\n** Firefox disabled RC4 except as a fallback since version 36. Firefox 44 disabled RC4 by default.\n** Opera disabled RC4 except as a fallback since version 30. RC4 is disabled since Opera 35.\n** Internet Explorer for [[Windows 7]] / Server 2008 R2 and for [[Windows 8]] / Server 2012 have set the priority of RC4 to lowest and can also disable RC4 except as a fallback through registry settings. Internet Explorer 11 Mobile 11 for [[Windows Phone 8.1]] disable RC4 except as a fallback if no other enabled algorithm works. Edge and IE 11 disable RC4 completely in August 2016.\n* Mitigation against [[Transport Layer Security#FREAK|FREAK attack]]:\n** The Android Browser included with [[Android Ice Cream Sandwich|Android 4]] and older is still vulnerable to the FREAK attack.\n** Internet Explorer 11 Mobile is still vulnerable to the FREAK attack.\n** Google Chrome, Internet Explorer (desktop), Safari (desktop & mobile), and Opera (mobile) have FREAK mitigations in place.\n** Mozilla Firefox on all platforms and Google Chrome on Windows were not affected by FREAK.\n\n{{clear}}\n{|class=\"wikitable\" id=\"browsersTLS\" style=\"text-align: center; font-size: smaller; margin-top: 0px;\"\n|+'''TLS/SSL support history of web browsers'''\n! rowspan=\"2\" | Browser\n! colspan=\"2\" rowspan=\"2\" | Version\n! rowspan=\"2\" | Platforms\n! colspan=\"2\" | SSL protocols\n! colspan=\"4\" | TLS protocols\n! colspan=\"3\" | Certificate support\n! colspan=\"6\" | Vulnerabilities fixed{{refn | group=\"n\" | name=\"note-sec\" |Does the browser have mitigations or is not vulnerable for the known attacks. Note actual security depends on other factors such as negotiated cipher, encryption strength etc (see [[#Cipher|\u00a7 Cipher]] table).}}\n! rowspan=\"2\" | Protocol selection by user<br /><ref group=\"n\" name=\"note-poodle\">Whether a user or administrator can choose the protocols to be used or not. If yes, several attacks such as BEAST (vulnerable in SSL 3.0 and TLS 1.0) or POODLE (vulnerable in SSL 3.0) can be avoided.</ref>\n|-\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! [[Extended Validation Certificate|EV]]<br /><ref group=\"n\" name=\"note-evssl\">Whether EV SSL and DV SSL (normal SSL) can be distinguished by indicators (green lock icon, green address bar, etc.) or not.</ref><ref name=\"EVSSLbrowser\">{{cite web |url=https://knowledge.verisign.com/support/ssl-certificates-support/index?page=content&id=SO10090&actp=search&viewlocale=en_US&searchid=1406590748892 |title=What browsers support Extended Validation (EV) and display an EV indicator? |publisher=[[NortonLifeLock|Symantec]] |accessdate=2014-07-28 |url-status=dead |archiveurl=https://web.archive.org/web/20151231171309/https://knowledge.verisign.com/support/ssl-certificates-support/index?page=content&id=SO10090&actp=search&viewlocale=en_US&searchid=1406590748892 |archivedate=2015-12-31}}</ref>\n! [[SHA-2]]<br /><ref name=\"SHA-2\">{{cite web |title=SHA-256 Compatibility |accessdate=2015-06-12 |url=https://support.globalsign.com/customer/portal/articles/1499561-sha-256-compatibility |url-status=live |archiveurl=https://web.archive.org/web/20150701004324/https://support.globalsign.com/customer/portal/articles/1499561-sha-256-compatibility |archivedate=2015-07-01}}</ref>\n! [[ECDSA]]<br /><ref name=\"ECC\">{{cite web |title=ECC Compatibility |accessdate=2015-06-13 |url=https://support.globalsign.com/customer/portal/articles/1995283-ecc-compatibility |url-status=live |archiveurl=https://web.archive.org/web/20160217122951/https://support.globalsign.com/customer/portal/articles/1995283-ecc-compatibility |archivedate=2016-02-17}}</ref>\n! BEAST<ref group=\"n\" name=\"note-BEASTmitigation\">e.g. 1/n-1 record splitting.</ref>\n! CRIME<ref group=\"n\" name=\"note-CRIMEmitigation\">e.g. Disabling header compression in HTTPS/SPDY.</ref>\n! POODLE (SSLv3)<ref group=\"n\" name=\"note-POODLEmitigation\">\n* Complete mitigations; disabling SSL 3.0 itself, \"anti-POODLE record splitting\". \"Anti-POODLE record splitting\" is effective only with client-side implementation and valid according to the SSL 3.0 specification, however, it may also cause compatibility issues due to problems in server-side implementations.\n* Partial mitigations; disabling fallback to SSL 3.0, TLS_FALLBACK_SCSV, disabling cipher suites with [[Block cipher mode of operation#Cipher-block chaining (CBC)|CBC mode of operation]]. If the server also supports TLS_FALLBACK_SCSV, the POODLE attack will fail against this combination of server and browser, but connections where the server does not support TLS_FALLBACK_SCSV and does support SSL 3.0 will still be vulnerable. If disabling cipher suites with CBC mode of operation in SSL 3.0, only cipher suites with RC4 are available, RC4 attacks become easier.\n* When disabling SSL 3.0 manually, POODLE attack will fail.</ref>\n! RC4<ref group=\"n\" name=\"note-RC4mitigation\">\n* Complete mitigation; disabling cipher suites with RC4.\n* Partial mitigations to keeping compatibility with old systems; setting the priority of RC4 to lower.</ref>\n! FREAK<ref name=\"note-FREAK-1\">{{cite web|url=https://freakattack.com/|title=Tracking the FREAK Attack|accessdate=2015-03-08|url-status=live|archiveurl=https://web.archive.org/web/20150306174623/https://freakattack.com/|archivedate=2015-03-06|df=}}</ref><ref name=\"note-FREAK-2\">{{cite web|url=https://www.smacktls.com/#freak|title=FREAK: Factoring RSA Export Keys|accessdate=2015-03-08|url-status=live|archiveurl=https://web.archive.org/web/20150311112517/https://www.smacktls.com/#freak|archivedate=2015-03-11|df=}}</ref>\n! Logjam\n|-\n! rowspan=\"16\" | [[Google Chrome]]<br /><small>([[Google Chrome for Android|Chrome for Android]])</small><br />{{refn |group=\"n\" |name=\"note-a\" |[[Google Chrome]] (and [[Chromium (web browser)|Chromium]]) supports TLS 1.0, and TLS 1.1 from version 22 (it was added, then dropped from version 21). TLS 1.2 support has been added, then dropped from Chrome 29.<ref name=\"Google\">{{cite web |author=Google |url=http://googlechromereleases.blogspot.nl/2012/05/dev-channel-update_29.html |title=Dev Channel Update |date=2012-05-29 |accessdate=2011-06-01 |url-status=live |archiveurl=https://web.archive.org/web/20130302032339/http://googlechromereleases.blogspot.nl/2012/05/dev-channel-update_29.html |archivedate=2013-03-02}}</ref><ref name=\"googlechromereleases.blogspot.co.uk\">{{cite web |author=Google |url=https://googlechromereleases.blogspot.co.uk/2012/08/stable-channel-update_21.html |title=Stable Channel Update |date=2012-08-21 |accessdate=2012-08-22 |url-status=live |archiveurl=https://web.archive.org/web/20120825192441/http://googlechromereleases.blogspot.co.uk/2012/08/stable-channel-update_21.html |archivedate=2012-08-25}}</ref><ref name=\"Chromium Project\">{{cite web |author=Chromium Project |url=https://src.chromium.org/viewvc/chrome?revision=203090&view=revision |title=Chromium TLS 1.2 Implementation |date=2013-05-30}}</ref>}}<br />{{refn |group=\"n\" |name=\"note-b\" |Uses the TLS implementation provided by [[BoringSSL]] for Android, OS X, and Windows<ref name=\"The Chromium Project: BoringSSL\">{{cite web|url=https://www.chromium.org/Home/chromium-security/boringssl|title=The Chromium Project: BoringSSL|accessdate=2015-09-05|url-status=live|archiveurl=https://web.archive.org/web/20150923033459/http://www.chromium.org/Home/chromium-security/boringssl|archivedate=2015-09-23|df=}}</ref> or by [[Network Security Services|NSS]] for Linux. Google is switching the TLS library used in Chrome to BoringSSL from NSS completely.}}\n| colspan=\"2\" style=\"background:salmon;\" | 1\u20139\n| rowspan=\"16\" | [[Microsoft Windows|Windows&nbsp;<small>(7+)</small>]]<br />[[macOS|macOS&nbsp;<small>(10.10+)</small>]]<br />[[Linux]]<br />[[Android (operating system)|Android&nbsp;<small>(4.4+)</small>]]<br />[[iOS|iOS&nbsp;<small>(10.0+)</small>]]<br />[[Chrome OS]]\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected<br /><ref name=ChromeBEAST>{{cite web|url=http://googlechromereleases.blogspot.jp/2011/10/chrome-stable-release.html|title=Chrome Stable Release|work=Chrome Releases|date=2011-10-25|accessdate=2015-02-01|url-status=live|archiveurl=https://web.archive.org/web/20150220020306/http://googlechromereleases.blogspot.jp/2011/10/chrome-stable-release.html|archivedate=2015-02-20|df=}}</ref>}}\n| {{No|Vulnerable<br /><small>(HTTPS)</small>}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\">configure enabling/disabling of each protocols via setting/option (menu name is dependent on browsers)</ref>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 10\u201320\n| {{Yes|No}}<ref name=\"build.chromium.org\">{{cite web|url=https://build.chromium.org/f/chromium/perf/dashboard/ui/changelog.html?url=/trunk/src&range=72316:67679&mode=html|archive-url=https://archive.today/20140619142454/http://build.chromium.org/f/chromium/perf/dashboard/ui/changelog.html?url=/trunk/src&range=72316:67679&mode=html|url-status=dead|archive-date=2014-06-19|title=SVN revision log on Chrome 10.0.648.127 release|accessdate=2014-06-19}}</ref>\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{No|Vulnerable<br /><small>(HTTPS/SPDY)</small>}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 21\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated<br /><ref name=\"CRIME-Chrome=Firefox\">{{cite web|url=https://www.imperialviolet.org/2012/09/21/crime.html|title=ImperialViolet \u2013 CRIME|date=2012-09-22|accessdate=2014-10-18|url-status=live|archiveurl=https://web.archive.org/web/20150110195746/https://www.imperialviolet.org/2012/09/21/crime.html|archivedate=2015-01-10|df=}}</ref>}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 22\u201329\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}<ref name=\"SSL/TLS Overview\">{{cite web |url=https://sites.google.com/site/tlsssloverview/ssl-v-tls/tls-versions-and-browser-compatability |title=SSL/TLS Overview |date=2008-08-06 |accessdate=2013-03-29 |url-status=live |archiveurl=https://web.archive.org/web/20130703043525/https://sites.google.com/site/tlsssloverview/ssl-v-tls/tls-versions-and-browser-compatability |archivedate=2013-07-03}}</ref>\n| {{No}}<ref name=\"SSL/TLS Overview\" /><ref name=\"Chromium Issue 90392\">{{cite web |url=https://code.google.com/p/chromium/issues/detail?id=90392 |title=Chromium Issue 90392 |date=2008-08-06 |accessdate=2013-06-28 |url-status=live |archiveurl=https://web.archive.org/web/20130803110745/http://code.google.com/p/chromium/issues/detail?id=90392 |archivedate=2013-08-03}}</ref><ref name=\"Issue 23503030 Merge 219882\">{{cite web |url=https://codereview.chromium.org/23503030/ |title=Issue 23503030 Merge 219882 |date=2013-09-03 |accessdate=2013-09-19 |url-status=live |archiveurl=https://web.archive.org/web/20140226230020/https://codereview.chromium.org/23503030/ |archivedate=2014-02-26}}</ref><ref name=\"Issue 278370\">{{cite web |url=http://code.google.com/p/chromium/issues/detail?id=278370 |title=Issue 278370: Unable to submit client certificates over TLS 1.2 from Windows |date=2013-08-23 |accessdate=2013-10-03 |url-status=live |archiveurl=https://web.archive.org/web/20131005021656/http://code.google.com/p/chromium/issues/detail?id=278370 |archivedate=2013-10-05}}</ref>\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\">configure the maximum and the minimum version of enabling protocols with command-line option</ref>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 30\u201332\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}&#8203;<ref name=\"Chromium Issue 90392\"/><ref name=\"Issue 23503030 Merge 219882\"/><ref name=\"Issue 278370\"/>\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 33\u201337\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Partial|Partly mitigated<br />{{refn |group=\"n\" |name=\"note-Chrome33-POODLE\"|TLS_FALLBACK_SCSV is implemented.<ref name=\"chrome-scsv\">{{cite web |last=M\u00f6ller |first=Bodo |title=This POODLE bites: exploiting the SSL 3.0 fallback |work=Google Online Security blog |publisher=Google (via Blogspot) |date=2014-10-14 |url=http://googleonlinesecurity.blogspot.com/2014/10/this-poodle-bites-exploiting-ssl-30.html |accessdate=2014-10-28 |url-status=live |archiveurl=https://web.archive.org/web/20141028003952/http://googleonlinesecurity.blogspot.com/2014/10/this-poodle-bites-exploiting-ssl-30.html |archivedate=2014-10-28}}</ref> Fallback to SSL 3.0 is disabled since version 39.<ref name=\"chrome-poodle\">{{cite web |title=An update on SSLv3 in Chrome. |work=Security-dev |date=2014-10-31 |url=https://groups.google.com/a/chromium.org/forum/#!topic/security-dev/Vnhy9aKM_l4 |accessdate=2014-11-04}}</ref>}}}}\n| {{Partial|Lowest priority<br /><ref name=Chrome33RC4>{{cite web|url=http://googlechromereleases.blogspot.com/2014/02/stable-channel-update_20.html|work=Mozilla Developer Network|title=Stable Channel Update|date=2014-02-20|accessdate=2014-11-14|url-status=live|archiveurl=https://web.archive.org/web/20141024210105/http://googlechromereleases.blogspot.com/2014/02/stable-channel-update_20.html|archivedate=2014-10-24|df=}}</ref><ref name=Chrome33changelog>{{cite web|url=https://build.chromium.org/f/chromium/perf/dashboard/ui/changelog.html?url=/trunk/src&range=232870:241107&mode=html|archive-url=https://archive.today/20140116153037/http://build.chromium.org/f/chromium/perf/dashboard/ui/changelog.html?url=/trunk/src&range=232870:241107&mode=html|url-status=dead|archive-date=2014-01-16|work=Google|title=Changelog for Chrome 33.0.1750.117|accessdate=2014-11-14}}</ref><ref name=Issue318442>{{cite web|url=https://code.google.com/p/chromium/issues/detail?id=318442|title=Issue 318442: Update to NSS 3.15.3 and NSPR 4.10.2|accessdate=2014-11-14|url-status=live|archiveurl=https://web.archive.org/web/20150315043755/https://code.google.com/p/chromium/issues/detail?id=318442|archivedate=2015-03-15|df=}}</ref>}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 38, 39\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Partial|Partly mitigated}}\n| {{Partial|Lowest priority}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n\n| colspan=\"2\" style=\"background:salmon;\" | 40\n| {{Yes|No}}\n| {{Yes|Disabled by default}}&#8203;<ref name=\"chrome-poodle\"/><ref name=\"chromium693963003\">{{cite web |url=https://codereview.chromium.org/693963003 |title=Issue 693963003: Add minimum TLS version control to about:flags and Finch gate it. \u2013 Code Review |accessdate=2015-01-22 |url-status=live |archiveurl=https://web.archive.org/web/20150416072943/https://codereview.chromium.org/693963003 |archivedate=2015-04-16}}</ref>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated<br />{{refn |group=\"n\" |name=\"note-Chrome40-POODLE\"|In addition to TLS_FALLBACK_SCSV and disabling a fallback to SSL 3.0, SSL 3.0 itself is disabled by default.<ref name=\"chrome-poodle\"/>}}}}\n| {{Partial|Lowest priority}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Yes|Yes{{refn|group=\"n\"|name=\"chromeflags\"|configure the minimum version of enabling protocols via chrome://flags<ref name=\"chromium693963003\" /> (the maximum version can be configured with command-line option)}}}}\n|-\n| colspan=\"2\" ! style=\"background:salmon;\" | 41, 42\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Lowest priority}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"chromeflags\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 43\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\"/><ref name=\"chromeissue375342\">{{cite web |url=https://code.google.com/p/chromium/issues/detail?id=375342 |title=Issue 375342: Drop RC4 Support |accessdate=2015-05-22 |url-status=live |archiveurl=https://web.archive.org/web/20150912071452/https://code.google.com/p/chromium/issues/detail?id=375342 |archivedate=2015-09-12}}</ref>}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"chromeflags\"/>}}\n|-\n | colspan=\"2\" style=\"background:salmon;\" | 44\u201347\n| {{Yes|No}}\n| {{Yes|No}}<ref name=\"chromeissue436391\">{{cite web |url=https://code.google.com/p/chromium/issues/detail?id=436391 |title=Issue 436391: Add info on end of life of SSLVersionFallbackMin & SSLVersionMin policy in documentation |accessdate=2015-04-19 |url-status=live |archiveurl=https://web.archive.org/web/20150418095600/http://code.google.com/p/chromium/issues/detail?id=436391 |archivedate=2015-04-18}}</ref>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}&#8203;<ref name=\"chromeissue490240\">{{cite web |url=https://code.google.com/p/chromium/issues/detail?id=490240 |title=Issue 490240: Increase minimum DH size to 1024 bits (tracking bug) |accessdate=2015-05-29 |url-status=live |archiveurl=https://web.archive.org/web/20150912081831/https://code.google.com/p/chromium/issues/detail?id=490240 |archivedate=2015-09-12}}</ref>\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 48, 49\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\">{{cite web |url=https://groups.google.com/a/chromium.org/forum/#!msg/security-dev/kVfCywocUO8/2BW3INFdDwAJ |title=Intent to deprecate: RC4 |accessdate=2015-12-21}}</ref><ref name=\"RC4-Chrome48-2\">{{cite web |url=https://googleonlinesecurity.blogspot.com/2015/12/an-update-on-sha-1-certificates-in.html |title=An update on SHA-1 certificates in Chrome |date=2015-12-18 |accessdate=2015-12-21 |url-status=live |archiveurl=https://web.archive.org/web/20151218214756/https://googleonlinesecurity.blogspot.com/2015/12/an-update-on-sha-1-certificates-in.html |archivedate=2015-12-18}}</ref>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 50\u201353\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\"/><ref name=\"RC4-Chrome48-2\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 54\u201366\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Partial|Disabled by default}}<br /><small>(draft version)</small>\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\"/><ref name=\"RC4-Chrome48-2\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 67\u201369\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Partial|Yes}}<br /><small>(draft version)</small>\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\"/><ref name=\"RC4-Chrome48-2\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| style=\"background:salmon;\" | 70\u201380\n| style=\"background:#a0e75a;\" | 81\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\"/><ref name=\"RC4-Chrome48-2\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n! rowspan=\"2\" | [[Microsoft Edge]]<br /><small>[[Chromium (web browser)|(Chromium based)]]<br />OS independent</small>\n| style=\"background:salmon;\" | 79\n| style=\"background:#a0e75a;\" | 80\n! rowspan=\"2\" | [[Microsoft Windows|Windows&nbsp;<small>(7+)</small>]]<br />[[macOS|macOS&nbsp;<small>(10.12+)</small>]]<br />[[Linux|Linux&nbsp;<small>(n/a yet)</small>]]<br />[[Android (operating system)|Android&nbsp;<small>(4.4+)</small>]]<br />[[iOS|iOS&nbsp;<small>(10.0+)</small>]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" {{table-experimental| 84}}<ref>https://blogs.windows.com/msedgedev/2020/03/31/tls-1-0-tls-1-1-schedule-update-edge-ie11/</ref>\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Partial|Disabled by default}}\n| {{Partial|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n! rowspan=\"21\" | [[Firefox|Mozilla Firefox]]<br /><small>([[Firefox for mobile]])</small><br />{{refn | group=\"n\" | name=\"note-c\" | Uses the TLS implementation provided by [[Network Security Services|NSS]]. As of Firefox 22, Firefox supports only TLS 1.0 despite the bundled NSS supporting TLS 1.1. Since Firefox 23, TLS 1.1 can be enabled, but was not enabled by default due to issues. Firefox 24 has TLS 1.2 support disabled by default. TLS 1.1 and TLS 1.2 have been enabled by default in Firefox 27 release.}}\n| colspan=\"2\" style=\"background:salmon;\" | 1.0, 1.5\n| rowspan=\"21\" | [[Microsoft Windows|Windows&nbsp;<small>(7+)</small>]]<br /> [[macOS|macOS&nbsp;<small>(10.9+)</small>]]<br /> [[Linux]]<br />[[Android (OS)|Android&nbsp;<small>(4.1+)</small>]]<br />[[iOS|iOS <small>(10.3+)</small>]]<br /><s>[[Firefox OS]]</s><br /><s>[[Maemo]]</s><br /><br />ESR only for:<br />[[Microsoft Windows|Windows&nbsp;<small>(7+)</small>]]<br />[[macOS|macOS&nbsp;<small>(10.9+)</small>]]<br /> [[Linux]]\n| {{No|Enabled by default}}<br /><ref name=\"SecurityinFirefox\">{{cite web |url=https://developer.mozilla.org/en-US/Firefox/Releases/2/Security_changes |title=Security in Firefox 2 |date=2008-08-06 |accessdate=2009-03-31 |url-status=live |archiveurl=https://web.archive.org/web/20140714142705/https://developer.mozilla.org/en-US/Firefox/Releases/2/Security_changes |archivedate=2014-07-14}}</ref>\n| {{No|Enabled by default}}<br /><ref name=\"SecurityinFirefox\"/>\n| {{Yes}}<ref name=\"SecurityinFirefox\"/>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}<ref name=\"SHA-2\"/>\n| {{No}}\n| {{Yes|Not affected<br /><ref name=FirefoxBEAST>{{cite web|url=https://blog.mozilla.org/security/2011/09/27/attack-against-tls-protected-communications/|title=Attack against TLS-protected communications|work=Mozilla Security Blog|publisher=Mozilla|date=2011-09-27|accessdate=2015-02-01|url-status=live|archiveurl=https://web.archive.org/web/20150304221307/https://blog.mozilla.org/security/2011/09/27/attack-against-tls-protected-communications/|archivedate=2015-03-04|df=}}</ref>}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 2\n| {{Yes|Disabled by default}}<br /><ref name=\"SecurityinFirefox\"/><ref name=\"FxSSL2\">{{cite web|url=https://developer.mozilla.org/en-US/docs/Introduction_to_SSL|title=Introduction to SSL|publisher=MDN|accessdate=2014-06-19|url-status=live|archiveurl=https://web.archive.org/web/20140714205945/https://developer.mozilla.org/en-US/docs/Introduction_to_SSL|archivedate=2014-07-14|df=}}</ref>\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 3\u20137\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 8\u201310<br />{{nowrap|ESR 10}}\n| {{Yes|No}}<ref name=\"FxSSL2\"/>\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 11\u201314\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable<br /><small>(SPDY)</small><ref name=\"CRIME-Chrome=Firefox\"/>}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 15\u201322<br />{{nowrap|ESR 17.0\u201317.0.10}}\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | {{nowrap|ESR 17.0.11}}\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{Partial|Lowest priority<br /><ref name=\"NSS-3.15.3\" /><ref name=\"mfsa2013-103\" />}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\" />}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 23\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}<br /><ref name=\"Bug565047\">{{cite web |url=https://bugzilla.mozilla.org/show_bug.cgi?id=565047 |title=Bug 565047 \u2013 (RFC4346) Implement TLS 1.1 (RFC 4346) |accessdate=2013-10-29}}</ref>\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes{{refn|group=\"n\"|name=\"aboutconfig\"|configure the maximum and the minimum version of enabling protocols via about:config}}}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 24, 25.0.0<br />{{nowrap|ESR 24.0\u201324.1.0}}\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}\n| {{Partial|Disabled by default}}<br /><ref name=\"Bug480514\">{{cite web|url=https://bugzilla.mozilla.org/show_bug.cgi?id=480514 |title=Bug 480514 \u2013 Implement support for TLS 1.2 (RFC 5246) |accessdate=2013-10-29}}</ref>\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 25.0.1, 26<br />{{nowrap|ESR 24.1.1}}\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}\n| {{Partial|Disabled by default}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{Partial|Lowest priority<br /><ref name=\"NSS-3.15.3\">{{cite web |url=https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.15.3_release_notes |work=Mozilla Developer Network |title=NSS 3.15.3 Release Notes |publisher=Mozilla |accessdate=2014-07-13 |url-status=live |archiveurl=https://web.archive.org/web/20140605001016/https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.15.3_release_notes |archivedate=2014-06-05}}</ref><ref name=\"mfsa2013-103\">{{cite web |url=https://www.mozilla.org/security/announce/2013/mfsa2013-103.html |work=Mozilla |title=MFSA 2013-103: Miscellaneous Network Security Services (NSS) vulnerabilities |publisher=Mozilla |accessdate=2014-07-13 |url-status=live |archiveurl=https://web.archive.org/web/20140714121632/http://www.mozilla.org/security/announce/2013/mfsa2013-103.html |archivedate=2014-07-14}}</ref>}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 27\u201333<br />{{nowrap|ESR 31.0\u201331.2}}\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}&#8203;<ref name=\"Bug733647\">{{cite web |url=https://bugzilla.mozilla.org/show_bug.cgi?id=733647 |title=Bug 733647 \u2013 Implement TLS 1.1 (RFC 4346) in Gecko (Firefox, Thunderbird), on by default |accessdate=2013-12-04}}</ref><ref name=\"Fx27\">{{cite web |url=https://website-archive.mozilla.org/www.mozilla.org/firefox_releasenotes/en-US/firefox/27.0/releasenotes/ |title=Firefox Notes \u2013 Desktop |date=2014-02-04 |accessdate=2014-02-04 |url-status=live |archiveurl=https://web.archive.org/web/20140207095334/https://website-archive.mozilla.org/www.mozilla.org/firefox_releasenotes/en-US/firefox/27.0/releasenotes/ |archivedate=2014-02-07}}</ref>\n| {{Yes}}&#8203;<ref name=\"Bug861266\">{{cite web |url=https://bugzilla.mozilla.org/show_bug.cgi?id=861266 |title=Bug 861266 \u2013 Implement TLS 1.2 (RFC 5246) in Gecko (Firefox, Thunderbird), on by default |accessdate=2013-11-18}}</ref><ref name=\"Fx27\"/>\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{Partial|Lowest priority}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 34, 35<br />{{nowrap|ESR 31.3\u201331.7}}\n| {{Yes|No}}\n| {{Yes|Disabled by default}}<br /><ref name=\"firefox-poodle\">{{cite web |title=The POODLE Attack and the End of SSL 3.0 |work=Mozilla blog |publisher=Mozilla |date=2014-10-14 |url=https://blog.mozilla.org/security/2014/10/14/the-poodle-attack-and-the-end-of-ssl-3-0/ |accessdate=2014-10-28 |url-status=live |archiveurl=https://web.archive.org/web/20141018231351/https://blog.mozilla.org/security/2014/10/14/the-poodle-attack-and-the-end-of-ssl-3-0/ |archivedate=2014-10-18}}</ref><ref name=\"Fx34\">{{cite web|url=https://www.mozilla.org/en-US/firefox/34.0/releasenotes/|title=Firefox \u2014 Notes (34.0) \u2014 Mozilla|publisher=mozilla.org|date=2014-12-01|accessdate=2015-04-03|url-status=live|archiveurl=https://web.archive.org/web/20150409022558/https://www.mozilla.org/en-US/firefox/34.0/releasenotes/|archivedate=2015-04-09|df=}}</ref>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated<br />{{refn |group=\"n\" |name=\"Fx-POODLE\"|SSL 3.0 itself is disabled by default.<ref name=\"firefox-poodle\"/> In addition, fallback to SSL 3.0 is disabled since version 34,<ref name=\"firefox-fallback-disabled\">{{cite web|url=https://bugzilla.mozilla.org/show_bug.cgi?id=1083058|title=Bug 1083058 \u2013 A pref to control TLS version fallback |publisher=bugzilla.mozilla.org|accessdate=2014-11-06}}</ref> and TLS_FALLBACK_SCSV is implemented since 35.0 and ESR 31.3.<ref name=\"firefox-poodle\"/><ref name=\"bugzilla.mozilla.org\">{{cite web|url=https://bugzilla.mozilla.org/show_bug.cgi?id=1036737|title=Bug 1036737 \u2013 Add support for draft-ietf-tls-downgrade-scsv to Gecko/Firefox |publisher=bugzilla.mozilla.org|accessdate=2014-10-29}}</ref>}}}}\n| {{Partial|Lowest priority}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | {{nowrap|ESR 31.8}}\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Lowest priority}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated&#8203;<ref name=\"FxLogjam\"/>}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 36\u201338<br />{{nowrap|ESR 38.0}}\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\">Only when no cipher suites with other than RC4 is available, cipher suites with RC4 will be used as a fallback.</ref><ref name=\"https\">{{cite web|url=https://bugzilla.mozilla.org/show_bug.cgi?id=1088915|title=Bug 1088915 \u2013 Stop offering RC4 in the first handshakes |publisher=bugzilla.mozilla.org|accessdate=2014-11-04}}</ref>}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | {{nowrap|ESR 38.1\u201338.8}}\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\"/>}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated&#8203;<ref name=\"FxLogjam\"/>}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 39\u201343\n| {{Yes|No}}\n| {{Yes|No}}<ref name=\"Fx39\">{{cite web|url=https://www.mozilla.org/en-US/firefox/39.0/releasenotes/|title=Firefox \u2014 Notes (39.0) \u2014 Mozilla|publisher=mozilla.org|date=2015-06-30|accessdate=2015-07-03|url-status=live|archiveurl=https://web.archive.org/web/20150703163249/https://www.mozilla.org/en-US/firefox/39.0/releasenotes/|archivedate=2015-07-03|df=}}</ref>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\"/>}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}&#8203;<ref name=\"FxLogjam\">{{cite web |url=https://bugzilla.mozilla.org/show_bug.cgi?id=1166031 |title=Bug 1166031 \u2013 Update to NSS 3.19.1 |publisher=bugzilla.mozilla.org |accessdate=2015-05-29}}</ref>\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 44\u201348 <br /> {{nowrap|ESR 45}}\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\">All RC4 cipher suites are disabled by default.</ref><ref name=\"RC4Fx\">{{cite news |url=https://venturebeat.com/2015/09/01/google-microsoft-and-mozilla-will-drop-rc4-support-in-chrome-edge-ie-and-firefox-next-year/ |title=Google, Microsoft, and Mozilla will drop RC4 encryption in Chrome, Edge, IE, and Firefox next year |work=VentureBeat |date=2015-09-01 |accessdate=2015-09-05 |url-status=live |archiveurl=https://web.archive.org/web/20150905214154/http://venturebeat.com/2015/09/01/google-microsoft-and-mozilla-will-drop-rc4-support-in-chrome-edge-ie-and-firefox-next-year/ |archivedate=2015-09-05}}</ref><ref name=\"RC4Fx-2\">{{cite web |url=https://groups.google.com/forum/#!searchin/mozilla.dev.platform/rc4/mozilla.dev.platform/JIEFcrGhqSM/CIjtpwxoLQAJ |title=Intent to ship: RC4 disabled by default in Firefox 44 |accessdate=2015-10-18 |url-status=live |archiveurl=http://arquivo.pt/wayback/20110122130054/https://groups.google.com/forum/#!searchin/mozilla.dev.platform/rc4/mozilla.dev.platform/JIEFcrGhqSM/CIjtpwxoLQAJ |archivedate=2011-01-22}}</ref><ref name=\"RC4Fx-3\">{{cite web |url=https://www.fxsitecompat.com/en-US/docs/2015/rc4-is-now-allowed-only-on-whitelisted-sites/ |title=RC4 is now allowed only on whitelisted sites (Reverted) |accessdate=2015-11-02}}</ref><ref name=\"Fx44\">{{cite web |url=https://www.mozilla.org/en-US/firefox/44.0/releasenotes/ |title=Firefox \u2014 Notes (44.0) \u2014 Mozilla |publisher=mozilla.org |date=2016-01-26 |accessdate=2016-03-09 |url-status=live |archiveurl=https://web.archive.org/web/20160304025010/https://www.mozilla.org/en-US/firefox/44.0/releasenotes/ |archivedate=2016-03-04}}</ref>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 49\u201359<br />{{nowrap|ESR 52}}\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Partial|Disabled by default}}<br /><small>(draft version)</small>&#8203;<ref>{{cite web |url=https://bugzilla.mozilla.org/show_bug.cgi?id=1342082 |title=Bug 1342082 \u2013 Disable TLS 1.3 for FF52 Release |accessdate=2017-03-29}}</ref>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon; padding-left:1px; padding-right:1px;\" | 60\u201362<br />{{nowrap|ESR 60}}\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Partial|Yes}}<br /><small>(draft version)</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon; padding-left:1px; padding-right:1px;\" | 63\u201374<br />{{nowrap|ESR 68.0\u201368.6}}\n| rowspan=\"2\" {{Yes|No}}\n| rowspan=\"2\" {{Yes|No}}\n| rowspan=\"2\" {{Yes}}\n| rowspan=\"2\" {{Yes}}\n| rowspan=\"2\" {{Yes}}\n| rowspan=\"2\" {{Yes}}\n| rowspan=\"2\" {{Yes}}\n| rowspan=\"2\" {{Yes}}\n| rowspan=\"2\" {{Yes}}\n| rowspan=\"2\" {{Yes|Not affected}}\n| rowspan=\"2\" {{Yes|Mitigated}}\n| rowspan=\"2\" {{Yes|Not affected}}\n| rowspan=\"2\" {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>\n| rowspan=\"2\" {{Yes|Not affected}}\n| rowspan=\"2\" {{Yes|Mitigated}}\n| rowspan=\"2\" {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| style=\"background:khaki; padding-left:1px; padding-right:1px;\" | ESR 68.7\n| style=\"background:#a0e75a;\" | 75\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n! rowspan=\"12\" | [[Opera (web browser)|Opera Browser]]<br /><small>([[Opera Mobile]])</small><br /><small>([[Presto (layout engine)|Pre-Presto and Presto]])</small><br />{{refn |group=\"n\" |name=\"note-e\" |[[Opera (web browser)|Opera]] 10 added support for TLS 1.2 as of [[Presto (layout engine)|Presto]] 2.2. Previous support was for TLS 1.0 and 1.1. TLS 1.1 and 1.2 are disabled by default (except for version 9<ref name=\"Opera 9.0 for Windows Changelog\">{{cite web|url=http://www.opera.com/docs/changelogs/windows/900/|title=Opera 9.0 for Windows Changelog|publisher=|url-status=live|archiveurl=https://archive.today/20120910/http://www.opera.com/docs/changelogs/windows/900/|archivedate=2012-09-10|df=}}</ref> that enabled TLS 1.1 by default).}}\n| colspan=\"2\" style=\"background:salmon;\" | 1\u20132\n| rowspan=\"12\" | <s>[[Microsoft Windows|Windows]]</s><br /><s>[[macOS]]</s><br /><s>[[Linux]]</s><br /><s>[[Android (OS)|Android]]</s><br /><s>[[S60 (software platform)|Symbian S60]]</s><br /><s>[[Maemo]]</s><br /><s>[[Windows Mobile]]</s>\n| colspan=\"16\" | No SSL/TLS support<ref name=\"Opera2\">{{cite web|url=http://www.opera.com/docs/history/presto/#o2|title=Opera 2 series|accessdate=2014-09-20|url-status=live|archiveurl=https://web.archive.org/web/20141023073434/http://www.opera.com/docs/history/presto/#o2|archivedate=2014-10-23|df=}}</ref>\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 3\n| {{No|Yes}}<ref name=\"Opera3\">{{cite web|url=http://www.opera.com/docs/history/presto/#o3|title=Opera 3 series|accessdate=2014-09-20|url-status=live|archiveurl=https://web.archive.org/web/20141023073434/http://www.opera.com/docs/history/presto/#o3|archivedate=2014-10-23|df=}}</ref>\n| No\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| colspan=\"3\" | No SSL 3.0 or TLS support\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Unknown}}\n| {{N/A}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 4\n| {{No|Yes}}\n| {{No|Yes}}<ref name=\"Opera4\">{{cite web|url=http://www.opera.com/docs/history/presto/#o4|title=Opera 4 series|accessdate=2014-09-20|url-status=live|archiveurl=https://web.archive.org/web/20141023073434/http://www.opera.com/docs/history/presto/#o4|archivedate=2014-10-23|df=}}</ref>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Unknown}}\n| {{Unknown}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 5\n| {{No|Enabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}<ref name=\"Opera5\">{{cite web|url=http://www.opera.com/docs/changelogs/windows/500-512/|title=Changelog for Opera 5.x for Windows|accessdate=2014-06-19|url-status=live|archiveurl=https://web.archive.org/web/20141019005943/http://www.opera.com/docs/changelogs/windows/500-512/|archivedate=2014-10-19|df=}}</ref>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Unknown}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 6\u20137\n| {{No|Enabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}<ref name=\"Opera5\"/>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}<ref name=\"SHA-2\"/>\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Unknown}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 8\n| {{No|Enabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}<br /><ref name=\"opera.com\">{{cite web|url=http://www.opera.com/docs/changelogs/windows/800b2/|title=Changelog for Opera [8] Beta 2 for Windows|accessdate=2014-06-19|url-status=live|archiveurl=https://web.archive.org/web/20051123055608/http://opera.com/docs/changelogs/windows/800b2/|archivedate=2005-11-23|df=}}</ref>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Unknown}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 9\n| {{Yes|Disabled by default}}<br /><ref>{{cite web |url=http://www.opera.com/docs/specs/opera9/ |title=Web Specifications Supported in Opera 9 |accessdate=2014-06-19 |url-status=live |archiveurl= https://web.archive.org/web/20141026185804/http://www.opera.com/docs/specs/opera9/ |archivedate=2014-10-26}}</ref>\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{Partial|since v9.5<br /><small>(only desktop)</small>}}\n| {{Yes}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Unknown}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 10\u201311.52\n| {{Yes|No}}<ref name=\"Opera10b\">{{cite web |url=http://www.opera.com/docs/changelogs/windows/1000b1/ |title=Opera: Opera 10 beta for Windows changelog |accessdate=2014-06-19 |url-status=dead |archiveurl= https://web.archive.org/web/20141023083043/http://www.opera.com/docs/changelogs/windows/1000b1/ |archivedate=2014-10-23}}</ref>\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}\n| {{Partial|Disabled by default}}<br /><ref name=\"Opera10b\"/>\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Unknown}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 11.60\u201311.64\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}\n| {{Partial|Disabled by default}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{No}}\n| {{Yes|Mitigated<br /><ref name=\"my.opera.com\">{{cite web|title=About Opera 11.60 and new problems with some secure servers|url=http://my.opera.com/securitygroup/blog/2011/12/11/opera-11-60-and-new-problems-with-some-secure-servers|date=2011-12-11|archive-url=https://web.archive.org/web/20120118122036/http://my.opera.com/securitygroup/blog/2011/12/11/opera-11-60-and-new-problems-with-some-secure-servers|archivedate=2012-01-18}}</ref>}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Unknown}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 12\u201312.14\n| {{Yes|No}}\n| {{Yes|Disabled by default<br /><ref group=\"n\" name=\"note-Opera12-POODLE\"/>}}\n| {{Yes}}\n| {{Partial|Disabled by default}}\n| {{Partial|Disabled by default}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{No}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated<br />{{refn |group=\"n\" |name=\"note-Opera12-POODLE\"|SSL 3.0 is disabled by default remotely since October 15, 2014<ref name=\"OperaPOODLE\">{{cite web|url=http://blogs.opera.com/security/2014/10/security-changes-opera-25-poodle-attacks/|title=Security changes in Opera 25; the poodle attacks|date=2014-10-15|accessdate=2014-10-28|url-status=live|archiveurl=https://web.archive.org/web/20141020091840/http://blogs.opera.com/security/2014/10/security-changes-opera-25-poodle-attacks/|archivedate=2014-10-20|df=}}</ref>}}}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Yes|Mitigated&#8203;<ref name=\"OperaLogjam\">{{cite web|url=http://blogs.opera.com/security/2015/06/unjam-the-logjam/|title=Unjam the logjam|date=2015-06-09|accessdate=2015-06-11|url-status=live|archiveurl=https://web.archive.org/web/20150614005330/http://blogs.opera.com/security/2015/06/unjam-the-logjam/|archivedate=2015-06-14|df=}}</ref>}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 12.15\u201312.17\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}\n| {{Partial|Disabled by default}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{No}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Partial|Partly mitigated<br /><ref name=\"ReferenceA\">{{cite web|url=http://www.opera.com/ja/security/advisory/1046|title=Advisory: RC4 encryption protocol is vulnerable to certain brute force attacks|date=2013-04-04|accessdate=2014-11-14|url-status=live|archiveurl=https://web.archive.org/web/20150315052403/http://www.opera.com/ja/security/advisory/1046|archivedate=2015-03-15|df=}}</ref><ref name=\"On the Precariousness of RC4\">{{cite web|url=http://my.opera.com/securitygroup/blog/2013/03/20/on-the-precariousness-of-rc4|title=On the Precariousness of RC4|date=2013-03-20|archiveurl=https://web.archive.org/web/20131112235240/http://my.opera.com/securitygroup/blog/2013/03/20/on-the-precariousness-of-rc4|archivedate=2013-11-12|accessdate=2014-11-17}}</ref>}}\n| {{Unknown}}\n| {{Yes|Mitigated&#8203;<ref name=\"OperaLogjam\"/>}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 12.18\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}<ref name=\"opera1218\">{{Cite web|url=http://www.opera.com/blogs/security/2016/02/opera-12-and-opera-mail-security-update/|title=Opera 12 and Opera Mail security update|date=2016-02-16|accessdate=2016-02-17|url-status=live|archiveurl=https://web.archive.org/web/20160216143015/http://www.opera.com/blogs/security/2016/02/opera-12-and-opera-mail-security-update/|archivedate=2016-02-16|df=}}</ref>\n| {{Yes}}<ref name=\"opera1218\"/>\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Yes}}<ref name=\"opera1218\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"opera1218\"/>\n| {{Yes|Mitigated&#8203;<ref name=\"opera1218\"/>}}\n| {{Yes|Mitigated&#8203;<ref name=\"OperaLogjam\"/>}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n! rowspan=\"12\" | [[Opera (web browser)|Opera Browser]]<br /><small>([[Opera Mobile]])</small><br /><small>([[Webkit]] and [[Blink (layout engine)|Blink]])</small><br />{{refn |group=\"n\" |name=\"note-f\" |TLS support of Opera 14 and above is same as that of Chrome, because Opera has migrated to [[Chromium (web browser)|Chromium]] backend (Opera 14 for Android is based on Chromium 26 with [[WebKit]],<ref name=\"dev.opera.com\">{{cite web|url=https://dev.opera.com/blog/opera-14-for-android-is-out/|title=Dev.Opera \u2014 Opera 14 for Android Is Out!|date=2013-05-21|accessdate=2014-09-23|url-status=live|archiveurl=https://web.archive.org/web/20150130172538/https://dev.opera.com/blog/opera-14-for-android-is-out/|archivedate=2015-01-30|df=}}</ref> and Opera 15 and above are based on Chromium 28 and above with [[Blink (layout engine)|Blink]]<ref name=\"ReferenceB\">{{cite web|url=https://dev.opera.com/blog/introducing-opera-15-for-desktop-and-a-fast-release-cycle/|title=Dev.Opera \u2014 Introducing Opera 15 for Computers, and a Fast Release Cycle|date=2013-07-02|accessdate=2014-09-23|url-status=live|archiveurl=https://web.archive.org/web/20140902081954/https://dev.opera.com/blog/introducing-opera-15-for-desktop-and-a-fast-release-cycle/|archivedate=2014-09-02|df=}}</ref>).}}\n| colspan=\"2\" style=\"background:salmon;\" | 14\u201316\n| rowspan=\"12\" | [[Microsoft Windows|Windows&nbsp;<small>(7+)</small>]]<br /> [[macOS|macOS&nbsp;<small>(10.10+)</small>]]<br />[[Linux]]<br />[[Android (OS)|Android&nbsp;<small>(4.4+)</small>]]\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}<ref name=\"opera16\">same as Chrome 26\u201329</ref>\n| {{No}}<ref name=\"opera16\"/>\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 17\u201319\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}<ref name=\"opera17\">same as Chrome 30 and later</ref>\n| {{Yes}}<ref name=\"opera17\"/>\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 20\u201324\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Partial|Partly mitigated<br />{{refn |group=\"n\" |name=\"note-Opera20-POODLE\"|TLS_FALLBACK_SCSV is implemented.<ref name=\"opera20\">same as Chrome 33 and later</ref>}}}}\n| {{Partial|Lowest priority<br /><ref name=\"opera20\"/>}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 25, 26\n| {{Yes|No}}\n| {{No|Enabled by default<br />{{refn| group=\"n\" | name=\"Opera25-SSL3.0\"|SSL 3.0 is enabled by default, with some mitigations against known vulnerabilities such as BEAST and POODLE implemented.<ref name=\"OperaPOODLE\"/>}}}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated<br />{{refn|group=\"n\"|name=note-opera25|In addition to TLS_FALLBACK_SCSV, \"anti-POODLE record splitting\" is implemented.<ref name=\"OperaPOODLE\"/>}}}}\n| {{Partial|Lowest priority}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 27\n| {{Yes|No}}\n| {{Yes|Disabled by default}}<br /><ref name=\"chromium693963003\" />\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated<br />{{refn|group=\"n\"|name=note-opera27|In addition to TLS_FALLBACK_SCSV and \"anti-POODLE record splitting\", SSL 3.0 itself is disabled by default.<ref name=\"chromium693963003\" />}}}}\n| {{Partial|Lowest priority}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Yes|Yes{{refn|group=\"n\"|name=\"operaflags\"|configure the minimum version of enabling protocols via opera://flags<ref name=\"chromium693963003\" /> (the maximum version can be configured with command-line option)}}<br /><small>(only desktop)</small>}}\n|-\n| colspan=\"2\" ! style=\"background:salmon;\" | 28, 29\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Lowest priority}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"operaflags\"/><br /><small>(only desktop)</small>}}\n|-\n| colspan=\"2\" ! style=\"background:salmon;\" | 30\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\"/><ref name=\"chromeissue375342\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated&#8203;<ref name=\"OperaLogjam\"/>}}\n| {{Yes|Yes<ref group=\"n\" name=\"operaflags\"/><br /><small>(only desktop)</small>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 31\u201334\n| {{Yes|No}}\n| {{Yes|No}}<ref name=\"chromeissue436391\"/>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\"/><ref name=\"chromeissue375342\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 35, 36\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\"/><ref name=\"RC4-Chrome48-2\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 37\u201340\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\"/><ref name=\"RC4-Chrome48-2\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 41\u201356\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Partial|Disabled by default}}<br /><small>(draft version)</small>\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\"/><ref name=\"RC4-Chrome48-2\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| style=\"background:salmon;\" | 57\u201366\n| style=\"background:#a0e75a;\" | 67\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\"/><ref name=\"RC4-Chrome48-2\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n! rowspan=\"16\" | [[Internet Explorer|Microsoft Internet Explorer]]<br />{{refn |group=\"n\" |name=\"note-d\" |IE uses the TLS implementation of the Microsoft Windows operating system provided by the [[SChannel]] security support provider. TLS 1.1 and 1.2 are disabled by default until IE11.<ref name=\"Microsoft\">{{cite web |author=Microsoft |url=https://msdn.microsoft.com/en-us/library/aa380123.aspx |title=Secure Channel |date=2012-09-05 |accessdate=2012-10-18 |url-status=live |archiveurl=https://web.archive.org/web/20120829025314/http://msdn.microsoft.com/en-us/library/aa380123.aspx |archivedate=2012-08-29}}</ref><ref name=\"msdn.microsoft.com\">{{cite web |author=Microsoft |url=https://msdn.microsoft.com/en-us/library/dd208005.aspx |title=MS-TLSP Appendix A |date=2009-02-27 |accessdate=2009-03-19 |url-status=live |archiveurl=https://web.archive.org/web/20130927055954/http://msdn.microsoft.com/en-us/library/dd208005.aspx |archivedate=2013-09-27}}</ref>}}\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 1|1.x]]\n| style=\"background:salmon;\" ! rowspan=\"3\"| Windows [[Windows 3.1x|3.1]], [[Windows 95|95]], [[Windows NT|NT]],<ref group=\"n\" name=\"note-oldieonnt\">[[Windows NT 3.1]] supports IE 1\u20132, [[Windows NT 3.5]] supports IE 1\u20133, [[Windows NT 3.51]] and [[Windows NT 4.0]] supports IE 1\u20136</ref><ref group=\"n\" name=\"note-k\"/><br />Mac OS [[System 7|7]], [[Mac OS 8|8]]\n| colspan=\"16\" | No SSL/TLS support\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 2|2]]\n| {{No|Yes}}\n| No\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| colspan=\"3\" | No SSL 3.0 or TLS support\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{N/A}}\n|-\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 3|3]]\n| {{No|Yes}}\n| {{No|Yes}}<ref name=\"IESSL3TLS1\">{{cite web|title=What browsers only support SSLv2?|url=https://stackoverflow.com/q/881563|accessdate=2014-06-19 |df=}}</ref>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 4|4]], [[Internet Explorer 5|5]], [[Internet Explorer 6|6]]\n| style=\"background:salmon;\" | Windows [[Windows 3.1x|3.1]], [[Windows 95|95]], [[Windows 98|98]], [[Windows NT|NT]], [[Windows 2000|2000]]<ref group=\"n\" name=\"note-oldieonnt\"/><ref group=\"n\" name=\"note-k\"/><br />Mac OS [[System 7|7.1]], [[Mac OS 8|8]], [[Mac OS X|X]],<br />[[Solaris (operating system)|Solaris]], [[HP-UX]]\n| {{No|Enabled by default}}\n| {{No|Enabled by default}}\n| {{Partial|Disabled by default}}<br /><ref name=\"IESSL3TLS1\"/>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 6|6]]\n| rowspan=\"2\" style=\"background:salmon;\" | [[Windows XP]]<ref group=\"n\" name=\"note-k\"/>\n| {{No|Enabled by default}}\n| {{No|Enabled by default}}\n| {{Partial|Disabled by default}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}<br /><ref group=\"n\" name=\"Win2003SHA2\">MS13-095 or MS14-049 for 2003 and XP-64 or SP3 for XP (32-bit)</ref><ref name=WinXP2003SHA2>{{cite web|url=https://blogs.technet.com/b/pki/archive/2010/09/30/sha2-and-windows.aspx|title=SHA2 and Windows \u2013 Windows PKI blog \u2013 Site Home \u2013 TechNet Blogs|date=2010-09-30|accessdate=2014-07-29|url-status=live|archiveurl=https://web.archive.org/web/20140716230537/http://blogs.technet.com/b/pki/archive/2010/09/30/sha2-and-windows.aspx|archivedate=2014-07-16|df=}}</ref>\n| {{No}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 7|7]], [[Internet Explorer 8|8]]\n| {{Yes|Disabled by default}}<br /><ref name=\"IE7HTTPS\">{{cite web |url=https://msdn.microsoft.com/en-us/library/bb250503.aspx |title=HTTPS Security Improvements in Internet Explorer 7 |accessdate=2013-10-29 |url-status=live |archiveurl=https://web.archive.org/web/20131010205312/http://msdn.microsoft.com/en-us/library/bb250503.aspx |archivedate=2013-10-10}}</ref>\n| {{No|Enabled by default}}\n| {{Yes}}<ref name=\"IE7HTTPS\"/>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}<br /><ref group=\"n\" name=\"Win2003SHA2\"/><ref name=WinXP2003SHA2/>\n| {{No}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 6|6]]\n| rowspan=\"2\" style=\"background:salmon;\" | [[Windows Server 2003|Server 2003]]{{refn |group=\"n\" |name=\"note-k\" |Windows XP as well as Server 2003 and older support only weak ciphers like 3DES and RC4 out of the box.<ref name=\"TLS Cipher Suites\">{{cite web|url=https://msdn.microsoft.com/en-us/library/windows/desktop/aa380512.aspx|title=TLS Cipher Suites|publisher=Microsoft|url-status=live|archiveurl=https://web.archive.org/web/20170313125201/https://msdn.microsoft.com/en-us/library/windows/desktop/aa380512.aspx|archivedate=2017-03-13|df=}}</ref> The weak ciphers of these SChannel version are not only used for IE, but also for other Microsoft products running on this OS, like Office or Windows Update. Only Windows Server 2003 can get a manually update to support AES ciphers by KB948963<ref name=\"Archived copy\">{{cite web |url=https://support.microsoft.com/kb/948963 |title=Archived copy |accessdate=2017-07-19 |url-status=live |archiveurl=https://web.archive.org/web/20150311105145/http://support.microsoft.com/kb/948963 |archivedate=2015-03-11}}</ref>}}\n| {{No|Enabled by default}}\n| {{No|Enabled by default}}\n| {{Partial|Disabled by default}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}<br /><ref group=\"n\" name=\"Win2003SHA2\"/><ref name=WinXP2003SHA2/>\n| {{No}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Mitigated}}<br /><ref name=MS15-031>{{cite web|url=https://technet.microsoft.com/en-us/security/MS15-031|title=Vulnerability in Schannel Could Allow Security Feature Bypass (3046049)|date=2015-03-10|accessdate=2015-03-11|url-status=live|archiveurl=https://web.archive.org/web/20170313130837/https://technet.microsoft.com/en-us/security/MS15-031|archivedate=2017-03-13|df=}}</ref>\n| {{Yes|Mitigated}}<br /><ref name=MS15-055>{{cite web|url=https://technet.microsoft.com/en-us/security/MS15-055|title=Vulnerability in Schannel Could Allow Information Disclosure (3061518)|date=2015-05-12|accessdate=2015-05-22|url-status=live|archiveurl=https://web.archive.org/web/20161008035505/https://technet.microsoft.com/en-us/security/MS15-055|archivedate=2016-10-08|df=}}</ref>\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 7|7]], [[Internet Explorer 8|8]]\n| {{Yes|Disabled by default}}<br /><ref name=\"IE7HTTPS\"/>\n| {{No|Enabled by default}}\n| {{Yes}}<ref name=\"IE7HTTPS\"/>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}<br /><ref group=\"n\" name=\"Win2003SHA2\"/><ref name=WinXP2003SHA2/>\n| {{No}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Mitigated}}<br /><ref name=MS15-031/>\n| {{Yes|Mitigated}}<br /><ref name=MS15-055/>\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 7|7]], [[Internet Explorer 8|8]], [[Internet Explorer 9|9]]\n| style=\"background:salmon;\" | [[Windows Vista]]\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}<ref name=\"ECC\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Mitigated}}<br /><ref name=MS15-031/>\n| {{Yes|Mitigated}}<br /><ref name=MS15-055/>\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | {{nowrap|[[Internet Explorer 7|7]], [[Internet Explorer 8|8]], [[Internet Explorer 9|9]]}}\n| style=\"background:salmon;\" | [[Windows Server 2008|Server 2008]]\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|<small>Disabled by default&#8203;<ref name=\"2008R1TLS1.2\">{{cite web |url=https://support.microsoft.com/kb/4019276 |title=Update to add support for TLS 1.1 and TLS 1.2 in Windows Server 2008 SP2, Windows Embedded POSReady 2009, and Windows Embedded Standard 2009 |accessdate=2017-07-19}}</ref><br />(KB4019276)</small>}}\n| {{Partial|<small>Disabled by default&#8203;<ref name=\"2008R1TLS1.2\"/><br />(KB4019276)</small>}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}<ref name=\"ECC\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Mitigated}}<br /><ref name=MS15-031/>\n| {{Yes|Mitigated}}<br /><ref name=MS15-055/>\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" rowspan=\"1\" style=\"background:salmon;\" | [[Internet Explorer 8|8]], [[Internet Explorer 9|9]], [[Internet Explorer 10|10]]\n| style=\"background:salmon;\" | [[Windows 7]]<br/>[[Windows Server 2008 R2|Server 2008 R2]]\n| rowspan=\"1\" ! {{Yes|Disabled by default}}\n| rowspan=\"1\" ! {{No|Enabled by default}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Partial|Disabled by default}}<br /><ref name=\"Win7TLS1.1\">{{cite web |url=https://blogs.msdn.com/b/ieinternals/archive/2009/06/19/windows-7-support-for-tls-and-ciphers.aspx |title=Windows 7 adds support for TLSv1.1 and TLSv1.2 \u2013 IEInternals \u2013 Site Home \u2013 MSDN Blogs |accessdate=2013-10-29 |url-status=live |archiveurl=https://web.archive.org/web/20131226222853/http://blogs.msdn.com/b/ieinternals/archive/2009/06/19/windows-7-support-for-tls-and-ciphers.aspx |archivedate=2013-12-26}}</ref>\n| rowspan=\"1\" ! {{Partial|Disabled by default}}<br /><ref name=\"Win7TLS1.1\"/>\n| rowspan=\"1\" ! {{No}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes|Mitigated}}\n| rowspan=\"1\" ! {{Yes|Not affected}}\n| rowspan=\"1\" ! {{No|Vulnerable}}\n| rowspan=\"1\" ! {{Partial|Lowest priority<br /><ref name=\"20141111msblog\">{{cite web | url=https://blogs.microsoft.com/cybertrust/2014/11/11/hundreds-of-millions-of-microsoft-customers-now-benefit-from-best-in-class-encryption/ | title=Hundreds of Millions of Microsoft Customers Now Benefit from Best-in-Class Encryption | publisher=Microsoft Security | date=2014-11-11 | accessdate=2014-11-14 | author=Thomlinson, Matt | url-status=live | archiveurl=https://web.archive.org/web/20141114143813/http://blogs.microsoft.com/cybertrust/2014/11/11/hundreds-of-millions-of-microsoft-customers-now-benefit-from-best-in-class-encryption/ | archivedate=2014-11-14}}</ref>{{refn |group=\"n\" |name=\"RC4fallbackWin7\"|RC4 can be disabled except as a fallback (Only when no cipher suites with other than RC4 is available, cipher suites with RC4 will be used as a fallback.)<ref name=win7-8rc4>[https://support.microsoft.com/kb/2868725/ Microsoft security advisory: Update for disabling RC4] {{webarchive|url=https://web.archive.org/web/20150311053342/http://support.microsoft.com/kb/2868725 |date=2015-03-11}}</ref>}}}}\n| rowspan=\"1\" ! {{Yes|Mitigated}}<br /><ref name=MS15-031/>\n| rowspan=\"1\" ! {{Yes|Mitigated}}<br /><ref name=MS15-055/>\n| rowspan=\"1\" ! {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" rowspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 10|10]]\n| style=\"background:salmon;\" | [[Windows 8]]\n| rowspan=\"2\" ! {{Yes|Disabled by default}}\n| rowspan=\"2\" ! {{No|Enabled by default}}\n| rowspan=\"2\" ! {{Yes}}\n| rowspan=\"2\" ! {{Partial|Disabled by default}}<br /><ref name=\"Win7TLS1.1\"/>\n| rowspan=\"2\" ! {{Partial|Disabled by default}}<br /><ref name=\"Win7TLS1.1\"/>\n| rowspan=\"2\" ! {{No}}\n| rowspan=\"2\" ! {{Yes}}\n| rowspan=\"2\" ! {{Yes}}\n| rowspan=\"2\" ! {{Yes}}\n| rowspan=\"2\" ! {{Yes|Mitigated}}\n| rowspan=\"2\" ! {{Yes|Not affected}}\n| rowspan=\"2\" ! {{No|Vulnerable}}\n| rowspan=\"2\" ! {{Partial|Lowest priority<br /><ref name=\"20141111msblog\"/><ref group=\"n\" name=\"RC4fallbackWin7\"/>}}\n| rowspan=\"2\" ! {{Yes|Mitigated}}<br /><ref name=MS15-031/>\n| rowspan=\"2\" ! {{Yes|Mitigated}}<br /><ref name=MS15-055/>\n| rowspan=\"2\" ! {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| style=\"background:khaki;\" | [[Windows Server 2012|Server 2012]]\n|-\n| colspan=\"2\" rowspan=\"1\" style=\"background:salmon;\" | [[Internet Explorer 11|11]]\n| style=\"background:salmon;\" | [[Windows 7]]<br/>[[Windows Server 2008 R2|Server 2008 R2]]\n| rowspan=\"1\" ! {{Yes|Disabled by default}}\n| rowspan=\"1\" ! {{Yes|Disabled by default}}<br /><ref group=\"n\" name=\"ie11_ssl3\"/>\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}<ref name=\"IE11_TLS_1.1_1.2\">{{cite web |author=Microsoft |url=https://blogs.msdn.com/b/ieinternals/archive/2013/09/24/internet-explorer-11-changelist-change-log.aspx |title=IE11 Changes |date=2013-09-24 |accessdate=2013-11-01 |url-status=live |archiveurl=https://web.archive.org/web/20131030114356/http://blogs.msdn.com/b/ieinternals/archive/2013/09/24/internet-explorer-11-changelist-change-log.aspx |archivedate=2013-10-30}}</ref>\n| rowspan=\"1\" ! {{Yes}}<ref name=\"IE11_TLS_1.1_1.2\"/>\n| rowspan=\"1\" ! {{No}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes|Mitigated}}\n| rowspan=\"1\" ! {{Yes|Not affected}}\n| rowspan=\"1\" ! {{Yes|Mitigated<br />{{refn |group=\"n\" |name=\"ie11_ssl3\" |Fallback to SSL 3.0 is sites blocked by default in Internet Explorer 11 for Protected Mode.<ref>{{cite web|url=https://blogs.msdn.com/b/ie/archive/2015/02/10/february-2015-security-updates-for-internet-explorer.aspx|title=February 2015 security updates for Internet Explorer|date=2015-02-11|accessdate=2015-02-11|url-status=live|archiveurl=https://web.archive.org/web/20150211031724/http://blogs.msdn.com/b/ie/archive/2015/02/10/february-2015-security-updates-for-internet-explorer.aspx|archivedate=2015-02-11|df=}}</ref><ref name=\"support.microsoft.com\">{{cite web|url=https://support.microsoft.com/kb/3038778|title=Update turns on the setting to disable SSL 3.0 fallback for protected mode sites by default in Internet Explorer 11|accessdate=2015-02-11|url-status=live|archiveurl=https://web.archive.org/web/20150214082207/http://support.microsoft.com/kb/3038778|archivedate=2015-02-14|df=}}</ref> SSL 3.0 is disabled by default in Internet Explorer 11 since April 2015.<ref name=\"technet.microsoft.com\">{{cite web|url=https://technet.microsoft.com/en-us/security/3009008|title=Vulnerability in SSL 3.0 Could Allow Information Disclosure|date=2015-04-14|accessdate=2015-04-14|url-status=live|archiveurl=https://web.archive.org/web/20161008035547/https://technet.microsoft.com/en-us/security/3009008|archivedate=2016-10-08|df=}}</ref>}}}}\n| rowspan=\"1\" ! {{Yes|Disabled by default}}&#8203;<ref>{{cite web |author=Microsoft Edge Team |url=https://blogs.windows.com/msedgedev/2016/08/09/rc4-now-deprecated/ |title=RC4 is now disabled in Microsoft Edge and Internet Explorer 11 |publisher=Microsoft |date=2016-08-09 |url-status=live |archiveurl= https://web.archive.org/web/20160821091621/https://blogs.windows.com/msedgedev/2016/08/09/rc4-now-deprecated/ |archivedate=2016-08-21}}</ref>\n| rowspan=\"1\" ! {{Yes|Mitigated}}<br /><ref name=MS15-031/>\n| rowspan=\"1\" ! {{Yes|Mitigated}}<br /><ref name=MS15-055/>\n| rowspan=\"1\" ! {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| rowspan=\"2\" colspan=\"2\" style=\"background:khaki;\" | [[Internet Explorer 11|11]]<ref>{{cite web|url=https://support.microsoft.com/en-us/help/4492872/update-for-internet-explorer-april-16-2019|title=Internet Explorer 11 for Windows Server 2012 and Windows Embedded 8 Standard|date=2019-04-16|website=Microsoft Support}}</ref>\n| style=\"background:khaki;\" | [[Windows 8.1]]\n| rowspan=\"2\" ! {{Yes|Disabled by default}}\n| rowspan=\"2\" ! {{Yes|Disabled by default}}<br /><ref group=\"n\" name=\"ie11_ssl3\"/>\n| rowspan=\"2\" ! {{Yes}}\n| rowspan=\"2\" ! {{Yes}}<ref name=\"IE11_TLS_1.1_1.2\"/>\n| rowspan=\"2\" ! {{Yes}}<ref name=\"IE11_TLS_1.1_1.2\"/>\n| rowspan=\"2\" ! {{No}}\n| rowspan=\"2\" ! {{Yes}}\n| rowspan=\"2\" ! {{Yes}}\n| rowspan=\"2\" ! {{Yes}}\n| rowspan=\"2\" ! {{Yes|Mitigated}}\n| rowspan=\"2\" ! {{Yes|Not affected}}\n| rowspan=\"2\" ! {{Yes|Mitigated<br /><ref group=\"n\" name=\"ie11_ssl3\"/>}}\n| rowspan=\"2\" ! {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| rowspan=\"2\" ! {{Yes|Mitigated}}<br /><ref name=MS15-031/>\n| rowspan=\"2\" ! {{Yes|Mitigated}}<br /><ref name=MS15-055/>\n| rowspan=\"2\" ! {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| style=\"background:khaki;\" | [[Windows Server 2012|Server 2012]]<br />[[Windows Server 2012 R2|Server 2012 R2]]\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n\n! rowspan=\"11\" | [[Microsoft Edge]]<br />(12\u201318)<br /><small>[[EdgeHTML|(EdgeHTML based)]]<br />Client only</small><br /><br />[[Internet Explorer 11]]<small><br />Client<br />and<br />Server (SAC)<br /><ref group=\"n\" name=\"note-d\"/></small>\n| style=\"background:salmon;\" | 11\n| style=\"background:salmon;\" | 12\u201313\n| style=\"background:salmon;\" | [[Windows 10]]<br/>v1507\u2013v1511\n| {{Yes|Disabled by default}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| style=\"background:salmon;\" | 11\n| style=\"background:salmon;\" | 14\u201318\n| style=\"background:salmon;\" | [[Windows 10]]<br/>v1607\u2013v1803\n| {{Yes|No}}<ref name=\"Windows10_v1607schannel\" />\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 11\n| style=\"background:salmon;\" | [[Windows Server 2016|Windows Server (SAC)]]<br />v1709\u2013v1803\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| style=\"background:#FFCC99;\" | 11\n| style=\"background:#FFCC99;\" | 18\n| style=\"background:#FFCC99;\" | [[Windows 10]]<br />v1809\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:#FFCC99;\" | 11\n| style=\"background:#FFCC99;\" | [[Windows Server 2019|Windows Server (SAC)]]<br />v1809\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| style=\"background:khaki;\" | 11\n| style=\"background:khaki;\" | 18\n| style=\"background:khaki;\" | [[Windows 10]]<br />v1903\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:khaki;\" | 11\n| style=\"background:khaki;\" | [[Windows Server 2019|Windows Server (SAC)]]<br />v1903\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| style=\"background:khaki;\" | 11\n| style=\"background:#a0e75a;\" | 18\n| style=\"background:#a0e75a;\" | [[Windows 10]]<br />v1909\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{table-experimental|Disabled by default<br /><small>(experimental)</small>}}<ref>https://docs.microsoft.com/en-us/windows/whats-new/whats-new-windows-10-version-1909#security</ref>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:khaki;\" | 11\n| style=\"background:#a0e75a;\" | [[Windows Server 2019|Windows Server (SAC)]]<br />v1909\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Unknown}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n|-\n| style=\"background:khaki;\" | 11\n| {{table-experimental|[[Microsoft Edge|Edge]]}}\n| {{table-experimental|[[Windows 10]]<br />v20H1}}\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Unknown}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:khaki;\" | 11\n| {{table-experimental|[[Windows Server 2019|Windows Server (SAC)]]<br />v20H1}}\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Unknown}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n! rowspan=\"5\" | [[Internet Explorer 11]]<br /><small>Client<br />(LTSB/C)<br />and<br />Server<br />(LTSB/C)</small><br /><ref group=\"n\" name=\"note-d\"/>\n| colspan=\"2\" style=\"background:khaki;\" | 11\n| style=\"background:khaki;\" | [[Windows 10]]<br />LTSB 2015 (v1507)\n| {{Yes|Disabled by default}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:khaki;\" | 11\n| style=\"background:khaki;\" | [[Windows 10]]<br />LTSB 2016 (v1607)\n| {{Yes|No}}<ref name=\"Windows10_v1607schannel\" />\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:khaki;\" | 11\n| style=\"background:khaki;\" |[[Windows Server 2016]]<br />v1607 (LTSB)\n| {{Yes|No}}<ref name=\"Windows10_v1607schannel\" />\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:khaki;\" | 11\n| style=\"background:khaki;\" | [[Windows 10]]<br />LTSC 2019 (v1809)\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:khaki;\" | 11\n| style=\"background:khaki;\" | [[Windows Server 2019]]<br />v1809 (LTSC)\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n! rowspan=\"3\" | [[Internet Explorer Mobile|Microsoft Internet Explorer Mobile]]<br /><ref group=\"n\" name=\"note-d\"/>\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer Mobile|7, 9]]\n| style=\"background:salmon;\" | [[Windows Phone 7|Windows Phone 7, 7.5, 7.8]]\n| {{Yes|Disabled by default}}<br /><ref name=\"IE7HTTPS\"/>\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No|style=padding-left:1px; padding-right:1px;}}<br /><small>{{citation needed|date=January 2015}}</small>\n| {{No|style=padding-left:1px; padding-right:1px;}}<br /><small>{{citation needed|date=January 2015}}</small>\n| {{No}}\n| {{No|style=padding-left:1px; padding-right:1px;}}<br /><small>{{citation needed|date=January 2015}}</small>\n| {{Yes}}\n| {{Yes}}<ref name=\"ECC2\"/>\n| {{unknown}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Partial|Only with 3rd party tools{{refn|group=\"n\"|name=\"viaregistry\"|Could be disabled via registry editing but need 3rd Party tools to do this.<ref name=\"XDA\">{{cite web |url= http://forum.xda-developers.com/windows-phone-8/development/poodle-ssl-vulnerability-secure-windows-t2906203 |title=POODLE SSL vulnerability \u2013 secure your Windo\u2026 \u2013 Windows Phone 8 Development and Hacking |work=XDA Developers |url-status=live |archiveurl= https://web.archive.org/web/20160923053812/http://forum.xda-developers.com/windows-phone-8/development/poodle-ssl-vulnerability-secure-windows-t2906203 |archivedate=2016-09-23}}</ref>}}}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer Mobile|10]]\n| style=\"background:salmon;\" | [[Windows Phone 8]]\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}<br /><ref name=\"IEMobile10\">{{cite web|url=https://social.msdn.microsoft.com/Forums/windowsapps/en-US/2ddee177-5086-4453-987b-d02b6a7ec62d/what-tls-version-is-used-in-windows-phone-8-for-secure-http-connections?forum=wpdevelop|title=What TLS version is used in Windows Phone 8 for secure HTTP connections?|publisher=Microsoft|accessdate=2014-11-07|url-status=live|archiveurl=https://web.archive.org/web/20160304063257/https://social.msdn.microsoft.com/Forums/windowsapps/en-US/2ddee177-5086-4453-987b-d02b6a7ec62d/what-tls-version-is-used-in-windows-phone-8-for-secure-http-connections?forum=wpdevelop|archivedate=2016-03-04|df=}}</ref>\n| {{Partial|Disabled by default}}<br /><ref name=\"IEMobile10\"/>\n| {{No}}\n| {{No|style=padding-left:1px; padding-right:1px;}}<br /><small>{{citation needed|date=January 2015}}</small>\n| {{Yes}}\n| {{Yes}}<ref name=\"ssllabs.com\">{{cite web|url=https://www.ssllabs.com/ssltest/viewClient.html?name=IE%20Mobile&version=10&platform=Win%20Phone%208.0|title=Qualys SSL Labs \u2013 Projects / User Agent Capabilities: Unknown|publisher=|url-status=live|archiveurl=https://web.archive.org/web/20170301141459/https://www.ssllabs.com/ssltest/viewClient.html?name=IE%20Mobile&version=10&platform=Win%20Phone%208.0|archivedate=2017-03-01|df=}}</ref>\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Partial|Only with 3rd party tools<ref group=\"n\" name=\"viaregistry\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\"| [[Internet Explorer Mobile|11]]\n| style=\"background:salmon;\" | [[Windows Phone 8.1]]\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}<ref name=\"IEMobile11\">{{cite web |url=https://technet.microsoft.com/en-us/library/dn756283.aspx |title=Platform Security |publisher=Microsoft |date=2014-06-25 |accessdate=2014-11-07 |url-status=live |archiveurl= https://web.archive.org/web/20170313125118/https://technet.microsoft.com/en-us/library/dn756283.aspx |archivedate=2017-03-13}}</ref>\n| {{Yes}}<ref name=\"IEMobile11\"/>\n| {{No}}\n| {{No|style=padding-left:1px; padding-right:1px;}}<br /><small>{{citation needed|date=January 2015}}</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\"/><ref name=\"Win8.1RC4\">{{cite web |url=https://technet.microsoft.com/en-us/library/dn303404.aspx |title=Release Notes: Important Issues in Windows 8.1 Preview |publisher=Microsoft |date=2013-06-24 |accessdate=2014-11-04 |url-status=live |archiveurl= https://web.archive.org/web/20141104071622/http://technet.microsoft.com/en-us/library/dn303404.aspx |archivedate=2014-11-04}}</ref><ref name=\"Win8.1RC4Qualys\">{{cite web |url=https://community.qualys.com/thread/12092 |title=W8.1(IE11) vs RC4 |work=Qualys Community |accessdate=2014-11-04 |url-status=live |archiveurl= https://web.archive.org/web/20141104093736/https://community.qualys.com/thread/12092 |archivedate=2014-11-04}}</ref>}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Partial|Only with 3rd party tools<ref group=\"n\" name=\"viaregistry\"/>}}\n|-\n! rowspan=\"2\" | [[Microsoft Edge]]<br />(13\u201315)<br /><small>[[EdgeHTML|(EdgeHTML based)]]</small><br /><ref group=\"n\" name=\"Edge engine\"/>\n| colspan=\"2\" style=\"background:salmon;\" | [[Microsoft Edge|13]]\n| style=\"background:salmon;\" | [[Windows 10 Mobile]]<br />v1511\n| {{Yes|Disabled by default}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Microsoft Edge|14, 15]]\n| style=\"background:salmon;\" | [[Windows 10 Mobile]]<br />v1607\u2013v1709\n| {{Yes|No}}<ref name=\"Windows10_v1607schannel\" />\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n! rowspan=\"12\" | [[Safari (web browser)|Apple Safari]]<br />{{refn |group=\"n\" |name=\"note-g\" |Safari uses the operating system implementation on Mac OS X, Windows (XP, Vista, 7)<ref name=\"Adrian\">{{cite web|last=Adrian|first=Dimcev|title=Common browsers/libraries/servers and the associated cipher suites implemented|url=http://www.carbonwind.net/TLS_Cipher_Suites_Project/tls_ssl_cipher_suites_annex_a1_main.docx|work=TLS Cipher Suites Project|url-status=live|archiveurl=https://www.webcitation.org/6FwL0CvUM?url=http://www.carbonwind.net/TLS_Cipher_Suites_Project/tls_ssl_cipher_suites_annex_a1_main.docx|archivedate=2013-04-17|df=}}</ref> with unknown version,<ref name=\"Apple\">{{cite web|author=Apple|url=https://www.apple.com/safari/features.html|title=Features|date=2009-06-10|accessdate=2009-06-10|url-status=live|archiveurl=https://www.webcitation.org/6FwL0oLMO?url=http://www.apple.com/safari/features.html|archivedate=2013-04-17|df=}}</ref> Safari 5 is the last version available for Windows. OS X 10.8 on have SecureTransport support for TLS 1.1 and 1.2<ref name=\"curl.haxx.se\">{{cite web|url=http://curl.haxx.se/mail/lib-2012-08/0120.html|title=Curl: Patch to add TLS 1.1 and 1.2 support & replace deprecated functions in SecureTransport|publisher=|url-status=live|archiveurl=https://web.archive.org/web/20170301142904/https://curl.haxx.se/mail/lib-2012-08/0120.html|archivedate=2017-03-01|df=}}</ref> Qualys SSL report simulates Safari 5.1.9 connecting with TLS 1.0 not 1.1 or 1.2<ref name=\"Qualys SSL Report: google.co.uk\">[https://www.ssllabs.com/ssltest/analyze.html?d=google.co.uk&s=74.125.227.183 Qualys SSL Report: google.co.uk ] {{webarchive|url=https://web.archive.org/web/20170320192352/https://www.ssllabs.com/ssltest/analyze.html?d=google.co.uk&s=74.125.227.183 |date=2017-03-20}} (simulation Safari 5.1.9 TLS 1.0)</ref>}}\n| colspan=\"2\" style=\"background:salmon;\" | 1\n| style=\"background:salmon;\" | Mac OS X [[Mac OS X v10.2|10.2]], [[Mac OS X Panther|10.3]]\n| {{Yes|No<ref name=SafariSSL2>{{cite web|title=Apple Secures Mac OS X with Mavericks Release \u2013 eSecurity Planet|url=http://www.esecurityplanet.com/mac-os-security/apple-secures-mac-os-x-with-mavericks-release.html|date=2013-10-25|accessdate=2014-06-23|url-status=live|archiveurl=https://web.archive.org/web/20140708195022/http://www.esecurityplanet.com/mac-os-security/apple-secures-mac-os-x-with-mavericks-release.html|archivedate=2014-07-08|df=}}</ref>}}\n| {{No|Yes}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 2\u20135\n| style=\"background:salmon;\" | Mac OS X [[Mac OS X Tiger|10.4]], [[Mac OS X Leopard|10.5]], [[Windows XP|Win XP]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Partial|since v3.2}}\n| {{No}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 3\u20135\n| style=\"background:salmon;\" | [[Windows Vista|Vista]], [[Windows 7|Win 7]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Partial|since v3.2}}\n| {{No}}\n| {{Yes}}<ref name=\"ECC2\"/>\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 4\u20136\n| style=\"background:salmon;\" | Mac OS X [[Mac OS X Snow Leopard|10.6]], [[Mac OS X Lion|10.7]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}<ref name=\"SHA-2\"/>\n| {{Yes}}<ref name=\"ECC\"/>\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 6\n| style=\"background:salmon;\" | [[OS X Mountain Lion|OS X 10.8]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}<ref name=\"ECC\"/>\n| {{Yes|Mitigated<br />{{refn |group=\"n\" |name=\"note-i\" |In September 2013, Apple implemented [[#BEAST|BEAST]] mitigation in [[OS X 10.8]] (Mountain Lion), but it was not turned on by default resulting in Safari still being theoretically vulnerable to the BEAST attack on that platform.<ref name=\"BEAST-Still\">{{cite web|last=Ristic|first=Ivan|title=Is BEAST Still a Threat?|url=https://community.qualys.com/blogs/securitylabs/2013/09/10/is-beast-still-a-threat|work=qualys.com|url-status=live|archiveurl=https://web.archive.org/web/20141012121824/https://community.qualys.com/blogs/securitylabs/2013/09/10/is-beast-still-a-threat|archivedate=2014-10-12|df=}}</ref><ref name=\"beast-mitigations-mavericks\">{{cite web |first=Ivan |last=Risti\u0107 |url=http://blog.ivanristic.com/2013/10/apple-enabled-beast-mitigations-in-mavericks.html |title=Apple enabled BEAST mitigations in OS X 10.9 Mavericks |date=2013-10-31 |accessdate=2013-11-07 |url-status=live |archiveurl=https://web.archive.org/web/20131107045223/http://blog.ivanristic.com/2013/10/apple-enabled-beast-mitigations-in-mavericks.html |archivedate=2013-11-07}}</ref> BEAST mitigation has been enabled by default from OS X 10.8.5 updated in February 2014.<ref name=\"beast-mitigations-10.8\">{{cite web |first=Ivan |last=Risti\u0107 |url=https://community.qualys.com/thread/12496 |title=Apple finally releases patch for BEAST |date=2014-02-26 |accessdate=2014-07-01 |url-status=live |archiveurl=https://web.archive.org/web/20140714162556/https://community.qualys.com/thread/12496 |archivedate=2014-07-14}}</ref>}}}}\n| {{Yes|Not affected}}\n| {{Partial|Mitigated<br />{{refn |group=\"n\" |name=\"note-safari-poodle\" |Because Apple removed support for all CBC protocols in SSL 3.0 to mitigate POODLE,<ref>{{cite web|url=http://support.apple.com/kb/HT6531|title=About Security Update 2014-005|publisher=|url-status=live|archiveurl=https://web.archive.org/web/20141024181953/https://support.apple.com/kb/HT6531|archivedate=2014-10-24|df=}}</ref><ref name=\"support.apple.com\">{{cite web|url=http://support.apple.com/kb/HT6541|title=About the security content of iOS 8.1|publisher=|url-status=live|archiveurl=https://web.archive.org/web/20141023104948/http://support.apple.com/kb/HT6541|archivedate=2014-10-23|df=}}</ref> this leaves only RC4 which is also completely broken by the RC4 attacks in SSL 3.0.}}}}\n| {{No|Vulnerable<br /><ref group=\"n\" name=\"note-safari-poodle\"/>}}\n| {{Yes|Mitigated<br /><ref name=freak-OSX/>}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 7, 9\n| style=\"background:salmon;\" | [[OS X Mavericks|OS X 10.9]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{Yes}}<ref name=\"MavericksTLS1.2\">{{cite web|title=About the security content of OS X Mavericks v10.9|url=http://support.apple.com/kb/HT6011|accessdate=2014-06-20|url-status=live|archiveurl=https://web.archive.org/web/20140704220956/http://support.apple.com/kb/HT6011|archivedate=2014-07-04|df=}}</ref>\n| {{Yes}}<ref name=\"MavericksTLS1.2\"/>\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated<br /><ref name=\"beast-mitigations-mavericks\"/>}}\n| {{Yes|Not affected}}\n| {{Partial|Mitigated<br /><ref group=\"n\" name=\"note-safari-poodle\"/>}}\n| {{No|Vulnerable<br /><ref group=\"n\" name=\"note-safari-poodle\"/>}}\n| {{Yes|Mitigated<br /><ref name=freak-OSX/>}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 8\u201310\n| style=\"background:salmon;\" | [[OS X Yosemite|OS X 10.10]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Partial|Mitigated<br /><ref group=\"n\" name=\"note-safari-poodle\"/>}}\n| {{Partial|Lowest priority<br /><ref name=\"ssltest-safari-OSX1010\">{{cite web | url=https://www.ssllabs.com/ssltest/viewClient.html?name=Safari&version=8&platform=OS%20X%2010.10 | title=User Agent Capabilities: Safari 8 / OS X 10.10 | publisher=Qualsys SSL Labs | accessdate=2015-03-07 | url-status=live | archiveurl=https://web.archive.org/web/20150906044018/https://www.ssllabs.com/ssltest/viewClient.html?name=Safari&version=8&platform=OS%20X%2010.10 | archivedate=2015-09-06}}</ref><ref group=\"n\" name=\"note-safari-poodle\"/>}}\n| {{Yes|Mitigated<br /><ref name=freak-OSX>{{cite web | url=https://support.apple.com/en-us/HT204413 | title=About Security Update 2015-002 | accessdate=2015-03-09 | url-status=live | archiveurl=https://web.archive.org/web/20150316081731/https://support.apple.com/en-us/HT204413 | archivedate=2015-03-16}}</ref>}}\n| {{Yes|Mitigated}}<br /><ref name=logjam-OSX>{{cite web|url=https://support.apple.com/en-us/HT204942|title=About the security content of OS X Yosemite v10.10.4 and Security Update 2015-005|accessdate=2015-07-03|url-status=live|archiveurl=https://web.archive.org/web/20150702202131/https://support.apple.com/en-us/HT204942|archivedate=2015-07-02|df=}}</ref>\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\"| 9\u201311\n| style=\"background:salmon;\" | [[OS X El Capitan|OS X 10.11]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Partial|Lowest priority}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 10-12\n| style=\"background:salmon;\" | [[macOS Sierra|macOS 10.12]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| style=\"background:salmon;\" | 11, 12\n| style=\"background:#FFCC99;\" | 13\n| style=\"background:#FFCC99;\" | [[macOS High Sierra|macOS 10.13]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| style=\"background:salmon;\" | 12\n| style=\"background:khaki;\" | 13\n| style=\"background:khaki;\" | [[macOS Mojave|macOS 10.14]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Partial|Yes<small> {{nowrap|(since macOS 10.14.4)}}}}<ref name=\"Pauly\">{{cite mailing list|url=https://mailarchive.ietf.org/arch/msg/tls/5QjzTilqjomSyzENtgfaAqQOhbA|title=TLS 1.3 in iOS|first=Tommy|last=Pauly|date=2019-01-29|mailing-list=tls@ietf.org}}</ref> \n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| colspan=\"2\"  style=\"background:#a0e75a;\" | 13\n| style=\"background:#a0e75a;\" | [[macOS Catalina|macOS 10.15]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n! rowspan=\"10\" | [[Safari (web browser)|Apple Safari]]<br /><small>(mobile)</small><br />{{refn |group=\"n\" |name=\"note-h\" |Mobile Safari and third-party software utilizing the system UIWebView library use the [[iOS]] operating system implementation, which supports TLS 1.2 as of iOS 5.0.<ref name=\"iOS5TLS1.2\">{{cite web|author=Apple|title=Technical Note TN2287 \u2013 iOS 5 and TLS 1.2 Interoperability Issues|date=2011-10-14|accessdate=2012-12-10|url=https://developer.apple.com/library/ios/#technotes/tn2287/_index.html|url-status=live|archiveurl=https://web.archive.org/web/20110907013839/http://developer.apple.com/library/iOS/#technotes/tn2287/_index.html|archivedate=2011-09-07|df=}}</ref><ref name=\"Liebowitz\">{{cite web|last=Liebowitz|first=Matt|title=Apple issues huge software security patches|date=2011-10-13|accessdate=2012-12-10|work=NBCNews.com|url=http://www.nbcnews.com/id/44896639|df=}}</ref><ref name=\"MWR Info Security\">{{cite web|author=MWR Info Security|title=Adventures with iOS UIWebviews|date=2012-04-16|accessdate=2012-12-10|url=http://labs.mwrinfosecurity.com/blog/2012/04/16/adventures-with-ios-uiwebviews/|url-status=live|archiveurl=https://www.webcitation.org/6FwL2M2Mc?url=http://labs.mwrinfosecurity.com/blog/2012/04/16/adventures-with-ios-uiwebviews/|archivedate=2013-04-17|df=}}, section \"HTTPS (SSL/TLS)\"</ref>}}\n| colspan=\"2\" style=\"background:salmon;\" | 3\n| style=\"background:salmon;\" | iPhone OS [[IPhone OS 1|1]], [[IPhone OS 2|2]]\n| {{Yes|No<ref>{{cite web|title=Secure Transport Reference|url=https://developer.apple.com/library/mac/documentation/security/Reference/secureTransportRef/Reference/reference.html#//apple_ref/c/tdef/SSLProtocol|accessdate=2014-06-23|url-status=live|archiveurl=https://web.archive.org/web/20140604052511/https://developer.apple.com/library/Mac/documentation/Security/Reference/secureTransportRef/Reference/reference.html#//apple_ref/c/tdef/SSLProtocol|archivedate=2014-06-04|df=}} <code>kSSLProtocol2</code> is deprecated in iOS</ref>}}\n| {{No|Yes}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 4, 5\n| style=\"background:salmon;\" | [[iPhone OS 3]], [[iOS 4]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}<ref name=\"theiphoneblog.com\">{{cite web|title=iPhone 3.0: Mobile Safari Gets Enhanced Security Certificate Visualization|website=The iPhone Blog|url=http://www.theiphoneblog.com/2009/03/31/iphone-30-mobile-safari-enhanced-security-certificate-visualization/|date=2009-03-31|archive-url=https://web.archive.org/web/20090403074546/http://www.theiphoneblog.com/2009/03/31/iphone-30-mobile-safari-enhanced-security-certificate-visualization/|archivedate=2009-04-03}}</ref>\n| {{Yes}}\n| {{Partial|since iOS 4}}<ref name=\"ECC2\"/>\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 5, 6\n| style=\"background:salmon;\" | iOS [[iOS 5|5]], [[iOS 6|6]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{Yes}}<ref name=\"iOS5TLS1.2\"/>\n| {{Yes}}<ref name=\"iOS5TLS1.2\"/>\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 7\n| style=\"background:salmon;\" | [[iOS 7]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}<ref name=\"ReferenceC\">{{cite web|url=https://www.ssllabs.com/ssltest/viewClient.html?name=Safari&version=7&platform=iOS%207.1|title=Qualys SSL Labs \u2013 Projects / User Agent Capabilities: Safari 7 / iOS 7.1|publisher=|url-status=live|archiveurl=https://web.archive.org/web/20170313130545/https://www.ssllabs.com/ssltest/viewClient.html?name=Safari&version=7&platform=iOS%207.1|archivedate=2017-03-13|df=}}</ref>\n| {{Yes|Mitigated<br /><ref name=\"beast-mitigations-ios7\">{{cite web|author=schurtertom|title=SOAP Request fails randomly on one Server but works on another on iOS7|url=https://stackoverflow.com/q/19221568 |date=2013-10-11|accessdate=2014-01-05 |df=}}</ref>}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 8\n| style=\"background:salmon;\" | [[iOS 8]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Partial|Mitigated<br /><ref group=\"n\" name=\"note-safari-poodle\"/>}}\n| {{Partial|Lowest priority<br /><ref name=\"ssltest-safari-iOS812\">{{cite web | url=https://www.ssllabs.com/ssltest/viewClient.html?name=Safari&version=8&platform=iOS%208.1.2 | title=User Agent Capabilities: Safari 8 / iOS 8.1.2 | publisher=Qualsys SSL Labs | accessdate=2015-03-07 | url-status=live | archiveurl=https://web.archive.org/web/20160304062526/https://www.ssllabs.com/ssltest/viewClient.html?name=Safari&version=8&platform=iOS%208.1.2 | archivedate=2016-03-04}}</ref><ref group=\"n\" name=\"note-safari-poodle\"/>}}\n| {{Yes|Mitigated<br /><ref name=freak-iOS82>{{cite web | url=https://support.apple.com/en-us/HT204423 | title=About the security content of iOS 8.2 | accessdate=2015-03-09 | url-status=live | archiveurl=https://web.archive.org/web/20150309201042/https://support.apple.com/en-us/HT204423 | archivedate=2015-03-09}}</ref>}}\n| {{Yes|Mitigated}}<br /><ref name=logjam-iOS84>{{cite web|url=https://support.apple.com/en-us/HT204941|title=About the security content of iOS 8.4|accessdate=2015-07-03|url-status=live|archiveurl=https://web.archive.org/web/20150703014410/https://support.apple.com/en-us/HT204941|archivedate=2015-07-03|df=}}</ref>\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 9\n| style=\"background:salmon;\" | [[iOS 9]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Partial|Lowest priority}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 10\u201311\n| style=\"background:salmon;\" | iOS [[iOS 10|10]], [[iOS 11|11]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:#FFCC99;\" | 12\n| style=\"background:#FFCC99;\" | [[iOS 12]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Partial|Yes<small> {{nowrap|(since iOS 12.2)}}}}<ref name=\"Pauly\">{{cite mailing list|url=https://mailarchive.ietf.org/arch/msg/tls/5QjzTilqjomSyzENtgfaAqQOhbA|title=TLS 1.3 in iOS|first=Tommy|last=Pauly|date=2019-01-29|mailing-list=tls@ietf.org}}</ref> \n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| rowspan=\"2\" colspan=\"2\" style=\"background:#a0e75a;\" | 13\n| style=\"background:#a0e75a;\" | [[iOS 13]]\n| rowspan=\"2\" ! {{Yes|No}}\n| rowspan=\"2\" !  {{Yes|No}}\n| rowspan=\"2\" !  {{Yes}}\n| rowspan=\"2\" !  {{Yes}}\n| rowspan=\"2\" !  {{Yes}}\n| rowspan=\"2\" !  {{Yes}}\n| rowspan=\"2\" !  {{Yes}}\n| rowspan=\"2\" !  {{Yes}}\n| rowspan=\"2\" !  {{Yes}}\n| rowspan=\"2\" !  {{Yes|Mitigated}}\n| rowspan=\"2\" !  {{Yes|Not affected}}\n| rowspan=\"2\" !  {{Yes|Not affected}}\n| rowspan=\"2\" !  {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| rowspan=\"2\" !  {{Yes|Mitigated}}\n| rowspan=\"2\" !  {{Yes|Mitigated}}\n| rowspan=\"2\" !  {{No}}\n|-\n| style=\"background:#a0e75a;\" | [[iPadOS|iPadOS 13]]\n|-\n! rowspan=\"2\" | Browser\n! colspan=\"2\" rowspan=\"2\" | Version\n! rowspan=\"2\" | Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV<br /><ref group=\"n\" name=\"note-evssl\"/>\n! SHA-2\n! ECDSA\n! BEAST<ref group=\"n\" name=\"note-BEASTmitigation\"/>\n! CRIME<ref group=\"n\" name=\"note-CRIMEmitigation\"/>\n! POODLE (SSLv3)<ref group=\"n\" name=\"note-POODLEmitigation\"/>\n! RC4<ref group=\"n\" name=\"note-RC4mitigation\"/>\n! FREAK<ref name=\"note-FREAK-1\"/><ref name=\"note-FREAK-2\"/>\n! Logjam\n! rowspan=\"2\" | Protocol selection by user\n|-\n! colspan=\"2\" | SSL protocols\n! colspan=\"4\" | TLS protocols\n! colspan=\"3\" | Certificate Support\n! colspan=\"6\" | Vulnerabilities fixed\n|-\n! rowspan=\"7\" | [[Android (OS)|Google Android OS Browser]]<br /><ref name=android-tls>{{cite web|url=https://developer.android.com/reference/javax/net/ssl/SSLSocket.html|title=SSLSocket {{!}} Android Developers|accessdate=2015-03-11|url-status=live|archiveurl=https://web.archive.org/web/20150318121117/http://developer.android.com/reference/javax/net/ssl/SSLSocket.html|archivedate=2015-03-18|df=}}</ref>\n| colspan=\"3\" style=\"background:salmon;\" | Android [[Android version history|1.0\u20134.0.4]]\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{unknown}}\n| {{Yes}}<ref name=\"SHA-2\"/>\n| {{Partial|since 3.0}}<ref name=\"ECC2\">{{cite web|title=What browsers work with Universal SSL|accessdate=2015-06-15|url=https://support.cloudflare.com/hc/en-us/articles/203041594-What-browsers-work-with-Universal-SSL|url-status=live|archiveurl=https://web.archive.org/web/20160304023941/https://support.cloudflare.com/hc/en-us/articles/203041594-What-browsers-work-with-Universal-SSL|archivedate=2016-03-04|df=}}</ref><ref name=\"ECC\"/>\n| {{unknown}}\n| {{unknown}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"3\" style=\"background:salmon;\" | Android [[Android version history|4.1\u20134.4.4]]\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}&#8203;<ref name=\"Android-SSLSocket\">{{cite web |url=http://developer.android.com/reference/javax/net/ssl/SSLSocket.html |title=SSLSocket {{!}} Android Developers |accessdate=2015-12-17 |url-status=live |archiveurl=https://web.archive.org/web/20160304202641/https://developer.android.com/reference/javax/net/ssl/SSLSocket.html |archivedate=2016-03-04}}</ref>\n| {{Partial|Disabled by default}}&#8203;<ref name=\"Android-SSLSocket\"/>\n| {{No}}\n| {{unknown}}\n| {{Yes}}\n| {{Yes}}\n| {{unknown}}\n| {{unknown}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"3\" style=\"background:salmon;\" | Android [[Android Lollipop|5.0\u20135.0.2]]\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}<ref name=\"Android-SSLSocket\"/><ref name=android-5-tls>{{cite web|url=http://developer.android.com/about/versions/android-5.0-changes.html#ssl|title=Android 5.0 Behavior Changes {{!}} Android Developers|accessdate=2015-03-11|url-status=live|archiveurl=https://web.archive.org/web/20150309000956/http://developer.android.com/about/versions/android-5.0-changes.html#ssl|archivedate=2015-03-09|df=}}</ref>\n| {{Yes}}<ref name=\"Android-SSLSocket\"/><ref name=android-5-tls/>\n| {{No}}\n| {{unknown}}\n| {{Yes}}\n| {{Yes}}\n| {{unknown}}\n| {{unknown}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"3\" style=\"background:salmon;\" | Android [[Android Lollipop|5.1\u20135.1.1]]\n| {{Yes|No}}\n| {{Partial|Disabled by default}}<br /><small>{{citation needed|date=August 2016}}</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{unknown}}\n| {{Yes}}\n| {{Yes}}\n| {{unknown}}\n| {{unknown}}\n| {{Yes|Not affected}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| colspan=\"3\" style=\"background:salmon;\" | Android [[Android Marshmallow|6.0]]\u2013[[Android Nougat|7.1.2]]\n| rowspan=\"1\" ! {{Yes|No}}\n| rowspan=\"1\" ! {{Partial|Disabled by default}}<br /><small>{{citation needed|date=August 2016}}</small>\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{No}}\n| rowspan=\"1\" ! {{unknown}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{unknown}}\n| rowspan=\"1\" ! {{unknown}}\n| rowspan=\"1\" ! {{Yes|Not affected}}\n| rowspan=\"1\" ! {{Yes|Disabled by default}}\n| rowspan=\"1\" ! {{Yes|Mitigated}}\n| rowspan=\"1\" ! {{Yes|Mitigated}}\n| rowspan=\"1\" ! {{No}}\n|-\n| colspan=\"3\" style=\"background:khaki;\" | Android [[Android Oreo|8.0]]\u2013[[Android Pie|9.0]]\n| rowspan=\"1\" ! {{Yes|No}}\n| rowspan=\"1\" ! {{Yes|No}}<br /><ref name=\"Android 8.0 Behavior Changes\">{{cite web|url=https://developer.android.com/about/versions/oreo/android-8.0-changes.html|title=Android 8.0 Behavior Changes|url-status=live|archiveurl=https://web.archive.org/web/20171201042705/https://developer.android.com/about/versions/oreo/android-8.0-changes.html|archivedate=2017-12-01|df=}}</ref>\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{No}}\n| rowspan=\"1\" ! {{unknown}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{unknown}}\n| rowspan=\"1\" ! {{unknown}}\n| rowspan=\"1\" ! {{Yes|Not affected}}\n| rowspan=\"1\" ! {{Yes|Disabled by default}}\n| rowspan=\"1\" ! {{Yes|Mitigated}}\n| rowspan=\"1\" ! {{Yes|Mitigated}}\n| rowspan=\"1\" ! {{No}}\n|-\n| colspan=\"3\" style=\"background:#a0e75a;\"| Android [[Android 10|10.0]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{unknown}}\n| {{Yes}}\n| {{Yes}}\n| {{unknown}}\n| {{unknown}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n|}\n{|class=\"wikitable\" style=\"text-align: center; font-size: smaller;\"\n|-\n|-\n! colspan=\"2\" | Color or Note\n! rowspan=\"2\" | Significance\n|-\n! Browser version\n! Platform\n|-\n| {{table-experimental|}} Browser version\n| {{table-experimental|}} Operating system\n| Future release; under development\n|-\n| style=\"background:#a0e75a;\" | Browser version\n| style=\"background:#a0e75a;\" | Operating system\n| Current latest release\n|-\n| style=\"background:khaki;\" | Browser version\n| style=\"background:khaki;\" | Operating system\n| Former release; still supported\n|-\n| style=\"background:#FFCC99;\" | Browser version\n| style=\"background:#FFCC99;\" | Operating system\n| Former release; long-term support still active, but will end in less than 12 months\n|-\n| style=\"background:salmon;\" | Browser version\n| style=\"background:salmon;\" | Operating system\n| Former release; no longer supported\n|-\n| rowspan=\"3\" style=\"background:darkgrey;\" | n/a\n| Operating system\n| Mixed / Unspecified\n|-\n| Operating system <small>(Version+)</small>\n| Minimum required operating system version (for supported versions of the browser)\n|-\n| <s>Operating system</s>\n| No longer supported for this operating system\n|}\n;Notes\n{{reflist |30em|group=\"n\"}}\n\n===Libraries===\n{{Main|Comparison of TLS implementations}}\nMost SSL and TLS programming libraries are [[free and open source software]].\n* [[OpenSSL#BoringSSL|BoringSSL]], a fork of OpenSSL for Chrome/Chromium and Android as well as other Google applications.\n* [[Botan (programming library)|Botan]], a BSD-licensed cryptographic library written in C++.\n* [[cryptlib]]: a portable open source cryptography library (includes TLS/SSL implementation)\n* [[Delphi (programming language)|Delphi]] programmers may use a library called [[Internet Direct|Indy]] which utilizes [[OpenSSL]] or alternatively ICS which supports TLS 1.3 now.\n* [[GnuTLS]]: a free implementation (LGPL licensed)\n* [[Java Secure Socket Extension]]: a [[Java (programming language)|Java]] implementation included in the [[Java Runtime Environment]] supported TLS 1.1 and 1.2 starting with Java 7.  (TLS 1.1/1.2 were initially disabled by default for client on Java 7, but were enabled in January 2017.<ref name=\"Oracle\">{{cite web |author=Oracle |url=https://bugs.openjdk.java.net/browse/JDK-7093640 |title=7093640: Enable client-side TLS 1.2 by default |accessdate=2018-08-30 }}</ref>)  Java 11 supports TLS 1.3.<ref name=\"bugs.openjdk.java.net\">{{cite web |author=Oracle |url=https://bugs.openjdk.java.net/browse/JDK-8145252 |title=JEP 332: Transport Layer Security (TLS) 1.3 |accessdate=2018-08-30 }}</ref>\n* [[LibreSSL]]: a fork of OpenSSL by OpenBSD project.\n* [[MatrixSSL]]: a dual licensed implementation\n* [[mbed TLS]] (previously PolarSSL): A tiny SSL library implementation for embedded devices that is designed for ease of use\n* [[Network Security Services]]: [[FIPS 140]] validated open source library\n* [[OpenSSL]]: a free implementation (BSD license with some extensions)\n* [[RSA BSAFE]] Micro Edition Suite: a multi-platform implementation of TLS written in [[C (programming language)|C]] using a FIPS-validated cryptographic module\n* [[RSA BSAFE]] SSL-J: a TLS library providing both a proprietary API and [[Java Secure Socket Extension|JSSE]] API, using FIPS-validated cryptographic module\n* [[Security Support Provider Interface|SChannel]]: an implementation of SSL and TLS [[Microsoft Windows]] as part of its package.\n* [[Secure Transport]]: an implementation of SSL and TLS used in [[OS X]] and [[iOS]] as part of their packages.\n* [[wolfSSL]] (previously CyaSSL): Embedded SSL/TLS Library with a strong focus on speed and size.\n\n{| class=\"wikitable\"\n|+ Library support for TLS/SSL\n|-\n! Implementation\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n\n|-\n! [[Botan (programming library)|Botan]]\n| {{Yes|No}}\n| {{yes|No}}<ref name=\"Botan 1.11.13\">{{cite web|url=http://botan.randombit.net/relnotes/1_11_13.html|title=Version 1.11.13, 2015-01-11 \u2014 Botan|date=2015-01-11|accessdate=2015-01-16|url-status=dead|archiveurl=https://web.archive.org/web/20150109154102/http://botan.randombit.net/relnotes/1_11_13.html|archivedate=2015-01-09|df=}}</ref>\n| {{yes}}\n| {{yes}}\n| {{yes}}\n|\n|-\n! [[cryptlib]]\n| {{Yes|No}}\n| {{Yes|Disabled by default at compile time}}\n| {{yes}}\n| {{yes}}\n| {{yes}}\n|\n|-\n! [[GnuTLS]]\n| {{Yes|No}}{{cref2|group=protocollibrary-table|a}}\n| {{yes|Disabled by default}}<ref name=GnuTLS-3.4.0>{{cite web|url=http://lists.gnutls.org/pipermail/gnutls-devel/2015-April/007535.html|title=[gnutls-devel] GnuTLS 3.4.0 released|date=2015-04-08|accessdate=2015-04-16|url-status=live|archiveurl=https://web.archive.org/web/20150416005543/http://lists.gnutls.org/pipermail/gnutls-devel/2015-April/007535.html|archivedate=2015-04-16|df=}}</ref>\n| {{yes}}\n| {{yes}}\n| {{yes}}\n| {{partial|yes}}<br /><small>(draft version)<ref name=GnuTLS-3.6.3>{{cite web|url=https://lists.gnupg.org/pipermail/gnutls-devel/2018-July/008584.html|title=[gnutls-devel] gnutls 3.6.3 |date=2018-07-16|accessdate=2018-09-16}}</ref></small>\n|-\n! [[Java Secure Socket Extension]]\n| {{Yes|No}}{{cref2|group=protocollibrary-table|a}}\n| {{Yes|Disabled by default}}<ref name=\"oracle.com\">{{cite web|url=http://www.oracle.com/technetwork/java/javase/8u31-relnotes-2389094.html|title=Java\u2122 SE Development Kit 8, Update 31 Release Notes|accessdate=2015-01-22|url-status=live|archiveurl=https://web.archive.org/web/20150121105601/http://www.oracle.com/technetwork/java/javase/8u31-relnotes-2389094.html|archivedate=2015-01-21|df=}}</ref>\n| {{yes}}\n| {{yes}}\n| {{yes}}\n| {{yes}}\n|-\n! [[LibreSSL]]\n| {{Yes|No}}<ref name=OpenBSD5.6>{{cite web|url=https://marc.info/?l=openbsd-announce&m=141486254309079&w=2|title=OpenBSD 5.6 Released|date=2014-11-01|accessdate=2015-01-20}}</ref>\n| {{yes|No}}<ref name=libressl-2.3>{{cite web| title = LibreSSL 2.3.0 Released| url = https://marc.info/?l=openbsd-announce&m=144304330731220| date = 2015-09-23| accessdate = 2015-09-24}}</ref>\n| {{yes}}\n| {{yes}}\n| {{yes}}\n|\n|-\n! [[MatrixSSL]]\n| {{Yes|No}}\n| {{yes|Disabled by default at compile time}}<ref name=Matrix-POODLE>{{cite web|url=http://www.matrixssl.org/news.html|title=MatrixSSL \u2013 News|accessdate=2014-11-09|url-status=dead|archiveurl=https://web.archive.org/web/20150214105056/http://www.matrixssl.org/news.html|archivedate=2015-02-14|df=}}</ref>\n| {{yes}}\n| {{yes}}\n| {{yes}}\n| {{partial|yes}}<br /><small>(draft version)</small>\n|-\n! [[mbed TLS]] (previously PolarSSL)\n| {{Yes|No}}\n| {{Yes|Disabled by default}}<ref name=mbed-2.0>{{cite web | title = mbed TLS 2.0.0 released | url = https://tls.mbed.org/tech-updates/releases/mbedtls-2.0.0-released | date = 2015-07-10 | accessdate = 2015-07-14 | url-status=live | archiveurl = https://web.archive.org/web/20150925030547/https://tls.mbed.org/tech-updates/releases/mbedtls-2.0.0-released | archivedate = 2015-09-25}}</ref>\n| {{yes}}\n| {{yes}}\n| {{yes}}\n|\n|-\n! [[Network Security Services]]\n| {{yes|No}}{{cref2|group=protocolsupport|b}}\n| {{Yes|Disabled by default}}<ref name=NSS-3.19>{{cite web|url=https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.19_release_notes|work=Mozilla Developer Network|title=NSS 3.19 release notes|publisher=Mozilla|accessdate=2015-05-06|url-status=live|archiveurl=https://web.archive.org/web/20150605054647/https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.19_release_notes|archivedate=2015-06-05|df=}}</ref>\n| {{yes}}\n| {{yes}}<ref name=NSS-3.14>{{cite web|url=https://developer.mozilla.org/en-US/docs/NSS/NSS_3.14_release_notes|work=Mozilla Developer Network|title=NSS 3.14 release notes|publisher=Mozilla|accessdate=2012-10-27|url-status=live|archiveurl=https://web.archive.org/web/20130117130029/https://developer.mozilla.org/en-US/docs/NSS/NSS_3.14_release_notes|archivedate=2013-01-17|df=}}</ref>\n| {{yes}}<ref name=NSS-3.15.1>{{cite web|url=https://developer.mozilla.org/en-US/docs/NSS/NSS_3.15.1_release_notes|work=Mozilla Developer Network|title=NSS 3.15.1 release notes|publisher=Mozilla|accessdate=2013-08-10|url-status=live|archiveurl=https://web.archive.org/web/20130922223238/https://developer.mozilla.org/en-US/docs/NSS/NSS_3.15.1_release_notes|archivedate=2013-09-22|df=}}</ref>\n| {{yes}}<ref name=\"NSS 3.39 release notes\">{{cite web|title=NSS 3.39 release notes |url=https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.39_release_notes#Notable_Changes_in_NSS_3.39 |date=2018-08-31 |accessdate=2018-09-14}}</ref>\n|-\n! [[OpenSSL]]\n| {{Yes|No}}<ref name=\"OpenSSL 1.1.0 Series Release Notes\">{{cite web|url=https://www.openssl.org/news/openssl-1.1.0-notes.html|title=OpenSSL 1.1.0 Series Release Notes|accessdate=2016-10-02|url-status=live|archiveurl=https://web.archive.org/web/20160825171308/https://www.openssl.org/news/openssl-1.1.0-notes.html|archivedate=2016-08-25|df=}}</ref>\n| {{No|Enabled by default}}\n| {{yes}}\n| {{yes}}<ref name=openssl-1.0.1-note>{{cite web|title=Major changes between OpenSSL 1.0.0h and OpenSSL 1.0.1 [14 Mar 2012] |url=https://www.openssl.org/news/openssl-1.0.1-notes.html |date=2012-03-14 |accessdate=2015-01-20 |url-status=dead |archiveurl=https://web.archive.org/web/20150120120428/https://www.openssl.org/news/openssl-1.0.1-notes.html |archivedate=January 20, 2015}}</ref>\n| {{yes}}<ref name=openssl-1.0.1-note />\n| {{yes}}<ref name=\"OpenSSL 1.1.1 Is Released\">{{cite web|title=OpenSSL 1.1.1 Is Released |url=https://www.openssl.org/blog/blog/2018/09/11/release111/ |date=2018-09-11 |accessdate=2018-09-14}}</ref>\n|-\n! [[RSA BSAFE]] Micro Edition Suite\n| {{yes|No}}\n| {{Yes|Disabled by default}}\n| {{yes}}\n| {{yes}}\n| {{yes}}\n| {{partial|Not yet}}\n|-\n! [[RSA BSAFE]] SSL-J\n| {{yes|No}}\n| {{Yes|Disabled by default}}\n| {{yes}}\n| {{yes}}\n| {{yes}}\n| {{partial|Not yet}}\n|-\n! [[SChannel|SChannel XP / 2003]]<ref name=XP2003schannel>[https://msdn.microsoft.com/en-us/library/windows/desktop/aa380512%28v=vs.85%29.aspx TLS cipher suites in Microsoft Windows XP and 2003] {{webarchive|url=https://web.archive.org/web/20150118053924/http://msdn.microsoft.com/en-us/library/windows/desktop/aa380512(v=vs.85).aspx |date=2015-01-18}}</ref>\n| {{Partial|Disabled by default by MSIE 7}}\n| {{No|Enabled by default}}\n| {{partial|Enabled by default by MSIE 7}}\n| {{no}}\n| {{no}}\n| {{no}}\n|-\n! [[SChannel|SChannel Vista]]<ref name=Vista2008schannel>[https://msdn.microsoft.com/en-us/library/windows/desktop/ff468651%28v=vs.85%29.aspx SChannel Cipher Suites in Microsoft Windows Vista] {{webarchive|url=https://web.archive.org/web/20150112014148/http://msdn.microsoft.com/en-us/library/windows/desktop/ff468651(v=vs.85).aspx |date=2015-01-12}}</ref>\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{yes}}\n| {{no}}\n| {{no}}\n| {{no}}\n|-\n! [[SChannel|SChannel 2008]]<ref name=Vista2008schannel/>\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{yes}}\n| {{Partial|<small>Disabled by default (KB4019276)<ref name=\"2008R1TLS1.2\"/></small>}}\n| {{Partial|<small>Disabled by default (KB4019276)<ref name=\"2008R1TLS1.2\"/></small>}}\n| {{no}}\n|-\n! [[SChannel|SChannel 7 / 2008 R2]]<ref name=Windows7schannel>[https://msdn.microsoft.com/en-us/library/windows/desktop/aa374757%28v=vs.85%29.aspx TLS Cipher Suites in SChannel for Windows 7, 2008R2, 8, 2012] {{webarchive|url=https://web.archive.org/web/20150319043951/https://msdn.microsoft.com/en-us/library/windows/desktop/aa374757(v=vs.85).aspx |date=2015-03-19}}</ref>\n| {{Yes|Disabled by default}}\n| {{partial|Disabled by default in MSIE 11}}\n| {{yes}}\n| {{partial|Enabled by default by MSIE 11}}\n| {{partial|Enabled by default by MSIE 11}}\n| {{no}}\n|-\n! [[SChannel|SChannel 8 / 2012]]<ref name=Windows7schannel/>\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{yes}}\n| {{partial|Disabled by default}}\n| {{partial|Disabled by default}}\n| {{no}}\n|-\n! [[SChannel|SChannel 8.1 / 2012 R2, 10 v1507 & v1511]]<ref name=Windows7schannel/>\n| {{Yes|Disabled by default}}\n| {{partial|Disabled by default in MSIE 11}}\n| {{yes}}\n| {{yes}}\n| {{yes}}\n| {{no}}\n|-\n! [[SChannel|SChannel 10 v1607 / 2016]]<ref name=\"Windows10_v1607schannel\">{{Cite web |date=2017-03-21 |url=https://technet.microsoft.com/en-us/windows-server-docs/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server-2016 |title=TLS (Schannel SSP) changes in Windows 10 and Windows Server 2016 |publisher=Microsoft |accessdate=2017-03-29 |url-status=dead |archiveurl=https://web.archive.org/web/20170330011044/https://technet.microsoft.com/en-us/windows-server-docs/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server-2016 |archivedate=2017-03-30}}</ref>\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{yes}}\n| {{yes}}\n| {{yes}}\n| {{no}}\n|-\n! Secure Transport OS X 10.2\u201310.8 / iOS 1\u20134\n| {{No|Yes}}\n| {{No|Yes}}\n| {{yes}}\n| {{no}}\n| {{no}}\n|\n|-\n! Secure Transport OS X 10.9\u201310.10 / iOS 5\u20138\n| {{Yes|No}}{{cref2|group=protocollibrary-table|c}}\n| {{No|Yes}}\n| {{yes}}\n| {{yes}}{{cref2|group=protocollibrary-table|c}}\n| {{yes}}{{cref2|group=protocollibrary-table|c}}\n|\n|-\n! Secure Transport OS X 10.11 / iOS 9\n| {{Yes|No}}\n| {{Yes|No}}{{cref2|group=protocollibrary-table|c}}\n| {{yes}}\n| {{yes}}\n| {{yes}}\n|\n|-\n! [[Seed7]] [http://seed7.sourceforge.net/libraries/tls.htm TLS/SSL Library]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{yes}}\n| {{yes}}\n| {{yes}}\n|\n|-\n! [[wolfSSL]] (previously CyaSSL)\n| {{Yes|No}}\n| {{Yes|Disabled by default}}<ref name=wolfSSL-3.6.6>{{cite web|url=http://wolfssl.com/wolfSSL/Blog/Entries/2015/8/24_wolfSSL_3.6.6_is_Now_Available.html|title=[wolfssl] wolfSSL 3.6.6 Released|date=2015-08-20|accessdate=2015-08-25|url-status=live|archiveurl=https://web.archive.org/web/20151017033726/https://wolfssl.com/wolfSSL/Blog/Entries/2015/8/24_wolfSSL_3.6.6_is_Now_Available.html|archivedate=2015-10-17|df=}}</ref>\n| {{yes}}\n| {{yes}}\n| {{yes}}\n| {{partial|yes}}<br /><small>(draft version)</small><ref name=\"wolfSSL TLS 1.3 support\">{{cite web|url=https://github.com/wolfSSL/wolfssl/pull/661|title=[wolfssl] wolfSSL TLS1.3 support|date=2017-02-13|accessdate=2017-02-13}}</ref>\n|- class=\"sortbottom\"\n! Implementation\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n|}\n{{cnote2 begin | liststyle=lower-alpha}}\n{{cnote2 | group=protocollibrary-table | a | SSL 2.0 client hello is supported even though SSL 2.0 is not supported or is disabled because of the backward compatibilities.}}\n{{cnote2 | group=protocolsupport | b | Server-side implementation of the SSL/TLS protocol still supports processing of received v2-compatible client hello messages.<ref name=NSS-3.24>{{cite web|url=https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.24_release_notes|work=Mozilla Developer Network|title=NSS 3.24 release notes|publisher=Mozilla|accessdate=2016-06-19|url-status=live|archiveurl=https://web.archive.org/web/20160826100711/https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.24_release_notes|archivedate=2016-08-26}}</ref>}}\n{{cnote2 | group=protocollibrary-table | c | Secure Transport: SSL 2.0 was discontinued in OS X 10.8. SSL 3.0 was discontinued in OS X 10.11 and iOS 9. TLS 1.1 and 1.2 are available on iOS 5.0 and later, and OS X 10.9 and later.<ref>{{cite web|url=https://developer.apple.com/library/ios/technotes/tn2287/|work=iOS Developer Library|title=Technical Note TN2287: iOS 5 and TLS 1.2 Interoperability Issues|publisher=Apple Inc.|accessdate=2012-05-03|url-status=live|archiveurl=https://web.archive.org/web/20150403092122/https://developer.apple.com/library/ios/technotes/tn2287/|archivedate=2015-04-03|df=}}</ref>}}<ref>[https://dev.ssllabs.com/ssltest/clients.html Qualys SSL Labs \u2013 Projects / User Agent Capabilities<!-- Bot generated title -->] {{webarchive|url=https://web.archive.org/web/20150919073935/https://dev.ssllabs.com/ssltest/clients.html |date=2015-09-19}}</ref>\n{{cnote2 end}}\n\nA paper presented at the 2012 [[Association for Computing Machinery|ACM]] [[Computer security conference|conference on computer and communications security]]<ref>{{cite book|author=Georgiev, Martin and Iyengar, Subodh and Jana, Suman and Anubhai, Rishita and Boneh, Dan and Shmatikov, Vitaly|title=The most dangerous code in the world: validating SSL certificates in non-browser software. Proceedings of the 2012 ACM conference on Computer and communications security|year=2012|isbn=978-1-4503-1651-4|url=http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf|pages=38\u201349|url-status=live|archiveurl=https://web.archive.org/web/20171022194807/http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf|archivedate=2017-10-22|df=}}</ref> showed that few applications used some of these SSL libraries correctly, leading to vulnerabilities. According to the authors\n<blockquote>\"the root cause of most of these vulnerabilities is the terrible design of the APIs to the underlying SSL libraries. Instead of expressing high-level security properties of network tunnels such as confidentiality and authentication, these APIs expose low-level details of the SSL protocol to application developers. As a consequence, developers often use SSL APIs incorrectly, misinterpreting and misunderstanding their manifold parameters, options, side effects, and return values.\"</blockquote>\n\n===Other uses===\nThe [[Simple Mail Transfer Protocol]] (SMTP) can also be protected by TLS. These applications use [[public key certificate]]s to verify the identity of endpoints.\n\nTLS can also be used for tunnelling an entire network stack to create a [[virtual private network|VPN]], which is the case with [[OpenVPN]] and [[OpenConnect]]. Many vendors have by now married TLS's encryption and authentication capabilities with authorization. There has also been substantial development since the late 1990s in creating client technology outside of Web-browsers, in order to enable support for client/server applications. Compared to traditional [[IPsec]] VPN technologies, TLS has some inherent advantages in firewall and [[network address translation|NAT]] traversal that make it easier to administer for large remote-access populations.\n\nTLS is also a standard method for protecting [[Session Initiation Protocol]] (SIP) application signaling. TLS can be used for providing authentication and encryption of the SIP signalling associated with [[Voice over Internet Protocol|VoIP]] and other SIP-based applications.{{citation needed|date=December 2013}}\n\n==Security==\n\n===SSL 2.0===\nSSL 2.0 was flawed in a variety of ways:<ref>{{cite journal|title=On the Security of Today's Online Electronic Banking Systems|author1=Joris Claessens |author2=Valentin Dem |author3=Danny De Cock |author4=Bart Preneel |author5=Joos Vandewalle |journal=Computers & Security|volume=21|issue=3|year=2002|pages=253\u2013265|doi=10.1016/S0167-4048(02)00312-7}}</ref>\n* Identical cryptographic keys were used for [[message authentication]] and encryption. <!-- please explain how this affects security --> (In SSL 3.0, MAC secrets may be larger than encryption keys, so messages can remain tamper-resistant even if encryption keys are broken.<ref name=\"RFC6101\"/>)\n* SSL 2.0 had a weak MAC construction that used the MD5 hash function with a secret prefix, making it vulnerable to [[length extension attack]]s.\n* SSL 2.0 did not have any protection for the handshake, meaning a man-in-the-middle [[downgrade attack]] could go undetected.\n* SSL 2.0 used the TCP connection close to indicate the end of data. This meant that truncation attacks were possible: the attacker simply forges a TCP FIN, leaving the recipient unaware of an illegitimate end of data message (SSL 3.0 fixed this problem by having an explicit closure alert).\n* SSL 2.0 assumed a single service and a fixed domain certificate, which clashed with the standard feature of virtual hosting in Web servers. This means that most websites were practically impaired from using SSL.\n\nSSL 2.0 was disabled by default, beginning with [[Internet Explorer 7]],<ref>{{cite web|url=http://blogs.msdn.com/ie/archive/2005/10/22/483795.aspx|title=IEBlog: Upcoming HTTPS Improvements in Internet Explorer 7 Beta 2|accessdate=2007-11-25|last=Lawrence|first=Eric|date=2005-10-22|publisher=[[Microsoft Developer Network|MSDN]] Blogs|url-status=live|archiveurl=https://www.webcitation.org/6FwL2ooJz?url=http://blogs.msdn.com/b/ie/archive/2005/10/22/483795.aspx|archivedate=2013-04-17|df=}}</ref> [[Mozilla Firefox]] 2,<ref>{{cite web|url=https://bugzilla.mozilla.org/show_bug.cgi?id=236933|title=Bugzilla@Mozilla&nbsp;\u2014 Bug 236933 \u2013 Disable SSL2 and other weak ciphers|accessdate=2007-11-25|publisher=[[Mozilla Corporation]]}}</ref> [[Opera (web browser)|Opera]] 9.5,<ref>[http://www.opera.com/docs/changelogs/windows/950/ \"Opera 9.5 for Windows Changelog\"] {{webarchive|url=https://web.archive.org/web/20090626142453/http://www.opera.com/docs/changelogs/windows/950/ |date=2009-06-26}} at [[Opera.com]]: \"Disabled SSL v2 and weak ciphers.\"</ref> and [[Safari (web browser)|Safari]]. Support for SSL 2.0 (and weak [[40-bit encryption|40-bit]] and 56-bit ciphers) was removed completely from Opera as of version 10<!--9.5=disabled, v10=removed, see changelogs-->.<ref>[http://www.opera.com/docs/changelogs/windows/1000/ \"Opera 10 for Windows changelog\"] {{webarchive|url=https://web.archive.org/web/20130326080606/http://www.opera.com/docs/changelogs/windows/1000/ |date=2013-03-26}} at [[Opera.com]]: \"Removed support for SSL v2 and weak ciphers\"</ref><ref>{{cite web|url=http://my.opera.com/yngve/blog/2007/04/30/10-years-of-ssl-in-opera |title=10 years of SSL in Opera&nbsp;\u2014 Implementer's notes |accessdate=2007-11-25 |last=Pettersen |first=Yngve |date=2007-04-30 |publisher=[[Opera Software]] |url-status=dead |archiveurl=https://web.archive.org/web/20071012205124/http://my.opera.com/yngve/blog/2007/04/30/10-years-of-ssl-in-opera |archivedate=October 12, 2007}}</ref>\n\n===SSL 3.0===\nSSL 3.0 improved upon SSL 2.0 by adding SHA-1\u2013based ciphers and support for certificate authentication.\n\nFrom a security standpoint, SSL 3.0 should be considered less desirable than TLS 1.0. The SSL 3.0 cipher suites have a weaker key derivation process; half of the master key that is established is fully dependent on the MD5 hash function, which is not resistant to collisions and is, therefore, not considered secure. Under TLS 1.0, the master key that is established depends on both MD5 and SHA-1 so its derivation process is not currently considered weak. It is for this reason that SSL 3.0 implementations cannot be validated under FIPS 140-2.<ref>{{cite web|author=National Institute of Standards and Technology |title=Implementation Guidance for FIPS PUB 140-2 and the Cryptographic Module Validation Program |date=December 2010 |url=http://csrc.nist.gov/groups/STM/cmvp/documents/fips140-2/FIPS1402IG.pdf |url-status=dead |archiveurl=https://web.archive.org/web/20101106130105/http://csrc.nist.gov/groups/STM/cmvp/documents/fips140-2/FIPS1402IG.pdf |archivedate=November 6, 2010}}</ref>\n\nIn October 2014, the vulnerability in the design of SSL 3.0 was reported, which makes CBC mode of operation with SSL 3.0 vulnerable to the padding attack (see [[#POODLE attack]]).\n\n===TLS===\nTLS has a variety of security measures:\n* Protection against a downgrade of the protocol to a previous (less secure) version or a weaker cipher suite.\n* Numbering subsequent Application records with a sequence number and using this sequence number in the [[message authentication code]]s (MACs).\n* Using a message digest enhanced with a key (so only a key-holder can check the MAC). The [[HMAC]] construction used by most TLS cipher suites is specified in {{IETF RFC|2104}} (SSL 3.0 used a different hash-based MAC).\n* The message that ends the handshake (\"Finished\") sends a hash of all the exchanged handshake messages seen by both parties.\n* The [[pseudorandomness|pseudorandom]] function splits the input data in half and processes each one with a different hashing algorithm ([[MD5]] and [[SHA-1]]), then [[exclusive or|XORs]] them together to create the MAC. This provides protection even if one of these algorithms is found to be vulnerable.\n\n===Attacks against TLS/SSL===\nSignificant attacks against TLS/SSL are listed below.\n\nIn February 2015, IETF issued an informational RFC<ref>{{cite web|rfc=7457 |title=Summarizing Known Attacks on Transport Layer Security (TLS) and Datagram TLS (DTLS)|url=https://tools.ietf.org/html/rfc7457|url-status=live|archiveurl=https://web.archive.org/web/20160304201813/https://tools.ietf.org/html/rfc7457|archivedate=2016-03-04|df=}}</ref> summarizing the various known attacks against TLS/SSL.\n\n====Renegotiation attack====\nA vulnerability of the renegotiation procedure was discovered in August 2009 that can lead to plaintext injection attacks against SSL 3.0 and all current versions of TLS.<ref>{{cite web|url=http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3555|title=CVE \u2013 CVE-2009-3555|url-status=live|archiveurl=https://web.archive.org/web/20160104234608/http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3555|archivedate=2016-01-04|df=}}</ref> For example, it allows an attacker who can hijack an https connection to splice their own requests into the beginning of the conversation the client has with the web server. The attacker can't actually decrypt the client\u2013server communication, so it is different from a typical man-in-the-middle attack. A short-term fix is for web servers to stop allowing renegotiation, which typically will not require other changes unless [[client certificate]] authentication is used. To fix the vulnerability, a renegotiation indication extension was proposed for TLS. It will require the client and server to include and verify information about previous handshakes in any renegotiation handshakes.<ref>{{cite web|author=Eric Rescorla|title=Understanding the TLS Renegotiation Attack|work=Educated Guesswork|accessdate=2009-11-27|date=2009-11-05|url=http://www.educatedguesswork.org/2009/11/understanding_the_tls_renegoti.html|url-status=live|archiveurl=https://www.webcitation.org/65JSTKRCA?url=http://www.educatedguesswork.org/2009/11/understanding_the_tls_renegoti.html|archivedate=2012-02-09|df=}}</ref> This extension has become a proposed standard and has been assigned the number {{IETF RFC|5746}}. The RFC has been implemented by several libraries.<ref>{{cite web|title=SSL_CTX_set_options SECURE_RENEGOTIATION|work=OpenSSL Docs|accessdate=2010-11-18|date=2010-02-25|url=https://www.openssl.org/docs/ssl/SSL_CTX_set_options.html#SECURE_RENEGOTIATION|url-status=live|archiveurl=https://web.archive.org/web/20101126121933/http://openssl.org/docs/ssl/SSL_CTX_set_options.html#SECURE_RENEGOTIATION|archivedate=2010-11-26|df=}}</ref><ref>{{cite web|title=GnuTLS 2.10.0 released|work=GnuTLS release notes|accessdate=2011-07-24|date=2010-06-25|url=http://article.gmane.org/gmane.network.gnutls.general/2046|url-status=live|archiveurl=https://www.webcitation.org/65JSUYEDA?url=http://article.gmane.org/gmane.network.gnutls.general/2046|archivedate=2012-02-09|df=}}</ref><ref>{{cite web|title=NSS 3.12.6 release notes |work=NSS release notes |accessdate=2011-07-24 |date=2010-03-03 |url=https://developer.mozilla.org/NSS_3.12.6_release_notes |url-status=dead |archiveurl=https://web.archive.org/web/20120306184633/https://developer.mozilla.org/NSS_3.12.6_release_notes |archivedate=March 6, 2012}}</ref>\n\n===={{Anchor|Downgrade attacks}}Downgrade attacks: {{Anchor|FREAK}}FREAK attack and {{Anchor|Logjam attack|Logjam}}Logjam attack====\n{{Main|Downgrade attack|FREAK|Logjam (computer security)}}\nA protocol [[downgrade attack]] (also called a version rollback attack) tricks a web server into negotiating connections with previous versions of TLS (such as SSLv2) that have long since been abandoned as insecure.\n\nPrevious modifications to the original protocols, like '''False Start'''<ref>{{cite web|title=Transport Layer Security (TLS) False Start|url=http://tools.ietf.org/html/draft-bmoeller-tls-falsestart-00|work=Internet Engineering Task Force|publisher=IETF|accessdate=2013-07-31|author=A. Langley|author2=N. Modadugu|author3=B. Moeller|date=2010-06-02|url-status=live|archiveurl=https://web.archive.org/web/20130905215608/http://tools.ietf.org/html/draft-bmoeller-tls-falsestart-00|archivedate=2013-09-05|df=}}</ref> (adopted and enabled by Google Chrome<ref>{{cite web | first = Wolfgang | last = Gruener | title = False Start: Google Proposes Faster Web, Chrome Supports It Already | url = http://www.conceivablytech.com/3299/products/false-start-google-proposes-faster-web-chrome-supports-it-already|accessdate=2011-03-09 |archiveurl= https://web.archive.org/web/20101007061707/http://www.conceivablytech.com/3299/products/false-start-google-proposes-faster-web-chrome-supports-it-already/ |archivedate= 2010-10-07}}</ref>) or '''Snap Start''', reportedly introduced limited TLS protocol downgrade attacks<ref>{{cite web|first= Brian|last= Smith|title= Limited rollback attacks in False Start and Snap Start|url= http://www.ietf.org/mail-archive/web/tls/current/msg06933.html|accessdate= 2011-03-09|url-status=live|archiveurl= https://web.archive.org/web/20110504014418/http://www.ietf.org/mail-archive/web/tls/current/msg06933.html|archivedate= 2011-05-04}}</ref> or allowed modifications to the cipher suite list sent by the client to the server. In doing so, an attacker might succeed in influencing the cipher suite selection in an attempt to downgrade the cipher suite negotiated to use either a weaker symmetric encryption algorithm or a weaker key exchange.<ref>{{cite web|first=Adrian|last=Dimcev|title=False Start|url=http://www.carbonwind.net/blog/post/Random-SSLTLS-101-False-Start.aspx|work=Random SSL/TLS 101|accessdate=2011-03-09|url-status=live|archiveurl=https://web.archive.org/web/20110504060256/http://www.carbonwind.net/blog/post/Random-SSLTLS-101-False-Start.aspx|archivedate=2011-05-04|df=}}</ref> A paper presented at an [[Association for Computing Machinery|ACM]] [[Computer security conference|conference on computer and communications security]] in 2012 demonstrated that the False Start extension was at risk: in certain circumstances it could allow an attacker to recover the encryption keys offline and to access the encrypted data.<ref>{{cite book|author1=Mavrogiannopoulos, Nikos|author2=Vercautern, Frederik|author3=Velichkov, Vesselin|author4=Preneel, Bart|title=A cross-protocol attack on the TLS protocol. Proceedings of the 2012 ACM conference on Computer and communications security|year=2012|isbn=978-1-4503-1651-4|url=https://www.cosic.esat.kuleuven.be/publications/article-2216.pdf|pages=62\u201372|url-status=live|archiveurl=https://web.archive.org/web/20150706104327/https://www.cosic.esat.kuleuven.be/publications/article-2216.pdf|archivedate=2015-07-06|df=}}</ref>\n\nEncryption downgrade attacks can force servers and clients to negotiate a connection using cryptographically weak keys. In 2014, a [[man-in-the-middle]] attack called FREAK was discovered affecting the [[OpenSSL]] stack, the default [[Android (operating system)|Android]] web browser, and some [[Safari (web browser)|Safari]] browsers.<ref>{{cite web|title=SMACK: State Machine AttaCKs|url=https://www.smacktls.com|url-status=live|archiveurl=https://web.archive.org/web/20150312074827/https://www.smacktls.com/|archivedate=2015-03-12|df=}}</ref> The attack involved tricking servers into negotiating a TLS connection using cryptographically weak 512 bit encryption keys.\n\nLogjam is a [[security exploit]] discovered in May 2015 that exploits the option of using legacy [[Arms Export Control Act|\"export-grade\"]] 512-bit [[Diffie\u2013Hellman key exchange|Diffie\u2013Hellman]] groups dating back to the 1990s.<ref>{{cite web|url=https://arstechnica.com/security/2015/05/https-crippling-attack-threatens-tens-of-thousands-of-web-and-mail-servers/|title=HTTPS-crippling attack threatens tens of thousands of Web and mail servers|first=Dan|last=Goodin|work=Ars Technica|date=2015-05-20|url-status=live|archiveurl=https://web.archive.org/web/20170519130937/https://arstechnica.com/security/2015/05/https-crippling-attack-threatens-tens-of-thousands-of-web-and-mail-servers/|archivedate=2017-05-19|df=}}</ref> It forces susceptible servers to downgrade to cryptographically weak 512-bit Diffie\u2013Hellman groups. An attacker can then deduce the keys the client and server determine using the [[Diffie\u2013Hellman key exchange]].\n\n====Cross-protocol attacks: DROWN====\n{{Main|DROWN attack}}\nThe [[DROWN attack]] is an exploit that attacks servers supporting contemporary SSL/TLS protocol suites by exploiting their support for the obsolete, insecure, SSLv2 protocol to leverage an attack on connections using up-to-date protocols that would otherwise be secure.<ref>{{Cite web\n |url         = https://www.theregister.co.uk/2016/03/01/drown_tls_protocol_flaw/\n |title       = One-third of all HTTPS websites open to DROWN attack\n |last        = Leyden\n |first       = John\n |date        = 1 March 2016\n |website     = The Register\n |access-date = 2016-03-02\n |url-status     = live\n |archiveurl  = https://web.archive.org/web/20160301215536/http://www.theregister.co.uk/2016/03/01/drown_tls_protocol_flaw/\n |archivedate = 1 March 2016\n}}</ref><ref name=ars201603>{{Cite web\n |url         = https://arstechnica.com/security/2016/03/more-than-13-million-https-websites-imperiled-by-new-decryption-attack/\n |title       = More than 11 million HTTPS websites imperiled by new decryption attack\n |website     = Ars Technica\n |access-date = 2016-03-02\n |url-status     = live\n |archiveurl  = https://web.archive.org/web/20160301191108/http://arstechnica.com/security/2016/03/more-than-13-million-https-websites-imperiled-by-new-decryption-attack/\n |archivedate = 2016-03-01\n}}</ref> DROWN exploits a vulnerability in the protocols used and the configuration of the server, rather than any specific implementation error. Full details of DROWN were announced in March 2016, together with a patch for the exploit. At that time, more than 81,000 of the top 1 million most popular websites were among the TLS protected websites that were vulnerable to the DROWN attack.<ref name=ars201603/>\n\n===={{Anchor|BEAST}}BEAST attack====\nOn September 23, 2011 researchers Thai Duong and Juliano Rizzo demonstrated a proof of concept called '''BEAST''' ('''Browser Exploit Against SSL/TLS''')<ref name=DuongRizzo>{{cite web|url=https://bug665814.bugzilla.mozilla.org/attachment.cgi?id=540839|title=Here Come The \u2295 Ninjas|date=2011-05-13|author1=Thai Duong|author2=Juliano Rizzo|lastauthoramp=yes|url-status=live|archiveurl=https://web.archive.org/web/20140603102506/https://bug665814.bugzilla.mozilla.org/attachment.cgi?id=540839|archivedate=2014-06-03|df=}}</ref> using a [[Java applet]] to violate [[same origin policy]] constraints, for a long-known [[cipher block chaining]] (CBC) vulnerability in TLS 1.0:<ref name=DanGoodin>{{cite web|url=https://www.theregister.co.uk/2011/09/19/beast_exploits_paypal_ssl/|title=Hackers break SSL encryption used by millions of sites|date=2011-09-19|author=Dan Goodin|url-status=live|archiveurl=https://www.webcitation.org/65JSSbOus?url=http://www.theregister.co.uk/2011/09/19/beast_exploits_paypal_ssl/|archivedate=2012-02-09|df=}}</ref><ref name=combinator>{{cite web|url=http://news.ycombinator.com/item?id=3015498|title=Y Combinator comments on the issue|date=2011-09-20|url-status=live|archiveurl=https://www.webcitation.org/6FwL5WZ8b?url=https://news.ycombinator.com/item?id=3015498|archivedate=2013-04-17|df=}}</ref> an attacker observing 2 consecutive ciphertext blocks C0, C1 can test if the plaintext block P1 is equal to x by choosing the next plaintext block P2 = x <math>\\oplus</math> C0 <math>\\oplus</math> C1; as per CBC operation, C2 = E(C1 <math>\\oplus</math> P2) = E(C1 <math>\\oplus</math> x <math>\\oplus</math> C0 <math>\\oplus</math> C1) = E(C0 <math>\\oplus</math> x), which will be equal to C1 if x = P1. Practical [[Exploit (computer security)|exploits]] had not been previously demonstrated for this [[Vulnerability (computing)|vulnerability]], which was originally discovered by [[Phillip Rogaway]]<ref>{{cite web|url=http://www.openssl.org/~bodo/tls-cbc.txt|archiveurl=https://web.archive.org/web/20120630143111/http://www.openssl.org/~bodo/tls-cbc.txt|archivedate=2012-06-30|title=Security of CBC Ciphersuites in SSL/TLS: Problems and Countermeasures|date=2004-05-20}}</ref> in 2002. The vulnerability of the attack had been fixed with TLS 1.1 in 2006, but TLS 1.1 had not seen wide adoption prior to this attack demonstration.\n\n[[RC4]] as a stream cipher is immune to BEAST attack. Therefore, RC4 was widely used as a way to mitigate BEAST attack on the server side. However, in 2013, researchers found more weaknesses in RC4. Thereafter enabling RC4 on server side was no longer recommended.<ref>{{cite web | url=https://community.qualys.com/blogs/securitylabs/2013/09/10/is-beast-still-a-threat | title=Is BEAST Still a Threat? | date=Sep 10, 2013 | accessdate=8 October 2014 | author=Ristic, Ivan | url-status=live | archiveurl=https://web.archive.org/web/20141012121824/https://community.qualys.com/blogs/securitylabs/2013/09/10/is-beast-still-a-threat | archivedate=12 October 2014}}</ref>\n\nChrome and Firefox themselves are not vulnerable to BEAST attack,<ref name=ChromeBEAST/><ref name=\"FirefoxBEAST\"/> however, Mozilla updated their [[Network Security Services|NSS]] libraries to mitigate BEAST-like [[Attack (computing)|attacks]]. NSS is used by [[Mozilla Firefox]] and [[Google Chrome]] to implement SSL. Some [[web server]]s that have a broken implementation of the SSL specification may stop working as a result.<ref>{{cite web|url=https://bugzilla.mozilla.org/show_bug.cgi?id=665814|title=(CVE-2011-3389) Rizzo/Duong chosen plaintext attack (BEAST) on SSL/TLS 1.0 (facilitated by websockets -76) |date=2011-09-30|author=Brian Smith}}</ref>\n\n[[Microsoft]] released Security Bulletin MS12-006 on January 10, 2012, which fixed the BEAST vulnerability by changing the way that the Windows Secure Channel ([[SChannel]]) component transmits encrypted network packets from the server end.<ref>{{cite web|url=https://technet.microsoft.com/library/security/ms12-006|title=Vulnerability in SSL/TLS Could Allow Information Disclosure (2643584)|date=2012-01-10|url-status=live|archiveurl=https://web.archive.org/web/20140815234322/https://technet.microsoft.com/library/security/ms12-006|archivedate=2014-08-15|df=}}</ref> Users of Internet Explorer (prior to version 11) that run on older versions of Windows ([[Windows 7]], [[Windows 8]] and [[Windows Server 2008|Windows Server 2008 R2]]) can restrict use of TLS to 1.1 or higher.\n\n[[Apple Inc.|Apple]] fixed BEAST vulnerability by implementing 1/n-1 split and turning it on by default in [[OS X Mavericks]], released on October 22, 2013.<ref>{{cite web | url=https://community.qualys.com/blogs/securitylabs/2013/10/31/apple-enabled-beast-mitigations-in-os-x-109-mavericks | title=Apple Enabled BEAST Mitigations in OS X 10.9 Mavericks | date=Oct 31, 2013 | accessdate=8 October 2014 | author=Ristic, Ivan | url-status=live | archiveurl=https://web.archive.org/web/20141012122536/https://community.qualys.com/blogs/securitylabs/2013/10/31/apple-enabled-beast-mitigations-in-os-x-109-mavericks | archivedate=12 October 2014}}</ref>\n\n===={{Anchor|CRIME attack|BREACH attack|CRIME|BREACH}} CRIME and BREACH attacks====<!-- This Anchor tag serves to provide a permanent target for incoming section links. Please do not move it out of the section heading, even though it disrupts edit summary generation (you can manually fix the edit summary before saving your changes). Please do not modify it, even if you modify the section title. It is always best to anchor an old section header that has been changed so that links to it won't be broken. See [[Template:Anchor]] for details. (This text: [[Template:Anchor comment]]) -->\n{{Main|CRIME|BREACH}}\nThe authors of the BEAST attack are also the creators of the later [[CRIME]] attack, which can allow an attacker to recover the content of web cookies when [[data compression]] is used along with TLS.<ref>{{cite web|url=https://arstechnica.com/security/2012/09/crime-hijacks-https-sessions/|title=Crack in Internet's foundation of trust allows HTTPS session hijacking|website=Ars Technica|author=Dan Goodin|date=2012-09-13|accessdate=2013-07-31|url-status=live|archiveurl=https://web.archive.org/web/20130801104610/http://arstechnica.com/security/2012/09/crime-hijacks-https-sessions/|archivedate=2013-08-01}}</ref><ref>{{cite web|url=http://threatpost.com/en_us/blogs/crime-attack-uses-compression-ratio-tls-requests-side-channel-hijack-secure-sessions-091312 |title=CRIME Attack Uses Compression Ratio of TLS Requests as Side Channel to Hijack Secure Sessions |publisher=ThreatPost |date=September 13, 2012 |author=Dennis Fisher |accessdate=2012-09-13 |url-status=dead |archiveurl=https://web.archive.org/web/20120915224635/http://threatpost.com/en_us/blogs/crime-attack-uses-compression-ratio-tls-requests-side-channel-hijack-secure-sessions-091312 |archivedate=September 15, 2012}}</ref> When used to recover the content of secret [[authentication cookie]]s, it allows an attacker to perform [[session hijacking]] on an authenticated web session.\n\nWhile the CRIME attack was presented as a general attack that could work effectively against a large number of protocols, including but not limited to TLS, and application-layer protocols such as [[SPDY]] or [[HTTP]], only exploits against TLS and SPDY were demonstrated and largely mitigated in browsers and servers. The CRIME exploit against [[HTTP compression]] has not been mitigated at all, even though the authors of CRIME have warned that this vulnerability might be even more widespread than SPDY and TLS compression combined. In 2013 a new instance of the CRIME attack against HTTP compression, dubbed [[BREACH]], was announced. Based on the CRIME attack a BREACH attack can extract login tokens, email addresses or other sensitive information from TLS encrypted web traffic in as little as 30 seconds (depending on the number of bytes to be extracted), provided the attacker tricks the victim into visiting a malicious web link or is able to inject content into valid pages the user is visiting (ex: a wireless network under the control of the attacker).<ref name=Gooin20130801>{{cite web|last=Goodin|first=Dan|title=Gone in 30 seconds: New attack plucks secrets from HTTPS-protected pages|url=https://arstechnica.com/security/2013/08/gone-in-30-seconds-new-attack-plucks-secrets-from-https-protected-pages/|work=Ars Technica|publisher=Cond\u00e9 Nast|accessdate=2 August 2013|date=1 August 2013|url-status=live|archiveurl=https://web.archive.org/web/20130803181144/http://arstechnica.com/security/2013/08/gone-in-30-seconds-new-attack-plucks-secrets-from-https-protected-pages/|archivedate=3 August 2013|df=}}</ref> All versions of TLS and SSL are at risk from BREACH regardless of the encryption algorithm or cipher used.<ref>{{cite web|last=Leyden|first=John|title=Step into the BREACH: New attack developed to read encrypted web data|url=https://www.theregister.co.uk/2013/08/02/breach_crypto_attack/|work=The Register|accessdate=2 August 2013|date=2 August 2013|url-status=live|archiveurl=https://web.archive.org/web/20130805233414/http://www.theregister.co.uk/2013/08/02/breach_crypto_attack/|archivedate=5 August 2013|df=}}</ref> Unlike previous instances of CRIME, which can be successfully defended against by turning off TLS compression or SPDY header compression, BREACH exploits HTTP compression which cannot realistically be turned off, as virtually all web servers rely upon it to improve data transmission speeds for users.<ref name=Gooin20130801/> This is a known limitation of TLS as it is susceptible to [[chosen-plaintext attack]] against the application-layer data it was meant to protect.\n\n====Timing attacks on padding====\nEarlier TLS versions were vulnerable against the [[padding oracle attack]] discovered in 2002. A novel variant, called the [[Lucky Thirteen attack]], was published in 2013.\n\nSome experts<ref name=\"best-practices\"/> also recommended avoiding [[Triple DES|Triple-DES]] CBC. Since the last supported ciphers developed to support any program using [[Windows XP]]'s SSL/TLS library like Internet Explorer on Windows XP are [[RC4]] and Triple-DES, and since RC4 is now deprecated (see discussion of [[#RC4|RC4 attacks]]), this makes it difficult to support any version of SSL for any program using this library on XP.\n\nA fix was released as the Encrypt-then-MAC extension to the TLS specification, released as {{IETF RFC|7366}}.<ref>{{cite web|url=http://tools.ietf.org/html/rfc7366|title=Encrypt-then-MAC for Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)|date=September 2014|author=P. Gutmann|url-status=live|archiveurl=https://web.archive.org/web/20150512214100/https://tools.ietf.org/html/rfc7366|archivedate=2015-05-12|df=}}</ref> The Lucky Thirteen attack can be mitigated in TLS 1.2 by using only AES_GCM ciphers; AES_CBC remains vulnerable.{{citation needed|date=December 2016}}\n\n===={{Anchor|POODLE}}POODLE attack====\n{{Main|POODLE}}\nOn October 14, 2014, Google researchers published a vulnerability in the design of SSL 3.0, which makes [[CBC mode of operation]] with SSL 3.0 vulnerable to a [[padding oracle attack|padding attack]] ([https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566 CVE-2014-3566]). They named this attack '''POODLE''' ('''Padding Oracle On Downgraded Legacy Encryption'''). On average, attackers only need to make 256 SSL 3.0 requests to reveal one byte of encrypted messages.<ref name=\"poodle_pdf\">{{cite web|url=https://www.openssl.org/~bodo/ssl-poodle.pdf|title=This POODLE Bites: Exploiting The SSL 3.0 Fallback|author1=Bodo M\u00f6ller, Thai Duong|author2=Krzysztof Kotowicz|lastauthoramp=yes|accessdate=2014-10-15|url-status=live|archiveurl=https://web.archive.org/web/20141014224443/https://www.openssl.org/~bodo/ssl-poodle.pdf|archivedate=2014-10-14|df=}}</ref>\n\nAlthough this vulnerability only exists in SSL 3.0 and most clients and servers support TLS 1.0 and above, all major browsers voluntarily downgrade to SSL 3.0 if the handshakes with newer versions of TLS fail unless they provide the option for a user or administrator to disable SSL 3.0 and the user or administrator does so{{citation needed|date=February 2015}}. Therefore, the man-in-the-middle can first conduct a [[version rollback attack]] and then exploit this vulnerability.<ref name=\"poodle_pdf\" />\n\nIn general, graceful security degradation for the sake of interoperability is difficult to carry out in a way that cannot be exploited. This is challenging especially in domains where fragmentation is high.<ref>{{cite web | url=http://www.hbarel.com/analysis/eng/poodle-flaw-and-iot | title=Poodle flaw and IoT | author=Hagai Bar-El | accessdate=15 October 2014 | url-status=live | archiveurl=https://web.archive.org/web/20150316030953/https://www.hbarel.com/analysis/eng/poodle-flaw-and-iot | archivedate=16 March 2015}}</ref>\n\nOn December 8, 2014, a variant of POODLE was announced that impacts TLS implementations that do not properly enforce padding byte requirements.<ref name=\"poodleagain\">{{cite web|url=https://www.imperialviolet.org/2014/12/08/poodleagain.html|title=The POODLE bites again|date=December 8, 2014|author=Langley, Adam|accessdate=2014-12-08|url-status=live|archiveurl=https://web.archive.org/web/20141208200653/https://www.imperialviolet.org/2014/12/08/poodleagain.html|archivedate=December 8, 2014|df=}}</ref>\n\n===={{Anchor|RC4}}RC4 attacks====\n{{Main|RC4#Security}}\nDespite the existence of attacks on [[RC4]] that broke its security, cipher suites in SSL and TLS that were based on RC4 were still considered secure prior to 2013 based on the way in which they were used in SSL and TLS. In 2011, the RC4 suite was actually recommended as a work around for the [[BEAST (computer security)|BEAST]] attack.<ref>[http://serverfault.com/questions/315042/ security \u2013 Safest ciphers to use with the BEAST? (TLS 1.0 exploit) I've read that RC4 is immune \u2013 Server Fault<!-- Bot generated title -->]</ref> New forms of attack disclosed in March 2013 conclusively demonstrated the feasibility of breaking RC4 in TLS, suggesting it was not a good workaround for BEAST.<ref name=\"community.qualys\"/> An attack scenario was proposed by AlFardan, Bernstein, Paterson, Poettering and Schuldt that used newly discovered statistical biases in the RC4 key table<ref>{{cite book |contribution=Discovery and Exploitation of New Biases in RC4 |author1=Pouyan Sepehrdad |author2=Serge Vaudenay |author3=Martin Vuagnoux|title=Selected Areas in Cryptography: 17th International Workshop, SAC 2010, Waterloo, Ontario, Canada, August 12-13, 2010, Revised Selected Papers |series=Lecture Notes in Computer Science|editors=Alex Biryukov, Guang Gong, Douglas R. Stinson |year=2011 |volume=6544 |pages=74\u201391 |doi=10.1007/978-3-642-19574-7_5|isbn = 978-3-642-19573-0}}</ref> to recover parts of the plaintext with a large number of TLS encryptions.<ref>{{cite web |url=http://blog.cryptographyengineering.com/2013/03/attack-of-week-rc4-is-kind-of-broken-in.html |title=Attack of the week: RC4 is kind of broken in TLS |work=Cryptography Engineering |accessdate=March 12, 2013 |author=Green, Matthew |url-status=live |archiveurl=https://web.archive.org/web/20130314214026/http://blog.cryptographyengineering.com/2013/03/attack-of-week-rc4-is-kind-of-broken-in.html |archivedate=March 14, 2013}}</ref><ref>{{cite web |title=On the Security of RC4 in TLS |url=http://www.isg.rhul.ac.uk/tls/ |publisher=Royal Holloway University of London |accessdate=March 13, 2013 |author=Nadhem AlFardan, Dan Bernstein, Kenny Paterson, Bertram Poettering and Jacob Schuldt |url-status=live |archiveurl=https://web.archive.org/web/20130315084623/http://www.isg.rhul.ac.uk/tls/ |archivedate=March 15, 2013}}</ref> An attack on RC4 in TLS and SSL that requires 13 \u00d7 2<sup>20</sup> encryptions to break RC4 was unveiled on 8 July 2013 and later described as \"feasible\" in the accompanying presentation at a [[USENIX]] Security Symposium in August 2013.<ref>{{cite journal |first=Nadhem J. |last=AlFardan |first2=Daniel J. |last2=Bernstein |first3=Kenneth G. |last3=Paterson |first4=Bertram |last4=Poettering |first5=Jacob C. N. |last5=Schuldt |date=8 July 2013 |title=On the Security of RC4 in TLS and WPA |accessdate=2 September 2013 |url=http://www.isg.rhul.ac.uk/tls/RC4biases.pdf |url-status=live |archiveurl=https://web.archive.org/web/20130922170155/http://www.isg.rhul.ac.uk/tls/RC4biases.pdf |archivedate=22 September 2013}}</ref><ref>{{cite conference |url=https://www.usenix.org/sites/default/files/conference/protected-files/alfardan_sec13_slides.pdf |title=On the Security of RC4 in TLS |first=Nadhem J. |last=AlFardan |first2=Daniel J. |last2=Bernstein |first3=Kenneth G. |last3=Paterson |first4=Bertram |last4=Poettering |first5=Jacob C. N. |last5=Schuldt |date=15 August 2013 |conference=22nd [[USENIX]] Security Symposium |accessdate=2 September 2013 |quote=Plaintext recovery attacks against RC4 in TLS are feasible although not truly practical |page=51 |url-status=live |archiveurl=https://web.archive.org/web/20130922133950/https://www.usenix.org/sites/default/files/conference/protected-files/alfardan_sec13_slides.pdf |archivedate=22 September 2013}}</ref> In July 2015, subsequent improvements in the attack make it increasingly practical to defeat the security of RC4-encrypted TLS.<ref>{{cite web|last1=Goodin|first1=Dan|title=Once-theoretical crypto attack against HTTPS now verges on practicality|url=https://arstechnica.com/security/2015/07/once-theoretical-crypto-attack-against-https-now-verges-on-practicality/|website=Ars Technical|publisher=Conde Nast|accessdate=16 July 2015|url-status=live|archiveurl=https://web.archive.org/web/20150716084138/http://arstechnica.com/security/2015/07/once-theoretical-crypto-attack-against-https-now-verges-on-practicality/|archivedate=16 July 2015|df=}}</ref>\n\nAs many modern browsers have been designed to defeat BEAST attacks (except Safari for Mac OS X 10.7 or earlier, for iOS 6 or earlier, and for Windows; see [[#Web browsers]]), RC4 is no longer a good choice for TLS 1.0. The CBC ciphers which were affected by the BEAST attack in the past have become a more popular choice for protection.<ref name=\"best-practices\"/> Mozilla and Microsoft recommend disabling RC4 where possible.<ref>{{cite web|url=https://wiki.mozilla.org/Security/Server_Side_TLS|title=Mozilla Security Server Side TLS Recommended Configurations|publisher=Mozilla|accessdate=2015-01-03|url-status=live|archiveurl=https://web.archive.org/web/20150103093047/https://wiki.mozilla.org/Security/Server_Side_TLS|archivedate=2015-01-03|df=}}</ref><ref>{{cite web|url=http://blogs.technet.com/b/srd/archive/2013/11/12/security-advisory-2868725-recommendation-to-disable-rc4.aspx|title=Security Advisory 2868725: Recommendation to disable RC4|date=2013-11-12|publisher=Microsoft|accessdate=2013-12-04|url-status=live|archiveurl=https://web.archive.org/web/20131118081816/http://blogs.technet.com/b/srd/archive/2013/11/12/security-advisory-2868725-recommendation-to-disable-rc4.aspx|archivedate=2013-11-18|df=}}</ref> {{IETF RFC|7465}} prohibits the use of RC4 cipher suites in all versions of TLS.\n\nOn September 1, 2015, Microsoft, Google and Mozilla announced that RC4 cipher suites would be disabled by default in their browsers ([[Microsoft Edge]], [[Internet Explorer 11]] on Windows 7/8.1/10, [[Firefox]], and [[Google Chrome|Chrome]]) in early 2016.<ref>{{cite web|url=https://blogs.windows.com/msedgedev/2015/09/01/ending-support-for-the-rc4-cipher-in-microsoft-edge-and-internet-explorer-11/|title=Ending support for the RC4 cipher in Microsoft Edge and Internet Explorer 11|publisher=Microsoft Edge Team|date=September 1, 2015|url-status=live|archiveurl=https://web.archive.org/web/20150902054341/http://blogs.windows.com/msedgedev/2015/09/01/ending-support-for-the-rc4-cipher-in-microsoft-edge-and-internet-explorer-11/|archivedate=September 2, 2015|df=}}</ref><ref>{{cite web|url=https://groups.google.com/a/chromium.org/forum/#!msg/security-dev/kVfCywocUO8/vgi_rQuhKgAJ|title=Intent to deprecate: RC4|date=Sep 1, 2015|author=Langley, Adam}}</ref><ref>{{cite web|title=Intent to ship: RC4 disabled by default in Firefox 44|url=https://groups.google.com/forum/#!topic/mozilla.dev.platform/JIEFcrGhqSM/discussion|date=Sep 1, 2015|author=Barnes, Richard|url-status=live|archiveurl=http://arquivo.pt/wayback/20110122130054/https://groups.google.com/forum/#!topic/mozilla.dev.platform/JIEFcrGhqSM/discussion|archivedate=2011-01-22|df=}}</ref>\n\n====Truncation attack====\nA TLS (logout) truncation attack blocks a victim's account logout requests so that the user unknowingly remains logged into a web service. When the request to sign out is sent, the attacker injects an unencrypted [[Transmission Control Protocol|TCP]] FIN message (no more data from sender) to close the connection. The server therefore doesn't receive the logout request and is unaware of the abnormal termination.<ref name=register20130801>{{cite web|title=Gmail, Outlook.com and e-voting 'pwned' on stage in crypto-dodge hack|url=https://www.theregister.co.uk/2013/08/01/gmail_hotmail_hijacking/|work=The Register|accessdate=1 August 2013|author=John Leyden|date=1 August 2013|url-status=live|archiveurl=https://web.archive.org/web/20130801193054/http://www.theregister.co.uk/2013/08/01/gmail_hotmail_hijacking/|archivedate=1 August 2013|df=}}</ref>\n\nPublished in July 2013,<ref>{{cite web|title=BlackHat USA Briefings|url=https://www.blackhat.com/us-13/briefings.html#Smyth|work=Black Hat 2013|accessdate=1 August 2013|url-status=live|archiveurl=https://web.archive.org/web/20130730124037/http://www.blackhat.com/us-13/briefings.html#Smyth|archivedate=30 July 2013|df=}}</ref><ref>{{cite journal|last1=Smyth|first1=Ben|last2=Pironti|first2=Alfredo|title=Truncating TLS Connections to Violate Beliefs in Web Applications|journal=7th USENIX Workshop on Offensive Technologies|date=2013|url=https://hal.inria.fr/hal-01102013|accessdate=15 February 2016|url-status=live|archiveurl=https://web.archive.org/web/20151106110117/https://hal.inria.fr/hal-01102013|archivedate=6 November 2015|df=}}</ref> the attack causes web services such as [[Gmail]] and [[Outlook.com|Hotmail]] to display a page that informs the user that they have successfully signed-out, while ensuring that the user's browser maintains authorization with the service, allowing an attacker with subsequent access to the browser to access and take over control of the user's logged-in account. The attack does not rely on installing malware on the victim's computer; attackers need only place themselves between the victim and the web server (e.g., by setting up a rogue wireless hotspot).<ref name=register20130801/> This vulnerability also requires access to the victim's computer.\nAnother possibility is when using FTP the data connection can have a false FIN in the data stream, and if the protocol rules for exchanging close_notify alerts is not adhered to a file can be truncated.\n\n====Unholy PAC attack====\nThis attack, discovered in mid-2016, exploits weaknesses in the [[Web Proxy Autodiscovery Protocol]] (WPAD) to expose the URL that a web user is attempting to reach via a TLS-enabled web link.<ref>{{cite web|last1=Goodin|first1=Dan|title=New attack bypasses HTTPS protection on Macs, Windows, and Linux|url=https://arstechnica.com/security/2016/07/new-attack-that-cripples-https-crypto-works-on-macs-windows-and-linux/|website=Ars Technica|publisher=Cond\u00e9 Nast|accessdate=28 July 2016|url-status=live|archiveurl=https://web.archive.org/web/20160727160434/http://arstechnica.com/security/2016/07/new-attack-that-cripples-https-crypto-works-on-macs-windows-and-linux/|archivedate=27 July 2016|df=}}</ref> Disclosure of a URL can violate a user's privacy, not only because of the website accessed, but also because URLs are sometimes used to authenticate users. Document sharing services, such as those offered by Google and Dropbox, also work by sending a user a security token that's included in the URL. An attacker who obtains such URLs may be able to gain full access to a victim's account or data.\n\nThe exploit works against almost all browsers and operating systems.\n\n====Sweet32 attack====\nThe Sweet32 attack breaks all 64-bit block ciphers used in CBC mode as used in TLS by exploiting a [[birthday attack]] and either a [[man-in-the-middle attack]] or injection of a malicious [[JavaScript]] into a web page. The purpose of the man-in-the-middle attack or the JavaScript injection is to allow the attacker to capture enough traffic to mount a birthday attack.<ref>{{Cite news | url = https://arstechnica.com/security/2016/08/new-attack-can-pluck-secrets-from-1-of-https-traffic-affects-top-sites/ | title = HTTPS and OpenVPN face new attack that can decrypt secret cookies | first = Dan | last = Goodin | newspaper = Ars Technica | date = August 24, 2016 | access-date = August 24, 2016 | url-status=live | archiveurl = https://web.archive.org/web/20160824181630/http://arstechnica.com/security/2016/08/new-attack-can-pluck-secrets-from-1-of-https-traffic-affects-top-sites/ | archivedate = August 24, 2016}}</ref>\n\n====Implementation errors: {{Anchor|Heartbleed}}Heartbleed bug, {{Anchor|BERserk}}BERserk attack, Cloudflare bug====\n{{Main|Heartbleed|Cloudbleed}}\nThe [[Heartbleed]] bug is a serious vulnerability specific to the implementation of SSL/TLS in the popular [[OpenSSL]] cryptographic software library, affecting versions 1.0.1 to 1.0.1f. This weakness, reported in April 2014, allows attackers to steal [[Public-key cryptography|private keys]] from servers that should normally be protected.<ref>{{cite web |url=https://www.washingtonpost.com/blogs/style-blog/wp/2014/04/09/why-is-it-called-the-heartbleed-bug/ |title=Why is it called the 'Heartbleed Bug'? |work=The Washington Post |date=2014-04-09 |url-status=live |archiveurl=https://web.archive.org/web/20141009063758/http://www.washingtonpost.com/blogs/style-blog/wp/2014/04/09/why-is-it-called-the-heartbleed-bug/ |archivedate=2014-10-09}}</ref> The Heartbleed bug allows anyone on the Internet to read the memory of the systems protected by the vulnerable versions of the OpenSSL software. This compromises the secret private keys associated with the [[X.509|public certificates]] used to identify the service providers and to encrypt the traffic, the names and passwords of the users and the actual content. This allows attackers to eavesdrop on communications, steal data directly from the services and users and to impersonate services and users.<ref>{{cite web|url=https://blogs.comodo.com/e-commerce/heartbleed-bug-comodo-urges-openssl-users-to-apply-patch/|title=Heartbleed Bug vulnerability [9 April 2014]|publisher=[[Comodo Group]]|url-status=live|archiveurl=https://web.archive.org/web/20140705212748/https://blogs.comodo.com/e-commerce/heartbleed-bug-comodo-urges-openssl-users-to-apply-patch/|archivedate=5 July 2014|df=}}</ref> The vulnerability is caused by a [[buffer over-read]] bug in the OpenSSL software, rather than a defect in the SSL or TLS protocol specification.\n\nIn September 2014, a variant of Daniel Bleichenbacher's PKCS#1 v1.5 RSA Signature Forgery vulnerability<ref>{{cite web|url=http://www.imc.org/ietf-openpgp/mail-archive/msg06063.html |title=Bleichenbacher's RSA signature forgery based on implementation error |date=August 2006 |first=Daniel |last=Bleichenbacher |url-status=dead |archiveurl=https://web.archive.org/web/20141216203704/http://www.imc.org/ietf-openpgp/mail-archive/msg06063.html |archivedate=2014-12-16}}</ref> was announced by Intel Security Advanced Threat Research. This attack, dubbed BERserk, is a result of incomplete ASN.1 length decoding of public key signatures in some SSL implementations, and allows a man-in-the-middle attack by forging a public key signature.<ref>{{cite web|url=http://www.intelsecurity.com/advanced-threat-research/|title=BERserk|date=September 2014|publisher=Intel Security: Advanced Threat Research|url-status=live|archiveurl=https://web.archive.org/web/20150112153121/http://www.intelsecurity.com/advanced-threat-research/|archivedate=2015-01-12|df=}}</ref>\n\nIn February 2015, after media reported the hidden pre-installation of [[Superfish]] adware on some Lenovo notebooks,<ref>{{cite web |url=https://arstechnica.com/information-technology/2015/02/lenovo-pcs-ship-with-man-in-the-middle-adware-that-breaks-https-connections/ |title=Lenovo PCs ship with man-in-the-middle adware that breaks HTTPS connections |last=Goodin |first=Dan |date=February 19, 2015 |website=[[Ars Technica]] |accessdate=December 10, 2017 |url-status=live |archiveurl=https://web.archive.org/web/20170912103610/https://arstechnica.com/information-technology/2015/02/lenovo-pcs-ship-with-man-in-the-middle-adware-that-breaks-https-connections/ |archivedate=September 12, 2017}}</ref> a researcher found a trusted root certificate on affected Lenovo machines to be insecure, as the keys could easily be accessed using the company name, Komodia, as a passphrase.<ref>{{cite web |first=Filippo |last=Valsorda |url=https://blog.filippo.io/komodia-superfish-ssl-validation-is-broken/ |title=Komodia/Superfish SSL validation is broken |publisher=Filippo.io |date=2015-02-20 |url-status=live |archiveurl=https://web.archive.org/web/20150224112141/https://blog.filippo.io/komodia-superfish-ssl-validation-is-broken/ |archivedate=2015-02-24}}</ref> The Komodia library was designed to intercept client-side TLS/SSL traffic for parental control and surveillance, but it was also used in numerous adware programs, including Superfish, that were often surreptitiously installed unbeknownst to the computer user. In turn, these [[potentially unwanted program]]s installed the corrupt root certificate, allowing attackers to completely control web traffic and confirm false websites as authentic.\n\nIn May 2016, it was reported that dozens of Danish HTTPS-protected websites belonging to [[Visa Inc.]] were vulnerable to attacks allowing hackers to inject malicious code and forged content into the browsers of visitors.<ref name=\"forbidden\">{{cite web|last1=Goodin|first1=Dan|title=\"Forbidden attack\" makes dozens of HTTPS Visa sites vulnerable to tampering|url=https://arstechnica.com/security/2016/05/faulty-https-settings-leave-dozens-of-visa-sites-vulnerable-to-forgery-attacks/|website=Ars Technica|accessdate=26 May 2016|url-status=live|archiveurl=https://web.archive.org/web/20160526175713/http://arstechnica.com/security/2016/05/faulty-https-settings-leave-dozens-of-visa-sites-vulnerable-to-forgery-attacks/|archivedate=26 May 2016|df=}}</ref> The attacks worked because the TLS implementation used on the affected servers incorrectly reused random numbers ([[cryptographic nonce|nonces]]) that are intended be used only once, ensuring that each [[#TLS handshake|TLS handshake]] is unique.<ref name=forbidden/>\n\nIn February 2017, an implementation error caused by a single mistyped character in code used to parse HTML created a buffer overflow error on [[Cloudflare]] servers. Similar in its effects to the Heartbleed bug discovered in 2014, this overflow error, widely known as [[Cloudbleed]], allowed unauthorized third parties to read data in the memory of programs running on the servers\u2014data that should otherwise have been protected by TLS.<ref>{{cite web|last1=Clark Estes|first1=Adam|title=Everything You Need to Know About Cloudbleed, the Latest Internet Security Disaster|url=https://gizmodo.com/everything-you-need-to-know-about-cloudbleed-the-lates-1792710616|website=[[Gizmodo]]|accessdate=2017-02-24|url-status=live|archiveurl=https://web.archive.org/web/20170225013516/http://gizmodo.com/everything-you-need-to-know-about-cloudbleed-the-lates-1792710616|archivedate=2017-02-25}}</ref>\n\n====Survey of websites vulnerable to attacks====\n{{As of|2019|08}}, Trustworthy Internet Movement estimate the ratio of websites that are vulnerable to TLS attacks.<ref name=\"trustworthy_ssl_pulse\" />\n{|class=\"wikitable\" style=\"text-align: center;\"\n|+Survey of the TLS vulnerabilities of the most popular websites\n|-\n!rowspan=\"2\" |Attacks\n!colspan=\"5\" |Security\n|-\n!colspan=\"2\"|Insecure\n!Depends\n!Secure\n!Other\n|-\n![[#Renegotiation attack|Renegotiation attack]]\n|colspan=\"2\" {{Bad|0.3% <br />support insecure renegotiation}}\n|{{Partial|0.1% <br />support both}}\n|{{Good|98.4% <br />support secure renegotiation}}\n|1.1% <br />no support\n|-\n![[#RC4 attacks|RC4 attacks]]\n|colspan=\"2\" {{Bad|1.2%<br />support RC4 suites used with modern browsers}}\n|{{Partial|12.1%<br />support some RC4 suites}}\n|{{Good|86.7%<br />no support}}\n|{{N/A}}\n|-\n![[#CRIME attack|TLS Compression (CRIME attack)]]\n|colspan=\"2\" {{Bad|0.6%<br />vulnerable}}\n|{{N/A}}\n|{{N/A}}\n|{{N/A}}\n|-\n![[#Heartbleed|Heartbleed]]\n|colspan=\"2\" {{Bad|<0.1%<br />vulnerable}}\n|{{N/A}}\n|{{N/A}}\n|{{N/A}}\n|-\n![[CVE-2014-0224|ChangeCipherSpec injection attack]]\n|colspan=\"2\" {{Bad|0.2%<br />vulnerable and exploitable}}\n|{{Partial|1.2% <br />vulnerable, not exploitable}}\n|{{Good|96.9% <br />not vulnerable}}\n|1.7% <br />unknown\n|-\n![[#POODLE attack|POODLE attack against TLS]]<br /><small>(Original POODLE against SSL 3.0 is not included)</small>\n|colspan=\"2\" {{Bad|0.3%<br />vulnerable and exploitable}}\n|{{N/A}}\n|{{Good|99.5%<br />not vulnerable}}\n|0.2% <br />unknown\n|-\n![[#Downgrade attacks|Protocol downgrade]]\n|colspan=\"2\" {{Bad|11.3%<br />Downgrade defence not supported}}\n|{{N/A}}\n|{{Good|71.6%<br />Downgrade defence supported}}\n|17.0% <br />unknown\n|}\n\n===Forward secrecy===\n{{Main|Forward secrecy}}\n[[Forward secrecy]] is a property of cryptographic systems which ensures that a session key derived from a set of public and private keys will not be compromised if one of the private keys is compromised in the future.<ref>{{cite journal|first1=Whitfield|last1=Diffie|last2=van Oorschot|first2=Paul C|last3=Wiener|first3=Michael J.|title=Authentication and Authenticated Key Exchanges|issue=2|journal=Designs, Codes and Cryptography|volume=2|pages=107\u2013125|date=June 1992|doi=10.1007/BF00124891|url=http://citeseer.ist.psu.edu/diffie92authentication.html|accessdate=2008-02-11|url-status=live|archiveurl=https://web.archive.org/web/20080313081157/http://citeseer.ist.psu.edu/diffie92authentication.html|archivedate=2008-03-13|df=|citeseerx=10.1.1.59.6682}}</ref> Without forward secrecy, if the server's private key is compromised, not only will all future TLS-encrypted sessions using that server certificate be compromised, but also any past sessions that used it as well (provided of course that these past sessions were intercepted and stored at the time of transmission).<ref>[http://www1.ietf.org/mail-archive/web/tls/current/msg02134.html Discussion on the TLS mailing list in October 2007] {{webarchive|url=https://web.archive.org/web/20130922103746/http://www.ietf.org/mail-archive/web/tls/current/msg02134.html |date=2013-09-22}}</ref> An implementation of TLS can provide forward secrecy by requiring the use of ephemeral [[Diffie\u2013Hellman key exchange]] to establish session keys, and some notable TLS implementations do so exclusively: e.g., [[Gmail]] and other Google HTTPS services that use [[OpenSSL]].<ref>{{cite web|url=http://googleonlinesecurity.blogspot.com.au/2011/11/protecting-data-for-long-term-with.html|title=Protecting data for the long term with forward secrecy|accessdate=2012-11-05|url-status=live|archiveurl=https://web.archive.org/web/20130506184654/http://googleonlinesecurity.blogspot.com.au/2011/11/protecting-data-for-long-term-with.html|archivedate=2013-05-06|df=}}</ref> However, many clients and servers supporting TLS (including browsers and web servers) are not configured to implement such restrictions.<ref>{{cite web|url=http://vincent.bernat.im/en/blog/2011-ssl-perfect-forward-secrecy.html|title=SSL/TLS & Perfect Forward Secrecy|first=Vincent|last=Bernat|accessdate=2012-11-05|url-status=live|archiveurl=https://web.archive.org/web/20120827064047/http://vincent.bernat.im/en/blog/2011-ssl-perfect-forward-secrecy.html|archivedate=2012-08-27|df=}}</ref><ref>{{cite web|title=SSL Labs: Deploying Forward Secrecy|url=https://community.qualys.com/blogs/securitylabs/2013/06/25/ssl-labs-deploying-forward-secrecy|publisher=Qualys.com|accessdate=2013-07-10|date=2013-06-25|url-status=live|archiveurl=https://web.archive.org/web/20130626193314/https://community.qualys.com/blogs/securitylabs/2013/06/25/ssl-labs-deploying-forward-secrecy|archivedate=2013-06-26|df=}}</ref> In practice, unless a web service uses Diffie\u2013Hellman key exchange to implement forward secrecy, all of the encrypted web traffic to and from that service can be decrypted by a third party if it obtains the server's master (private) key; e.g., by means of a court order.<ref>{{cite web|last=Ristic|first=Ivan|title=SSL Labs: Deploying Forward Secrecy|url=https://community.qualys.com/blogs/securitylabs/2013/06/25/ssl-labs-deploying-forward-secrecy|publisher=Qualsys|accessdate=2013-08-31|date=2013-08-05|url-status=live|archiveurl=https://web.archive.org/web/20130920150259/https://community.qualys.com/blogs/securitylabs/2013/06/25/ssl-labs-deploying-forward-secrecy|archivedate=2013-09-20|df=}}</ref>\n\nEven where Diffie\u2013Hellman key exchange is implemented, server-side session management mechanisms can impact forward secrecy. The use of [[#Resumed TLS handshake|TLS session tickets]] (a TLS extension) causes the session to be protected by AES128-CBC-SHA256 regardless of any other negotiated TLS parameters, including forward secrecy ciphersuites, and the long-lived TLS session ticket keys defeat the attempt to implement forward secrecy.<ref name=\"botchingpfs\"/><ref name=\"ticketsecwp\"/><ref name=\"ticketsecslides\"/> Stanford University research in 2014 also found that of 473,802 TLS servers surveyed, 82.9% of the servers deploying ephemeral Diffie\u2013Hellman (DHE) key exchange to support forward secrecy were using weak Diffie\u2013Hellman parameters. These weak parameter choices could potentially compromise the effectiveness of the forward secrecy that the servers sought to provide.<ref>{{cite journal|author1=L.S. Huang|author2=S. Adhikarla|author3=D. Boneh|author4=C. Jackson|title=An Experimental Study of TLS Forward Secrecy Deployments|journal=IEEE Internet Computing|date=2014|volume=18|issue=6|pages=43\u201351|url=http://crypto.stanford.edu/~dabo/pubs/abstracts/websec_ecc.html|accessdate=16 October 2015|url-status=live|archiveurl=https://web.archive.org/web/20150920011317/http://crypto.stanford.edu/~dabo/pubs/abstracts/websec_ecc.html|archivedate=20 September 2015|df=|doi=10.1109/MIC.2014.86|citeseerx=10.1.1.663.4653}}</ref>\n\nSince late 2011, Google has provided forward secrecy with TLS by default to users of its [[Gmail]] service, along with [[Google Docs]] and encrypted search, among other services.<ref name=\"googleLongTerm\">{{cite web|url=http://googleonlinesecurity.blogspot.com.au/2011/11/protecting-data-for-long-term-with.html|title=Protecting data for the long term with forward secrecy|accessdate=2014-03-07|url-status=live|archiveurl=https://web.archive.org/web/20140212214518/http://googleonlinesecurity.blogspot.com.au/2011/11/protecting-data-for-long-term-with.html|archivedate=2014-02-12|df=}}</ref>\nSince November 2013, [[Twitter]] has provided forward secrecy with TLS to users of its service.<ref>{{cite web|last=Hoffman-Andrews|first=Jacob|title=Forward Secrecy at Twitter|url=https://blog.twitter.com/2013/forward-secrecy-at-twitter-0|publisher=Twitter|accessdate=2014-03-07|url-status=live|archiveurl=https://web.archive.org/web/20140216041202/https://blog.twitter.com/2013/forward-secrecy-at-twitter-0|archivedate=2014-02-16|df=}}</ref> {{As of|2019|08}}, about 80% of TLS-enabled websites are configured to use cipher suites that provide forward secrecy to most web browsers.<ref name=\"trustworthy_ssl_pulse\" />\n\n===TLS interception===\nTLS interception (or [[HTTPS]] interception if applied particularly to that protocol) is the practice of intercepting an encrypted data stream in order to decrypt it, read and possibly manipulate it, and then re-encrypt it and send the data on its way again. This is done by way of a \"[[transparent proxy]]\": the interception software terminates the incoming TLS connection, inspects the HTTP plaintext, and then creates a new TLS connection to the destination.<ref name=\"Durumeric et al 2017\">{{cite journal |last1=Durumeric |first1=Zakir |last2=Ma |first2=Zane |last3=Springall |first3=Drew |last4=Barnes |first4=Richard |last5=Sullivan |first5=Nick |last6=Bursztein |first6=Elie |last7=Bailey |first7=Michael |last8=Halderman |first8=J. Alex |last9=Paxson |first9=Vern |title=The Security Impact of HTTPS Interception |journal=NDSS Symposium |date=5 September 2017 |doi=10.14722/ndss.2017.23456 |url=https://www.ndss-symposium.org/ndss2017/ndss-2017-programme/security-impact-https-interception/|isbn=978-1-891562-46-4 }}</ref>\n\nTLS / HTTPS interception is used as an [[information security]] measure by network operators in order to be able to scan for and protect against the intrusion of malicious content into the network, such as [[computer virus]]es and other [[malware]].<ref name=\"Durumeric et al 2017\" /> Such content could otherwise not be detected as long as it is protected by encryption, which is increasingly the case as a result of the routine use of HTTPS and other secure protocols.\n\nA significant drawback of TLS / HTTPS interception is that it introduces new security risks of its own. Because it provides a point where network traffic is available unencrypted, attackers have an incentive to attack this point in particular in order to gain access to otherwise secure content. The interception also allows the network operator, or persons who gain access to its interception system, to perform [[man-in-the-middle attack]]s against network users. A 2017 study found that \"HTTPS interception has become startlingly widespread, and that interception products as a class have a dramatically negative impact on connection security\".<ref name=\"Durumeric et al 2017\" />\n\n==Protocol details==\nThe TLS protocol exchanges ''records'', which encapsulate the data to be exchanged in a specific format (see below). Each record can be compressed, padded, appended with a [[message authentication code]] (MAC), or encrypted, all depending on the state of the connection. Each record has a ''content type'' field that designates the type of data encapsulated, a length field and a TLS version field. The data encapsulated may be control or procedural messages of the TLS itself, or simply the application data needed to be transferred by TLS. The specifications (cipher suite, keys etc.) required to exchange application data by TLS, are agreed upon in the \"TLS handshake\" between the client requesting the data and the server responding to requests. The protocol therefore defines both the structure of payloads transferred in TLS and the procedure to establish and monitor the transfer.\n\n===TLS handshake===\nWhen the connection starts, the record encapsulates a \"control\" protocol \u2013 the handshake messaging protocol (''content type'' 22). This protocol is used to exchange all the information required by both sides for the exchange of the actual application data by TLS. It defines the format of messages and the order of their exchange. These may vary according to the demands of the client and server \u2013 i.e., there are several possible procedures to set up the connection. This initial exchange results in a successful TLS connection (both parties ready to transfer application data with TLS) or an alert message (as specified below).\n\n====Basic TLS handshake====\nA typical connection example follows, illustrating a [[Handshaking|handshake]] where the server (but not the client) is authenticated by its certificate:\n\n# Negotiation phase:\n#* A client sends a '''ClientHello''' message specifying the highest TLS protocol version it supports, a random number, a list of suggested [[cipher suite]]s and suggested compression methods. If the client is attempting to perform a resumed handshake, it may send a ''session ID''. If the client can use [[Application-Layer Protocol Negotiation]], it may include a list of supported application [[Communications protocol|protocols]], such as [[HTTP/2]].\n#* The server responds with a '''ServerHello''' message, containing the chosen protocol version, a random number, cipher suite and compression method from the choices offered by the client. To confirm or allow resumed handshakes the server may send a ''session ID''. The chosen protocol version should be the highest that both the client and server support. For example, if the client supports TLS version 1.1 and the server supports version 1.2, version 1.1 should be selected; version 1.2 should not be selected.\n#* The server sends its '''Certificate''' message (depending on the selected cipher suite, this may be omitted by the server).<ref name=\"openpgp\">These certificates are currently [[X.509]], but {{IETF RFC|6091}} also specifies the use of [[OpenPGP]]-based certificates.</ref>\n#* The server sends its '''ServerKeyExchange''' message (depending on the selected cipher suite, this may be omitted by the server). This message is sent for all DHE and DH_anon cipher suites.<ref name=\"RFC5246\"/>\n#* The server sends a '''ServerHelloDone''' message, indicating it is done with handshake negotiation.\n#* The client responds with a '''ClientKeyExchange''' message, which may contain a ''PreMasterSecret'', public key, or nothing. (Again, this depends on the selected cipher.) This ''PreMasterSecret'' is encrypted using the public key of the server certificate.\n#* The client and server then use the random numbers and ''PreMasterSecret'' to compute a common secret, called the \"master secret\". All other key data for this connection is derived from this master secret (and the client- and server-generated random values), which is passed through a carefully designed [[pseudorandomness|pseudorandom]] function.\n# The client now sends a '''ChangeCipherSpec''' record, essentially telling the server, \"Everything I tell you from now on will be authenticated (and encrypted if encryption parameters were present in the server certificate).\" The ChangeCipherSpec is itself a record-level protocol with content type of 20.\n#* The client sends an authenticated and encrypted '''Finished''' message, containing a hash and MAC over the previous handshake messages.\n#* The server will attempt to decrypt the client's ''Finished'' message and verify the hash and MAC. If the decryption or verification fails, the handshake is considered to have failed and the connection should be torn down.\n# Finally, the server sends a '''ChangeCipherSpec''', telling the client, \"Everything I tell you from now on will be authenticated (and encrypted, if encryption was negotiated).\"\n#* The server sends its authenticated and encrypted '''Finished''' message.\n#* The client performs the same decryption and verification procedure as the server did in the previous step.\n# Application phase: at this point, the \"handshake\" is complete and the application protocol is enabled, with content type of 23. Application messages exchanged between client and server will also be authenticated and optionally encrypted exactly like in their ''Finished'' message. Otherwise, the content type will return 25 and the client will not authenticate.\n\n====Client-authenticated TLS handshake====\nThe following ''full'' example shows a client being authenticated (in addition to the server as in the example above) via TLS using certificates exchanged between both peers.\n\n# Negotiation Phase:\n#* A client sends a '''ClientHello''' message specifying the highest TLS protocol version it supports, a random number, a list of suggested cipher suites and compression methods.\n#* The server responds with a '''ServerHello''' message, containing the chosen protocol version, a random number, cipher suite and compression method from the choices offered by the client. The server may also send a ''session id'' as part of the message to perform a resumed handshake.\n#* The server sends its '''Certificate''' message (depending on the selected cipher suite, this may be omitted by the server).<ref name=\"openpgp\"/>\n#* The server sends its '''ServerKeyExchange''' message (depending on the selected cipher suite, this may be omitted by the server). This message is sent for all DHE and DH_anon ciphersuites.<ref name=\"RFC5246\"/>\n#* The server sends a '''CertificateRequest''' message, to request a certificate from the client so that the connection can be [[mutually authenticated]].\n#* The server sends a '''ServerHelloDone''' message, indicating it is done with handshake negotiation.\n#* The client responds with a '''Certificate''' message, which contains the client's certificate.\n#* The client sends a '''ClientKeyExchange''' message, which may contain a ''PreMasterSecret'', public key, or nothing. (Again, this depends on the selected cipher.) This ''PreMasterSecret'' is encrypted using the public key of the server certificate.\n#* The client sends a '''CertificateVerify''' message, which is a signature over the previous handshake messages using the client's certificate's private key. This signature can be verified by using the client's certificate's public key. This lets the server know that the client has access to the private key of the certificate and thus owns the certificate.\n#* The client and server then use the random numbers and ''PreMasterSecret'' to compute a common secret, called the \"master secret\". All other key data for this connection is derived from this master secret (and the client- and server-generated random values), which is passed through a carefully designed pseudorandom function.\n# The client now sends a '''ChangeCipherSpec''' record, essentially telling the server, \"Everything I tell you from now on will be authenticated (and encrypted if encryption was negotiated). \" The ChangeCipherSpec is itself a record-level protocol and has type 20 and not 22.\n#* Finally, the client sends an encrypted '''Finished''' message, containing a hash and MAC over the previous handshake messages.\n#* The server will attempt to decrypt the client's ''Finished'' message and verify the hash and MAC. If the decryption or verification fails, the handshake is considered to have failed and the connection should be torn down.\n# Finally, the server sends a '''ChangeCipherSpec''', telling the client, \"Everything I tell you from now on will be authenticated (and encrypted if encryption was negotiated). \"\n#* The server sends its own encrypted '''Finished''' message.\n#* The client performs the same decryption and verification procedure as the server did in the previous step.\n# Application phase: at this point, the \"handshake\" is complete and the application protocol is enabled, with content type of 23. Application messages exchanged between client and server will also be encrypted exactly like in their ''Finished'' message.\n\n====Resumed TLS handshake====\nPublic key operations (e.g., RSA) are relatively expensive in terms of computational power. TLS provides a secure shortcut in the handshake mechanism to avoid these operations: resumed sessions. Resumed sessions are implemented using session IDs or session tickets.\n\nApart from the performance benefit, resumed sessions can also be used for [[single sign-on]], as it guarantees that both the original session and any resumed session originate from the same client. This is of particular importance for the [[FTPS|FTP over TLS/SSL]] protocol, which would otherwise suffer from a man-in-the-middle attack in which an attacker could intercept the contents of the secondary data connections.<ref>{{cite web |author=Chris |url=http://scarybeastsecurity.blogspot.com/2009/02/vsftpd-210-released.html |title=vsftpd-2.1.0 released \u2013 Using TLS session resume for FTPS data connection authentication |publisher=Scarybeastsecurity. blogspot.com |date=2009-02-18 |accessdate=2012-05-17 |url-status=live |archiveurl=https://web.archive.org/web/20120707213409/http://scarybeastsecurity.blogspot.com/2009/02/vsftpd-210-released.html |archivedate=2012-07-07}}</ref>\n\n====TLS 1.3 handshake====\n\nThe TLS 1.3 handshake was condensed to only one round trip compared to the two round trips required in previous versions of TLS/SSL.\n\nFirst the client sends a clientHello message to the server that contains a list of supported ciphers in order of the client's preference and makes a guess on what key algorithm will be used so that it can send a secret key to share if needed. By making a guess at what key algorithm will be used, the server eliminates a round trip. After receiving the clientHello, the server sends a serverHello with its key, a certificate, the chosen cipher suite and the finished message.\n\nAfter the client receives the server's finished message, it now is coordinated with the server on which cipher suite to use.[https://blog.cloudflare.com/tls-1-3-overview-and-q-and-a/]\n\n=====Session IDs=====\nIn an ordinary ''full'' handshake, the server sends a ''session id'' as part of the '''ServerHello''' message. The client associates this ''session id'' with the server's IP address and TCP port, so that when the client connects again to that server, it can use the ''session id'' to shortcut the handshake. In the server, the ''session id'' maps to the cryptographic parameters previously negotiated, specifically the \"master secret\". Both sides must have the same \"master secret\" or the resumed handshake will fail (this prevents an eavesdropper from using a ''session id''). The random data in the '''ClientHello''' and '''ServerHello''' messages virtually guarantee that the generated connection keys will be different from in the previous connection. In the RFCs, this type of handshake is called an ''abbreviated'' handshake. It is also described in the literature as a ''restart'' handshake.\n\n# Negotiation phase:\n#* A client sends a '''ClientHello''' message specifying the highest TLS protocol version it supports, a random number, a list of suggested cipher suites and compression methods. Included in the message is the ''session id'' from the previous TLS connection.\n#* The server responds with a '''ServerHello''' message, containing the chosen protocol version, a random number, cipher suite and compression method from the choices offered by the client. If the server recognizes the ''session id'' sent by the client, it responds with the same ''session id''. The client uses this to recognize that a resumed handshake is being performed. If the server does not recognize the ''session id'' sent by the client, it sends a different value for its ''session id''. This tells the client that a resumed handshake will not be performed. At this point, both the client and server have the \"master secret\" and random data to generate the key data to be used for this connection.\n# The server now sends a '''ChangeCipherSpec''' record, essentially telling the client, \"Everything I tell you from now on will be encrypted.\" The ChangeCipherSpec is itself a record-level protocol and has type 20 and not 22.\n#* Finally, the server sends an encrypted '''Finished''' message, containing a hash and MAC over the previous handshake messages.\n#* The client will attempt to decrypt the server's ''Finished'' message and verify the hash and MAC. If the decryption or verification fails, the handshake is considered to have failed and the connection should be torn down.\n# Finally, the client sends a '''ChangeCipherSpec''', telling the server, \"Everything I tell you from now on will be encrypted. \"\n#* The client sends its own encrypted '''Finished''' message.\n#* The server performs the same decryption and verification procedure as the client did in the previous step.\n# Application phase: at this point, the \"handshake\" is complete and the application protocol is enabled, with content type of 23. Application messages exchanged between client and server will also be encrypted exactly like in their ''Finished'' message.\n\n=====Session tickets=====\n{{IETF RFC|5077}} extends TLS via use of session tickets, instead of session IDs. It defines a way to resume a TLS session without requiring that session-specific state is stored at the TLS server.\n\nWhen using session tickets, the TLS server stores its session-specific state in a session ticket and sends the session ticket to the TLS client for storing. The client resumes a TLS session by sending the session ticket to the server, and the server resumes the TLS session according to the session-specific state in the ticket. The session ticket is encrypted and authenticated by the server, and the server verifies its validity before using its contents.\n\nOne particular weakness of this method with [[OpenSSL]] is that it always limits encryption and authentication security of the transmitted TLS session ticket to <code>AES128-CBC-SHA256</code>, no matter what other TLS parameters were negotiated for the actual TLS session.<ref name=\"ticketsecwp\">{{cite web|title=TLS \"Secrets\": Whitepaper presenting the security implications of the deployment of session tickets (RFC 5077) as implemented in OpenSSL|first=Florent|last=Daigni\u00e8re|publisher=Matta Consulting Limited|accessdate=7 August 2013|url=https://media.blackhat.com/us-13/US-13-Daigniere-TLS-Secrets-WP.pdf|url-status=live|archiveurl=https://web.archive.org/web/20130806233112/https://media.blackhat.com/us-13/US-13-Daigniere-TLS-Secrets-WP.pdf|archivedate=6 August 2013|df=}}</ref> This means that the state information (the TLS session ticket) is not as well protected as the TLS session itself. Of particular concern is OpenSSL's storage of the keys in an application-wide context (<code>SSL_CTX</code>), i.e. for the life of the application, and not allowing for re-keying of the <code>AES128-CBC-SHA256</code> TLS session tickets without resetting the application-wide OpenSSL context (which is uncommon, error-prone and often requires manual administrative intervention).<ref name=\"ticketsecslides\">{{cite web|title=TLS \"Secrets\": What everyone forgot to tell you...|first=Florent|last=Daigni\u00e8re|publisher=Matta Consulting Limited|accessdate=7 August 2013|url=https://media.blackhat.com/us-13/US-13-Daigniere-TLS-Secrets-Slides.pdf|url-status=live|archiveurl=https://web.archive.org/web/20130805134805/https://media.blackhat.com/us-13/US-13-Daigniere-TLS-Secrets-Slides.pdf|archivedate=5 August 2013|df=}}</ref><ref name=\"botchingpfs\">{{cite web|title=How to botch TLS forward secrecy|first=Adam|last=Langley|website=imperialviolet.org|date=27 June 2013|url=https://www.imperialviolet.org/2013/06/27/botchingpfs.html|url-status=live|archiveurl=https://web.archive.org/web/20130808221614/https://www.imperialviolet.org/2013/06/27/botchingpfs.html|archivedate=8 August 2013|df=}}</ref>\n\n===TLS record===\nThis is the general format of all TLS records.\n\n{|class=\"wikitable\" style=\"width:100%;text-align: center\"\n|-\n! scope=\"col\" style=\"width:12%;\"| +\n! scope=\"col\" colspan=\"8\" style=\"width:22%;\"| Byte +0\n! scope=\"col\" colspan=\"8\" style=\"width:22%;\"| Byte +1\n! scope=\"col\" colspan=\"8\" style=\"width:22%;\"| Byte +2\n! scope=\"col\" colspan=\"8\" style=\"width:22%;\"| Byte +3\n|-\n! Byte<br />0\n| colspan=\"8\" style=\"background:#dfd; \"| Content type\n| colspan=\"24\" style=\"background:#aaa; \"| &nbsp;\n|-\n!rowspan=\"2\"| Bytes<br />1..4\n| colspan=\"16\" style=\"background:#fdd; \"| Legacy version\n| colspan=\"16\" style=\"background:#fdd; \"| Length\n|- style=\"font-size:90%; line-height:1.2; background:#fdd; \"\n| colspan=\"8\"| ''(Major)''\n| colspan=\"8\"| ''(Minor)''\n| colspan=\"8\"| ''(bits 15..8)''\n| colspan=\"8\"| ''(bits 7..0)''\n|-\n! Bytes<br />5..(''m''\u22121)\n| colspan=\"32\"| Protocol message(s)\n|-\n! Bytes<br />''m''..(''p''\u22121)\n| colspan=\"32\" style=\"background:#fbb; \"| [[Message authentication code|MAC]] (optional)\n|-\n! Bytes<br />''p''..(''q''\u22121)\n| colspan=\"32\" style=\"background:#fbb; \"| Padding (block ciphers only)\n|}\n\n; Content type\n: This field identifies the Record Layer Protocol Type contained in this Record.\n{| class=\"wikitable\"\n|+ Content types\n|-\n! Hex\n! Dec\n! Type\n|-\n| 0x14\n| 20\n| ChangeCipherSpec\n|-\n| 0x15\n| 21\n| Alert\n|-\n| 0x16\n| 22\n| Handshake\n|-\n| 0x17\n| 23\n| Application\n|-\n| 0x18\n| 24\n| Heartbeat\n|}\n\n; Legacy version\n: This field identifies the major and minor version of TLS prior to TLS 1.3 for the contained message. For a ClientHello message, this need not be the ''highest'' version supported by the client. For TLS 1.3 and later, this must to be set 0x0303 and application must send supported versions in an extra message extension block.\n{|class=\"wikitable\"\n|+Versions\n|-\n! Major<br />version !! Minor<br />version !! Version type\n|-\n| 3 || 0 || SSL 3.0\n|-\n| 3 || 1 || TLS 1.0\n|-\n| 3 || 2 || TLS 1.1\n|-\n| 3 || 3 || TLS 1.2\n|-\n| 3 || 4 || TLS 1.3\n|}\n\n; Length\n\n: The length of \"protocol message(s)\", \"MAC\" and \"padding\" fields combined (i.e. ''q''\u22125), not to exceed 2<sup>14</sup> bytes (16 KiB).\n; Protocol message(s)\n: One or more messages identified by the Protocol field. Note that this field may be encrypted depending on the state of the connection.\n; MAC and padding\n: A [[message authentication code]] computed over the \"protocol message(s)\" field, with additional key material included. Note that this field may be encrypted, or not included entirely, depending on the state of the connection.\n: No \"MAC\" or \"padding\" fields can be present at end of TLS records before all cipher algorithms and parameters have been negotiated and handshaked and then confirmed by sending a CipherStateChange record (see below) for signalling that these parameters will take effect in all further records sent by the same peer.\n\n====Handshake protocol====\nMost messages exchanged during the setup of the TLS session are based on this record, unless an error or warning occurs and needs to be signaled by an Alert protocol record (see below), or the encryption mode of the session is modified by another record (see ChangeCipherSpec protocol below).\n\n{|class=\"wikitable\" style=\"width:100%;text-align: center\"\n|-\n! style=\"width:1%;\"| +\n! colspan=\"8\" style=\"width:2%;\"| Byte +0\n! colspan=\"8\" style=\"width:2%;\"| Byte +1\n! colspan=\"8\" style=\"width:2%;\"| Byte +2\n! colspan=\"8\" style=\"width:2%;\"| Byte +3\n|-\n! Byte<br />0\n| colspan=\"8\" style=\"background:#dfd; \"| 22\n| colspan=\"24\" style=\"background:#aaa; \"| &nbsp;\n|-\n!rowspan=\"2\"| Bytes<br />1..4\n| colspan=\"16\" style=\"background:#fdd; \"| Version\n| colspan=\"16\" style=\"background:#fdd; \"| Length\n|- style=\"font-size:90%; line-height:1.2; background:#fdd; \"\n| colspan=\"8\"| ''(Major)''\n| colspan=\"8\"| ''(Minor)''\n| colspan=\"8\"| ''(bits 15..8)''\n| colspan=\"8\"| ''(bits 7..0)''\n|-\n!rowspan=\"2\"| Bytes<br />5..8\n| rowspan=\"2\" colspan=\"8\"| Message type\n| colspan=\"24\"| Handshake message data length\n|- style=\"font-size:90%;line-height:1.2\"\n| colspan=\"8\"| ''(bits 23..16)''\n| colspan=\"8\"| ''(bits 15..8)''\n| colspan=\"8\"| ''(bits 7..0)''\n|-\n!Bytes<br />9..(''n''\u22121)\n| colspan=\"32\"| Handshake message data\n|-\n!rowspan=\"2\"| Bytes<br />''n''..(''n''+3)\n| rowspan=\"2\" colspan=\"8\" style=\"background:#fdd; \"| Message type\n| colspan=\"24\" style=\"background:#fdd; \"| Handshake message data length\n|- style=\"font-size:90%; line-height:1.2; background:#fdd; \"\n| colspan=\"8\"| ''(bits 23..16)''\n| colspan=\"8\"| ''(bits 15..8)''\n| colspan=\"8\"| ''(bits 7..0)''\n|-\n! Bytes<br />(''n''+4)..\n| colspan=\"32\" style=\"background:#fdd; \"| Handshake message data\n|}\n\n; Message type: This field identifies the handshake message type.\n\n{|class=\"wikitable\"\n|-\n! colspan=\"2\"| Message types\n|-\n! Code\n! Description\n|-\n| 0\n| HelloRequest\n|-\n| 1\n| ClientHello\n|-\n| 2\n| ServerHello\n|-\n| 4\n| NewSessionTicket\n|-\n| 8\n| EncryptedExtensions (TLS 1.3 only)\n|-\n| 11\n| Certificate\n|-\n| 12\n| ServerKeyExchange\n|-\n| 13\n| CertificateRequest\n|-\n| 14\n| ServerHelloDone\n|-\n| 15\n| CertificateVerify\n|-\n| 16\n| ClientKeyExchange\n|-\n| 20\n| Finished\n|}\n\n; Handshake message data length\n: This is a 3-byte field indicating the length of the handshake data, not including the header.\n\nNote that multiple handshake messages may be combined within one record.\n\n====Alert protocol====\nThis record should normally not be sent during normal handshaking or application exchanges. However, this message can be sent at any time during the handshake and up to the closure of the session. If this is used to signal a fatal error, the session will be closed immediately after sending this record, so this record is used to give a reason for this closure. If the alert level is flagged as a warning, the remote can decide to close the session if it decides that the session is not reliable enough for its needs (before doing so, the remote may also send its own signal).\n\n{|class=\"wikitable\" style=\"width:100%;text-align: center\"\n|-\n! style=\"width:12%;\"| +\n! colspan=\"8\" style=\"width:22%;\"| Byte +0\n! colspan=\"8\" style=\"width:22%;\"| Byte +1\n! colspan=\"8\" style=\"width:22%;\"| Byte +2\n! colspan=\"8\" style=\"width:22%;\"| Byte +3\n|-\n! Byte<br />0\n| colspan=\"8\" style=\"background:#dfd; \"| 21\n| colspan=\"24\" style=\"background:#aaa; \"| &nbsp;\n|-\n!rowspan=\"2\"| Bytes<br />1..4\n| colspan=\"16\" style=\"background:#fdd; \"| Version\n| colspan=\"16\" style=\"background:#fdd; \"| Length\n|- style=\"font-size:90%; line-height:1.2; background:#fdd; \"\n| colspan=\"8\"| ''(Major)''\n| colspan=\"8\"| ''(Minor)''\n| colspan=\"8\"| 0\n| colspan=\"8\"| 2\n|-\n! Bytes<br />5..6\n| colspan=\"8\"| Level\n| colspan=\"8\"| Description\n| colspan=\"16\" style=\"background:#aaa; \"| &nbsp;\n|-\n! Bytes<br />''7''..(''p''\u22121)\n| colspan=\"32\" style=\"background:#fbb; \"| [[Message authentication code|MAC]] (optional)\n|-\n! Bytes<br />''p''..(''q''\u22121)\n| colspan=\"32\" style=\"background:#fbb; \"| Padding (block ciphers only)\n|}\n\n; Level\n: This field identifies the level of alert. If the level is fatal, the sender should close the session immediately. Otherwise, the recipient may decide to terminate the session itself, by sending its own fatal alert and closing the session itself immediately after sending it. The use of Alert records is optional, however if it is missing before the session closure, the session may be resumed automatically (with its handshakes).\n: Normal closure of a session after termination of the transported application should preferably be alerted with at least the ''Close notify'' Alert type (with a simple warning level) to prevent such automatic resume of a new session. Signalling explicitly the normal closure of a secure session before effectively closing its transport layer is useful to prevent or detect attacks (like attempts to truncate the securely transported data, if it intrinsically does not have a predetermined length or duration that the recipient of the secured data may expect).\n{|class=\"wikitable\" style=\"width:85%\"\n|+Alert level types\n|-\n! Code\n! Level type\n! Connection state\n|- style=\"background:#dfd; \"\n| 1 || <span style=\"color: orange\">'''warning'''</span> || connection or security may be unstable.\n|- style=\"background:#fdd; \"\n| 2 || <span style=\"color: red\">'''fatal'''</span> || connection or security may be compromised, or an unrecoverable error has occurred.\n|}\n\n; Description\n: This field identifies which type of alert is being sent.\n{|class=\"wikitable\" style=\"width:85%\"\n|+Alert description types\n|-\n! Code\n! Description\n! Level types\n! Note\n|- style=\"background:#ffd; \"\n| 0 || Close notify || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> ||\n|- style=\"background:#fdd; \"\n| 10 || Unexpected message || <span style=\"color: red\">'''fatal'''</span> ||\n|- style=\"background:#fdd; \"\n| 20 || Bad record MAC || <span style=\"color: red\">'''fatal'''</span> || Possibly a bad SSL implementation, or payload has been tampered with e.g. FTP firewall rule on FTPS server.\n|- style=\"background:#fdd; \"\n| 21 || Decryption failed || <span style=\"color: red\">'''fatal'''</span> || TLS only, reserved\n|- style=\"background:#fdd; \"\n| 22 || Record overflow || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 30 || Decompression failure || <span style=\"color: red\">'''fatal'''</span> ||\n|- style=\"background:#fdd; \"\n| 40 || Handshake failure || <span style=\"color: red\">'''fatal'''</span> ||\n|- style=\"background:#ffd; \"\n| 41 || No certificate || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> || SSL 3.0 only, reserved\n|- style=\"background:#ffd; \"\n| 42 || Bad certificate || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> ||\n|- style=\"background:#ffd; \"\n| 43 || Unsupported certificate || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> || e.g. certificate has only Server authentication usage enabled and is presented as a client certificate\n|- style=\"background:#ffd; \"\n| 44 || Certificate revoked || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> ||\n|- style=\"background:#ffd; \"\n| 45 || Certificate expired || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> || Check server certificate expire also check no certificate in the chain presented has expired</span>\n|- style=\"background:#ffd; \"\n| 46 || Certificate unknown || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> ||\n|- style=\"background:#fdd; \"\n| 47 || Illegal parameter || <span style=\"color: red\">'''fatal'''</span> ||\n|- style=\"background:#fdd; \"\n| 48 || Unknown CA ([[Certificate authority]]) || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 49 || Access denied || <span style=\"color: red\">'''fatal'''</span> || TLS only \u2013 e.g. no client certificate has been presented (TLS: Blank certificate message or SSLv3: No Certificate alert), but server is configured to require one.\n|- style=\"background:#fdd; \"\n| 50 || Decode error || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#ffd; \"\n| 51 || Decrypt error || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 60 || Export restriction || <span style=\"color: red\">'''fatal'''</span> || TLS only, reserved\n|- style=\"background:#fdd; \"\n| 70 || Protocol version || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 71 || Insufficient security || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 80 || Internal error || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 86 || Inappropriate Fallback || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 90 || User canceled || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#dfd; \"\n| 100 || No renegotiation || <span style=\"color: orange\">'''warning'''</span> || TLS only\n|- style=\"background:#dfd; \"\n| 110 || Unsupported extension || <span style=\"color: orange\">'''warning'''</span> || TLS only\n|- style=\"background:#dfd; \"\n| 111 || Certificate unobtainable || <span style=\"color: orange\">'''warning'''</span> || TLS only\n|- style=\"background:#ffd; \"\n| 112 || Unrecognized name || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> || TLS only; client's [[Server Name Indication|Server Name Indicator]] specified a hostname not supported by the server\n|- style=\"background:#fdd; \"\n| 113 || Bad certificate status response || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 114 || Bad certificate hash value || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 115 || Unknown [[Pre-shared key|PSK]] identity (used in [[TLS-PSK]] and [[TLS-SRP]]) || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 120 || No Application Protocol || <span style=\"color: red\">'''fatal'''</span> || TLS only, client's ALPN did not contain any server-supported protocols\n|}\n\n====ChangeCipherSpec protocol====\n{|class=\"wikitable\" style=\"width:100%;text-align: center\"\n|-\n! style=\"width:12%;\"| +\n! colspan=\"8\" style=\"width:22%;\"| Byte +0\n! colspan=\"8\" style=\"width:22%;\"| Byte +1\n! colspan=\"8\" style=\"width:22%;\"| Byte +2\n! colspan=\"8\" style=\"width:22%;\"| Byte +3\n|-\n! Byte<br />0\n| colspan=\"8\" style=\"background:#dfd; \"| 20\n| colspan=\"24\" style=\"background:#aaa; \"| &nbsp;\n|-\n!rowspan=\"2\"| Bytes<br />1..4\n| colspan=\"16\" style=\"background:#fdd; \"| Version\n| colspan=\"16\" style=\"background:#fdd; \"| Length\n|- style=\"font-size:90%; line-height:1.2; background:#fdd; \"\n| colspan=\"8\"| ''(Major)''\n| colspan=\"8\"| ''(Minor)''\n| colspan=\"8\"| 0\n| colspan=\"8\"| 1\n|-\n! Byte<br />5\n| colspan=\"8\"| CCS protocol type\n| colspan=\"24\" style=\"background:#aaa; \"| &nbsp;\n|}\n\n; CCS protocol type\n: Currently only 1.\n\n====Application protocol====\n{|class=\"wikitable\" style=\"width:100%;text-align: center\"\n|-\n! style=\"width:12%;\"| +\n! colspan=\"8\" style=\"width:22%;\"| Byte +0\n! colspan=\"8\" style=\"width:22%;\"| Byte +1\n! colspan=\"8\" style=\"width:22%;\"| Byte +2\n! colspan=\"8\" style=\"width:22%;\"| Byte +3\n|-\n! Byte<br />0\n| colspan=\"8\" style=\"background:#dfd; \"| 23\n| colspan=\"24\" style=\"background:#aaa; \"| &nbsp;\n|-\n!rowspan=\"2\"| Bytes<br />1..4\n| colspan=\"16\" style=\"background:#fdd; \"| Version\n| colspan=\"16\" style=\"background:#fdd; \"| Length\n|- style=\"font-size:90%; line-height:1.2; background:#fdd; \"\n| colspan=\"8\"| ''(Major)''\n| colspan=\"8\"| ''(Minor)''\n| colspan=\"8\"| ''(bits 15..8)''\n| colspan=\"8\"| ''(bits 7..0)''\n|-\n! Bytes<br />5..(''m''\u22121)\n| colspan=\"32\"| Application data\n|-\n! Bytes<br />''m''..(''p''\u22121)\n| colspan=\"32\" style=\"background:#fbb; \"| [[Message authentication code|MAC]] (optional)\n|-\n! Bytes<br />''p''..(''q''\u22121)\n| colspan=\"32\" style=\"background:#fbb; \"| Padding (block ciphers only)\n|}\n\n; Length\n: Length of application data (excluding the protocol header and including the MAC and padding trailers)\n; MAC\n: 20 bytes for the [[SHA-1]]-based [[HMAC]], 16 bytes for the [[MD5]]-based HMAC.\n; Padding\n: Variable length; last byte contains the padding length.\n\n==Support for name-based virtual servers==\nFrom the application protocol point of view, TLS belongs to a lower layer, although the TCP/IP model is too coarse to show it. This means that the TLS handshake is usually (except in the [[STARTTLS]] case) performed before the application protocol can start. In the [[virtual hosting#Name-based|name-based virtual server]] feature being provided by the application layer, all co-hosted virtual servers share the same certificate because the server has to select and send a certificate immediately after the ClientHello message. This is a big problem in hosting environments because it means either sharing the same certificate among all customers or using a different IP address for each of them.\n\nThere are two known workarounds provided by [[X.509]]:\n* If all virtual servers belong to the same domain, a [[wildcard certificate]] can be used.<ref>{{citation |url=https://ssl.comodo.com/wildcard-ssl-certificates.php |title=Wildcard SSL Certificate overview |accessdate=2015-07-02 |url-status=live |archiveurl=https://web.archive.org/web/20150623231035/https://ssl.comodo.com/wildcard-ssl-certificates.php |archivedate=2015-06-23}}</ref> Besides the loose host name selection that might be a problem or not, there is no common agreement about how to match wildcard certificates. Different rules are applied depending on the application protocol or software used.<ref>{{citation |url=https://www.switch.ch/pki/meetings/2007-01/namebased_ssl_virtualhosts.pdf |title=Named-based SSL virtual hosts: how to tackle the problem |accessdate=2012-05-17 |url-status=live |archiveurl=https://web.archive.org/web/20120803022659/https://www.switch.ch/pki/meetings/2007-01/namebased_ssl_virtualhosts.pdf |archivedate=2012-08-03}}</ref>\n* Add every virtual host name in the subjectAltName extension. The major problem being that the certificate needs to be reissued whenever a new virtual server is added.\n\nTo provide the server name, {{IETF RFC|4366}} Transport Layer Security (TLS) Extensions allow clients to include a [[Server Name Indication]] extension (SNI) in the extended ClientHello message. This extension hints to the server immediately which name the client wishes to connect to, so the server\ncan select the appropriate certificate to send to the clients.\n\n{{IETF RFC|2817}} also documents a method to implement name-based virtual hosting by upgrading HTTP to TLS via an [[HTTP/1.1 Upgrade header]]. Normally this is to securely implement HTTP over TLS within the main \"http\" [[URI scheme]] (which avoids forking the URI space and reduces the number of used ports), however, few implementations currently support this.{{citation needed|date=February 2019}}\n\n==Standards==\n\n===Primary standards===\n'''The current approved version of TLS is version 1.3, which is specified in:'''\n* {{IETF RFC|8446}}: \"The Transport Layer Security (TLS) Protocol Version 1.3\".\n\n'''The current standard replaces these former versions, which are now considered obsolete:'''\n* {{IETF RFC|2246}}: \"The TLS Protocol Version 1.0\".\n* {{IETF RFC|4346}}: \"The Transport Layer Security (TLS) Protocol Version 1.1\".\n* {{IETF RFC|5246}}: \"The Transport Layer Security (TLS) Protocol Version 1.2\".\n\n'''As well as the never standardized SSL 2.0 and 3.0, which are considered obsolete:'''\n* [//tools.ietf.org/html/draft-hickman-netscape-ssl-00 Internet Draft (1995)], SSL Version 2.0\n* {{IETF RFC|6101}}: \"The Secure Sockets Layer (SSL) Protocol Version 3.0\".\n\n===Extensions===\nOther [[Request for comments|RFCs]] subsequently extended TLS.\n\n'''Extensions to TLS 1.0 include:'''\n* {{IETF RFC|2595}}: \"Using TLS with IMAP, POP3 and ACAP\". Specifies an extension to the IMAP, POP3 and ACAP services that allow the server and client to use transport-layer security to provide private, authenticated communication over the Internet.\n* {{IETF RFC|2712}}: \"Addition of [[Kerberos (protocol)|Kerberos]] Cipher Suites to Transport Layer Security (TLS)\". The 40-bit cipher suites defined in this memo appear only for the purpose of documenting the fact that those cipher suite codes have already been assigned.\n* {{IETF RFC|2817}}: \"Upgrading to TLS Within HTTP/1.1\", explains how to use the [[HTTP/1.1 Upgrade header|Upgrade mechanism in HTTP/1.1]] to initiate Transport Layer Security (TLS) over an existing TCP connection. This allows unsecured and secured HTTP traffic to share the same ''well known'' port (in this case, http: at 80 rather than https: at 443).\n* {{IETF RFC|2818}}: \"HTTP Over TLS\", distinguishes secured traffic from insecure traffic by the use of a different 'server port'.\n* {{IETF RFC|3207}}: \"SMTP Service Extension for Secure SMTP over Transport Layer Security\". Specifies an extension to the SMTP service that allows an SMTP server and client to use transport-layer security to provide private, authenticated communication over the Internet.\n* {{IETF RFC|3268}}: \"AES Ciphersuites for TLS\". Adds [[Advanced Encryption Standard]] (AES) cipher suites to the previously existing symmetric ciphers.\n* {{IETF RFC|3546}}: \"Transport Layer Security (TLS) Extensions\", adds a mechanism for negotiating protocol extensions during session initialisation and defines some extensions. Made obsolete by {{IETF RFC|4366}}.\n* {{IETF RFC|3749}}: \"Transport Layer Security Protocol Compression Methods\", specifies the framework for compression methods and the [[DEFLATE]] compression method.\n* {{IETF RFC|3943}}: \"Transport Layer Security (TLS) Protocol Compression Using Lempel-Ziv-Stac (LZS)\".\n* {{IETF RFC|4132}}: \"Addition of [[Camellia (cipher)|Camellia]] Cipher Suites to Transport Layer Security (TLS)\".\n* {{IETF RFC|4162}}: \"Addition of [[SEED]] Cipher Suites to Transport Layer Security (TLS)\".\n* {{IETF RFC|4217}}: \"Securing [[FTPS|FTP with TLS]]\".\n* {{IETF RFC|4279}}: \"Pre-Shared Key Ciphersuites for Transport Layer Security (TLS)\", adds three sets of new cipher suites for the TLS protocol to support authentication based on pre-shared keys.\n\n'''Extensions to TLS 1.1 include:'''\n* {{IETF RFC|4347}}: \"[[Datagram Transport Layer Security]]\" specifies a TLS variant that works over datagram protocols (such as UDP).\n* {{IETF RFC|4366}}: \"Transport Layer Security (TLS) Extensions\" describes both a set of specific extensions and a generic extension mechanism.\n* {{IETF RFC|4492}}: \"[[Elliptic Curve Cryptography]] (ECC) Cipher Suites for Transport Layer Security (TLS)\".\n* {{IETF RFC|4680}}: \"TLS Handshake Message for Supplemental Data\".\n* {{IETF RFC|4681}}: \"TLS User Mapping Extension\".\n* {{IETF RFC|4785}}: \"Pre-Shared Key (PSK) Ciphersuites with NULL Encryption for Transport Layer Security (TLS)\".\n* {{IETF RFC|5054}}: \"Using the [[Secure remote password protocol|Secure Remote Password]] (SRP) Protocol for TLS Authentication\". Defines the [[TLS-SRP]] ciphersuites.\n* {{IETF RFC|5077}}: \"Transport Layer Security (TLS) Session Resumption without Server-Side State\".\n* {{IETF RFC|5081}}: \"Using [[OpenPGP]] Keys for Transport Layer Security (TLS) Authentication\", obsoleted by {{IETF RFC|6091}}.\n\n'''Extensions to TLS 1.2 include:'''\n* {{IETF RFC|5288}}: \"AES [[Galois/Counter Mode|Galois Counter Mode]] (GCM) Cipher Suites for TLS\".\n* {{IETF RFC|5289}}: \"TLS Elliptic Curve Cipher Suites with SHA-256/384 and AES Galois Counter Mode (GCM)\".\n* {{IETF RFC|5746}}: \"Transport Layer Security (TLS) Renegotiation Indication Extension\".\n* {{IETF RFC|5878}}: \"Transport Layer Security (TLS) Authorization Extensions\".\n* {{IETF RFC|5932}}: \"Camellia Cipher Suites for TLS\"\n* {{IETF RFC|6066}}: \"Transport Layer Security (TLS) Extensions: Extension Definitions\", includes [[Server Name Indication]] and [[OCSP stapling]].\n* {{IETF RFC|6091}}: \"Using [[OpenPGP]] Keys for Transport Layer Security (TLS) Authentication\".\n* {{IETF RFC|6176}}: \"Prohibiting Secure Sockets Layer (SSL) Version 2.0\".\n* {{IETF RFC|6209}}: \"Addition of the [[ARIA (cipher)|ARIA]] Cipher Suites to Transport Layer Security (TLS)\".\n* {{IETF RFC|6347}}: \"Datagram Transport Layer Security Version 1.2\".\n* {{IETF RFC|6367}}: \"Addition of the Camellia Cipher Suites to Transport Layer Security (TLS)\".\n* {{IETF RFC|6460}}: \"Suite B Profile for Transport Layer Security (TLS)\".\n* {{IETF RFC|6655}}: \"AES-CCM Cipher Suites for Transport Layer Security (TLS)\".\n* {{IETF RFC|7027}}: \"Elliptic Curve Cryptography (ECC) Brainpool Curves for Transport Layer Security (TLS)\".\n* {{IETF RFC|7251}}: \"AES-CCM Elliptic Curve Cryptography (ECC) Cipher Suites for TLS\".\n* {{IETF RFC|7301}}: \"Transport Layer Security (TLS) [[Application-Layer Protocol Negotiation]] Extension\".\n* {{IETF RFC|7366}}: \"Encrypt-then-MAC for Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)\".\n* {{IETF RFC|7465}}: \"Prohibiting RC4 Cipher Suites\".\n* {{IETF RFC|7507}}: \"TLS Fallback Signaling Cipher Suite Value (SCSV) for Preventing Protocol Downgrade Attacks\".\n* {{IETF RFC|7568}}: \"Deprecating Secure Sockets Layer Version 3.0\".\n* {{IETF RFC|7627}}: \"Transport Layer Security (TLS) Session Hash and Extended Master Secret Extension\".\n* {{IETF RFC|7685}}: \"A Transport Layer Security (TLS) ClientHello Padding Extension\".\n\n'''Encapsulations of TLS include:'''\n* {{IETF RFC|5216}}: \"The [[Extensible Authentication Protocol|EAP]]-TLS Authentication Protocol\"\n\n===Informational RFCs===\n* {{IETF RFC|7457}}: \"Summarizing Known Attacks on Transport Layer Security (TLS) and Datagram TLS (DTLS)\"\n* {{IETF RFC|7525}}: \"Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)\"\n\n==See also==\n\n* [[Application-Layer Protocol Negotiation]] \u2013 a TLS extension used for SPDY and TLS False Start\n* [[Bullrun (decryption program)]] \u2013 a secret anti-encryption program run by the U.S. National Security Agency\n* [[Certificate authority#CA compromise|Certificate authority compromise]]\n* [[Certificate Transparency]]\n* [[HTTP Public Key Pinning]]\n* [[HTTP Strict Transport Security]] \u2013 HSTS\n* [[Key ring file]]\n* [[QUIC]] (Quick UDP Internet Connections) \u2013 \"...was designed to provide security protection equivalent to TLS/SSL\"; QUIC's main goal is to improve perceived performance of connection-oriented web applications that are currently using TCP\n* [[Server-Gated Cryptography]]\n* [[tcpcrypt]]\n* [[DTLS]]\n* [[TLS acceleration]]\n\n==References==\n{{Reflist|30em}}\n{{FOLDOC}}\n\n==Further reading==\n* {{cite conference|first=David|last=Wagner|author2=Schneier, Bruce |title=Analysis of the SSL 3.0 Protocol|booktitle=The Second USENIX Workshop on Electronic Commerce Proceedings|publisher=USENIX Press|date=November 1996|pages=29\u201340|url=http://www.schneier.com/paper-ssl.pdf}}\n* {{cite book|author=Eric Rescorla|title=SSL and TLS: Designing and Building Secure Systems|publisher=Addison-Wesley Pub Co|location=United States|year=2001|isbn=978-0-201-61598-2|url-access=registration|url=https://archive.org/details/ssltls00eric}}\n* {{cite book|author=Stephen A. Thomas|title=SSL and TLS essentials securing the Web|publisher=Wiley|location=New York|year=2000|isbn=978-0-471-38354-3}}\n* {{cite journal|title=A Challenging But Feasible Blockwise-Adaptive Chosen-Plaintext Attack on SSL|journal=International Association for Cryptologic Research|year=2006|first= Gregory|last=Bard|volume=|issue=136|pages=|id= |url=http://eprint.iacr.org/2006/136|accessdate=2011-09-23}}\n* {{cite web|url=http://lasecwww.epfl.ch/memo/memo_ssl.shtml |title=Password Interception in a SSL/TLS Channel |accessdate=2007-04-20 |last=Canvel |first=Brice}}\n* {{cite web|url=http://tools.ietf.org/html/rfc5746 |title=RFC of change for TLS Renegotiation |accessdate=2009-12-11 |last=IETF Multiple Authors}}\n* [http://www.linuxjournal.com/article/9916 Creating VPNs with IPsec and SSL/TLS] Linux Journal article by Rami Rosen\n* {{cite web|url=http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-52r1.pdf|title=Guidelines for the Selection, Configuration, and Use of Transport Layer Security (TLS) Implementations|author1=Polk, Tim |author2=McKay, Kerry |author3=Chokhani, Santosh |date=April 2014|format=|publisher=National Institute of Standards and Technology|pages=|archiveurl=https://web.archive.org/web/20140508025330/http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-52r1.pdf|archivedate=2014-05-08|url-status=dead|accessdate=2014-05-07}}\n* {{cite journal|first=AbdelRahman|last=Abdou|first2=Paul|last2=van Oorschot|title=Server Location Verification (SLV) and Server Location Pinning: Augmenting TLS Authentication|journal=Transactions on Privacy and Security|publisher=ACM|date=August 2017|url=https://dl.acm.org/citation.cfm?id=3139294}}\n\n==External links==\n{{commons category|SSL and TLS}}\n'''Specifications''' (see [[#Standards|\u00a7 Standards]] section for older SSL 2.0, SSL 3.0, TLS 1.0, TLS 1.1 links)\n* [https://tools.ietf.org/html/rfc5246 The Transport Layer Security (TLS) Protocol Version 1.2] {{IETF RFC|5246}}\n* [https://datatracker.ietf.org/wg/tls/ IETF (Internet Engineering Task Force) TLS Workgroup]\n;TLS version intolerance\n* [https://timtaubert.de/blog/2016/09/tls-version-intolerance/ TLS version intolerance]\n* [https://www.int21.de/slides/berlinsec-versionintolerance/#/ TLS 1.3 and Version Intolerance]\n;Other\n* [https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html OWASP: Transport Layer Protection Cheat Sheet]\n* [https://computing.ece.vt.edu/~jkh/Understanding_SSL_TLS.pdf A talk on SSL/TLS that tries to explain things in terms that people might understand.]\n* [https://www.cisco.com/web/about/ac123/ac147/archived_issues/ipj_1-1/ssl.html SSL: Foundation for Web Security]\n* [https://tools.ietf.org/agenda/76/slides/tls-7.pdf TLS Renegotiation Vulnerability \u2013 IETF Tools]\n* [https://www.trustworthyinternet.org/ssl-pulse/ Trustworthy Internet Movement \u2013 SSL Pulse] \u2013 Survey of TLS/SSL implementation of the most popular websites\n* [http://www.sslcentral.com/how-to-generate-csr/ How to Generate CSR for SSL]\n* [https://www.gnudeveloper.com/cyber_security/TLS_handshake.html How TLS Handshake works in private browser]\n\n{{SSL/TLS}}\n{{VPN}}\n{{Web browsers}}\n\n[[Category:Transport Layer Security| ]]\n[[Category:Cryptographic protocols]]\n[[Category:Presentation layer protocols]]\n", "text_old": "{{short description|Cryptographic protocols for securing data in transit}}\n{{IPstack}}\n\n'''Transport Layer Security''' ('''TLS'''), and its now-deprecated predecessor, '''Secure Sockets Layer''' ('''SSL'''),<ref>{{cite web |url=http://tools.ietf.org/html/rfc7568 |title=Deprecating Secure Sockets Layer Version 3.0 |date=June 2015 |author1=R. Barnes |author2=M. Thomson |author3=A. Pironti |author4=A. Langley |url-status=live |archiveurl=https://web.archive.org/web/20180328080443/https://tools.ietf.org/html/rfc7568 |archivedate=2018-03-28}}</ref> are [[cryptographic protocol]]s designed to provide [[communications security]] over a [[computer network]].<ref name=RFC5246>{{cite web |url=http://tools.ietf.org/html/rfc5246 |title=The Transport Layer Security (TLS) Protocol, Version 1.2 |date=August 2008 |author1=T. Dierks |author2=E. Rescorla |url-status=live |archiveurl=https://web.archive.org/web/20171224222709/https://tools.ietf.org/html/rfc5246 |archivedate=2017-12-24}}</ref> Several versions of the protocols find widespread use in applications such as [[Web navigation|web browsing]], [[email]], [[instant messaging]], and [[voice over IP]] (VoIP). [[Website]]s can use TLS to secure all communications between their [[server (computing)|servers]] and [[web browser]]s.\n\nThe TLS protocol aims primarily to provide [[privacy]] and [[data integrity]] between two or more communicating computer applications.<ref name=RFC5246/>{{rp|3}} When secured by TLS, connections between a client (e.g., a web browser) and a server (e.g., wikipedia.org) should have one or more of the following properties:\n* The connection is ''private'' (or ''secure'') because [[Symmetric-key algorithm|symmetric cryptography]] is used to [[Encryption|encrypt]] the data transmitted. The [[Key (cryptography)|keys]] for this symmetric encryption are generated uniquely for each connection and are based on a [[shared secret]] that was negotiated at the start of the [[Session (computer science)|session]] (see [[#TLS handshake|\u00a7 TLS handshake]]). The server and client negotiate the details of which encryption algorithm and cryptographic keys to use before the first [[byte]] of data is transmitted (see [[#Algorithm|\u00a7 Algorithm]] below). The negotiation of a shared secret is both secure (the negotiated secret is unavailable to [[Eavesdropping|eavesdroppers]] and cannot be obtained, even by an attacker who places themselves in the middle of the connection) and reliable (no attacker can modify the communications during the negotiation without being detected).\n* The identity of the communicating parties can be ''authenticated'' using [[public-key cryptography]]. This authentication can be made optional, but is generally required for at least one of the parties (typically the server).\n* The connection is ''reliable'' because each message transmitted includes a message integrity check using a [[message authentication code]] to prevent undetected loss or alteration of the data during [[Data transmission|transmission]].<ref name=RFC5246/>{{rp|3}}\n\nIn addition to the properties above, careful [[Computer configuration|configuration]] of TLS can provide additional privacy-related properties such as [[forward secrecy]], ensuring that any future disclosure of encryption keys cannot be used to decrypt any TLS communications recorded in the past.<ref>[http://news.netcraft.com/archives/2013/06/25/ssl-intercepted-today-decrypted-tomorrow.html SSL: Intercepted today, decrypted tomorrow] {{webarchive|url=https://web.archive.org/web/20130921053551/http://news.netcraft.com/archives/2013/06/25/ssl-intercepted-today-decrypted-tomorrow.html |date=2013-09-21}}, Netcraft, 2013-06-25.</ref>\n\nTLS supports many different methods for exchanging keys, encrypting data, and authenticating message integrity (see [[#Algorithm|\u00a7 Algorithm]] below). As a result, secure configuration of TLS involves many configurable parameters, and not all choices provide all of the privacy-related properties described in the list above (see the [[#keyexchange-table|\u00a7 Key exchange]] (authentication), [[#cipher-table|\u00a7 Cipher security]], and [[#integrity-table|\u00a7 Data integrity]] tables).\n\nAttempts have been made to subvert aspects of the communications security that TLS seeks to provide, and the protocol has been revised several times to address these security threats (see [[#Security|\u00a7 Security]]). Developers of web browsers have also revised their products to defend against potential security weaknesses after these were discovered (see [[#Web browsers|TLS/SSL support history of web browsers]]).<ref name=\":0\" />\n\nThe TLS protocol comprises two layers: the [[#TLS record|TLS record]] and the [[#TLS handshake|TLS handshake]] protocols.\n\nTLS is a proposed Internet Engineering Task Force ([[IETF]]) [[Internet Standard|standard]], first defined in 1999, and the current version is TLS 1.3 defined in {{IETF RFC|8446}} (August 2018). TLS builds on the earlier SSL specifications (1994, 1995, 1996) developed by [[Netscape|Netscape Communications]]<ref name=RFC6101>\n{{cite web |url= http://tools.ietf.org/html/rfc6101 |title= The Secure Sockets Layer (SSL) Protocol Version 3.0 |date= August 2011 |author1= A. Freier |author2= P. Karlton |author3= P. Kocher |url-status=live |archiveurl= https://web.archive.org/web/20120115032035/http://tools.ietf.org/html/rfc6101 |archivedate= 2012-01-15}}</ref>\nfor adding the [[HTTP Secure|HTTPS]] protocol to their [[Netscape Navigator|Navigator]] web browser.\n\n{{toc limit}}\n\n==Description==\n[[Client\u2013server model|Client-server]] applications use the TLS [[Proprietary protocol|protocol]] to communicate across a network in a way designed to prevent eavesdropping and [[Tamper-evident|tampering]].\n\nSince applications can communicate either with or without TLS (or SSL), it is necessary for the [[Client (computing)|client]] to indicate to the server the setup of a TLS connection.<ref>{{cite web |last1=Lawrence |first1=Scott |last2=Khare |first2=Rohit |title=Upgrading to TLS Within HTTP/1.1  |url=https://tools.ietf.org/html/rfc2817 |website=tools.ietf.org |accessdate=15 December 2018 |language=en}}</ref> One of the main ways of achieving this is to use a different [[Port (computer networking)|port number]] for TLS connections, for example port 443 for [[HTTPS]]. Another mechanism is for the client to make a protocol-specific request to the server to switch the connection to TLS; for example, by making a [[Opportunistic TLS|STARTTLS]] request when using the mail and [[usenet|news]] protocols.\n\nOnce the client and server have agreed to use TLS, they negotiate a [[State (computer science)|stateful]] connection by using a [[#Protocol details|handshaking]] procedure.<ref>\"[https://technet.microsoft.com/en-us/library/cc785811.aspx SSL/TLS in Detail] {{webarchive|url=https://web.archive.org/web/20150206032944/https://technet.microsoft.com/en-us/library/cc785811.aspx |date=2015-02-06}}\". ''[[Microsoft TechNet]]''. Updated July 31, 2003.</ref> The protocols use a handshake with an [[asymmetric cipher]] to establish not only cipher settings but also a session-specific shared key with which further communication is encrypted using a [[symmetric cipher]]. During this handshake, the client and server agree on various parameters used to establish the connection's security:\n* The handshake begins when a client connects to a TLS-enabled server requesting a secure connection and the client presents a list of supported [[cipher suite]]s ([[encryption|ciphers]] and [[cryptographic hash function|hash functions]]).\n* From this list, the server picks a cipher and hash function that it also supports and notifies the client of the decision.\n* The server usually then provides identification in the form of a [[Public key certificate|digital certificate]]. The certificate contains the [[Hostname|server name]], the trusted [[certificate authority]] (CA) that vouches for the authenticity of the certificate, and the server's public encryption key.\n* The client confirms the validity of the certificate before proceeding.\n* To generate the session keys used for the secure connection, the client either:\n** encrypts a [[Random number generation|random number]] with the server's public key and sends the result to the server (which only the server should be able to decrypt with its private key); both parties then use the random number to generate a unique session key for subsequent encryption and decryption of data during the session\n** uses [[Diffie\u2013Hellman key exchange]] to securely generate a random and unique session key for encryption and decryption that has the additional property of forward secrecy: if the server's private key is disclosed in future, it cannot be used to decrypt the current session, even if the session is intercepted and recorded by a third party.\nThis concludes the handshake and begins the secured connection, which is encrypted and decrypted with the session key until the connection closes. If any one of the above steps fails, then the TLS handshake fails and the connection is not created.\n\nTLS and SSL do not fit neatly into any single layer of the [[OSI model]] or the [[Internet protocol suite|TCP/IP model]].<ref name=\"ccnp\">{{cite book\n |last1       = Hooper\n |first1      = Howard\n |title       = CCNP Security VPN 642-648 Official Cert Guide\n |date        = 2012\n |publisher   = Cisco Press\n |isbn        = 9780132966382\n |page        = 22\n |edition     = 2\n |url         = https://books.google.com/books?id=5PJisOKJ0k8C&pg=PA22\n }}</ref><ref name=\"stackex_layer\">{{cite web|url=https://security.stackexchange.com/a/93338|title=What layer is TLS?|website=Information Security Stack Exchange|first1=Andrew|last1=Spott|first2=Tom |last2=Leek|display-authors=etal}}</ref> TLS runs \"on top of some reliable transport protocol (e.g., TCP),\"<ref name=\"rfc_intro\">{{cite IETF |rfc=5246|title=The Transport Layer Security (TLS) Protocol Version 1.2|section=1|sectionname=Introduction|date=August 2008|author=T. Dierks, E. Rescorla}}</ref> which would imply that it is above the [[transport layer]]. It serves encryption to higher layers, which is normally the function of the [[presentation layer]]. However, applications generally use TLS as if it were a transport layer,<ref name=\"ccnp\" /><ref name=\"stackex_layer\" /> even though applications using TLS must actively control initiating TLS handshakes and handling of exchanged authentication certificates.<ref name=\"rfc_intro\" />\n\n==History and development==\n{| class=\"wikitable sortable\" style=\"float:right; text-align:center; margin-left:1em;\"\n|+SSL and TLS protocols\n|-\n!scope=\"col\"| Protocol\n!scope=\"col\"| Published\n!scope=\"col\"| Status\n|-\n!scope=\"row\"| SSL 1.0\n| {{n/a|Unpublished}}\n| {{n/a|Unpublished}}\n|-\n!scope=\"row\"| SSL 2.0\n| 1995\n|Deprecated in 2011 (RFC 6176)\n|-\n!scope=\"row\"| SSL 3.0\n| 1996\n|Deprecated in 2015 (RFC 7568)\n|-\n!scope=\"row\"| TLS 1.0\n| 1999\n|Deprecated in 2020<ref name=\":2\" /><ref name=\":3\">{{Cite web|url=https://www.ghacks.net/2020/03/10/here-is-what-is-new-and-changed-in-firefox-74-0-stable/|title=Here is what is new and changed in Firefox 74.0 Stable - gHacks Tech News|website=www.ghacks.net|access-date=2020-03-10}}</ref><ref name=\":4\">{{Cite web|url=https://chromestatus.com/feature/5759116003770368|title=TLS 1.0 and TLS 1.1 - Chrome Platform Status|website=chromestatus.com|access-date=2020-03-10}}</ref>\n|-\n!scope=\"row\"| TLS 1.1\n| 2006\n|Deprecated in 2020<ref name=\":2\" /><ref name=\":3\" /><ref name=\":4\" />\n|-\n!scope=\"row\"| TLS 1.2\n| 2008\n|\n|-\n!scope=\"row\"| TLS 1.3\n| 2018\n|\n|}\n==={{Anchor|SDNS}}Secure Data Network System===\nThe Transport Layer Security Protocol (TLS) together with several other basic network security platforms, were developed through a joint initiative begun in August 1986, among the National Security Agency, the National Bureau of Standards, the Defense Communications Agency, and twelve communications and computer corporations who initiated a special project called the Secure Data Network System (SDNS). The program was described in September 1987 at the 10th National Computer Security Conference in an extensive set of published papers.  The innovative research program focused on designing the next generation of secure computer communications network and product specifications to be implemented for applications on public and private internets. It was intended to complement the rapidly emerging new OSI internet standards moving forward both in the U.S. government's GOSIP Profiles and in the huge ITU-ISO JTC1 internet effort internationally. Originally known as the SP4 protocol, it was renamed TLS and subsequently published in 1995 as international standard ITU-T X.274| ISO/IEC 10736:1995.\n\n==={{Anchor|SNP}}Secure Network Programming===\nEarly research efforts towards transport layer security included the [[Secure Network Programming]] (SNP) [[application programming interface]] (API), which in 1993 explored the approach of having a secure transport layer API closely resembling [[Berkeley sockets]], to facilitate retrofitting pre-existing network applications with security measures.<ref name=\"Woo94\">Thomas Y. C. Woo, Raghuram Bindignavle, Shaowen Su and [[Simon S. Lam]], [//www.cs.utexas.edu/users/lam/Vita/Cpapers/WBSL94.pdf ''SNP: An interface for secure network programming''] Proceedings USENIX Summer Technical Conference, June '''1994'''</ref>\n\n===SSL 1.0, 2.0, and 3.0===\nNetscape developed the original SSL protocols, and [[Taher Elgamal]], chief scientist at Netscape Communications from 1995 to 1998, has been described as the \"father of SSL\".<ref name=\"Messmer\">{{cite news |last=Messmer |first=Ellen |title=Father of SSL, Dr. Taher Elgamal, Finds Fast-Moving IT Projects in the Middle East |url=http://www.networkworld.com/news/2012/120412-elgamal-264739.html |work=Network World |accessdate=30 May 2014 |url-status=dead |archiveurl= https://web.archive.org/web/20140531105537/http://www.networkworld.com/news/2012/120412-elgamal-264739.html |archivedate=31 May 2014}}</ref><ref name=\"Greene\">{{cite news |last=Greene |first=Tim |title=Father of SSL says despite attacks, the security linchpin has lots of life left |url= http://www.networkworld.com/news/2011/101111-elgamal-251806.html |work=Network World |accessdate=30 May 2014 |url-status=dead |archiveurl= https://web.archive.org/web/20140531105257/http://www.networkworld.com/news/2011/101111-elgamal-251806.html |archivedate=31 May 2014}}</ref><ref name=\"Oppliger\">{{cite book |title=SSL and TLS: Theory and Practice |edition=2nd |last=Oppliger |first=Rolf |year=2016 |chapter=Introduction |chapter-url=https://books.google.com/books?id=jm6uDgAAQBAJ&pg=PA15 |page=13 |publisher=[[Artech House]] |isbn=978-1-60807-999-5 |via=Google Books |access-date=2018-03-01}}</ref><ref>{{cite web |archiveurl= https://web.archive.org/web/19970614020952/http://home.netscape.com/newsref/std/SSL.html|archivedate=14 June 1997|title=THE SSL PROTOCOL|url=http://home.netscape.com/newsref/std/SSL.html|publisher=Netscape Corporation|year=2007}}</ref> SSLVersion 1.0 was never publicly released because of serious security flaws in the protocol. Version 2.0, released in February 1995, contained a number of security flaws which necessitated the design of version 3.0.<ref>Rescorla 2001</ref><ref name=\"Oppliger\"/> Released in 1996, SSL version 3.0 represented a complete redesign of the protocol produced by [[Paul Kocher]] working with Netscape engineers Phil Karlton and Alan Freier, with a reference implementation by Christopher Allen and Tim Dierks of Consensus Development. Newer versions of SSL/TLS are based on SSL 3.0. The 1996 draft of SSL 3.0 was published by IETF as a historical document in {{IETF RFC|6101}}.\n\nSSL 2.0 was deprecated in 2011 by {{IETF RFC|6176}}. In 2014, SSL 3.0 was found to be vulnerable to the [[POODLE]] attack that affects all [[block cipher]]s in SSL; [[RC4]], the only non-block cipher supported by SSL 3.0, is also feasibly broken as used in SSL 3.0.<ref name=\"Poodle\">{{cite web |url= https://access.redhat.com/articles/1232123 |title=POODLE: SSLv3 vulnerability (CVE-2014-3566) |accessdate=21 October 2014 |url-status=live |archiveurl= https://web.archive.org/web/20141205124712/https://access.redhat.com/articles/1232123 |archivedate=5 December 2014}}</ref> SSL 3.0 was deprecated in June 2015 by {{IETF RFC|7568}}.\n\n===TLS 1.0===\nTLS 1.0 was first defined in {{IETF RFC|2246}} in January 1999 as an upgrade of SSL Version 3.0, and written by Christopher Allen and Tim Dierks of Consensus Development. As stated in the RFC, \"the differences between this protocol and SSL 3.0 are not dramatic, but they are significant enough to preclude interoperability between TLS 1.0 and SSL 3.0\". Tim Dierks later wrote that these changes, and the renaming from \"SSL\" to \"TLS\", were a face-saving gesture to Microsoft, \"so it wouldn't look [like] the IETF was just rubberstamping Netscape's protocol\".<ref>{{Cite web|url=http://tim.dierks.org/2014/05/security-standards-and-name-changes-in.html|title=Security Standards and Name Changes in the Browser Wars|access-date=2020-02-29}}</ref>\n\nTLS 1.0 includes a means by which a TLS implementation can downgrade the connection to SSL 3.0, thus weakening security.<ref name=\"urlnvlpubs.nist.gov\">{{cite web|url=http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-52r1.pdf |title=Guidelines for the Selection, Configuration, and Use of Transport Layer Security (TLS) Implementations|authors=Polk, Tim; McKay, Terry; Chokhani, Santosh|date=April 2014 |publisher=National Institute of Standards and Technology|page=67 |archiveurl=https://web.archive.org/web/20140508025330/http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-52r1.pdf |archivedate=2014-05-08 |url-status=dead|accessdate=2014-05-07}}</ref>{{Rp|1\u20132}}\n\nThe [[Payment Card Industry Security Standards Council|PCI Council]] suggested that organizations migrate from TLS 1.0 to TLS 1.1 or higher before June 30, 2018.<ref>{{cite web |url=https://blog.pcisecuritystandards.org/migrating-from-ssl-and-early-tls |title=Date Change for Migrating from SSL and Early TLS |author=Laura K. Gray |date=2015-12-18 |website=[[Payment Card Industry Security Standards Council]] blog |access-date=2018-04-05}}</ref><ref>{{Cite news|url=https://www.forbes.com/sites/thesba/2018/05/30/changes-to-pci-compliance-are-coming-june-30-is-your-ecommerce-business-ready/|title=Changes to PCI Compliance are Coming June 30. Is Your Ecommerce Business Ready?|last=Company|first=Newtek - Your Business Solutions|work=Forbes|access-date=2018-06-20|language=en}}</ref> In October 2018, [[Apple Inc.|Apple]], [[Google]], [[Microsoft]], and [[Mozilla]] jointly announced they would deprecate TLS 1.0 and 1.1 in March 2020.<ref name=\":2\">{{cite web|url=https://arstechnica.com/gadgets/2018/10/browser-vendors-unite-to-end-support-for-20-year-old-tls-1-0/|title=Apple, Google, Microsoft, and Mozilla come together to end TLS 1.0|last=Bright|first=Peter|date=17 October 2018|accessdate=17 October 2018}}</ref>\n\n===TLS 1.1===\nTLS 1.1 was defined in {{IETF RFC|4346}} in April 2006.<ref>{{cite web |author1=Dierks, T. |author2=E. Rescorla |lastauthoramp=yes |title=The Transport Layer Security (TLS) Protocol Version 1.1 |rfc=4346 |date=April 2006 |url=http://tools.ietf.org/html/rfc5246#ref-TLS1.1 |url-status=live |archiveurl=https://web.archive.org/web/20171224222709/https://tools.ietf.org/html/rfc5246#ref-TLS1.1 |archivedate=2017-12-24}}</ref> It is an update from TLS version 1.0. Significant differences in this version include:\n* Added protection against [[Block cipher mode of operation#Cipher Block Chaining (CBC)|cipher-block chaining]] (CBC) attacks.\n** The implicit [[initialization vector]] (IV) was replaced with an explicit IV.\n** Change in handling of [[Block cipher mode of operation#Padding|padding errors]].\n* Support for [[Internet Assigned Numbers Authority|IANA]] registration of parameters.<ref name=\"urlnvlpubs.nist.gov\"/>{{Rp|2}}\n\n===TLS 1.2===\nTLS 1.2 was defined in {{IETF RFC|5246}} in August 2008. It is based on the earlier TLS 1.1 specification. Major differences include:\n* The [[MD5]]-[[SHA-1]] combination in the [[Pseudorandom function family|pseudorandom function]] (PRF) was replaced with [[SHA-2|SHA-256]], with an option to use [[cipher suite]] specified PRFs.\n* The MD5-SHA-1 combination in the finished message [[Hash function|hash]] was replaced with SHA-256, with an option to use cipher suite specific hash algorithms. However, the size of the hash in the finished message must still be at least 96 [[bit]]s.<ref>{{cite IETF |rfc=5246|title=The Transport Layer Security (TLS) Protocol Version 1.2|section=7.4.9|sectionname=Finished|date=August 2008|author=T. Dierks, E. Rescorla}}</ref>\n* The MD5-SHA-1 combination in the digitally signed element was replaced with a single hash negotiated during [[handshaking|handshake]], which defaults to SHA-1.\n* Enhancement in the client's and server's ability to specify which hashes and signature algorithms they accept.\n* Expansion of support for [[authenticated encryption]] ciphers, used mainly for [[Galois/Counter Mode]] (GCM) and [[CCM mode]] of [[Advanced Encryption Standard]] (AES) encryption.\n* TLS Extensions definition and AES cipher suites were added.<ref name=\"urlnvlpubs.nist.gov\"/>{{Rp|2}}\n\nAll TLS versions were further refined in {{IETF RFC|6176}} in March 2011, removing their backward compatibility with SSL such that TLS sessions never negotiate the use of Secure Sockets Layer (SSL) version 2.0.\n\n===TLS 1.3===\nTLS 1.3 was defined in {{IETF RFC|8446}} in August 2018. It is based on the earlier TLS 1.2 specification. Major differences from TLS 1.2 include:<ref name = \"WolfSSL, 2019\" >{{ Cite web | url = https://www.wolfssl.com/differences-between-tls-12-and-tls-13-9/ | title = Differences between TLS 1.2 and TLS 1.3 (#TLS13) | access-date = 2019-09-18 | date = 2019-09-18 | website = WolfSSL | archive-url = https://web.archive.org/web/20190919000200/https://www.wolfssl.com/differences-between-tls-12-and-tls-13-9/ | archive-date = 2019-09-19  | df = dmy-all }}</ref>\n* Separating key agreement and authentication algorithms from the cipher suites\n* Removing support for weak and less-used named [[elliptic-curve cryptography|elliptic curves]]\n* Removing support for MD5 and SHA-224 [[cryptographic hash function]]s\n* Requiring digital signatures even when a previous configuration is used\n* Integrating [[HKDF]] and the semi-ephemeral DH proposal\n* Replacing resumption with [[TLS-PSK|PSK]] and tickets\n* Supporting 1-[[round-trip delay time|RTT]] handshakes and initial support for 0-[[round-trip delay time|RTT]]\n* Mandating [[forward secrecy|perfect forward secrecy]], by means of using ephemeral keys during the (EC)DH key agreement\n* Dropping support for many insecure or obsolete features including [[Data compression|compression]], renegotiation, non-[[Authenticated encryption|AEAD]] ciphers, non-[[Forward secrecy|PFS]] key exchange (among which are static [[RSA (cryptosystem)|RSA]] and static [[Diffie\u2013Hellman key exchange|DH]] key exchanges), custom [[Diffie\u2013Hellman key exchange|DHE]] groups, EC point format negotiation, Change Cipher Spec protocol, Hello message UNIX time, and the length field AD input to AEAD ciphers\n* Prohibiting SSL or RC4 negotiation for backwards compatibility\n* Integrating use of session hash\n* Deprecating use of the record layer version number and freezing the number for improved backwards compatibility\n* Moving some security-related algorithm details from an appendix to the specification and relegating ClientKeyShare to an appendix\n* Adding the [[ChaCha20]] stream cipher with the [[Poly1305]] message authentication code\n* Adding the [[Ed25519]] and [[Ed448]] digital signature algorithms\n* Adding the [[x25519]] and [[x448]] key exchange protocols\n\n[[Network Security Services]] (NSS), the cryptography library developed by [[Mozilla]] and used by its web browser [[Firefox]], enabled TLS 1.3 by default in February 2017.<ref name=NSS-3.29>{{cite web|url=https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.29_release_notes|title=NSS 3.29 release notes|date=February 2017|publisher=Mozilla Developer Network|url-status=live|archiveurl=https://web.archive.org/web/20170222052829/https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.29_release_notes|archivedate=2017-02-22}}</ref> TLS 1.3 support was subsequently added \u2014 but due to compatibility issues for a small number of users, not automatically enabled<ref>{{cite web|url=https://bugzilla.mozilla.org/show_bug.cgi?id=1310516|title=Enable TLS 1.3 by default|date=16 October 2016|publisher=Bugzilla@Mozilla|accessdate=10 October 2017}}</ref> \u2014 to [[History of Firefox#Firefox 52 through 59|Firefox 52.0]], which was released in March 2017. TLS 1.3 was enabled by default in May 2018 with the release of [[History of Firefox#Firefox 60 through 67|Firefox 60.0]].<ref>{{Cite web|url=https://www.mozilla.org/en-US/firefox/60.0/releasenotes/|title=Firefox \u2014 Notes (60.0)|website=Mozilla|language=en-US|access-date=2018-05-10}}</ref>\n\n[[Google Chrome]] set TLS 1.3 as the default version for a short time in 2017. It then removed it as the default, due to incompatible middleboxes such as [[Blue Coat Systems|Blue Coat web proxies]].<ref>{{cite web |url=http://bluecoat.force.com/knowledgebase/articles/Technical_Alert/000032878 |title=ProxySG, ASG and WSS will interrupt SSL connections when clients using TLS 1.3 access sites also using TLS 1.3 |date=16 May 2017 |work=BlueTouch Online |accessdate=11 September 2017 |url-status=live |archiveurl=https://web.archive.org/web/20170912061432/http://bluecoat.force.com/knowledgebase/articles/Technical_Alert/000032878 |archivedate=12 September 2017}}</ref>\n\nDuring the IETF 100 [[Hackathon]] which took place in [[Singapore]], The TLS Group worked on adapting [[Open-source software|open-source applications]] to use TLS 1.3.<ref>{{Cite web|url=https://datatracker.ietf.org/meeting/100/materials/slides-100-hackathon-sessa-tls-13/|title=TLS 1.3 IETF 100 Hackathon|last=|first=|date=|website=|access-date=|url-status=dead|archiveurl=https://web.archive.org/web/20180115220635/https://datatracker.ietf.org/meeting/100/materials/slides-100-hackathon-sessa-tls-13/|archivedate=2018-01-15|df=}}</ref><ref name=\":1\">{{Citation|last=IETF \u2013 Internet Engineering Task Force|title=IETF Hackathon Presentations and Awards|date=2017-11-12|url=https://www.youtube.com/watch?v=33XW5yzjtME&t=2338|accessdate=2017-11-14}}</ref> The TLS group was made up of individuals from [[Japan]], [[United Kingdom]], and [[Mauritius]] via the cyberstorm.mu team.<ref name=\":1\" /> During the IETF 101 Hackathon which took place in [[London]], more work was done on application support of TLS 1.3.<ref>{{Cite news|url=https://www.theregister.co.uk/2018/03/27/with_tls_13_signed_off_its_implementation_time|title=Hurrah! TLS 1.3 is here. Now to implement it and put it into software|access-date=2018-03-28|language=en}}</ref> During IETF 102 Hackathon, work continued to inter-operate lesser known TLS 1.3 implementations along with application integration.<ref>{{Citation|last=IETF - Internet Engineering Task Force|title=IETF102-HACKATHON-20180715-1400|date=2018-07-15|url=https://www.youtube.com/watch?v=u6rz4PWA_As&t=4526|access-date=2018-07-18}}</ref>\n\n[[wolfSSL]] enabled the use of TLS 1.3 as of version 3.11.1, released in May 2017.<ref>{{cite web|url=https://www.wolfssl.com/wolfssl-tls-1-3-beta-release-now-available/|title=wolfSSL TLS 1.3 BETA Release Now Available|date=11 May 2017|publisher=info@wolfssl.com|accessdate=11 May 2017}}</ref> As the first commercial TLS 1.3 implementation, wolfSSL 3.11.1 supported Draft 18 and now supports Draft 28,<ref>{{cite web|url=https://www.wolfssl.com/docs/tls13/|title=TLS 1.3 PROTOCOL SUPPORT|publisher=info@wolfssl.com|date=|access-date=}}</ref> the final version, as well as many older versions. A series of blogs was published on the performance difference between TLS 1.2 and 1.3.<ref>{{cite web|url=https://www.wolfssl.com/tls-1-3-draft-28-support-wolfssl/|title=TLS 1.3 Draft 28 Support in wolfSSL|date=14 June 2018|publisher=info@wolfssl.com|accessdate=14 June 2018}}</ref>\n\nIn <time datetime=\"2018-09-11T12:00:00+00:00\">September 2018</time>, the popular [[OpenSSL]] project released version 1.1.1 of its library, in which support for TLS 1.3 was \"[t]he headline new feature\".<ref>{{cite web|url=https://www.openssl.org/blog/blog/2018/09/11/release111/|title=OpenSSL 1.1.1 Is Released|date=11 Sep 2018 <!-- 12:00:00 GMT --> |publisher=Matt Caswell|accessdate=19 Dec 2018 <!-- 05:44:54 GMT --> }}</ref>\n\n====Enterprise Transport Security====\nThe [[Electronic Frontier Foundation]] praised TLS 1.3 and expressed concern about the variant protocol '''Enterprise Transport Security''' ('''ETS''') that intentionally disables important security measures in TLS 1.3.<ref>{{Cite web|url=https://www.eff.org/deeplinks/2019/02/ets-isnt-tls-and-you-shouldnt-use-it|title=ETS Isn't TLS and You Shouldn't Use It|last=Hoffman-Andrews|first=Jacob|date=2019-02-26|website=[[Electronic Frontier Foundation]]|language=en|access-date=2019-02-27}}</ref> ETS is a published standard known as the '''ETSI TS103523-3''', \"Middlebox Security Protocol, Part3: Enterprise Transport Security\", and intended for use entirely within proprietary networks such as banking systems to enable detection of malware placement, unlawful data exfiltration, and compliance with regulatory auditing mandates.\n\n==Digital certificates==\n{{Main|Public key certificate}}\n[[File:Let's Encrypt Certificate Firefox example.png|thumb|Example of a website with digital certificate]]\nA digital certificate certifies the ownership of a public key by the named subject of the certificate, and indicates certain expected usages of that key. This allows others (relying parties) to rely upon signatures or on assertions made by the private key that corresponds to the certified public key.\n\n===Certificate authorities===\n{{Main|Certificate authority}}\nTLS typically relies on a set of trusted third-party certificate authorities to establish the authenticity of certificates. Trust is usually anchored in a list of certificates distributed with user agent software,<ref>{{Cite web|url=https://www.rsaconference.com/writable/presentations/file_upload/sec-t02_final.pdf|title=Alternatives to Certification Authorities for a Secure Web|last=Rea|first=Scott|date=2013|website=|publisher=RSA Conference Asia Pacific|access-date=7 September 2016|url-status=live|archiveurl=https://web.archive.org/web/20161007222635/https://www.rsaconference.com/writable/presentations/file_upload/sec-t02_final.pdf|archivedate=7 October 2016|df=}}</ref> and can be modified by the relying party.\n\nAccording to [[Netcraft]], who monitors active TLS certificates, the market-leading certificate authority (CA) has been [[NortonLifeLock|Symantec]] since the beginning of their survey (or [[Verisign|VeriSign]] before the authentication services business unit was purchased by Symantec). Symantec currently accounts for just under a third of all certificates and 44% of the valid certificates used by the 1 million busiest websites, as counted by Netcraft.<ref>[http://news.netcraft.com/archives/2015/05/13/counting-ssl-certificates.html Counting SSL certificates; netcraft; May 13, 2015.] {{webarchive|url=https://web.archive.org/web/20150516035536/http://news.netcraft.com/archives/2015/05/13/counting-ssl-certificates.html |date=May 16, 2015}}</ref>{{Update inline|reason=Symantec has since sold their CA business to DigiCert|date=August 2019}}\n\nAs a consequence of choosing [[X.509]] certificates, certificate authorities and a [[public key infrastructure]] are necessary to verify the relation between a certificate and its owner, as well as to generate, sign, and administer the validity of certificates. While this can be more convenient than verifying the identities via a [[web of trust]], the [[Global surveillance disclosures (2013\u2013present)|2013 mass surveillance disclosures]] made it more widely known that certificate authorities are a weak point from a security standpoint, allowing [[man-in-the-middle attack]]s (MITM) if the certificate authority cooperates (or is compromised).<ref>[https://www.wired.com/threatlevel/2010/03/packet-forensics/ Law Enforcement Appliance Subverts SSL] {{webarchive|url=https://web.archive.org/web/20140315064727/http://www.wired.com/threatlevel/2010/03/packet-forensics |date=2014-03-15}}, Wired, 2010-04-03.</ref><ref>[https://www.eff.org/deeplinks/2010/03/researchers-reveal-likelihood-governments-fake-ssl New Research Suggests That Governments May Fake SSL Certificates] {{webarchive|url=https://web.archive.org/web/20160104234608/https://www.eff.org/deeplinks/2010/03/researchers-reveal-likelihood-governments-fake-ssl |date=2016-01-04}}, EFF, 2010-03-24.</ref>\n\n==Algorithm==\n{{see also|Cipher suite}}\n\n===Key exchange or key agreement===\nBefore a client and server can begin to exchange information protected by TLS, they must securely exchange or agree upon an encryption key and a cipher to use when encrypting data (see [[#Cipher|\u00a7 Cipher]]). Among the methods used for key exchange/agreement are: public and private keys generated with [[RSA (algorithm)|RSA]] (denoted TLS_RSA in the TLS handshake protocol), [[Diffie\u2013Hellman]] (TLS_DH), ephemeral Diffie\u2013Hellman (TLS_DHE), [[elliptic-curve Diffie\u2013Hellman]] (TLS_ECDH), ephemeral elliptic-curve Diffie\u2013Hellman (TLS_ECDHE), [[Key-agreement protocol#Exponential key exchange|anonymous Diffie\u2013Hellman]] (TLS_DH_anon),<ref name=\"RFC5246\"/> [[TLS-PSK|pre-shared key]] (TLS_PSK)<ref name=RFC4279>{{cite web|title=Pre-Shared Key Ciphersuites for Transport Layer Security (TLS)|rfc=4279 |url=https://tools.ietf.org/html/rfc4279|publisher=Internet Engineering Task Force|accessdate=9 September 2013|author=P. Eronen, Ed.|url-status=live|archiveurl=https://web.archive.org/web/20130905074722/http://tools.ietf.org/html/rfc4279|archivedate=5 September 2013|df=}}</ref> and [[TLS-SRP|Secure Remote Password]] (TLS_SRP).<ref name=RFC5054>{{cite web |rfc=5054 |title=Using the Secure Remote Password (SRP) Protocol for TLS Authentication|url=https://tools.ietf.org/html/rfc5054|publisher=Internet Engineering Task Force|accessdate=December 21, 2014|author=D. Taylor, Ed.|url-status=live|archiveurl=https://web.archive.org/web/20141207151603/http://tools.ietf.org/html/rfc5054|archivedate=December 7, 2014|df=}}</ref>\n\nThe TLS_DH_anon and TLS_ECDH_anon key agreement methods do not authenticate the server or the user and hence are rarely used because those are vulnerable to [[man-in-the-middle attack]]s. Only TLS_DHE and TLS_ECDHE provide [[#Forward secrecy|forward secrecy]].\n\nPublic key certificates used during exchange/agreement also vary in the size of the public/private encryption keys used during the exchange and hence the robustness of the security provided. In July 2013, [[Google]] announced that it would no longer use 1024-bit public keys and would switch instead to 2048-bit keys to increase the security of the TLS encryption it provides to its users because the encryption strength is directly related to the [[key size]].<ref name=\":0\">{{cite web|last=Gothard|first=Peter|title=Google updates SSL certificates to 2048-bit encryption|url=http://www.computing.co.uk/ctg/news/2285984/google-updates-ssl-certificates-to-2048bit-encryption |work=Computing|publisher=Incisive Media|accessdate=9 September 2013|url-status=live |archiveurl=https://web.archive.org/web/20130922082322/http://www.computing.co.uk/ctg/news/2285984/google-updates-ssl-certificates-to-2048bit-encryption|archivedate=22 September 2013|df=}}</ref><ref>{{Cite news|url=http://searchsecurity.techtarget.com/answer/From-1024-to-2048-bit-The-security-effect-of-encryption-key-length|title=The value of 2,048-bit encryption: Why encryption key length matters |work=SearchSecurity|access-date=2017-12-18|language=en-US|url-status=live |archiveurl=https://web.archive.org/web/20180116081141/http://searchsecurity.techtarget.com/answer/From-1024-to-2048-bit-The-security-effect-of-encryption-key-length|archivedate=2018-01-16|df=}}</ref>\n\n{{anchor|keyexchange-table}}\n{| class=\"wikitable\" style=\"text-align:center\"\n|+ Key exchange/agreement and authentication\n! Algorithm !! SSL 2.0 !! SSL 3.0 !! TLS 1.0 !! TLS 1.1 !! TLS 1.2 !! TLS 1.3!! Status\n|-\n! {{Depends|[[RSA (cryptosystem)|RSA]]}}\n| {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{N/A|No}} || rowspan=\"19\"| Defined for TLS 1.2 in RFCs\n|-\n!{{Depends|[[Diffie\u2013Hellman key exchange|DH]]-[[RSA (cryptosystem)|RSA]]}}\n| {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{N/A|No}}\n|-\n!{{Good|[[Diffie\u2013Hellman key exchange|DHE]]-[[RSA (cryptosystem)|RSA]] ([[#Forward secrecy|forward secrecy]])}}\n| {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}}\n|-\n!{{Depends|[[Elliptic-curve Diffie\u2013Hellman|ECDH]]-[[RSA (cryptosystem)|RSA]]}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{N/A|No}}\n|-\n!{{Good|[[Elliptic-curve Diffie\u2013Hellman|ECDHE]]-[[RSA (cryptosystem)|RSA]] ([[#Forward secrecy|forward secrecy]])}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}}\n|-\n!{{Depends|[[Diffie\u2013Hellman key exchange|DH]]-[[Digital Signature Algorithm|DSS]]}}\n| {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{N/A|No}}\n|-\n!{{Good|[[Diffie\u2013Hellman key exchange|DHE]]-[[Digital Signature Algorithm|DSS]] ([[#Forward secrecy|forward secrecy]])}}\n| {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{N/A|No}}<ref>{{cite web|url=https://www.ietf.org/mail-archive/web/tls/current/msg17680.html|title=Consensus: remove DSA from TLS 1.3|date=September 17, 2015|author=Sean Turner|url-status=live|archiveurl=https://web.archive.org/web/20151003193113/http://www.ietf.org/mail-archive/web/tls/current/msg17680.html|archivedate=October 3, 2015|df=}}</ref>\n|-\n!{{Depends|[[Elliptic-curve Diffie\u2013Hellman|ECDH]]-[[Elliptic Curve DSA|ECDSA]]}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{N/A|No}}\n|-\n!{{Good|[[Elliptic-curve Diffie\u2013Hellman|ECDHE]]-[[Elliptic Curve DSA|ECDSA]] ([[#Forward secrecy|forward secrecy]])}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}}\n|-\n!{{Depends|[[TLS-PSK|PSK]]}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|-\n!{{Depends|[[Pre-shared key|PSK]]-[[RSA (cryptosystem)|RSA]]}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|-\n!{{Good|[[Diffie\u2013Hellman key exchange|DHE]]-[[Pre-shared key|PSK]] ([[#Forward secrecy|forward secrecy]])}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|-\n!{{Good|[[Elliptic-curve Diffie\u2013Hellman|ECDHE]]-[[Pre-shared key|PSK]] ([[#Forward secrecy|forward secrecy]])}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|-\n!{{Depends|[[TLS-SRP|SRP]]}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|-\n!{{Depends|[[Secure Remote Password protocol|SRP]]-[[Digital Signature Algorithm|DSS]]}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|-\n!{{Depends|[[Secure Remote Password protocol|SRP]]-[[RSA (cryptosystem)|RSA]]}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|-\n!{{Depends|[[Kerberos (protocol)|Kerberos]]}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|-\n! {{Bad|[[Diffie\u2013Hellman key exchange|DH]]-ANON (insecure)}}\n| {{N/a|No}} || {{No|Yes}} || {{No|Yes}} || {{No|Yes}} || {{No|Yes}} ||\n|-\n! {{Bad|[[Elliptic-curve Diffie\u2013Hellman|ECDH]]-ANON (insecure)}}\n| {{N/a|No}} || {{N/a|No}} || {{No|Yes}} || {{No|Yes}} || {{No|Yes}} ||\n|-\n!{{Good|[[GOST|GOST R 34.10-94 / 34.10-2001]]<ref name=gostlink>[//tools.ietf.org/html/draft-chudov-cryptopro-cptls-04 draft-chudov-cryptopro-cptls-04 \u2013 GOST 28147-89 Cipher Suites for Transport Layer Security (TLS)]</ref>}}\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n| Proposed in RFC drafts\n|}\n\n===Cipher===\n{{see also|Cipher suite|Block cipher|Cipher security summary}}\n{{Anchor|cipher-table}}\n{| class=\"wikitable\" style=\"text-align:center\"\n|+[[Cipher]] security against publicly known feasible attacks\n|-\n! colspan=\"3\"|Cipher !! colspan=\"6\"|Protocol version !! rowspan=\"2\"|Status\n|-\n! Type\n! Algorithm\n! Nominal strength (bits)\n! SSL 2.0\n! SSL 3.0<br /><ref group=\"n\" name=\"rfc5746\">{{IETF RFC|5746}} must be implemented to fix a renegotiation flaw that would otherwise break this protocol.</ref><ref group=\"n\" name=\"renegotiation\">If libraries implement fixes listed in {{IETF RFC|5746}}, this violates the SSL 3.0 specification, which the IETF cannot change unlike TLS. Most current libraries implement the fix and disregard the violation that this causes.</ref><ref group=\"n\" name=\"BEAST\">The [[#BEAST attack|BEAST]] attack breaks all block ciphers (CBC ciphers) used in SSL 3.0 and TLS 1.0 unless mitigated by the client and/or the server. See [[#Web browsers|\u00a7 Web browsers]].</ref><ref group=\"n\" name=\"POODLEciphertable\">The [[#POODLE|POODLE]] attack breaks all block ciphers (CBC ciphers) used in SSL 3.0 unless mitigated by the client and/or the server. See [[#Web browsers|\u00a7 Web browsers]].</ref>\n! TLS 1.0<br /><ref group=\"n\" name=\"rfc5746\"/><ref group=\"n\" name=\"BEAST\"/>\n! TLS 1.1<br /><ref group=\"n\" name=\"rfc5746\"/>\n! TLS 1.2<br /><ref group=\"n\" name=\"rfc5746\"/>\n! TLS 1.3<br />\n|-\n! rowspan=\"14\"|[[Block cipher]]<br />with<br />[[Block cipher mode of operation|mode of operation]]\n![[Advanced Encryption Standard|AES]] [[Galois/Counter Mode|GCM]]<ref name=\"aes-gcm\">{{IETF RFC|5288|5289}}</ref><ref group=\"n\" name=\"aead\">[[AEAD block cipher modes of operation|AEAD]] ciphers (such as [[Galois/Counter Mode|GCM]] and [[CCM mode|CCM]]) can only be used in TLS 1.2 or later.</ref>\n| rowspan=\"3\"| 256, 128\n| {{N/a}} || {{N/a}} || {{N/a}} || {{N/a}} || {{Good|Secure}} || {{Good|Secure}} || rowspan=\"9\"| Defined for TLS 1.2 in RFCs\n|-\n![[Advanced Encryption Standard|AES]] [[CCM mode|CCM]]<ref name=\"aes-ccm\">{{IETF RFC|6655|7251}}</ref><ref group=\"n\" name=\"aead\"/>\n| {{N/a}} || {{N/a}} || {{N/a}} || {{N/a}} || {{Good|Secure}} || {{Good|Secure}}\n|-\n![[Advanced Encryption Standard|AES]] [[Cipher block chaining|CBC]]<ref group=\"n\" name=\"Lucky13\"/>\n| {{N/a}} || {{N/a}} || {{Depends|Depends on mitigations}} || {{Depends|Depends on mitigations}} || {{Depends|Depends on mitigations}} || {{N/a}}\n|-\n![[Camellia (cipher)|Camellia]] [[Galois/Counter Mode|GCM]]<ref name=\"camellia-gcm\">{{IETF RFC|6367}}</ref><ref group=\"n\" name=\"aead\"/>\n| rowspan=\"2\"| 256, 128\n| {{N/a}} || {{N/a}} || {{N/a}} || {{N/a}} || {{Good|Secure}} || {{N/a}}\n|-\n![[Camellia (cipher)|Camellia]] [[Cipher block chaining|CBC]]<ref name=\"camellia-cbc\">{{IETF RFC|5932|6367}}</ref><ref group=\"n\" name=\"Lucky13\"/>\n| {{N/a}} || {{N/a}} || {{Depends|Depends on mitigations}} || {{Depends|Depends on mitigations}} || {{Depends|Depends on mitigations}} || {{N/a}}\n|-\n![[ARIA (cipher)|ARIA]] [[Galois/Counter Mode|GCM]]<ref name=aria/><ref group=\"n\" name=\"aead\"/>\n| rowspan=\"2\"| 256, 128\n| {{N/a}} || {{N/a}} || {{N/a}} || {{N/a}} || {{Good|Secure}} || {{N/a}}\n|-\n![[ARIA (cipher)|ARIA]] [[Cipher block chaining|CBC]]<ref name=\"aria\">{{IETF RFC|6209}}</ref><ref group=\"n\" name=\"Lucky13\"/>\n| {{N/a}} || {{N/a}} || {{Depends|Depends on mitigations}} || {{Depends|Depends on mitigations}} || {{Depends|Depends on mitigations}} || {{N/a}}\n|-\n![[SEED (cipher)|SEED]] [[Cipher block chaining|CBC]]<ref name=\"seed-cbc\">{{IETF RFC|4162}}</ref><ref group=\"n\" name=\"Lucky13\"/>\n| 128\n| {{N/a}} || {{N/a}} || {{Depends|Depends on mitigations}} || {{Depends|Depends on mitigations}} || {{Depends|Depends on mitigations}} || {{N/a}}\n|-\n! [[Triple DES|3DES EDE]] [[Cipher block chaining|CBC]]<ref group=\"n\" name=\"Lucky13\">CBC ciphers can be attacked with the [[Lucky Thirteen attack]] if the library is not written carefully to eliminate timing side channels.</ref>{{refn|group=\"n\"|name=\"Sweet32\"|The Sweet32 attack breaks block ciphers with a block size of 64 bits.<ref name=\"sweet32\">{{cite web |url=https://sweet32.info/SWEET32_CCS16.pdf |title=On the Practical (In-)Security of 64-bit Block Ciphers \u2014 Collision Attacks on HTTP over TLS and OpenVPN |date=2016-10-28 |accessdate=2017-06-08 |url-status=live |archiveurl=https://web.archive.org/web/20170424021101/https://sweet32.info/SWEET32_CCS16.pdf |archivedate=2017-04-24}}</ref>}}\n| 112{{refn|group=\"n\"|name=\"3des\"|Although the key length of 3DES is 168 bits, effective security strength of 3DES is only 112 bits,<ref name=NIST_SP_800-57>{{cite web|url=http://csrc.nist.gov/publications/nistpubs/800-57/sp800-57-Part1-revised2_Mar08-2007.pdf |title=NIST Special Publication 800-57 ''Recommendation for Key Management \u2014 Part 1: General (Revised)'' |date=2007-03-08 |accessdate=2014-07-03 |url-status=dead |archiveurl=https://web.archive.org/web/20140606050814/http://csrc.nist.gov/publications/nistpubs/800-57/sp800-57-Part1-revised2_Mar08-2007.pdf |archivedate=June 6, 2014}}</ref> which is below the recommended minimum of 128 bits.<ref name=\"best-practices\">{{cite web|url=https://www.ssllabs.com/projects/best-practices/index.html|title=SSL/TLS Deployment Best Practices|author=Qualys SSL Labs|accessdate=2 June 2015|url-status=live|archiveurl=https://web.archive.org/web/20150704101956/https://www.ssllabs.com/projects/best-practices/index.html|archivedate=4 July 2015|df=}}</ref>}}\n| {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}}\n|-\n![[GOST (block cipher)|GOST 28147-89]] [[Block cipher mode of operation#Counter (CTR)|CNT]]<ref name=gostlink/><ref group=\"n\" name=\"Sweet32\"/>\n| 256\n| {{N/a}} || {{N/a}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}} || Defined in {{IETF RFC|4357}}\n|-\n![[International Data Encryption Algorithm|IDEA]] [[Cipher block chaining|CBC]]<ref group=\"n\" name=\"Lucky13\"/><ref group=\"n\" name=\"Sweet32\"/>{{refn|group=\"n\"|name=\"removal_from_tls1.2\"|IDEA and DES have been removed from TLS 1.2.<ref>{{IETF RFC|5469}}</ref>}}\n| 128\n| {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}} || {{N/a}} || rowspan=\"2\"| Removed from TLS 1.2\n|-\n!rowspan=\"2\"| [[Data Encryption Standard|DES]] [[Cipher block chaining|CBC]]<ref group=\"n\" name=\"Lucky13\"/><ref group=\"n\" name=\"Sweet32\"/><ref group=\"n\" name=\"removal_from_tls1.2\"/>\n| {{0}}56\n| {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}} || {{N/a}}\n|-\n| {{0}}40<ref group=\"n\" name=\"EXPORT\">40-bit strength cipher suites were intentionally designed with reduced key lengths to comply with since-rescinded US regulations forbidding the export of cryptographic software containing certain strong encryption algorithms (see [[Export of cryptography from the United States]]). These weak suites are forbidden in TLS 1.1 and later.</ref>\n| {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}} || {{N/a}} || {{N/a}} || rowspan=\"2\"| Forbidden in TLS 1.1 and later\n|-\n![[RC2]] [[Cipher block chaining|CBC]]<ref group=\"n\" name=\"Lucky13\"/><ref group=\"n\" name=\"Sweet32\"/>\n| {{0}}40<ref group=\"n\" name=\"EXPORT\"/>\n| {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}} || {{N/a}} || {{N/a}}\n|-\n! rowspan=\"3\"|[[Stream cipher]]\n![[ChaCha20]]-[[Poly1305]]<ref name=\"chacha20poly1305\">{{IETF RFC|7905}}</ref><ref group=\"n\" name=\"aead\"/>\n| 256\n| {{N/a}} || {{N/a}} || {{N/a}} || {{N/a}} || {{Good|Secure}} || {{Good|Secure}} || Defined for TLS 1.2 in RFCs\n|-\n!rowspan=\"2\"| [[RC4]]<ref group=\"n\" name=\"RC4\">Use of RC4 in all versions of TLS is prohibited by {{IETF RFC|7465}} (because [[#RC4 attacks|RC4 attacks]] weaken or break RC4 used in SSL/TLS).</ref>\n| 128\n| {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}} || rowspan=\"2\"| Prohibited in all versions of TLS by {{IETF RFC|7465}}\n|-\n| {{0}}40<ref group=\"n\" name=\"EXPORT\"/>\n| {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}} || {{N/a}} || {{N/a}}\n|-\n! None\n! Null<ref group=\"n\">Authentication only, no encryption.</ref>\n| \u2013\n| {{N/a}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{Bad|Insecure}} || {{N/a}} || Defined for TLS 1.2 in RFCs\n|}\n;Notes\n{{reflist|group=\"n\"}}\n\n===Data integrity===\nA [[message authentication code]] (MAC) is used for data integrity. [[HMAC]] is used for [[Cipher block chaining|CBC]] mode of block ciphers and stream ciphers. [[AEAD block cipher modes of operation|AEAD]] is used for [[authenticated encryption]] such as [[Galois/Counter Mode|GCM mode]] and [[CCM mode]].\n{{Anchor|integrity-table}}\n{| class=\"wikitable\" style=\"text-align:center\"\n|+ Data integrity\n! Algorithm !! SSL 2.0 !! SSL 3.0 !! TLS 1.0 !! TLS 1.1 !! TLS 1.2 !! TLS 1.3 !! Status\n|-\n! [[HMAC]]-[[MD5]]\n| {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{No}} || rowspan=\"4\" | Defined for TLS 1.2 in RFCs\n|-\n! [[HMAC]]-[[SHA-1|SHA1]]\n| {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || {{Yes}} || {{No}}\n|-\n! [[HMAC]]-[[SHA-2|SHA256/384]]\n| {{No}} || {{No}} || {{No}} || {{No}} || {{Yes}} || {{No}}\n|-\n! [[AEAD block cipher modes of operation|AEAD]]\n| {{No}} || {{No}} || {{No}} || {{No}} || {{Yes}} || {{Yes}}\n|-\n! [[GOST 28147-89|GOST 28147-89 IMIT]]<ref name=gostlink/>\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} || || rowspan=\"2\" | Proposed in RFC drafts\n|-\n! [[GOST (hash function)|GOST R 34.11-94]]<ref name=gostlink/>\n| {{No}} || {{No}} || {{Yes}} || {{Yes}} || {{Yes}} ||\n|}\n\n==Applications and adoption==\nIn applications design, TLS is usually implemented on top of Transport Layer protocols, encrypting all of the protocol-related data of protocols such as [[Hypertext Transfer Protocol|HTTP]], [[File Transfer Protocol|FTP]], [[Simple Mail Transfer Protocol|SMTP]], [[Network News Transfer Protocol|NNTP]] and [[Extensible Messaging and Presence Protocol|XMPP]].\n\nHistorically, TLS has been used primarily with reliable transport protocols such as the [[Transmission Control Protocol]] (TCP). However, it has also been implemented with datagram-oriented transport protocols, such as the [[User Datagram Protocol]] (UDP) and the [[Datagram Congestion Control Protocol]] (DCCP), usage of which has been standardized independently using the term [[Datagram Transport Layer Security]] (DTLS).\n\n===Websites===\nA primary use of TLS is to secure [[World Wide Web]] traffic between a [[website]] and a [[web browser]] encoded with the HTTP protocol. This use of TLS to secure HTTP traffic constitutes the [[https|HTTPS]] protocol.<ref>{{cite web |url=https://www.instantssl.com/ssl-certificate-products/https.html |title=Http vs https |accessdate=2015-02-12 |url-status=live |archiveurl=https://web.archive.org/web/20150212105201/https://www.instantssl.com/ssl-certificate-products/https.html |archivedate=2015-02-12}}</ref>\n{|class=\"wikitable\" style=\"text-align: center;\"\n|+Website protocol support\n|-\n!Protocol<br />version\n!Website<br />support<ref name=\"trustworthy_ssl_pulse\">As of August 3, 2019. {{cite web |url=https://www.ssllabs.com/ssl-pulse/ |title=SSL Pulse: Survey of the SSL Implementation of the Most Popular Websites |website=[[Qualys]] |accessdate=2019-09-01}}</ref>\n!Security<ref name=\"trustworthy_ssl_pulse\"/><ref name=\"community.qualys\">{{cite web|url=https://community.qualys.com/blogs/securitylabs/2013/03/19/rc4-in-tls-is-broken-now-what|accessdate=2013-07-30|publisher=Qualsys Security Labs|author=ivanr|title=RC4 in TLS is Broken: Now What?|url-status=live|archiveurl=https://web.archive.org/web/20130827044512/https://community.qualys.com/blogs/securitylabs/2013/03/19/rc4-in-tls-is-broken-now-what|archivedate=2013-08-27}}</ref>\n|-\n!SSL 2.0\n|1.6%\n|{{Bad|Insecure}}\n|-\n!SSL 3.0\n|6.7%\n|{{Bad|Insecure<ref name=\"poodle_pdf\" />}}\n|-\n!TLS 1.0\n|65.0%\n|{{Depends|Depends on cipher<ref group=\"n\" name=\"ciphers\">see [[#Cipher|\u00a7 Cipher]] table above</ref> and client mitigations<ref group=\"n\" name=\"mitigations\">see [[#Web browsers|\u00a7 Web browsers]] and [[#Attacks against TLS/SSL|\u00a7 Attacks against TLS/SSL]] sections</ref>}}\n|-\n!TLS 1.1\n|75.1%\n|{{Depends|Depends on cipher<ref group=\"n\" name=\"ciphers\"/> and client mitigations<ref group=\"n\" name=\"mitigations\"/>}}\n|-\n!TLS 1.2\n|96.0%\n|{{Depends|Depends on cipher<ref group=\"n\" name=\"ciphers\"/> and client mitigations<ref group=\"n\" name=\"mitigations\"/>}}\n|-\n!TLS 1.3\n|18.4%\n|{{Good|Secure}}\n|}\n;Notes\n{{reflist|group=\"n\"}}\n\n===Web browsers===\n{{Further|Comparison of web browsers}}\n{{As of|2016|04}}, the latest versions of all major web browsers support TLS 1.0, 1.1, and 1.2, and have them enabled by default. However, not all supported [[List of Microsoft operating systems|Microsoft operating systems]] support the latest version of IE. Additionally, many operating systems currently support multiple versions of IE, but this has changed according to Microsoft's [https://support.microsoft.com/en-us/gp/microsoft-internet-explorer Internet Explorer Support Lifecycle Policy FAQ], \"beginning January 12, 2016, only the most current version of Internet Explorer available for a supported operating system will receive technical support and security updates.\" The page then goes on to list the latest supported version of IE at that date for each operating system. The next critical date would be when an operating system reaches the end of life stage, which is in Microsoft's [https://windows.microsoft.com/en-us/windows/lifecycle Windows lifecycle fact sheet].\n\nMitigations against known attacks are not enough yet:\n* Mitigations against [[#POODLE attack|POODLE attack]]: some browsers already prevent fallback to SSL 3.0; however, this mitigation needs to be supported by not only clients but also servers. Disabling SSL 3.0 itself, implementation of \"anti-POODLE record splitting\", or denying CBC ciphers in SSL 3.0 is required.\n** Google Chrome: complete (TLS_FALLBACK_SCSV is implemented since version 33, fallback to SSL 3.0 is disabled since version 39, SSL 3.0 itself is disabled by default since version 40. Support of SSL 3.0 itself was dropped since version 44.)\n** Mozilla Firefox: complete (support of SSL 3.0 itself is dropped since [[History of Firefox#Version 38\u201344|version 39]]. SSL 3.0 itself is disabled by default and fallback to SSL 3.0 are disabled since [[History of Firefox#Version 31\u201337|version 34]], TLS_FALLBACK_SCSV is implemented since version 35. In ESR, SSL 3.0 itself is disabled by default and TLS_FALLBACK_SCSV is implemented since ESR 31.3.)\n** Internet Explorer: partial (only in version 11, SSL 3.0 is disabled by default since April 2015. Version 10 and older are still vulnerable against POODLE.)\n** [[Opera (web browser)|Opera]]: complete (TLS_FALLBACK_SCSV is implemented since version 20, \"anti-POODLE record splitting\", which is effective only with client-side implementation, is implemented since version 25, SSL 3.0 itself is disabled by default since version 27. Support of SSL 3.0 itself will be dropped since version 31.)\n** Safari: complete (only on OS X 10.8 and later and iOS 8, CBC ciphers during fallback to SSL 3.0 is denied, but this means it will use RC4, which is not recommended as well. Support of SSL 3.0 itself is dropped on OS X 10.11 and later and iOS 9.)\n* Mitigation against [[#RC4 attacks|RC4 attacks]]:\n** Google Chrome disabled RC4 except as a fallback since version 43. RC4 is disabled since Chrome 48.\n** Firefox disabled RC4 except as a fallback since version 36. Firefox 44 disabled RC4 by default.\n** Opera disabled RC4 except as a fallback since version 30. RC4 is disabled since Opera 35.\n** Internet Explorer for [[Windows 7]] / Server 2008 R2 and for [[Windows 8]] / Server 2012 have set the priority of RC4 to lowest and can also disable RC4 except as a fallback through registry settings. Internet Explorer 11 Mobile 11 for [[Windows Phone 8.1]] disable RC4 except as a fallback if no other enabled algorithm works. Edge and IE 11 disable RC4 completely in August 2016.\n* Mitigation against [[Transport Layer Security#FREAK|FREAK attack]]:\n** The Android Browser included with [[Android Ice Cream Sandwich|Android 4]] and older is still vulnerable to the FREAK attack.\n** Internet Explorer 11 Mobile is still vulnerable to the FREAK attack.\n** Google Chrome, Internet Explorer (desktop), Safari (desktop & mobile), and Opera (mobile) have FREAK mitigations in place.\n** Mozilla Firefox on all platforms and Google Chrome on Windows were not affected by FREAK.\n\n{{clear}}\n{|class=\"wikitable\" id=\"browsersTLS\" style=\"text-align: center; font-size: smaller; margin-top: 0px;\"\n|+'''TLS/SSL support history of web browsers'''\n! rowspan=\"2\" | Browser\n! colspan=\"2\" rowspan=\"2\" | Version\n! rowspan=\"2\" | Platforms\n! colspan=\"2\" | SSL protocols\n! colspan=\"4\" | TLS protocols\n! colspan=\"3\" | Certificate support\n! colspan=\"6\" | Vulnerabilities fixed{{refn | group=\"n\" | name=\"note-sec\" |Does the browser have mitigations or is not vulnerable for the known attacks. Note actual security depends on other factors such as negotiated cipher, encryption strength etc (see [[#Cipher|\u00a7 Cipher]] table).}}\n! rowspan=\"2\" | Protocol selection by user<br /><ref group=\"n\" name=\"note-poodle\">Whether a user or administrator can choose the protocols to be used or not. If yes, several attacks such as BEAST (vulnerable in SSL 3.0 and TLS 1.0) or POODLE (vulnerable in SSL 3.0) can be avoided.</ref>\n|-\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! [[Extended Validation Certificate|EV]]<br /><ref group=\"n\" name=\"note-evssl\">Whether EV SSL and DV SSL (normal SSL) can be distinguished by indicators (green lock icon, green address bar, etc.) or not.</ref><ref name=\"EVSSLbrowser\">{{cite web |url=https://knowledge.verisign.com/support/ssl-certificates-support/index?page=content&id=SO10090&actp=search&viewlocale=en_US&searchid=1406590748892 |title=What browsers support Extended Validation (EV) and display an EV indicator? |publisher=[[NortonLifeLock|Symantec]] |accessdate=2014-07-28 |url-status=dead |archiveurl=https://web.archive.org/web/20151231171309/https://knowledge.verisign.com/support/ssl-certificates-support/index?page=content&id=SO10090&actp=search&viewlocale=en_US&searchid=1406590748892 |archivedate=2015-12-31}}</ref>\n! [[SHA-2]]<br /><ref name=\"SHA-2\">{{cite web |title=SHA-256 Compatibility |accessdate=2015-06-12 |url=https://support.globalsign.com/customer/portal/articles/1499561-sha-256-compatibility |url-status=live |archiveurl=https://web.archive.org/web/20150701004324/https://support.globalsign.com/customer/portal/articles/1499561-sha-256-compatibility |archivedate=2015-07-01}}</ref>\n! [[ECDSA]]<br /><ref name=\"ECC\">{{cite web |title=ECC Compatibility |accessdate=2015-06-13 |url=https://support.globalsign.com/customer/portal/articles/1995283-ecc-compatibility |url-status=live |archiveurl=https://web.archive.org/web/20160217122951/https://support.globalsign.com/customer/portal/articles/1995283-ecc-compatibility |archivedate=2016-02-17}}</ref>\n! BEAST<ref group=\"n\" name=\"note-BEASTmitigation\">e.g. 1/n-1 record splitting.</ref>\n! CRIME<ref group=\"n\" name=\"note-CRIMEmitigation\">e.g. Disabling header compression in HTTPS/SPDY.</ref>\n! POODLE (SSLv3)<ref group=\"n\" name=\"note-POODLEmitigation\">\n* Complete mitigations; disabling SSL 3.0 itself, \"anti-POODLE record splitting\". \"Anti-POODLE record splitting\" is effective only with client-side implementation and valid according to the SSL 3.0 specification, however, it may also cause compatibility issues due to problems in server-side implementations.\n* Partial mitigations; disabling fallback to SSL 3.0, TLS_FALLBACK_SCSV, disabling cipher suites with [[Block cipher mode of operation#Cipher-block chaining (CBC)|CBC mode of operation]]. If the server also supports TLS_FALLBACK_SCSV, the POODLE attack will fail against this combination of server and browser, but connections where the server does not support TLS_FALLBACK_SCSV and does support SSL 3.0 will still be vulnerable. If disabling cipher suites with CBC mode of operation in SSL 3.0, only cipher suites with RC4 are available, RC4 attacks become easier.\n* When disabling SSL 3.0 manually, POODLE attack will fail.</ref>\n! RC4<ref group=\"n\" name=\"note-RC4mitigation\">\n* Complete mitigation; disabling cipher suites with RC4.\n* Partial mitigations to keeping compatibility with old systems; setting the priority of RC4 to lower.</ref>\n! FREAK<ref name=\"note-FREAK-1\">{{cite web|url=https://freakattack.com/|title=Tracking the FREAK Attack|accessdate=2015-03-08|url-status=live|archiveurl=https://web.archive.org/web/20150306174623/https://freakattack.com/|archivedate=2015-03-06|df=}}</ref><ref name=\"note-FREAK-2\">{{cite web|url=https://www.smacktls.com/#freak|title=FREAK: Factoring RSA Export Keys|accessdate=2015-03-08|url-status=live|archiveurl=https://web.archive.org/web/20150311112517/https://www.smacktls.com/#freak|archivedate=2015-03-11|df=}}</ref>\n! Logjam\n|-\n! rowspan=\"16\" | [[Google Chrome]]<br /><small>([[Google Chrome for Android|Chrome for Android]])</small><br />{{refn |group=\"n\" |name=\"note-a\" |[[Google Chrome]] (and [[Chromium (web browser)|Chromium]]) supports TLS 1.0, and TLS 1.1 from version 22 (it was added, then dropped from version 21). TLS 1.2 support has been added, then dropped from Chrome 29.<ref name=\"Google\">{{cite web |author=Google |url=http://googlechromereleases.blogspot.nl/2012/05/dev-channel-update_29.html |title=Dev Channel Update |date=2012-05-29 |accessdate=2011-06-01 |url-status=live |archiveurl=https://web.archive.org/web/20130302032339/http://googlechromereleases.blogspot.nl/2012/05/dev-channel-update_29.html |archivedate=2013-03-02}}</ref><ref name=\"googlechromereleases.blogspot.co.uk\">{{cite web |author=Google |url=https://googlechromereleases.blogspot.co.uk/2012/08/stable-channel-update_21.html |title=Stable Channel Update |date=2012-08-21 |accessdate=2012-08-22 |url-status=live |archiveurl=https://web.archive.org/web/20120825192441/http://googlechromereleases.blogspot.co.uk/2012/08/stable-channel-update_21.html |archivedate=2012-08-25}}</ref><ref name=\"Chromium Project\">{{cite web |author=Chromium Project |url=https://src.chromium.org/viewvc/chrome?revision=203090&view=revision |title=Chromium TLS 1.2 Implementation |date=2013-05-30}}</ref>}}<br />{{refn |group=\"n\" |name=\"note-b\" |Uses the TLS implementation provided by [[BoringSSL]] for Android, OS X, and Windows<ref name=\"The Chromium Project: BoringSSL\">{{cite web|url=https://www.chromium.org/Home/chromium-security/boringssl|title=The Chromium Project: BoringSSL|accessdate=2015-09-05|url-status=live|archiveurl=https://web.archive.org/web/20150923033459/http://www.chromium.org/Home/chromium-security/boringssl|archivedate=2015-09-23|df=}}</ref> or by [[Network Security Services|NSS]] for Linux. Google is switching the TLS library used in Chrome to BoringSSL from NSS completely.}}\n| colspan=\"2\" style=\"background:salmon;\" | 1\u20139\n| rowspan=\"16\" | [[Microsoft Windows|Windows&nbsp;<small>(7+)</small>]]<br />[[macOS|macOS&nbsp;<small>(10.10+)</small>]]<br />[[Linux]]<br />[[Android (operating system)|Android&nbsp;<small>(4.4+)</small>]]<br />[[iOS|iOS&nbsp;<small>(10.0+)</small>]]<br />[[Chrome OS]]\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected<br /><ref name=ChromeBEAST>{{cite web|url=http://googlechromereleases.blogspot.jp/2011/10/chrome-stable-release.html|title=Chrome Stable Release|work=Chrome Releases|date=2011-10-25|accessdate=2015-02-01|url-status=live|archiveurl=https://web.archive.org/web/20150220020306/http://googlechromereleases.blogspot.jp/2011/10/chrome-stable-release.html|archivedate=2015-02-20|df=}}</ref>}}\n| {{No|Vulnerable<br /><small>(HTTPS)</small>}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\">configure enabling/disabling of each protocols via setting/option (menu name is dependent on browsers)</ref>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 10\u201320\n| {{Yes|No}}<ref name=\"build.chromium.org\">{{cite web|url=https://build.chromium.org/f/chromium/perf/dashboard/ui/changelog.html?url=/trunk/src&range=72316:67679&mode=html|archive-url=https://archive.today/20140619142454/http://build.chromium.org/f/chromium/perf/dashboard/ui/changelog.html?url=/trunk/src&range=72316:67679&mode=html|url-status=dead|archive-date=2014-06-19|title=SVN revision log on Chrome 10.0.648.127 release|accessdate=2014-06-19}}</ref>\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{No|Vulnerable<br /><small>(HTTPS/SPDY)</small>}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 21\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated<br /><ref name=\"CRIME-Chrome=Firefox\">{{cite web|url=https://www.imperialviolet.org/2012/09/21/crime.html|title=ImperialViolet \u2013 CRIME|date=2012-09-22|accessdate=2014-10-18|url-status=live|archiveurl=https://web.archive.org/web/20150110195746/https://www.imperialviolet.org/2012/09/21/crime.html|archivedate=2015-01-10|df=}}</ref>}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 22\u201329\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}<ref name=\"SSL/TLS Overview\">{{cite web |url=https://sites.google.com/site/tlsssloverview/ssl-v-tls/tls-versions-and-browser-compatability |title=SSL/TLS Overview |date=2008-08-06 |accessdate=2013-03-29 |url-status=live |archiveurl=https://web.archive.org/web/20130703043525/https://sites.google.com/site/tlsssloverview/ssl-v-tls/tls-versions-and-browser-compatability |archivedate=2013-07-03}}</ref>\n| {{No}}<ref name=\"SSL/TLS Overview\" /><ref name=\"Chromium Issue 90392\">{{cite web |url=https://code.google.com/p/chromium/issues/detail?id=90392 |title=Chromium Issue 90392 |date=2008-08-06 |accessdate=2013-06-28 |url-status=live |archiveurl=https://web.archive.org/web/20130803110745/http://code.google.com/p/chromium/issues/detail?id=90392 |archivedate=2013-08-03}}</ref><ref name=\"Issue 23503030 Merge 219882\">{{cite web |url=https://codereview.chromium.org/23503030/ |title=Issue 23503030 Merge 219882 |date=2013-09-03 |accessdate=2013-09-19 |url-status=live |archiveurl=https://web.archive.org/web/20140226230020/https://codereview.chromium.org/23503030/ |archivedate=2014-02-26}}</ref><ref name=\"Issue 278370\">{{cite web |url=http://code.google.com/p/chromium/issues/detail?id=278370 |title=Issue 278370: Unable to submit client certificates over TLS 1.2 from Windows |date=2013-08-23 |accessdate=2013-10-03 |url-status=live |archiveurl=https://web.archive.org/web/20131005021656/http://code.google.com/p/chromium/issues/detail?id=278370 |archivedate=2013-10-05}}</ref>\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\">configure the maximum and the minimum version of enabling protocols with command-line option</ref>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 30\u201332\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}&#8203;<ref name=\"Chromium Issue 90392\"/><ref name=\"Issue 23503030 Merge 219882\"/><ref name=\"Issue 278370\"/>\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 33\u201337\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Partial|Partly mitigated<br />{{refn |group=\"n\" |name=\"note-Chrome33-POODLE\"|TLS_FALLBACK_SCSV is implemented.<ref name=\"chrome-scsv\">{{cite web |last=M\u00f6ller |first=Bodo |title=This POODLE bites: exploiting the SSL 3.0 fallback |work=Google Online Security blog |publisher=Google (via Blogspot) |date=2014-10-14 |url=http://googleonlinesecurity.blogspot.com/2014/10/this-poodle-bites-exploiting-ssl-30.html |accessdate=2014-10-28 |url-status=live |archiveurl=https://web.archive.org/web/20141028003952/http://googleonlinesecurity.blogspot.com/2014/10/this-poodle-bites-exploiting-ssl-30.html |archivedate=2014-10-28}}</ref> Fallback to SSL 3.0 is disabled since version 39.<ref name=\"chrome-poodle\">{{cite web |title=An update on SSLv3 in Chrome. |work=Security-dev |date=2014-10-31 |url=https://groups.google.com/a/chromium.org/forum/#!topic/security-dev/Vnhy9aKM_l4 |accessdate=2014-11-04}}</ref>}}}}\n| {{Partial|Lowest priority<br /><ref name=Chrome33RC4>{{cite web|url=http://googlechromereleases.blogspot.com/2014/02/stable-channel-update_20.html|work=Mozilla Developer Network|title=Stable Channel Update|date=2014-02-20|accessdate=2014-11-14|url-status=live|archiveurl=https://web.archive.org/web/20141024210105/http://googlechromereleases.blogspot.com/2014/02/stable-channel-update_20.html|archivedate=2014-10-24|df=}}</ref><ref name=Chrome33changelog>{{cite web|url=https://build.chromium.org/f/chromium/perf/dashboard/ui/changelog.html?url=/trunk/src&range=232870:241107&mode=html|archive-url=https://archive.today/20140116153037/http://build.chromium.org/f/chromium/perf/dashboard/ui/changelog.html?url=/trunk/src&range=232870:241107&mode=html|url-status=dead|archive-date=2014-01-16|work=Google|title=Changelog for Chrome 33.0.1750.117|accessdate=2014-11-14}}</ref><ref name=Issue318442>{{cite web|url=https://code.google.com/p/chromium/issues/detail?id=318442|title=Issue 318442: Update to NSS 3.15.3 and NSPR 4.10.2|accessdate=2014-11-14|url-status=live|archiveurl=https://web.archive.org/web/20150315043755/https://code.google.com/p/chromium/issues/detail?id=318442|archivedate=2015-03-15|df=}}</ref>}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 38, 39\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Partial|Partly mitigated}}\n| {{Partial|Lowest priority}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n\n| colspan=\"2\" style=\"background:salmon;\" | 40\n| {{Yes|No}}\n| {{Yes|Disabled by default}}&#8203;<ref name=\"chrome-poodle\"/><ref name=\"chromium693963003\">{{cite web |url=https://codereview.chromium.org/693963003 |title=Issue 693963003: Add minimum TLS version control to about:flags and Finch gate it. \u2013 Code Review |accessdate=2015-01-22 |url-status=live |archiveurl=https://web.archive.org/web/20150416072943/https://codereview.chromium.org/693963003 |archivedate=2015-04-16}}</ref>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated<br />{{refn |group=\"n\" |name=\"note-Chrome40-POODLE\"|In addition to TLS_FALLBACK_SCSV and disabling a fallback to SSL 3.0, SSL 3.0 itself is disabled by default.<ref name=\"chrome-poodle\"/>}}}}\n| {{Partial|Lowest priority}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Yes|Yes{{refn|group=\"n\"|name=\"chromeflags\"|configure the minimum version of enabling protocols via chrome://flags<ref name=\"chromium693963003\" /> (the maximum version can be configured with command-line option)}}}}\n|-\n| colspan=\"2\" ! style=\"background:salmon;\" | 41, 42\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Lowest priority}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"chromeflags\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 43\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\"/><ref name=\"chromeissue375342\">{{cite web |url=https://code.google.com/p/chromium/issues/detail?id=375342 |title=Issue 375342: Drop RC4 Support |accessdate=2015-05-22 |url-status=live |archiveurl=https://web.archive.org/web/20150912071452/https://code.google.com/p/chromium/issues/detail?id=375342 |archivedate=2015-09-12}}</ref>}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"chromeflags\"/>}}\n|-\n | colspan=\"2\" style=\"background:salmon;\" | 44\u201347\n| {{Yes|No}}\n| {{Yes|No}}<ref name=\"chromeissue436391\">{{cite web |url=https://code.google.com/p/chromium/issues/detail?id=436391 |title=Issue 436391: Add info on end of life of SSLVersionFallbackMin & SSLVersionMin policy in documentation |accessdate=2015-04-19 |url-status=live |archiveurl=https://web.archive.org/web/20150418095600/http://code.google.com/p/chromium/issues/detail?id=436391 |archivedate=2015-04-18}}</ref>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}&#8203;<ref name=\"chromeissue490240\">{{cite web |url=https://code.google.com/p/chromium/issues/detail?id=490240 |title=Issue 490240: Increase minimum DH size to 1024 bits (tracking bug) |accessdate=2015-05-29 |url-status=live |archiveurl=https://web.archive.org/web/20150912081831/https://code.google.com/p/chromium/issues/detail?id=490240 |archivedate=2015-09-12}}</ref>\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 48, 49\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\">{{cite web |url=https://groups.google.com/a/chromium.org/forum/#!msg/security-dev/kVfCywocUO8/2BW3INFdDwAJ |title=Intent to deprecate: RC4 |accessdate=2015-12-21}}</ref><ref name=\"RC4-Chrome48-2\">{{cite web |url=https://googleonlinesecurity.blogspot.com/2015/12/an-update-on-sha-1-certificates-in.html |title=An update on SHA-1 certificates in Chrome |date=2015-12-18 |accessdate=2015-12-21 |url-status=live |archiveurl=https://web.archive.org/web/20151218214756/https://googleonlinesecurity.blogspot.com/2015/12/an-update-on-sha-1-certificates-in.html |archivedate=2015-12-18}}</ref>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 50\u201353\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\"/><ref name=\"RC4-Chrome48-2\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 54\u201366\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Partial|Disabled by default}}<br /><small>(draft version)</small>\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\"/><ref name=\"RC4-Chrome48-2\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 67\u201369\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Partial|Yes}}<br /><small>(draft version)</small>\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\"/><ref name=\"RC4-Chrome48-2\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| style=\"background:salmon;\" | 70\u201380\n| style=\"background:#a0e75a;\" | 81\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\"/><ref name=\"RC4-Chrome48-2\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n! rowspan=\"2\" | [[Microsoft Edge]]<br /><small>[[Chromium (web browser)|(Chromium based)]]<br />OS independent</small>\n| style=\"background:salmon;\" | 79\n| style=\"background:#a0e75a;\" | 80\n! rowspan=\"2\" | [[Microsoft Windows|Windows&nbsp;<small>(7+)</small>]]<br />[[macOS|macOS&nbsp;<small>(10.12+)</small>]]<br />[[Linux|Linux&nbsp;<small>(n/a yet)</small>]]<br />[[Android (operating system)|Android&nbsp;<small>(4.4+)</small>]]<br />[[iOS|iOS&nbsp;<small>(10.0+)</small>]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" {{table-experimental| 84}}<ref>https://blogs.windows.com/msedgedev/2020/03/31/tls-1-0-tls-1-1-schedule-update-edge-ie11/</ref>\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Partial|Disabled by default}}\n| {{Partial|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n! rowspan=\"21\" | [[Firefox|Mozilla Firefox]]<br /><small>([[Firefox for mobile]])</small><br />{{refn | group=\"n\" | name=\"note-c\" | Uses the TLS implementation provided by [[Network Security Services|NSS]]. As of Firefox 22, Firefox supports only TLS 1.0 despite the bundled NSS supporting TLS 1.1. Since Firefox 23, TLS 1.1 can be enabled, but was not enabled by default due to issues. Firefox 24 has TLS 1.2 support disabled by default. TLS 1.1 and TLS 1.2 have been enabled by default in Firefox 27 release.}}\n| colspan=\"2\" style=\"background:salmon;\" | 1.0, 1.5\n| rowspan=\"21\" | [[Microsoft Windows|Windows&nbsp;<small>(7+)</small>]]<br /> [[macOS|macOS&nbsp;<small>(10.9+)</small>]]<br /> [[Linux]]<br />[[Android (OS)|Android&nbsp;<small>(4.1+)</small>]]<br />[[iOS|iOS <small>(10.3+)</small>]]<br /><s>[[Firefox OS]]</s><br /><s>[[Maemo]]</s><br /><br />ESR only for:<br />[[Microsoft Windows|Windows&nbsp;<small>(7+)</small>]]<br />[[macOS|macOS&nbsp;<small>(10.9+)</small>]]<br /> [[Linux]]\n| {{No|Enabled by default}}<br /><ref name=\"SecurityinFirefox\">{{cite web |url=https://developer.mozilla.org/en-US/Firefox/Releases/2/Security_changes |title=Security in Firefox 2 |date=2008-08-06 |accessdate=2009-03-31 |url-status=live |archiveurl=https://web.archive.org/web/20140714142705/https://developer.mozilla.org/en-US/Firefox/Releases/2/Security_changes |archivedate=2014-07-14}}</ref>\n| {{No|Enabled by default}}<br /><ref name=\"SecurityinFirefox\"/>\n| {{Yes}}<ref name=\"SecurityinFirefox\"/>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}<ref name=\"SHA-2\"/>\n| {{No}}\n| {{Yes|Not affected<br /><ref name=FirefoxBEAST>{{cite web|url=https://blog.mozilla.org/security/2011/09/27/attack-against-tls-protected-communications/|title=Attack against TLS-protected communications|work=Mozilla Security Blog|publisher=Mozilla|date=2011-09-27|accessdate=2015-02-01|url-status=live|archiveurl=https://web.archive.org/web/20150304221307/https://blog.mozilla.org/security/2011/09/27/attack-against-tls-protected-communications/|archivedate=2015-03-04|df=}}</ref>}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 2\n| {{Yes|Disabled by default}}<br /><ref name=\"SecurityinFirefox\"/><ref name=\"FxSSL2\">{{cite web|url=https://developer.mozilla.org/en-US/docs/Introduction_to_SSL|title=Introduction to SSL|publisher=MDN|accessdate=2014-06-19|url-status=live|archiveurl=https://web.archive.org/web/20140714205945/https://developer.mozilla.org/en-US/docs/Introduction_to_SSL|archivedate=2014-07-14|df=}}</ref>\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 3\u20137\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 8\u201310<br />{{nowrap|ESR 10}}\n| {{Yes|No}}<ref name=\"FxSSL2\"/>\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 11\u201314\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable<br /><small>(SPDY)</small><ref name=\"CRIME-Chrome=Firefox\"/>}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 15\u201322<br />{{nowrap|ESR 17.0\u201317.0.10}}\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | {{nowrap|ESR 17.0.11}}\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{Partial|Lowest priority<br /><ref name=\"NSS-3.15.3\" /><ref name=\"mfsa2013-103\" />}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\" />}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 23\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}<br /><ref name=\"Bug565047\">{{cite web |url=https://bugzilla.mozilla.org/show_bug.cgi?id=565047 |title=Bug 565047 \u2013 (RFC4346) Implement TLS 1.1 (RFC 4346) |accessdate=2013-10-29}}</ref>\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes{{refn|group=\"n\"|name=\"aboutconfig\"|configure the maximum and the minimum version of enabling protocols via about:config}}}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 24, 25.0.0<br />{{nowrap|ESR 24.0\u201324.1.0}}\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}\n| {{Partial|Disabled by default}}<br /><ref name=\"Bug480514\">{{cite web|url=https://bugzilla.mozilla.org/show_bug.cgi?id=480514 |title=Bug 480514 \u2013 Implement support for TLS 1.2 (RFC 5246) |accessdate=2013-10-29}}</ref>\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 25.0.1, 26<br />{{nowrap|ESR 24.1.1}}\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}\n| {{Partial|Disabled by default}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{Partial|Lowest priority<br /><ref name=\"NSS-3.15.3\">{{cite web |url=https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.15.3_release_notes |work=Mozilla Developer Network |title=NSS 3.15.3 Release Notes |publisher=Mozilla |accessdate=2014-07-13 |url-status=live |archiveurl=https://web.archive.org/web/20140605001016/https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.15.3_release_notes |archivedate=2014-06-05}}</ref><ref name=\"mfsa2013-103\">{{cite web |url=https://www.mozilla.org/security/announce/2013/mfsa2013-103.html |work=Mozilla |title=MFSA 2013-103: Miscellaneous Network Security Services (NSS) vulnerabilities |publisher=Mozilla |accessdate=2014-07-13 |url-status=live |archiveurl=https://web.archive.org/web/20140714121632/http://www.mozilla.org/security/announce/2013/mfsa2013-103.html |archivedate=2014-07-14}}</ref>}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 27\u201333<br />{{nowrap|ESR 31.0\u201331.2}}\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}&#8203;<ref name=\"Bug733647\">{{cite web |url=https://bugzilla.mozilla.org/show_bug.cgi?id=733647 |title=Bug 733647 \u2013 Implement TLS 1.1 (RFC 4346) in Gecko (Firefox, Thunderbird), on by default |accessdate=2013-12-04}}</ref><ref name=\"Fx27\">{{cite web |url=https://website-archive.mozilla.org/www.mozilla.org/firefox_releasenotes/en-US/firefox/27.0/releasenotes/ |title=Firefox Notes \u2013 Desktop |date=2014-02-04 |accessdate=2014-02-04 |url-status=live |archiveurl=https://web.archive.org/web/20140207095334/https://website-archive.mozilla.org/www.mozilla.org/firefox_releasenotes/en-US/firefox/27.0/releasenotes/ |archivedate=2014-02-07}}</ref>\n| {{Yes}}&#8203;<ref name=\"Bug861266\">{{cite web |url=https://bugzilla.mozilla.org/show_bug.cgi?id=861266 |title=Bug 861266 \u2013 Implement TLS 1.2 (RFC 5246) in Gecko (Firefox, Thunderbird), on by default |accessdate=2013-11-18}}</ref><ref name=\"Fx27\"/>\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{Partial|Lowest priority}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 34, 35<br />{{nowrap|ESR 31.3\u201331.7}}\n| {{Yes|No}}\n| {{Yes|Disabled by default}}<br /><ref name=\"firefox-poodle\">{{cite web |title=The POODLE Attack and the End of SSL 3.0 |work=Mozilla blog |publisher=Mozilla |date=2014-10-14 |url=https://blog.mozilla.org/security/2014/10/14/the-poodle-attack-and-the-end-of-ssl-3-0/ |accessdate=2014-10-28 |url-status=live |archiveurl=https://web.archive.org/web/20141018231351/https://blog.mozilla.org/security/2014/10/14/the-poodle-attack-and-the-end-of-ssl-3-0/ |archivedate=2014-10-18}}</ref><ref name=\"Fx34\">{{cite web|url=https://www.mozilla.org/en-US/firefox/34.0/releasenotes/|title=Firefox \u2014 Notes (34.0) \u2014 Mozilla|publisher=mozilla.org|date=2014-12-01|accessdate=2015-04-03|url-status=live|archiveurl=https://web.archive.org/web/20150409022558/https://www.mozilla.org/en-US/firefox/34.0/releasenotes/|archivedate=2015-04-09|df=}}</ref>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated<br />{{refn |group=\"n\" |name=\"Fx-POODLE\"|SSL 3.0 itself is disabled by default.<ref name=\"firefox-poodle\"/> In addition, fallback to SSL 3.0 is disabled since version 34,<ref name=\"firefox-fallback-disabled\">{{cite web|url=https://bugzilla.mozilla.org/show_bug.cgi?id=1083058|title=Bug 1083058 \u2013 A pref to control TLS version fallback |publisher=bugzilla.mozilla.org|accessdate=2014-11-06}}</ref> and TLS_FALLBACK_SCSV is implemented since 35.0 and ESR 31.3.<ref name=\"firefox-poodle\"/><ref name=\"bugzilla.mozilla.org\">{{cite web|url=https://bugzilla.mozilla.org/show_bug.cgi?id=1036737|title=Bug 1036737 \u2013 Add support for draft-ietf-tls-downgrade-scsv to Gecko/Firefox |publisher=bugzilla.mozilla.org|accessdate=2014-10-29}}</ref>}}}}\n| {{Partial|Lowest priority}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | {{nowrap|ESR 31.8}}\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Lowest priority}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated&#8203;<ref name=\"FxLogjam\"/>}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 36\u201338<br />{{nowrap|ESR 38.0}}\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\">Only when no cipher suites with other than RC4 is available, cipher suites with RC4 will be used as a fallback.</ref><ref name=\"https\">{{cite web|url=https://bugzilla.mozilla.org/show_bug.cgi?id=1088915|title=Bug 1088915 \u2013 Stop offering RC4 in the first handshakes |publisher=bugzilla.mozilla.org|accessdate=2014-11-04}}</ref>}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | {{nowrap|ESR 38.1\u201338.8}}\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\"/>}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated&#8203;<ref name=\"FxLogjam\"/>}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 39\u201343\n| {{Yes|No}}\n| {{Yes|No}}<ref name=\"Fx39\">{{cite web|url=https://www.mozilla.org/en-US/firefox/39.0/releasenotes/|title=Firefox \u2014 Notes (39.0) \u2014 Mozilla|publisher=mozilla.org|date=2015-06-30|accessdate=2015-07-03|url-status=live|archiveurl=https://web.archive.org/web/20150703163249/https://www.mozilla.org/en-US/firefox/39.0/releasenotes/|archivedate=2015-07-03|df=}}</ref>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\"/>}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}&#8203;<ref name=\"FxLogjam\">{{cite web |url=https://bugzilla.mozilla.org/show_bug.cgi?id=1166031 |title=Bug 1166031 \u2013 Update to NSS 3.19.1 |publisher=bugzilla.mozilla.org |accessdate=2015-05-29}}</ref>\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 44\u201348 <br /> {{nowrap|ESR 45}}\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\">All RC4 cipher suites are disabled by default.</ref><ref name=\"RC4Fx\">{{cite news |url=https://venturebeat.com/2015/09/01/google-microsoft-and-mozilla-will-drop-rc4-support-in-chrome-edge-ie-and-firefox-next-year/ |title=Google, Microsoft, and Mozilla will drop RC4 encryption in Chrome, Edge, IE, and Firefox next year |work=VentureBeat |date=2015-09-01 |accessdate=2015-09-05 |url-status=live |archiveurl=https://web.archive.org/web/20150905214154/http://venturebeat.com/2015/09/01/google-microsoft-and-mozilla-will-drop-rc4-support-in-chrome-edge-ie-and-firefox-next-year/ |archivedate=2015-09-05}}</ref><ref name=\"RC4Fx-2\">{{cite web |url=https://groups.google.com/forum/#!searchin/mozilla.dev.platform/rc4/mozilla.dev.platform/JIEFcrGhqSM/CIjtpwxoLQAJ |title=Intent to ship: RC4 disabled by default in Firefox 44 |accessdate=2015-10-18 |url-status=live |archiveurl=http://arquivo.pt/wayback/20110122130054/https://groups.google.com/forum/#!searchin/mozilla.dev.platform/rc4/mozilla.dev.platform/JIEFcrGhqSM/CIjtpwxoLQAJ |archivedate=2011-01-22}}</ref><ref name=\"RC4Fx-3\">{{cite web |url=https://www.fxsitecompat.com/en-US/docs/2015/rc4-is-now-allowed-only-on-whitelisted-sites/ |title=RC4 is now allowed only on whitelisted sites (Reverted) |accessdate=2015-11-02}}</ref><ref name=\"Fx44\">{{cite web |url=https://www.mozilla.org/en-US/firefox/44.0/releasenotes/ |title=Firefox \u2014 Notes (44.0) \u2014 Mozilla |publisher=mozilla.org |date=2016-01-26 |accessdate=2016-03-09 |url-status=live |archiveurl=https://web.archive.org/web/20160304025010/https://www.mozilla.org/en-US/firefox/44.0/releasenotes/ |archivedate=2016-03-04}}</ref>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 49\u201359<br />{{nowrap|ESR 52}}\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Partial|Disabled by default}}<br /><small>(draft version)</small>&#8203;<ref>{{cite web |url=https://bugzilla.mozilla.org/show_bug.cgi?id=1342082 |title=Bug 1342082 \u2013 Disable TLS 1.3 for FF52 Release |accessdate=2017-03-29}}</ref>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon; padding-left:1px; padding-right:1px;\" | 60\u201362<br />{{nowrap|ESR 60}}\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Partial|Yes}}<br /><small>(draft version)</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon; padding-left:1px; padding-right:1px;\" | 63\u201374<br />{{nowrap|ESR 68.0\u201368.6}}\n| rowspan=\"2\" {{Yes|No}}\n| rowspan=\"2\" {{Yes|No}}\n| rowspan=\"2\" {{Yes}}\n| rowspan=\"2\" {{Yes}}\n| rowspan=\"2\" {{Yes}}\n| rowspan=\"2\" {{Yes}}\n| rowspan=\"2\" {{Yes}}\n| rowspan=\"2\" {{Yes}}\n| rowspan=\"2\" {{Yes}}\n| rowspan=\"2\" {{Yes|Not affected}}\n| rowspan=\"2\" {{Yes|Mitigated}}\n| rowspan=\"2\" {{Yes|Not affected}}\n| rowspan=\"2\" {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>\n| rowspan=\"2\" {{Yes|Not affected}}\n| rowspan=\"2\" {{Yes|Mitigated}}\n| rowspan=\"2\" {{Yes|Yes<ref group=\"n\" name=\"aboutconfig\"/>}}\n|-\n| style=\"background:khaki; padding-left:1px; padding-right:1px;\" | ESR 68.7\n| style=\"background:#a0e75a;\" | 75\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n! rowspan=\"12\" | [[Opera (web browser)|Opera Browser]]<br /><small>([[Opera Mobile]])</small><br /><small>([[Presto (layout engine)|Pre-Presto and Presto]])</small><br />{{refn |group=\"n\" |name=\"note-e\" |[[Opera (web browser)|Opera]] 10 added support for TLS 1.2 as of [[Presto (layout engine)|Presto]] 2.2. Previous support was for TLS 1.0 and 1.1. TLS 1.1 and 1.2 are disabled by default (except for version 9<ref name=\"Opera 9.0 for Windows Changelog\">{{cite web|url=http://www.opera.com/docs/changelogs/windows/900/|title=Opera 9.0 for Windows Changelog|publisher=|url-status=live|archiveurl=https://archive.today/20120910/http://www.opera.com/docs/changelogs/windows/900/|archivedate=2012-09-10|df=}}</ref> that enabled TLS 1.1 by default).}}\n| colspan=\"2\" style=\"background:salmon;\" | 1\u20132\n| rowspan=\"12\" | <s>[[Microsoft Windows|Windows]]</s><br /><s>[[macOS]]</s><br /><s>[[Linux]]</s><br /><s>[[Android (OS)|Android]]</s><br /><s>[[S60 (software platform)|Symbian S60]]</s><br /><s>[[Maemo]]</s><br /><s>[[Windows Mobile]]</s>\n| colspan=\"16\" | No SSL/TLS support<ref name=\"Opera2\">{{cite web|url=http://www.opera.com/docs/history/presto/#o2|title=Opera 2 series|accessdate=2014-09-20|url-status=live|archiveurl=https://web.archive.org/web/20141023073434/http://www.opera.com/docs/history/presto/#o2|archivedate=2014-10-23|df=}}</ref>\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 3\n| {{No|Yes}}<ref name=\"Opera3\">{{cite web|url=http://www.opera.com/docs/history/presto/#o3|title=Opera 3 series|accessdate=2014-09-20|url-status=live|archiveurl=https://web.archive.org/web/20141023073434/http://www.opera.com/docs/history/presto/#o3|archivedate=2014-10-23|df=}}</ref>\n| No\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| colspan=\"3\" | No SSL 3.0 or TLS support\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Unknown}}\n| {{N/A}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 4\n| {{No|Yes}}\n| {{No|Yes}}<ref name=\"Opera4\">{{cite web|url=http://www.opera.com/docs/history/presto/#o4|title=Opera 4 series|accessdate=2014-09-20|url-status=live|archiveurl=https://web.archive.org/web/20141023073434/http://www.opera.com/docs/history/presto/#o4|archivedate=2014-10-23|df=}}</ref>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Unknown}}\n| {{Unknown}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 5\n| {{No|Enabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}<ref name=\"Opera5\">{{cite web|url=http://www.opera.com/docs/changelogs/windows/500-512/|title=Changelog for Opera 5.x for Windows|accessdate=2014-06-19|url-status=live|archiveurl=https://web.archive.org/web/20141019005943/http://www.opera.com/docs/changelogs/windows/500-512/|archivedate=2014-10-19|df=}}</ref>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Unknown}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 6\u20137\n| {{No|Enabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}<ref name=\"Opera5\"/>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}<ref name=\"SHA-2\"/>\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Unknown}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 8\n| {{No|Enabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}<br /><ref name=\"opera.com\">{{cite web|url=http://www.opera.com/docs/changelogs/windows/800b2/|title=Changelog for Opera [8] Beta 2 for Windows|accessdate=2014-06-19|url-status=live|archiveurl=https://web.archive.org/web/20051123055608/http://opera.com/docs/changelogs/windows/800b2/|archivedate=2005-11-23|df=}}</ref>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Unknown}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 9\n| {{Yes|Disabled by default}}<br /><ref>{{cite web |url=http://www.opera.com/docs/specs/opera9/ |title=Web Specifications Supported in Opera 9 |accessdate=2014-06-19 |url-status=live |archiveurl= https://web.archive.org/web/20141026185804/http://www.opera.com/docs/specs/opera9/ |archivedate=2014-10-26}}</ref>\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{Partial|since v9.5<br /><small>(only desktop)</small>}}\n| {{Yes}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Unknown}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 10\u201311.52\n| {{Yes|No}}<ref name=\"Opera10b\">{{cite web |url=http://www.opera.com/docs/changelogs/windows/1000b1/ |title=Opera: Opera 10 beta for Windows changelog |accessdate=2014-06-19 |url-status=dead |archiveurl= https://web.archive.org/web/20141023083043/http://www.opera.com/docs/changelogs/windows/1000b1/ |archivedate=2014-10-23}}</ref>\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}\n| {{Partial|Disabled by default}}<br /><ref name=\"Opera10b\"/>\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Unknown}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 11.60\u201311.64\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}\n| {{Partial|Disabled by default}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{No}}\n| {{Yes|Mitigated<br /><ref name=\"my.opera.com\">{{cite web|title=About Opera 11.60 and new problems with some secure servers|url=http://my.opera.com/securitygroup/blog/2011/12/11/opera-11-60-and-new-problems-with-some-secure-servers|date=2011-12-11|archive-url=https://web.archive.org/web/20120118122036/http://my.opera.com/securitygroup/blog/2011/12/11/opera-11-60-and-new-problems-with-some-secure-servers|archivedate=2012-01-18}}</ref>}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Unknown}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 12\u201312.14\n| {{Yes|No}}\n| {{Yes|Disabled by default<br /><ref group=\"n\" name=\"note-Opera12-POODLE\"/>}}\n| {{Yes}}\n| {{Partial|Disabled by default}}\n| {{Partial|Disabled by default}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{No}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated<br />{{refn |group=\"n\" |name=\"note-Opera12-POODLE\"|SSL 3.0 is disabled by default remotely since October 15, 2014<ref name=\"OperaPOODLE\">{{cite web|url=http://blogs.opera.com/security/2014/10/security-changes-opera-25-poodle-attacks/|title=Security changes in Opera 25; the poodle attacks|date=2014-10-15|accessdate=2014-10-28|url-status=live|archiveurl=https://web.archive.org/web/20141020091840/http://blogs.opera.com/security/2014/10/security-changes-opera-25-poodle-attacks/|archivedate=2014-10-20|df=}}</ref>}}}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n| {{Yes|Mitigated&#8203;<ref name=\"OperaLogjam\">{{cite web|url=http://blogs.opera.com/security/2015/06/unjam-the-logjam/|title=Unjam the logjam|date=2015-06-09|accessdate=2015-06-11|url-status=live|archiveurl=https://web.archive.org/web/20150614005330/http://blogs.opera.com/security/2015/06/unjam-the-logjam/|archivedate=2015-06-14|df=}}</ref>}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 12.15\u201312.17\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}\n| {{Partial|Disabled by default}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{No}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Partial|Partly mitigated<br /><ref name=\"ReferenceA\">{{cite web|url=http://www.opera.com/ja/security/advisory/1046|title=Advisory: RC4 encryption protocol is vulnerable to certain brute force attacks|date=2013-04-04|accessdate=2014-11-14|url-status=live|archiveurl=https://web.archive.org/web/20150315052403/http://www.opera.com/ja/security/advisory/1046|archivedate=2015-03-15|df=}}</ref><ref name=\"On the Precariousness of RC4\">{{cite web|url=http://my.opera.com/securitygroup/blog/2013/03/20/on-the-precariousness-of-rc4|title=On the Precariousness of RC4|date=2013-03-20|archiveurl=https://web.archive.org/web/20131112235240/http://my.opera.com/securitygroup/blog/2013/03/20/on-the-precariousness-of-rc4|archivedate=2013-11-12|accessdate=2014-11-17}}</ref>}}\n| {{Unknown}}\n| {{Yes|Mitigated&#8203;<ref name=\"OperaLogjam\"/>}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 12.18\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}<ref name=\"opera1218\">{{Cite web|url=http://www.opera.com/blogs/security/2016/02/opera-12-and-opera-mail-security-update/|title=Opera 12 and Opera Mail security update|date=2016-02-16|accessdate=2016-02-17|url-status=live|archiveurl=https://web.archive.org/web/20160216143015/http://www.opera.com/blogs/security/2016/02/opera-12-and-opera-mail-security-update/|archivedate=2016-02-16|df=}}</ref>\n| {{Yes}}<ref name=\"opera1218\"/>\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Yes}}<ref name=\"opera1218\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"opera1218\"/>\n| {{Yes|Mitigated&#8203;<ref name=\"opera1218\"/>}}\n| {{Yes|Mitigated&#8203;<ref name=\"OperaLogjam\"/>}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n! rowspan=\"12\" | [[Opera (web browser)|Opera Browser]]<br /><small>([[Opera Mobile]])</small><br /><small>([[Webkit]] and [[Blink (layout engine)|Blink]])</small><br />{{refn |group=\"n\" |name=\"note-f\" |TLS support of Opera 14 and above is same as that of Chrome, because Opera has migrated to [[Chromium (web browser)|Chromium]] backend (Opera 14 for Android is based on Chromium 26 with [[WebKit]],<ref name=\"dev.opera.com\">{{cite web|url=https://dev.opera.com/blog/opera-14-for-android-is-out/|title=Dev.Opera \u2014 Opera 14 for Android Is Out!|date=2013-05-21|accessdate=2014-09-23|url-status=live|archiveurl=https://web.archive.org/web/20150130172538/https://dev.opera.com/blog/opera-14-for-android-is-out/|archivedate=2015-01-30|df=}}</ref> and Opera 15 and above are based on Chromium 28 and above with [[Blink (layout engine)|Blink]]<ref name=\"ReferenceB\">{{cite web|url=https://dev.opera.com/blog/introducing-opera-15-for-desktop-and-a-fast-release-cycle/|title=Dev.Opera \u2014 Introducing Opera 15 for Computers, and a Fast Release Cycle|date=2013-07-02|accessdate=2014-09-23|url-status=live|archiveurl=https://web.archive.org/web/20140902081954/https://dev.opera.com/blog/introducing-opera-15-for-desktop-and-a-fast-release-cycle/|archivedate=2014-09-02|df=}}</ref>).}}\n| colspan=\"2\" style=\"background:salmon;\" | 14\u201316\n| rowspan=\"12\" | [[Microsoft Windows|Windows&nbsp;<small>(7+)</small>]]<br /> [[macOS|macOS&nbsp;<small>(10.10+)</small>]]<br />[[Linux]]<br />[[Android (OS)|Android&nbsp;<small>(4.4+)</small>]]\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}<ref name=\"opera16\">same as Chrome 26\u201329</ref>\n| {{No}}<ref name=\"opera16\"/>\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 17\u201319\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}<ref name=\"opera17\">same as Chrome 30 and later</ref>\n| {{Yes}}<ref name=\"opera17\"/>\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 20\u201324\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Partial|<small>needs SHA-2 compatible OS</small>}}<ref name=\"SHA-2\"/>\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Partial|Partly mitigated<br />{{refn |group=\"n\" |name=\"note-Opera20-POODLE\"|TLS_FALLBACK_SCSV is implemented.<ref name=\"opera20\">same as Chrome 33 and later</ref>}}}}\n| {{Partial|Lowest priority<br /><ref name=\"opera20\"/>}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 25, 26\n| {{Yes|No}}\n| {{No|Enabled by default<br />{{refn| group=\"n\" | name=\"Opera25-SSL3.0\"|SSL 3.0 is enabled by default, with some mitigations against known vulnerabilities such as BEAST and POODLE implemented.<ref name=\"OperaPOODLE\"/>}}}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated<br />{{refn|group=\"n\"|name=note-opera25|In addition to TLS_FALLBACK_SCSV, \"anti-POODLE record splitting\" is implemented.<ref name=\"OperaPOODLE\"/>}}}}\n| {{Partial|Lowest priority}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 27\n| {{Yes|No}}\n| {{Yes|Disabled by default}}<br /><ref name=\"chromium693963003\" />\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated<br />{{refn|group=\"n\"|name=note-opera27|In addition to TLS_FALLBACK_SCSV and \"anti-POODLE record splitting\", SSL 3.0 itself is disabled by default.<ref name=\"chromium693963003\" />}}}}\n| {{Partial|Lowest priority}}\n| {{No|Vulnerable<br /><small>(except Windows)</small>}}\n| {{No|Vulnerable}}\n| {{Yes|Yes{{refn|group=\"n\"|name=\"operaflags\"|configure the minimum version of enabling protocols via opera://flags<ref name=\"chromium693963003\" /> (the maximum version can be configured with command-line option)}}<br /><small>(only desktop)</small>}}\n|-\n| colspan=\"2\" ! style=\"background:salmon;\" | 28, 29\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Lowest priority}}\n| {{Yes|Mitigated}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"operaflags\"/><br /><small>(only desktop)</small>}}\n|-\n| colspan=\"2\" ! style=\"background:salmon;\" | 30\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\"/><ref name=\"chromeissue375342\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated&#8203;<ref name=\"OperaLogjam\"/>}}\n| {{Yes|Yes<ref group=\"n\" name=\"operaflags\"/><br /><small>(only desktop)</small>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 31\u201334\n| {{Yes|No}}\n| {{Yes|No}}<ref name=\"chromeissue436391\"/>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\"/><ref name=\"chromeissue375342\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 35, 36\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Partial|<small>needs ECC compatible OS</small>}}<ref name=\"ECC\"/>\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\"/><ref name=\"RC4-Chrome48-2\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 37\u201340\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\"/><ref name=\"RC4-Chrome48-2\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 41\u201356\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Partial|Disabled by default}}<br /><small>(draft version)</small>\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\"/><ref name=\"RC4-Chrome48-2\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n| style=\"background:salmon;\" | 57\u201366\n| style=\"background:#a0e75a;\" | 67\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}<br /><small>(only desktop)</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}&#8203;<ref group=\"n\" name=\"RC4-disabled\"/><ref name=\"RC4-Chrome48-1\"/><ref name=\"RC4-Chrome48-2\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Partial|Temporary<br /><ref group=\"n\" name=\"viacommandline\"/>}}\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n! rowspan=\"16\" | [[Internet Explorer|Microsoft Internet Explorer]]<br />{{refn |group=\"n\" |name=\"note-d\" |IE uses the TLS implementation of the Microsoft Windows operating system provided by the [[SChannel]] security support provider. TLS 1.1 and 1.2 are disabled by default until IE11.<ref name=\"Microsoft\">{{cite web |author=Microsoft |url=https://msdn.microsoft.com/en-us/library/aa380123.aspx |title=Secure Channel |date=2012-09-05 |accessdate=2012-10-18 |url-status=live |archiveurl=https://web.archive.org/web/20120829025314/http://msdn.microsoft.com/en-us/library/aa380123.aspx |archivedate=2012-08-29}}</ref><ref name=\"msdn.microsoft.com\">{{cite web |author=Microsoft |url=https://msdn.microsoft.com/en-us/library/dd208005.aspx |title=MS-TLSP Appendix A |date=2009-02-27 |accessdate=2009-03-19 |url-status=live |archiveurl=https://web.archive.org/web/20130927055954/http://msdn.microsoft.com/en-us/library/dd208005.aspx |archivedate=2013-09-27}}</ref>}}\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 1|1.x]]\n| style=\"background:salmon;\" ! rowspan=\"3\"| Windows [[Windows 3.1x|3.1]], [[Windows 95|95]], [[Windows NT|NT]],<ref group=\"n\" name=\"note-oldieonnt\">[[Windows NT 3.1]] supports IE 1\u20132, [[Windows NT 3.5]] supports IE 1\u20133, [[Windows NT 3.51]] and [[Windows NT 4.0]] supports IE 1\u20136</ref><ref group=\"n\" name=\"note-k\"/><br />Mac OS [[System 7|7]], [[Mac OS 8|8]]\n| colspan=\"16\" | No SSL/TLS support\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 2|2]]\n| {{No|Yes}}\n| No\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| colspan=\"3\" | No SSL 3.0 or TLS support\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{N/A}}\n|-\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 3|3]]\n| {{No|Yes}}\n| {{No|Yes}}<ref name=\"IESSL3TLS1\">{{cite web|title=What browsers only support SSLv2?|url=https://stackoverflow.com/q/881563|accessdate=2014-06-19 |df=}}</ref>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Unknown}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 4|4]], [[Internet Explorer 5|5]], [[Internet Explorer 6|6]]\n| style=\"background:salmon;\" | Windows [[Windows 3.1x|3.1]], [[Windows 95|95]], [[Windows 98|98]], [[Windows NT|NT]], [[Windows 2000|2000]]<ref group=\"n\" name=\"note-oldieonnt\"/><ref group=\"n\" name=\"note-k\"/><br />Mac OS [[System 7|7.1]], [[Mac OS 8|8]], [[Mac OS X|X]],<br />[[Solaris (operating system)|Solaris]], [[HP-UX]]\n| {{No|Enabled by default}}\n| {{No|Enabled by default}}\n| {{Partial|Disabled by default}}<br /><ref name=\"IESSL3TLS1\"/>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 6|6]]\n| rowspan=\"2\" style=\"background:salmon;\" | [[Windows XP]]<ref group=\"n\" name=\"note-k\"/>\n| {{No|Enabled by default}}\n| {{No|Enabled by default}}\n| {{Partial|Disabled by default}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}<br /><ref group=\"n\" name=\"Win2003SHA2\">MS13-095 or MS14-049 for 2003 and XP-64 or SP3 for XP (32-bit)</ref><ref name=WinXP2003SHA2>{{cite web|url=https://blogs.technet.com/b/pki/archive/2010/09/30/sha2-and-windows.aspx|title=SHA2 and Windows \u2013 Windows PKI blog \u2013 Site Home \u2013 TechNet Blogs|date=2010-09-30|accessdate=2014-07-29|url-status=live|archiveurl=https://web.archive.org/web/20140716230537/http://blogs.technet.com/b/pki/archive/2010/09/30/sha2-and-windows.aspx|archivedate=2014-07-16|df=}}</ref>\n| {{No}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 7|7]], [[Internet Explorer 8|8]]\n| {{Yes|Disabled by default}}<br /><ref name=\"IE7HTTPS\">{{cite web |url=https://msdn.microsoft.com/en-us/library/bb250503.aspx |title=HTTPS Security Improvements in Internet Explorer 7 |accessdate=2013-10-29 |url-status=live |archiveurl=https://web.archive.org/web/20131010205312/http://msdn.microsoft.com/en-us/library/bb250503.aspx |archivedate=2013-10-10}}</ref>\n| {{No|Enabled by default}}\n| {{Yes}}<ref name=\"IE7HTTPS\"/>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}<br /><ref group=\"n\" name=\"Win2003SHA2\"/><ref name=WinXP2003SHA2/>\n| {{No}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 6|6]]\n| rowspan=\"2\" style=\"background:salmon;\" | [[Windows Server 2003|Server 2003]]{{refn |group=\"n\" |name=\"note-k\" |Windows XP as well as Server 2003 and older support only weak ciphers like 3DES and RC4 out of the box.<ref name=\"TLS Cipher Suites\">{{cite web|url=https://msdn.microsoft.com/en-us/library/windows/desktop/aa380512.aspx|title=TLS Cipher Suites|publisher=Microsoft|url-status=live|archiveurl=https://web.archive.org/web/20170313125201/https://msdn.microsoft.com/en-us/library/windows/desktop/aa380512.aspx|archivedate=2017-03-13|df=}}</ref> The weak ciphers of these SChannel version are not only used for IE, but also for other Microsoft products running on this OS, like Office or Windows Update. Only Windows Server 2003 can get a manually update to support AES ciphers by KB948963<ref name=\"Archived copy\">{{cite web |url=https://support.microsoft.com/kb/948963 |title=Archived copy |accessdate=2017-07-19 |url-status=live |archiveurl=https://web.archive.org/web/20150311105145/http://support.microsoft.com/kb/948963 |archivedate=2015-03-11}}</ref>}}\n| {{No|Enabled by default}}\n| {{No|Enabled by default}}\n| {{Partial|Disabled by default}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}<br /><ref group=\"n\" name=\"Win2003SHA2\"/><ref name=WinXP2003SHA2/>\n| {{No}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Mitigated}}<br /><ref name=MS15-031>{{cite web|url=https://technet.microsoft.com/en-us/security/MS15-031|title=Vulnerability in Schannel Could Allow Security Feature Bypass (3046049)|date=2015-03-10|accessdate=2015-03-11|url-status=live|archiveurl=https://web.archive.org/web/20170313130837/https://technet.microsoft.com/en-us/security/MS15-031|archivedate=2017-03-13|df=}}</ref>\n| {{Yes|Mitigated}}<br /><ref name=MS15-055>{{cite web|url=https://technet.microsoft.com/en-us/security/MS15-055|title=Vulnerability in Schannel Could Allow Information Disclosure (3061518)|date=2015-05-12|accessdate=2015-05-22|url-status=live|archiveurl=https://web.archive.org/web/20161008035505/https://technet.microsoft.com/en-us/security/MS15-055|archivedate=2016-10-08|df=}}</ref>\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 7|7]], [[Internet Explorer 8|8]]\n| {{Yes|Disabled by default}}<br /><ref name=\"IE7HTTPS\"/>\n| {{No|Enabled by default}}\n| {{Yes}}<ref name=\"IE7HTTPS\"/>\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}<br /><ref group=\"n\" name=\"Win2003SHA2\"/><ref name=WinXP2003SHA2/>\n| {{No}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Mitigated}}<br /><ref name=MS15-031/>\n| {{Yes|Mitigated}}<br /><ref name=MS15-055/>\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 7|7]], [[Internet Explorer 8|8]], [[Internet Explorer 9|9]]\n| style=\"background:salmon;\" | [[Windows Vista]]\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}<ref name=\"ECC\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Mitigated}}<br /><ref name=MS15-031/>\n| {{Yes|Mitigated}}<br /><ref name=MS15-055/>\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | {{nowrap|[[Internet Explorer 7|7]], [[Internet Explorer 8|8]], [[Internet Explorer 9|9]]}}\n| style=\"background:salmon;\" | [[Windows Server 2008|Server 2008]]\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|<small>Disabled by default&#8203;<ref name=\"2008R1TLS1.2\">{{cite web |url=https://support.microsoft.com/kb/4019276 |title=Update to add support for TLS 1.1 and TLS 1.2 in Windows Server 2008 SP2, Windows Embedded POSReady 2009, and Windows Embedded Standard 2009 |accessdate=2017-07-19}}</ref><br />(KB4019276)</small>}}\n| {{Partial|<small>Disabled by default&#8203;<ref name=\"2008R1TLS1.2\"/><br />(KB4019276)</small>}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}<ref name=\"ECC\"/>\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Yes|Mitigated}}<br /><ref name=MS15-031/>\n| {{Yes|Mitigated}}<br /><ref name=MS15-055/>\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" rowspan=\"1\" style=\"background:salmon;\" | [[Internet Explorer 8|8]], [[Internet Explorer 9|9]], [[Internet Explorer 10|10]]\n| style=\"background:salmon;\" | [[Windows 7]]<br/>[[Windows Server 2008 R2|Server 2008 R2]]\n| rowspan=\"1\" ! {{Yes|Disabled by default}}\n| rowspan=\"1\" ! {{No|Enabled by default}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Partial|Disabled by default}}<br /><ref name=\"Win7TLS1.1\">{{cite web |url=https://blogs.msdn.com/b/ieinternals/archive/2009/06/19/windows-7-support-for-tls-and-ciphers.aspx |title=Windows 7 adds support for TLSv1.1 and TLSv1.2 \u2013 IEInternals \u2013 Site Home \u2013 MSDN Blogs |accessdate=2013-10-29 |url-status=live |archiveurl=https://web.archive.org/web/20131226222853/http://blogs.msdn.com/b/ieinternals/archive/2009/06/19/windows-7-support-for-tls-and-ciphers.aspx |archivedate=2013-12-26}}</ref>\n| rowspan=\"1\" ! {{Partial|Disabled by default}}<br /><ref name=\"Win7TLS1.1\"/>\n| rowspan=\"1\" ! {{No}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes|Mitigated}}\n| rowspan=\"1\" ! {{Yes|Not affected}}\n| rowspan=\"1\" ! {{No|Vulnerable}}\n| rowspan=\"1\" ! {{Partial|Lowest priority<br /><ref name=\"20141111msblog\">{{cite web | url=https://blogs.microsoft.com/cybertrust/2014/11/11/hundreds-of-millions-of-microsoft-customers-now-benefit-from-best-in-class-encryption/ | title=Hundreds of Millions of Microsoft Customers Now Benefit from Best-in-Class Encryption | publisher=Microsoft Security | date=2014-11-11 | accessdate=2014-11-14 | author=Thomlinson, Matt | url-status=live | archiveurl=https://web.archive.org/web/20141114143813/http://blogs.microsoft.com/cybertrust/2014/11/11/hundreds-of-millions-of-microsoft-customers-now-benefit-from-best-in-class-encryption/ | archivedate=2014-11-14}}</ref>{{refn |group=\"n\" |name=\"RC4fallbackWin7\"|RC4 can be disabled except as a fallback (Only when no cipher suites with other than RC4 is available, cipher suites with RC4 will be used as a fallback.)<ref name=win7-8rc4>[https://support.microsoft.com/kb/2868725/ Microsoft security advisory: Update for disabling RC4] {{webarchive|url=https://web.archive.org/web/20150311053342/http://support.microsoft.com/kb/2868725 |date=2015-03-11}}</ref>}}}}\n| rowspan=\"1\" ! {{Yes|Mitigated}}<br /><ref name=MS15-031/>\n| rowspan=\"1\" ! {{Yes|Mitigated}}<br /><ref name=MS15-055/>\n| rowspan=\"1\" ! {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" rowspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer 10|10]]\n| style=\"background:salmon;\" | [[Windows 8]]\n| rowspan=\"2\" ! {{Yes|Disabled by default}}\n| rowspan=\"2\" ! {{No|Enabled by default}}\n| rowspan=\"2\" ! {{Yes}}\n| rowspan=\"2\" ! {{Partial|Disabled by default}}<br /><ref name=\"Win7TLS1.1\"/>\n| rowspan=\"2\" ! {{Partial|Disabled by default}}<br /><ref name=\"Win7TLS1.1\"/>\n| rowspan=\"2\" ! {{No}}\n| rowspan=\"2\" ! {{Yes}}\n| rowspan=\"2\" ! {{Yes}}\n| rowspan=\"2\" ! {{Yes}}\n| rowspan=\"2\" ! {{Yes|Mitigated}}\n| rowspan=\"2\" ! {{Yes|Not affected}}\n| rowspan=\"2\" ! {{No|Vulnerable}}\n| rowspan=\"2\" ! {{Partial|Lowest priority<br /><ref name=\"20141111msblog\"/><ref group=\"n\" name=\"RC4fallbackWin7\"/>}}\n| rowspan=\"2\" ! {{Yes|Mitigated}}<br /><ref name=MS15-031/>\n| rowspan=\"2\" ! {{Yes|Mitigated}}<br /><ref name=MS15-055/>\n| rowspan=\"2\" ! {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| style=\"background:khaki;\" | [[Windows Server 2012|Server 2012]]\n|-\n| colspan=\"2\" rowspan=\"1\" style=\"background:salmon;\" | [[Internet Explorer 11|11]]\n| style=\"background:salmon;\" | [[Windows 7]]<br/>[[Windows Server 2008 R2|Server 2008 R2]]\n| rowspan=\"1\" ! {{Yes|Disabled by default}}\n| rowspan=\"1\" ! {{Yes|Disabled by default}}<br /><ref group=\"n\" name=\"ie11_ssl3\"/>\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}<ref name=\"IE11_TLS_1.1_1.2\">{{cite web |author=Microsoft |url=https://blogs.msdn.com/b/ieinternals/archive/2013/09/24/internet-explorer-11-changelist-change-log.aspx |title=IE11 Changes |date=2013-09-24 |accessdate=2013-11-01 |url-status=live |archiveurl=https://web.archive.org/web/20131030114356/http://blogs.msdn.com/b/ieinternals/archive/2013/09/24/internet-explorer-11-changelist-change-log.aspx |archivedate=2013-10-30}}</ref>\n| rowspan=\"1\" ! {{Yes}}<ref name=\"IE11_TLS_1.1_1.2\"/>\n| rowspan=\"1\" ! {{No}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes|Mitigated}}\n| rowspan=\"1\" ! {{Yes|Not affected}}\n| rowspan=\"1\" ! {{Yes|Mitigated<br />{{refn |group=\"n\" |name=\"ie11_ssl3\" |Fallback to SSL 3.0 is sites blocked by default in Internet Explorer 11 for Protected Mode.<ref>{{cite web|url=https://blogs.msdn.com/b/ie/archive/2015/02/10/february-2015-security-updates-for-internet-explorer.aspx|title=February 2015 security updates for Internet Explorer|date=2015-02-11|accessdate=2015-02-11|url-status=live|archiveurl=https://web.archive.org/web/20150211031724/http://blogs.msdn.com/b/ie/archive/2015/02/10/february-2015-security-updates-for-internet-explorer.aspx|archivedate=2015-02-11|df=}}</ref><ref name=\"support.microsoft.com\">{{cite web|url=https://support.microsoft.com/kb/3038778|title=Update turns on the setting to disable SSL 3.0 fallback for protected mode sites by default in Internet Explorer 11|accessdate=2015-02-11|url-status=live|archiveurl=https://web.archive.org/web/20150214082207/http://support.microsoft.com/kb/3038778|archivedate=2015-02-14|df=}}</ref> SSL 3.0 is disabled by default in Internet Explorer 11 since April 2015.<ref name=\"technet.microsoft.com\">{{cite web|url=https://technet.microsoft.com/en-us/security/3009008|title=Vulnerability in SSL 3.0 Could Allow Information Disclosure|date=2015-04-14|accessdate=2015-04-14|url-status=live|archiveurl=https://web.archive.org/web/20161008035547/https://technet.microsoft.com/en-us/security/3009008|archivedate=2016-10-08|df=}}</ref>}}}}\n| rowspan=\"1\" ! {{Yes|Disabled by default}}&#8203;<ref>{{cite web |author=Microsoft Edge Team |url=https://blogs.windows.com/msedgedev/2016/08/09/rc4-now-deprecated/ |title=RC4 is now disabled in Microsoft Edge and Internet Explorer 11 |publisher=Microsoft |date=2016-08-09 |url-status=live |archiveurl= https://web.archive.org/web/20160821091621/https://blogs.windows.com/msedgedev/2016/08/09/rc4-now-deprecated/ |archivedate=2016-08-21}}</ref>\n| rowspan=\"1\" ! {{Yes|Mitigated}}<br /><ref name=MS15-031/>\n| rowspan=\"1\" ! {{Yes|Mitigated}}<br /><ref name=MS15-055/>\n| rowspan=\"1\" ! {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| rowspan=\"2\" colspan=\"2\" style=\"background:khaki;\" | [[Internet Explorer 11|11]]<ref>{{cite web|url=https://support.microsoft.com/en-us/help/4492872/update-for-internet-explorer-april-16-2019|title=Internet Explorer 11 for Windows Server 2012 and Windows Embedded 8 Standard|date=2019-04-16|website=Microsoft Support}}</ref>\n| style=\"background:khaki;\" | [[Windows 8.1]]\n| rowspan=\"2\" ! {{Yes|Disabled by default}}\n| rowspan=\"2\" ! {{Yes|Disabled by default}}<br /><ref group=\"n\" name=\"ie11_ssl3\"/>\n| rowspan=\"2\" ! {{Yes}}\n| rowspan=\"2\" ! {{Yes}}<ref name=\"IE11_TLS_1.1_1.2\"/>\n| rowspan=\"2\" ! {{Yes}}<ref name=\"IE11_TLS_1.1_1.2\"/>\n| rowspan=\"2\" ! {{No}}\n| rowspan=\"2\" ! {{Yes}}\n| rowspan=\"2\" ! {{Yes}}\n| rowspan=\"2\" ! {{Yes}}\n| rowspan=\"2\" ! {{Yes|Mitigated}}\n| rowspan=\"2\" ! {{Yes|Not affected}}\n| rowspan=\"2\" ! {{Yes|Mitigated<br /><ref group=\"n\" name=\"ie11_ssl3\"/>}}\n| rowspan=\"2\" ! {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| rowspan=\"2\" ! {{Yes|Mitigated}}<br /><ref name=MS15-031/>\n| rowspan=\"2\" ! {{Yes|Mitigated}}<br /><ref name=MS15-055/>\n| rowspan=\"2\" ! {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| style=\"background:khaki;\" | [[Windows Server 2012|Server 2012]]<br />[[Windows Server 2012 R2|Server 2012 R2]]\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n\n! rowspan=\"11\" | [[Microsoft Edge]]<br />(12\u201318)<br /><small>[[EdgeHTML|(EdgeHTML based)]]<br />Client only</small><br /><br />[[Internet Explorer 11]]<small><br />Client<br />and<br />Server (SAC)<br /><ref group=\"n\" name=\"note-d\"/></small>\n| style=\"background:salmon;\" | 11\n| style=\"background:salmon;\" | 12\u201313\n| style=\"background:salmon;\" | [[Windows 10]]<br/>v1507\u2013v1511\n| {{Yes|Disabled by default}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| style=\"background:salmon;\" | 11\n| style=\"background:salmon;\" | 14\u201318\n| style=\"background:salmon;\" | [[Windows 10]]<br/>v1607\u2013v1803\n| {{Yes|No}}<ref name=\"Windows10_v1607schannel\" />\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 11\n| style=\"background:salmon;\" | [[Windows Server 2016|Windows Server (SAC)]]<br />v1709\u2013v1803\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| style=\"background:#FFCC99;\" | 11\n| style=\"background:#FFCC99;\" | 18\n| style=\"background:#FFCC99;\" | [[Windows 10]]<br />v1809\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:#FFCC99;\" | 11\n| style=\"background:#FFCC99;\" | [[Windows Server 2019|Windows Server (SAC)]]<br />v1809\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| style=\"background:khaki;\" | 11\n| style=\"background:khaki;\" | 18\n| style=\"background:khaki;\" | [[Windows 10]]<br />v1903\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:khaki;\" | 11\n| style=\"background:khaki;\" | [[Windows Server 2019|Windows Server (SAC)]]<br />v1903\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| style=\"background:khaki;\" | 11\n| style=\"background:#a0e75a;\" | 18\n| style=\"background:#a0e75a;\" | [[Windows 10]]<br />v1909\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{table-experimental|Disabled by default<br /><small>(experimental)</small>}}<ref>https://docs.microsoft.com/en-us/windows/whats-new/whats-new-windows-10-version-1909#security</ref>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:khaki;\" | 11\n| style=\"background:#a0e75a;\" | [[Windows Server 2019|Windows Server (SAC)]]<br />v1909\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Unknown}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n|-\n| style=\"background:khaki;\" | 11\n| {{table-experimental|[[Microsoft Edge|Edge]]}}\n| {{table-experimental|[[Windows 10]]<br />v20H1}}\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Unknown}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:khaki;\" | 11\n| {{table-experimental|[[Windows Server 2019|Windows Server (SAC)]]<br />v20H1}}\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Unknown}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n! rowspan=\"5\" | [[Internet Explorer 11]]<br /><small>Client<br />(LTSB/C)<br />and<br />Server<br />(LTSB/C)</small><br /><ref group=\"n\" name=\"note-d\"/>\n| colspan=\"2\" style=\"background:khaki;\" | 11\n| style=\"background:khaki;\" | [[Windows 10]]<br />LTSB 2015 (v1507)\n| {{Yes|Disabled by default}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:khaki;\" | 11\n| style=\"background:khaki;\" | [[Windows 10]]<br />LTSB 2016 (v1607)\n| {{Yes|No}}<ref name=\"Windows10_v1607schannel\" />\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:khaki;\" | 11\n| style=\"background:khaki;\" |[[Windows Server 2016]]<br />v1607 (LTSB)\n| {{Yes|No}}<ref name=\"Windows10_v1607schannel\" />\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:khaki;\" | 11\n| style=\"background:khaki;\" | [[Windows 10]]<br />LTSC 2019 (v1809)\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n| colspan=\"2\" style=\"background:khaki;\" | 11\n| style=\"background:khaki;\" | [[Windows Server 2019]]<br />v1809 (LTSC)\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{Yes|Yes<ref group=\"n\" name=\"viasetting\"/>}}\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n! rowspan=\"3\" | [[Internet Explorer Mobile|Microsoft Internet Explorer Mobile]]<br /><ref group=\"n\" name=\"note-d\"/>\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer Mobile|7, 9]]\n| style=\"background:salmon;\" | [[Windows Phone 7|Windows Phone 7, 7.5, 7.8]]\n| {{Yes|Disabled by default}}<br /><ref name=\"IE7HTTPS\"/>\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No|style=padding-left:1px; padding-right:1px;}}<br /><small>{{citation needed|date=January 2015}}</small>\n| {{No|style=padding-left:1px; padding-right:1px;}}<br /><small>{{citation needed|date=January 2015}}</small>\n| {{No}}\n| {{No|style=padding-left:1px; padding-right:1px;}}<br /><small>{{citation needed|date=January 2015}}</small>\n| {{Yes}}\n| {{Yes}}<ref name=\"ECC2\"/>\n| {{unknown}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Partial|Only with 3rd party tools{{refn|group=\"n\"|name=\"viaregistry\"|Could be disabled via registry editing but need 3rd Party tools to do this.<ref name=\"XDA\">{{cite web |url= http://forum.xda-developers.com/windows-phone-8/development/poodle-ssl-vulnerability-secure-windows-t2906203 |title=POODLE SSL vulnerability \u2013 secure your Windo\u2026 \u2013 Windows Phone 8 Development and Hacking |work=XDA Developers |url-status=live |archiveurl= https://web.archive.org/web/20160923053812/http://forum.xda-developers.com/windows-phone-8/development/poodle-ssl-vulnerability-secure-windows-t2906203 |archivedate=2016-09-23}}</ref>}}}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Internet Explorer Mobile|10]]\n| style=\"background:salmon;\" | [[Windows Phone 8]]\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}<br /><ref name=\"IEMobile10\">{{cite web|url=https://social.msdn.microsoft.com/Forums/windowsapps/en-US/2ddee177-5086-4453-987b-d02b6a7ec62d/what-tls-version-is-used-in-windows-phone-8-for-secure-http-connections?forum=wpdevelop|title=What TLS version is used in Windows Phone 8 for secure HTTP connections?|publisher=Microsoft|accessdate=2014-11-07|url-status=live|archiveurl=https://web.archive.org/web/20160304063257/https://social.msdn.microsoft.com/Forums/windowsapps/en-US/2ddee177-5086-4453-987b-d02b6a7ec62d/what-tls-version-is-used-in-windows-phone-8-for-secure-http-connections?forum=wpdevelop|archivedate=2016-03-04|df=}}</ref>\n| {{Partial|Disabled by default}}<br /><ref name=\"IEMobile10\"/>\n| {{No}}\n| {{No|style=padding-left:1px; padding-right:1px;}}<br /><small>{{citation needed|date=January 2015}}</small>\n| {{Yes}}\n| {{Yes}}<ref name=\"ssllabs.com\">{{cite web|url=https://www.ssllabs.com/ssltest/viewClient.html?name=IE%20Mobile&version=10&platform=Win%20Phone%208.0|title=Qualys SSL Labs \u2013 Projects / User Agent Capabilities: Unknown|publisher=|url-status=live|archiveurl=https://web.archive.org/web/20170301141459/https://www.ssllabs.com/ssltest/viewClient.html?name=IE%20Mobile&version=10&platform=Win%20Phone%208.0|archivedate=2017-03-01|df=}}</ref>\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Partial|Only with 3rd party tools<ref group=\"n\" name=\"viaregistry\"/>}}\n|-\n| colspan=\"2\" style=\"background:salmon;\"| [[Internet Explorer Mobile|11]]\n| style=\"background:salmon;\" | [[Windows Phone 8.1]]\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}<ref name=\"IEMobile11\">{{cite web |url=https://technet.microsoft.com/en-us/library/dn756283.aspx |title=Platform Security |publisher=Microsoft |date=2014-06-25 |accessdate=2014-11-07 |url-status=live |archiveurl= https://web.archive.org/web/20170313125118/https://technet.microsoft.com/en-us/library/dn756283.aspx |archivedate=2017-03-13}}</ref>\n| {{Yes}}<ref name=\"IEMobile11\"/>\n| {{No}}\n| {{No|style=padding-left:1px; padding-right:1px;}}<br /><small>{{citation needed|date=January 2015}}</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\"/><ref name=\"Win8.1RC4\">{{cite web |url=https://technet.microsoft.com/en-us/library/dn303404.aspx |title=Release Notes: Important Issues in Windows 8.1 Preview |publisher=Microsoft |date=2013-06-24 |accessdate=2014-11-04 |url-status=live |archiveurl= https://web.archive.org/web/20141104071622/http://technet.microsoft.com/en-us/library/dn303404.aspx |archivedate=2014-11-04}}</ref><ref name=\"Win8.1RC4Qualys\">{{cite web |url=https://community.qualys.com/thread/12092 |title=W8.1(IE11) vs RC4 |work=Qualys Community |accessdate=2014-11-04 |url-status=live |archiveurl= https://web.archive.org/web/20141104093736/https://community.qualys.com/thread/12092 |archivedate=2014-11-04}}</ref>}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{Partial|Only with 3rd party tools<ref group=\"n\" name=\"viaregistry\"/>}}\n|-\n! rowspan=\"2\" | [[Microsoft Edge]]<br />(13\u201315)<br /><small>[[EdgeHTML|(EdgeHTML based)]]</small><br /><ref group=\"n\" name=\"Edge engine\"/>\n| colspan=\"2\" style=\"background:salmon;\" | [[Microsoft Edge|13]]\n| style=\"background:salmon;\" | [[Windows 10 Mobile]]<br />v1511\n| {{Yes|Disabled by default}}\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | [[Microsoft Edge|14, 15]]\n| style=\"background:salmon;\" | [[Windows 10 Mobile]]<br />v1607\u2013v1709\n| {{Yes|No}}<ref name=\"Windows10_v1607schannel\" />\n| {{Yes|Disabled by default}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Mitigated}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n! rowspan=\"12\" | [[Safari (web browser)|Apple Safari]]<br />{{refn |group=\"n\" |name=\"note-g\" |Safari uses the operating system implementation on Mac OS X, Windows (XP, Vista, 7)<ref name=\"Adrian\">{{cite web|last=Adrian|first=Dimcev|title=Common browsers/libraries/servers and the associated cipher suites implemented|url=http://www.carbonwind.net/TLS_Cipher_Suites_Project/tls_ssl_cipher_suites_annex_a1_main.docx|work=TLS Cipher Suites Project|url-status=live|archiveurl=https://www.webcitation.org/6FwL0CvUM?url=http://www.carbonwind.net/TLS_Cipher_Suites_Project/tls_ssl_cipher_suites_annex_a1_main.docx|archivedate=2013-04-17|df=}}</ref> with unknown version,<ref name=\"Apple\">{{cite web|author=Apple|url=https://www.apple.com/safari/features.html|title=Features|date=2009-06-10|accessdate=2009-06-10|url-status=live|archiveurl=https://www.webcitation.org/6FwL0oLMO?url=http://www.apple.com/safari/features.html|archivedate=2013-04-17|df=}}</ref> Safari 5 is the last version available for Windows. OS X 10.8 on have SecureTransport support for TLS 1.1 and 1.2<ref name=\"curl.haxx.se\">{{cite web|url=http://curl.haxx.se/mail/lib-2012-08/0120.html|title=Curl: Patch to add TLS 1.1 and 1.2 support & replace deprecated functions in SecureTransport|publisher=|url-status=live|archiveurl=https://web.archive.org/web/20170301142904/https://curl.haxx.se/mail/lib-2012-08/0120.html|archivedate=2017-03-01|df=}}</ref> Qualys SSL report simulates Safari 5.1.9 connecting with TLS 1.0 not 1.1 or 1.2<ref name=\"Qualys SSL Report: google.co.uk\">[https://www.ssllabs.com/ssltest/analyze.html?d=google.co.uk&s=74.125.227.183 Qualys SSL Report: google.co.uk ] {{webarchive|url=https://web.archive.org/web/20170320192352/https://www.ssllabs.com/ssltest/analyze.html?d=google.co.uk&s=74.125.227.183 |date=2017-03-20}} (simulation Safari 5.1.9 TLS 1.0)</ref>}}\n| colspan=\"2\" style=\"background:salmon;\" | 1\n| style=\"background:salmon;\" | Mac OS X [[Mac OS X v10.2|10.2]], [[Mac OS X Panther|10.3]]\n| {{Yes|No<ref name=SafariSSL2>{{cite web|title=Apple Secures Mac OS X with Mavericks Release \u2013 eSecurity Planet|url=http://www.esecurityplanet.com/mac-os-security/apple-secures-mac-os-x-with-mavericks-release.html|date=2013-10-25|accessdate=2014-06-23|url-status=live|archiveurl=https://web.archive.org/web/20140708195022/http://www.esecurityplanet.com/mac-os-security/apple-secures-mac-os-x-with-mavericks-release.html|archivedate=2014-07-08|df=}}</ref>}}\n| {{No|Yes}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 2\u20135\n| style=\"background:salmon;\" | Mac OS X [[Mac OS X Tiger|10.4]], [[Mac OS X Leopard|10.5]], [[Windows XP|Win XP]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Partial|since v3.2}}\n| {{No}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 3\u20135\n| style=\"background:salmon;\" | [[Windows Vista|Vista]], [[Windows 7|Win 7]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Partial|since v3.2}}\n| {{No}}\n| {{Yes}}<ref name=\"ECC2\"/>\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 4\u20136\n| style=\"background:salmon;\" | Mac OS X [[Mac OS X Snow Leopard|10.6]], [[Mac OS X Lion|10.7]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}<ref name=\"SHA-2\"/>\n| {{Yes}}<ref name=\"ECC\"/>\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 6\n| style=\"background:salmon;\" | [[OS X Mountain Lion|OS X 10.8]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}<ref name=\"ECC\"/>\n| {{Yes|Mitigated<br />{{refn |group=\"n\" |name=\"note-i\" |In September 2013, Apple implemented [[#BEAST|BEAST]] mitigation in [[OS X 10.8]] (Mountain Lion), but it was not turned on by default resulting in Safari still being theoretically vulnerable to the BEAST attack on that platform.<ref name=\"BEAST-Still\">{{cite web|last=Ristic|first=Ivan|title=Is BEAST Still a Threat?|url=https://community.qualys.com/blogs/securitylabs/2013/09/10/is-beast-still-a-threat|work=qualys.com|url-status=live|archiveurl=https://web.archive.org/web/20141012121824/https://community.qualys.com/blogs/securitylabs/2013/09/10/is-beast-still-a-threat|archivedate=2014-10-12|df=}}</ref><ref name=\"beast-mitigations-mavericks\">{{cite web |first=Ivan |last=Risti\u0107 |url=http://blog.ivanristic.com/2013/10/apple-enabled-beast-mitigations-in-mavericks.html |title=Apple enabled BEAST mitigations in OS X 10.9 Mavericks |date=2013-10-31 |accessdate=2013-11-07 |url-status=live |archiveurl=https://web.archive.org/web/20131107045223/http://blog.ivanristic.com/2013/10/apple-enabled-beast-mitigations-in-mavericks.html |archivedate=2013-11-07}}</ref> BEAST mitigation has been enabled by default from OS X 10.8.5 updated in February 2014.<ref name=\"beast-mitigations-10.8\">{{cite web |first=Ivan |last=Risti\u0107 |url=https://community.qualys.com/thread/12496 |title=Apple finally releases patch for BEAST |date=2014-02-26 |accessdate=2014-07-01 |url-status=live |archiveurl=https://web.archive.org/web/20140714162556/https://community.qualys.com/thread/12496 |archivedate=2014-07-14}}</ref>}}}}\n| {{Yes|Not affected}}\n| {{Partial|Mitigated<br />{{refn |group=\"n\" |name=\"note-safari-poodle\" |Because Apple removed support for all CBC protocols in SSL 3.0 to mitigate POODLE,<ref>{{cite web|url=http://support.apple.com/kb/HT6531|title=About Security Update 2014-005|publisher=|url-status=live|archiveurl=https://web.archive.org/web/20141024181953/https://support.apple.com/kb/HT6531|archivedate=2014-10-24|df=}}</ref><ref name=\"support.apple.com\">{{cite web|url=http://support.apple.com/kb/HT6541|title=About the security content of iOS 8.1|publisher=|url-status=live|archiveurl=https://web.archive.org/web/20141023104948/http://support.apple.com/kb/HT6541|archivedate=2014-10-23|df=}}</ref> this leaves only RC4 which is also completely broken by the RC4 attacks in SSL 3.0.}}}}\n| {{No|Vulnerable<br /><ref group=\"n\" name=\"note-safari-poodle\"/>}}\n| {{Yes|Mitigated<br /><ref name=freak-OSX/>}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 7, 9\n| style=\"background:salmon;\" | [[OS X Mavericks|OS X 10.9]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{Yes}}<ref name=\"MavericksTLS1.2\">{{cite web|title=About the security content of OS X Mavericks v10.9|url=http://support.apple.com/kb/HT6011|accessdate=2014-06-20|url-status=live|archiveurl=https://web.archive.org/web/20140704220956/http://support.apple.com/kb/HT6011|archivedate=2014-07-04|df=}}</ref>\n| {{Yes}}<ref name=\"MavericksTLS1.2\"/>\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated<br /><ref name=\"beast-mitigations-mavericks\"/>}}\n| {{Yes|Not affected}}\n| {{Partial|Mitigated<br /><ref group=\"n\" name=\"note-safari-poodle\"/>}}\n| {{No|Vulnerable<br /><ref group=\"n\" name=\"note-safari-poodle\"/>}}\n| {{Yes|Mitigated<br /><ref name=freak-OSX/>}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 8\u201310\n| style=\"background:salmon;\" | [[OS X Yosemite|OS X 10.10]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Partial|Mitigated<br /><ref group=\"n\" name=\"note-safari-poodle\"/>}}\n| {{Partial|Lowest priority<br /><ref name=\"ssltest-safari-OSX1010\">{{cite web | url=https://www.ssllabs.com/ssltest/viewClient.html?name=Safari&version=8&platform=OS%20X%2010.10 | title=User Agent Capabilities: Safari 8 / OS X 10.10 | publisher=Qualsys SSL Labs | accessdate=2015-03-07 | url-status=live | archiveurl=https://web.archive.org/web/20150906044018/https://www.ssllabs.com/ssltest/viewClient.html?name=Safari&version=8&platform=OS%20X%2010.10 | archivedate=2015-09-06}}</ref><ref group=\"n\" name=\"note-safari-poodle\"/>}}\n| {{Yes|Mitigated<br /><ref name=freak-OSX>{{cite web | url=https://support.apple.com/en-us/HT204413 | title=About Security Update 2015-002 | accessdate=2015-03-09 | url-status=live | archiveurl=https://web.archive.org/web/20150316081731/https://support.apple.com/en-us/HT204413 | archivedate=2015-03-16}}</ref>}}\n| {{Yes|Mitigated}}<br /><ref name=logjam-OSX>{{cite web|url=https://support.apple.com/en-us/HT204942|title=About the security content of OS X Yosemite v10.10.4 and Security Update 2015-005|accessdate=2015-07-03|url-status=live|archiveurl=https://web.archive.org/web/20150702202131/https://support.apple.com/en-us/HT204942|archivedate=2015-07-02|df=}}</ref>\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\"| 9\u201311\n| style=\"background:salmon;\" | [[OS X El Capitan|OS X 10.11]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Partial|Lowest priority}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 10-12\n| style=\"background:salmon;\" | [[macOS Sierra|macOS 10.12]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| style=\"background:salmon;\" | 11, 12\n| style=\"background:#FFCC99;\" | 13\n| style=\"background:#FFCC99;\" | [[macOS High Sierra|macOS 10.13]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| style=\"background:salmon;\" | 12\n| style=\"background:khaki;\" | 13\n| style=\"background:khaki;\" | [[macOS Mojave|macOS 10.14]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Partial|Yes<small> {{nowrap|(since macOS 10.14.4)}}}}<ref name=\"Pauly\">{{cite mailing list|url=https://mailarchive.ietf.org/arch/msg/tls/5QjzTilqjomSyzENtgfaAqQOhbA|title=TLS 1.3 in iOS|first=Tommy|last=Pauly|date=2019-01-29|mailing-list=tls@ietf.org}}</ref> \n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| colspan=\"2\"  style=\"background:#a0e75a;\" | 13\n| style=\"background:#a0e75a;\" | [[macOS Catalina|macOS 10.15]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n! rowspan=\"10\" | [[Safari (web browser)|Apple Safari]]<br /><small>(mobile)</small><br />{{refn |group=\"n\" |name=\"note-h\" |Mobile Safari and third-party software utilizing the system UIWebView library use the [[iOS]] operating system implementation, which supports TLS 1.2 as of iOS 5.0.<ref name=\"iOS5TLS1.2\">{{cite web|author=Apple|title=Technical Note TN2287 \u2013 iOS 5 and TLS 1.2 Interoperability Issues|date=2011-10-14|accessdate=2012-12-10|url=https://developer.apple.com/library/ios/#technotes/tn2287/_index.html|url-status=live|archiveurl=https://web.archive.org/web/20110907013839/http://developer.apple.com/library/iOS/#technotes/tn2287/_index.html|archivedate=2011-09-07|df=}}</ref><ref name=\"Liebowitz\">{{cite web|last=Liebowitz|first=Matt|title=Apple issues huge software security patches|date=2011-10-13|accessdate=2012-12-10|work=NBCNews.com|url=http://www.nbcnews.com/id/44896639|df=}}</ref><ref name=\"MWR Info Security\">{{cite web|author=MWR Info Security|title=Adventures with iOS UIWebviews|date=2012-04-16|accessdate=2012-12-10|url=http://labs.mwrinfosecurity.com/blog/2012/04/16/adventures-with-ios-uiwebviews/|url-status=live|archiveurl=https://www.webcitation.org/6FwL2M2Mc?url=http://labs.mwrinfosecurity.com/blog/2012/04/16/adventures-with-ios-uiwebviews/|archivedate=2013-04-17|df=}}, section \"HTTPS (SSL/TLS)\"</ref>}}\n| colspan=\"2\" style=\"background:salmon;\" | 3\n| style=\"background:salmon;\" | iPhone OS [[IPhone OS 1|1]], [[IPhone OS 2|2]]\n| {{Yes|No<ref>{{cite web|title=Secure Transport Reference|url=https://developer.apple.com/library/mac/documentation/security/Reference/secureTransportRef/Reference/reference.html#//apple_ref/c/tdef/SSLProtocol|accessdate=2014-06-23|url-status=live|archiveurl=https://web.archive.org/web/20140604052511/https://developer.apple.com/library/Mac/documentation/Security/Reference/secureTransportRef/Reference/reference.html#//apple_ref/c/tdef/SSLProtocol|archivedate=2014-06-04|df=}} <code>kSSLProtocol2</code> is deprecated in iOS</ref>}}\n| {{No|Yes}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 4, 5\n| style=\"background:salmon;\" | [[iPhone OS 3]], [[iOS 4]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{Yes}}<ref name=\"theiphoneblog.com\">{{cite web|title=iPhone 3.0: Mobile Safari Gets Enhanced Security Certificate Visualization|website=The iPhone Blog|url=http://www.theiphoneblog.com/2009/03/31/iphone-30-mobile-safari-enhanced-security-certificate-visualization/|date=2009-03-31|archive-url=https://web.archive.org/web/20090403074546/http://www.theiphoneblog.com/2009/03/31/iphone-30-mobile-safari-enhanced-security-certificate-visualization/|archivedate=2009-04-03}}</ref>\n| {{Yes}}\n| {{Partial|since iOS 4}}<ref name=\"ECC2\"/>\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 5, 6\n| style=\"background:salmon;\" | iOS [[iOS 5|5]], [[iOS 6|6]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{Yes}}<ref name=\"iOS5TLS1.2\"/>\n| {{Yes}}<ref name=\"iOS5TLS1.2\"/>\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No|Vulnerable}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 7\n| style=\"background:salmon;\" | [[iOS 7]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}<ref name=\"ReferenceC\">{{cite web|url=https://www.ssllabs.com/ssltest/viewClient.html?name=Safari&version=7&platform=iOS%207.1|title=Qualys SSL Labs \u2013 Projects / User Agent Capabilities: Safari 7 / iOS 7.1|publisher=|url-status=live|archiveurl=https://web.archive.org/web/20170313130545/https://www.ssllabs.com/ssltest/viewClient.html?name=Safari&version=7&platform=iOS%207.1|archivedate=2017-03-13|df=}}</ref>\n| {{Yes|Mitigated<br /><ref name=\"beast-mitigations-ios7\">{{cite web|author=schurtertom|title=SOAP Request fails randomly on one Server but works on another on iOS7|url=https://stackoverflow.com/q/19221568 |date=2013-10-11|accessdate=2014-01-05 |df=}}</ref>}}\n| {{Yes|Not affected}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 8\n| style=\"background:salmon;\" | [[iOS 8]]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Partial|Mitigated<br /><ref group=\"n\" name=\"note-safari-poodle\"/>}}\n| {{Partial|Lowest priority<br /><ref name=\"ssltest-safari-iOS812\">{{cite web | url=https://www.ssllabs.com/ssltest/viewClient.html?name=Safari&version=8&platform=iOS%208.1.2 | title=User Agent Capabilities: Safari 8 / iOS 8.1.2 | publisher=Qualsys SSL Labs | accessdate=2015-03-07 | url-status=live | archiveurl=https://web.archive.org/web/20160304062526/https://www.ssllabs.com/ssltest/viewClient.html?name=Safari&version=8&platform=iOS%208.1.2 | archivedate=2016-03-04}}</ref><ref group=\"n\" name=\"note-safari-poodle\"/>}}\n| {{Yes|Mitigated<br /><ref name=freak-iOS82>{{cite web | url=https://support.apple.com/en-us/HT204423 | title=About the security content of iOS 8.2 | accessdate=2015-03-09 | url-status=live | archiveurl=https://web.archive.org/web/20150309201042/https://support.apple.com/en-us/HT204423 | archivedate=2015-03-09}}</ref>}}\n| {{Yes|Mitigated}}<br /><ref name=logjam-iOS84>{{cite web|url=https://support.apple.com/en-us/HT204941|title=About the security content of iOS 8.4|accessdate=2015-07-03|url-status=live|archiveurl=https://web.archive.org/web/20150703014410/https://support.apple.com/en-us/HT204941|archivedate=2015-07-03|df=}}</ref>\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 9\n| style=\"background:salmon;\" | [[iOS 9]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Partial|Lowest priority}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:salmon;\" | 10\u201311\n| style=\"background:salmon;\" | iOS [[iOS 10|10]], [[iOS 11|11]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| colspan=\"2\" style=\"background:#FFCC99;\" | 12\n| style=\"background:#FFCC99;\" | [[iOS 12]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Partial|Yes<small> {{nowrap|(since iOS 12.2)}}}}<ref name=\"Pauly\">{{cite mailing list|url=https://mailarchive.ietf.org/arch/msg/tls/5QjzTilqjomSyzENtgfaAqQOhbA|title=TLS 1.3 in iOS|first=Tommy|last=Pauly|date=2019-01-29|mailing-list=tls@ietf.org}}</ref> \n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes|Mitigated}}\n| {{Yes|Not affected}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| rowspan=\"2\" colspan=\"2\" style=\"background:#a0e75a;\" | 13\n| style=\"background:#a0e75a;\" | [[iOS 13]]\n| rowspan=\"2\" ! {{Yes|No}}\n| rowspan=\"2\" !  {{Yes|No}}\n| rowspan=\"2\" !  {{Yes}}\n| rowspan=\"2\" !  {{Yes}}\n| rowspan=\"2\" !  {{Yes}}\n| rowspan=\"2\" !  {{Yes}}\n| rowspan=\"2\" !  {{Yes}}\n| rowspan=\"2\" !  {{Yes}}\n| rowspan=\"2\" !  {{Yes}}\n| rowspan=\"2\" !  {{Yes|Mitigated}}\n| rowspan=\"2\" !  {{Yes|Not affected}}\n| rowspan=\"2\" !  {{Yes|Not affected}}\n| rowspan=\"2\" !  {{Yes|Disabled by default&#8203;<ref group=\"n\" name=\"RC4-disabled\"/>}}\n| rowspan=\"2\" !  {{Yes|Mitigated}}\n| rowspan=\"2\" !  {{Yes|Mitigated}}\n| rowspan=\"2\" !  {{No}}\n|-\n| style=\"background:#a0e75a;\" | [[iPadOS|iPadOS 13]]\n|-\n! rowspan=\"2\" | Browser\n! colspan=\"2\" rowspan=\"2\" | Version\n! rowspan=\"2\" | Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV<br /><ref group=\"n\" name=\"note-evssl\"/>\n! SHA-2\n! ECDSA\n! BEAST<ref group=\"n\" name=\"note-BEASTmitigation\"/>\n! CRIME<ref group=\"n\" name=\"note-CRIMEmitigation\"/>\n! POODLE (SSLv3)<ref group=\"n\" name=\"note-POODLEmitigation\"/>\n! RC4<ref group=\"n\" name=\"note-RC4mitigation\"/>\n! FREAK<ref name=\"note-FREAK-1\"/><ref name=\"note-FREAK-2\"/>\n! Logjam\n! rowspan=\"2\" | Protocol selection by user\n|-\n! colspan=\"2\" | SSL protocols\n! colspan=\"4\" | TLS protocols\n! colspan=\"3\" | Certificate Support\n! colspan=\"6\" | Vulnerabilities fixed\n|-\n! rowspan=\"7\" | [[Android (OS)|Google Android OS Browser]]<br /><ref name=android-tls>{{cite web|url=https://developer.android.com/reference/javax/net/ssl/SSLSocket.html|title=SSLSocket {{!}} Android Developers|accessdate=2015-03-11|url-status=live|archiveurl=https://web.archive.org/web/20150318121117/http://developer.android.com/reference/javax/net/ssl/SSLSocket.html|archivedate=2015-03-18|df=}}</ref>\n| colspan=\"3\" style=\"background:salmon;\" | Android [[Android version history|1.0\u20134.0.4]]\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{No}}\n| {{No}}\n| {{No}}\n| {{unknown}}\n| {{Yes}}<ref name=\"SHA-2\"/>\n| {{Partial|since 3.0}}<ref name=\"ECC2\">{{cite web|title=What browsers work with Universal SSL|accessdate=2015-06-15|url=https://support.cloudflare.com/hc/en-us/articles/203041594-What-browsers-work-with-Universal-SSL|url-status=live|archiveurl=https://web.archive.org/web/20160304023941/https://support.cloudflare.com/hc/en-us/articles/203041594-What-browsers-work-with-Universal-SSL|archivedate=2016-03-04|df=}}</ref><ref name=\"ECC\"/>\n| {{unknown}}\n| {{unknown}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"3\" style=\"background:salmon;\" | Android [[Android version history|4.1\u20134.4.4]]\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Partial|Disabled by default}}&#8203;<ref name=\"Android-SSLSocket\">{{cite web |url=http://developer.android.com/reference/javax/net/ssl/SSLSocket.html |title=SSLSocket {{!}} Android Developers |accessdate=2015-12-17 |url-status=live |archiveurl=https://web.archive.org/web/20160304202641/https://developer.android.com/reference/javax/net/ssl/SSLSocket.html |archivedate=2016-03-04}}</ref>\n| {{Partial|Disabled by default}}&#8203;<ref name=\"Android-SSLSocket\"/>\n| {{No}}\n| {{unknown}}\n| {{Yes}}\n| {{Yes}}\n| {{unknown}}\n| {{unknown}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"3\" style=\"background:salmon;\" | Android [[Android Lollipop|5.0\u20135.0.2]]\n| {{Yes|No}}\n| {{No|Enabled by default}}\n| {{Yes}}\n| {{Yes}}<ref name=\"Android-SSLSocket\"/><ref name=android-5-tls>{{cite web|url=http://developer.android.com/about/versions/android-5.0-changes.html#ssl|title=Android 5.0 Behavior Changes {{!}} Android Developers|accessdate=2015-03-11|url-status=live|archiveurl=https://web.archive.org/web/20150309000956/http://developer.android.com/about/versions/android-5.0-changes.html#ssl|archivedate=2015-03-09|df=}}</ref>\n| {{Yes}}<ref name=\"Android-SSLSocket\"/><ref name=android-5-tls/>\n| {{No}}\n| {{unknown}}\n| {{Yes}}\n| {{Yes}}\n| {{unknown}}\n| {{unknown}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No|Vulnerable}}\n| {{No}}\n|-\n| colspan=\"3\" style=\"background:salmon;\" | Android [[Android Lollipop|5.1\u20135.1.1]]\n| {{Yes|No}}\n| {{Partial|Disabled by default}}<br /><small>{{citation needed|date=August 2016}}</small>\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{No}}\n| {{unknown}}\n| {{Yes}}\n| {{Yes}}\n| {{unknown}}\n| {{unknown}}\n| {{Yes|Not affected}}\n| {{Partial|Only as fallback<br /><ref group=\"n\" name=\"RC4fallback\"/>}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n| colspan=\"3\" style=\"background:salmon;\" | Android [[Android Marshmallow|6.0]]\u2013[[Android Nougat|7.1.2]]\n| rowspan=\"1\" ! {{Yes|No}}\n| rowspan=\"1\" ! {{Partial|Disabled by default}}<br /><small>{{citation needed|date=August 2016}}</small>\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{No}}\n| rowspan=\"1\" ! {{unknown}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{unknown}}\n| rowspan=\"1\" ! {{unknown}}\n| rowspan=\"1\" ! {{Yes|Not affected}}\n| rowspan=\"1\" ! {{Yes|Disabled by default}}\n| rowspan=\"1\" ! {{Yes|Mitigated}}\n| rowspan=\"1\" ! {{Yes|Mitigated}}\n| rowspan=\"1\" ! {{No}}\n|-\n| colspan=\"3\" style=\"background:khaki;\" | Android [[Android Oreo|8.0]]\u2013[[Android Pie|9.0]]\n| rowspan=\"1\" ! {{Yes|No}}\n| rowspan=\"1\" ! {{Yes|No}}<br /><ref name=\"Android 8.0 Behavior Changes\">{{cite web|url=https://developer.android.com/about/versions/oreo/android-8.0-changes.html|title=Android 8.0 Behavior Changes|url-status=live|archiveurl=https://web.archive.org/web/20171201042705/https://developer.android.com/about/versions/oreo/android-8.0-changes.html|archivedate=2017-12-01|df=}}</ref>\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{No}}\n| rowspan=\"1\" ! {{unknown}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{Yes}}\n| rowspan=\"1\" ! {{unknown}}\n| rowspan=\"1\" ! {{unknown}}\n| rowspan=\"1\" ! {{Yes|Not affected}}\n| rowspan=\"1\" ! {{Yes|Disabled by default}}\n| rowspan=\"1\" ! {{Yes|Mitigated}}\n| rowspan=\"1\" ! {{Yes|Mitigated}}\n| rowspan=\"1\" ! {{No}}\n|-\n| colspan=\"3\" style=\"background:#a0e75a;\"| Android [[Android 10|10.0]]\n| {{Yes|No}}\n| {{Yes|No}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{Yes}}\n| {{unknown}}\n| {{Yes}}\n| {{Yes}}\n| {{unknown}}\n| {{unknown}}\n| {{Yes|Not affected}}\n| {{Yes|Disabled by default}}\n| {{Yes|Mitigated}}\n| {{Yes|Mitigated}}\n| {{No}}\n|-\n! Browser\n! colspan=\"2\" | Version\n! Platforms\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n! EV certificate\n! SHA-2 certificate\n! ECDSA certificate\n! BEAST\n! CRIME\n! POODLE (SSLv3)\n! RC4\n! FREAK\n! Logjam\n! Protocol selection by user\n|-\n|}\n{|class=\"wikitable\" style=\"text-align: center; font-size: smaller;\"\n|-\n|-\n! colspan=\"2\" | Color or Note\n! rowspan=\"2\" | Significance\n|-\n! Browser version\n! Platform\n|-\n| {{table-experimental|}} Browser version\n| {{table-experimental|}} Operating system\n| Future release; under development\n|-\n| style=\"background:#a0e75a;\" | Browser version\n| style=\"background:#a0e75a;\" | Operating system\n| Current latest release\n|-\n| style=\"background:khaki;\" | Browser version\n| style=\"background:khaki;\" | Operating system\n| Former release; still supported\n|-\n| style=\"background:#FFCC99;\" | Browser version\n| style=\"background:#FFCC99;\" | Operating system\n| Former release; long-term support still active, but will end in less than 12 months\n|-\n| style=\"background:salmon;\" | Browser version\n| style=\"background:salmon;\" | Operating system\n| Former release; no longer supported\n|-\n| rowspan=\"3\" style=\"background:darkgrey;\" | n/a\n| Operating system\n| Mixed / Unspecified\n|-\n| Operating system <small>(Version+)</small>\n| Minimum required operating system version (for supported versions of the browser)\n|-\n| <s>Operating system</s>\n| No longer supported for this operating system\n|}\n;Notes\n{{reflist |30em|group=\"n\"}}\n\n===Libraries===\n{{Main|Comparison of TLS implementations}}\nMost SSL and TLS programming libraries are [[free and open source software]].\n* [[OpenSSL#BoringSSL|BoringSSL]], a fork of OpenSSL for Chrome/Chromium and Android as well as other Google applications.\n* [[Botan (programming library)|Botan]], a BSD-licensed cryptographic library written in C++.\n* [[cryptlib]]: a portable open source cryptography library (includes TLS/SSL implementation)\n* [[Delphi (programming language)|Delphi]] programmers may use a library called [[Internet Direct|Indy]] which utilizes [[OpenSSL]] or alternatively ICS which supports TLS 1.3 now.\n* [[GnuTLS]]: a free implementation (LGPL licensed)\n* [[Java Secure Socket Extension]]: a [[Java (programming language)|Java]] implementation included in the [[Java Runtime Environment]] supported TLS 1.1 and 1.2 starting with Java 7.  (TLS 1.1/1.2 were initially disabled by default for client on Java 7, but were enabled in January 2017.<ref name=\"Oracle\">{{cite web |author=Oracle |url=https://bugs.openjdk.java.net/browse/JDK-7093640 |title=7093640: Enable client-side TLS 1.2 by default |accessdate=2018-08-30 }}</ref>)  Java 11 supports TLS 1.3.<ref name=\"bugs.openjdk.java.net\">{{cite web |author=Oracle |url=https://bugs.openjdk.java.net/browse/JDK-8145252 |title=JEP 332: Transport Layer Security (TLS) 1.3 |accessdate=2018-08-30 }}</ref>\n* [[LibreSSL]]: a fork of OpenSSL by OpenBSD project.\n* [[MatrixSSL]]: a dual licensed implementation\n* [[mbed TLS]] (previously PolarSSL): A tiny SSL library implementation for embedded devices that is designed for ease of use\n* [[Network Security Services]]: [[FIPS 140]] validated open source library\n* [[OpenSSL]]: a free implementation (BSD license with some extensions)\n* [[RSA BSAFE]] Micro Edition Suite: a multi-platform implementation of TLS written in [[C (programming language)|C]] using a FIPS-validated cryptographic module\n* [[RSA BSAFE]] SSL-J: a TLS library providing both a proprietary API and [[Java Secure Socket Extension|JSSE]] API, using FIPS-validated cryptographic module\n* [[Security Support Provider Interface|SChannel]]: an implementation of SSL and TLS [[Microsoft Windows]] as part of its package.\n* [[Secure Transport]]: an implementation of SSL and TLS used in [[OS X]] and [[iOS]] as part of their packages.\n* [[wolfSSL]] (previously CyaSSL): Embedded SSL/TLS Library with a strong focus on speed and size.\n\n{| class=\"wikitable\"\n|+ Library support for TLS/SSL\n|-\n! Implementation\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n\n|-\n! [[Botan (programming library)|Botan]]\n| {{Yes|No}}\n| {{yes|No}}<ref name=\"Botan 1.11.13\">{{cite web|url=http://botan.randombit.net/relnotes/1_11_13.html|title=Version 1.11.13, 2015-01-11 \u2014 Botan|date=2015-01-11|accessdate=2015-01-16|url-status=dead|archiveurl=https://web.archive.org/web/20150109154102/http://botan.randombit.net/relnotes/1_11_13.html|archivedate=2015-01-09|df=}}</ref>\n| {{yes}}\n| {{yes}}\n| {{yes}}\n|\n|-\n! [[cryptlib]]\n| {{Yes|No}}\n| {{Yes|Disabled by default at compile time}}\n| {{yes}}\n| {{yes}}\n| {{yes}}\n|\n|-\n! [[GnuTLS]]\n| {{Yes|No}}{{cref2|group=protocollibrary-table|a}}\n| {{yes|Disabled by default}}<ref name=GnuTLS-3.4.0>{{cite web|url=http://lists.gnutls.org/pipermail/gnutls-devel/2015-April/007535.html|title=[gnutls-devel] GnuTLS 3.4.0 released|date=2015-04-08|accessdate=2015-04-16|url-status=live|archiveurl=https://web.archive.org/web/20150416005543/http://lists.gnutls.org/pipermail/gnutls-devel/2015-April/007535.html|archivedate=2015-04-16|df=}}</ref>\n| {{yes}}\n| {{yes}}\n| {{yes}}\n| {{partial|yes}}<br /><small>(draft version)<ref name=GnuTLS-3.6.3>{{cite web|url=https://lists.gnupg.org/pipermail/gnutls-devel/2018-July/008584.html|title=[gnutls-devel] gnutls 3.6.3 |date=2018-07-16|accessdate=2018-09-16}}</ref></small>\n|-\n! [[Java Secure Socket Extension]]\n| {{Yes|No}}{{cref2|group=protocollibrary-table|a}}\n| {{Yes|Disabled by default}}<ref name=\"oracle.com\">{{cite web|url=http://www.oracle.com/technetwork/java/javase/8u31-relnotes-2389094.html|title=Java\u2122 SE Development Kit 8, Update 31 Release Notes|accessdate=2015-01-22|url-status=live|archiveurl=https://web.archive.org/web/20150121105601/http://www.oracle.com/technetwork/java/javase/8u31-relnotes-2389094.html|archivedate=2015-01-21|df=}}</ref>\n| {{yes}}\n| {{yes}}\n| {{yes}}\n| {{yes}}\n|-\n! [[LibreSSL]]\n| {{Yes|No}}<ref name=OpenBSD5.6>{{cite web|url=https://marc.info/?l=openbsd-announce&m=141486254309079&w=2|title=OpenBSD 5.6 Released|date=2014-11-01|accessdate=2015-01-20}}</ref>\n| {{yes|No}}<ref name=libressl-2.3>{{cite web| title = LibreSSL 2.3.0 Released| url = https://marc.info/?l=openbsd-announce&m=144304330731220| date = 2015-09-23| accessdate = 2015-09-24}}</ref>\n| {{yes}}\n| {{yes}}\n| {{yes}}\n|\n|-\n! [[MatrixSSL]]\n| {{Yes|No}}\n| {{yes|Disabled by default at compile time}}<ref name=Matrix-POODLE>{{cite web|url=http://www.matrixssl.org/news.html|title=MatrixSSL \u2013 News|accessdate=2014-11-09|url-status=dead|archiveurl=https://web.archive.org/web/20150214105056/http://www.matrixssl.org/news.html|archivedate=2015-02-14|df=}}</ref>\n| {{yes}}\n| {{yes}}\n| {{yes}}\n| {{partial|yes}}<br /><small>(draft version)</small>\n|-\n! [[mbed TLS]] (previously PolarSSL)\n| {{Yes|No}}\n| {{Yes|Disabled by default}}<ref name=mbed-2.0>{{cite web | title = mbed TLS 2.0.0 released | url = https://tls.mbed.org/tech-updates/releases/mbedtls-2.0.0-released | date = 2015-07-10 | accessdate = 2015-07-14 | url-status=live | archiveurl = https://web.archive.org/web/20150925030547/https://tls.mbed.org/tech-updates/releases/mbedtls-2.0.0-released | archivedate = 2015-09-25}}</ref>\n| {{yes}}\n| {{yes}}\n| {{yes}}\n|\n|-\n! [[Network Security Services]]\n| {{yes|No}}{{cref2|group=protocolsupport|b}}\n| {{Yes|Disabled by default}}<ref name=NSS-3.19>{{cite web|url=https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.19_release_notes|work=Mozilla Developer Network|title=NSS 3.19 release notes|publisher=Mozilla|accessdate=2015-05-06|url-status=live|archiveurl=https://web.archive.org/web/20150605054647/https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.19_release_notes|archivedate=2015-06-05|df=}}</ref>\n| {{yes}}\n| {{yes}}<ref name=NSS-3.14>{{cite web|url=https://developer.mozilla.org/en-US/docs/NSS/NSS_3.14_release_notes|work=Mozilla Developer Network|title=NSS 3.14 release notes|publisher=Mozilla|accessdate=2012-10-27|url-status=live|archiveurl=https://web.archive.org/web/20130117130029/https://developer.mozilla.org/en-US/docs/NSS/NSS_3.14_release_notes|archivedate=2013-01-17|df=}}</ref>\n| {{yes}}<ref name=NSS-3.15.1>{{cite web|url=https://developer.mozilla.org/en-US/docs/NSS/NSS_3.15.1_release_notes|work=Mozilla Developer Network|title=NSS 3.15.1 release notes|publisher=Mozilla|accessdate=2013-08-10|url-status=live|archiveurl=https://web.archive.org/web/20130922223238/https://developer.mozilla.org/en-US/docs/NSS/NSS_3.15.1_release_notes|archivedate=2013-09-22|df=}}</ref>\n| {{yes}}<ref name=\"NSS 3.39 release notes\">{{cite web|title=NSS 3.39 release notes |url=https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.39_release_notes#Notable_Changes_in_NSS_3.39 |date=2018-08-31 |accessdate=2018-09-14}}</ref>\n|-\n! [[OpenSSL]]\n| {{Yes|No}}<ref name=\"OpenSSL 1.1.0 Series Release Notes\">{{cite web|url=https://www.openssl.org/news/openssl-1.1.0-notes.html|title=OpenSSL 1.1.0 Series Release Notes|accessdate=2016-10-02|url-status=live|archiveurl=https://web.archive.org/web/20160825171308/https://www.openssl.org/news/openssl-1.1.0-notes.html|archivedate=2016-08-25|df=}}</ref>\n| {{No|Enabled by default}}\n| {{yes}}\n| {{yes}}<ref name=openssl-1.0.1-note>{{cite web|title=Major changes between OpenSSL 1.0.0h and OpenSSL 1.0.1 [14 Mar 2012] |url=https://www.openssl.org/news/openssl-1.0.1-notes.html |date=2012-03-14 |accessdate=2015-01-20 |url-status=dead |archiveurl=https://web.archive.org/web/20150120120428/https://www.openssl.org/news/openssl-1.0.1-notes.html |archivedate=January 20, 2015}}</ref>\n| {{yes}}<ref name=openssl-1.0.1-note />\n| {{yes}}<ref name=\"OpenSSL 1.1.1 Is Released\">{{cite web|title=OpenSSL 1.1.1 Is Released |url=https://www.openssl.org/blog/blog/2018/09/11/release111/ |date=2018-09-11 |accessdate=2018-09-14}}</ref>\n|-\n! [[RSA BSAFE]] Micro Edition Suite\n| {{yes|No}}\n| {{Yes|Disabled by default}}\n| {{yes}}\n| {{yes}}\n| {{yes}}\n| {{partial|Not yet}}\n|-\n! [[RSA BSAFE]] SSL-J\n| {{yes|No}}\n| {{Yes|Disabled by default}}\n| {{yes}}\n| {{yes}}\n| {{yes}}\n| {{partial|Not yet}}\n|-\n! [[SChannel|SChannel XP / 2003]]<ref name=XP2003schannel>[https://msdn.microsoft.com/en-us/library/windows/desktop/aa380512%28v=vs.85%29.aspx TLS cipher suites in Microsoft Windows XP and 2003] {{webarchive|url=https://web.archive.org/web/20150118053924/http://msdn.microsoft.com/en-us/library/windows/desktop/aa380512(v=vs.85).aspx |date=2015-01-18}}</ref>\n| {{Partial|Disabled by default by MSIE 7}}\n| {{No|Enabled by default}}\n| {{partial|Enabled by default by MSIE 7}}\n| {{no}}\n| {{no}}\n| {{no}}\n|-\n! [[SChannel|SChannel Vista]]<ref name=Vista2008schannel>[https://msdn.microsoft.com/en-us/library/windows/desktop/ff468651%28v=vs.85%29.aspx SChannel Cipher Suites in Microsoft Windows Vista] {{webarchive|url=https://web.archive.org/web/20150112014148/http://msdn.microsoft.com/en-us/library/windows/desktop/ff468651(v=vs.85).aspx |date=2015-01-12}}</ref>\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{yes}}\n| {{no}}\n| {{no}}\n| {{no}}\n|-\n! [[SChannel|SChannel 2008]]<ref name=Vista2008schannel/>\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{yes}}\n| {{Partial|<small>Disabled by default (KB4019276)<ref name=\"2008R1TLS1.2\"/></small>}}\n| {{Partial|<small>Disabled by default (KB4019276)<ref name=\"2008R1TLS1.2\"/></small>}}\n| {{no}}\n|-\n! [[SChannel|SChannel 7 / 2008 R2]]<ref name=Windows7schannel>[https://msdn.microsoft.com/en-us/library/windows/desktop/aa374757%28v=vs.85%29.aspx TLS Cipher Suites in SChannel for Windows 7, 2008R2, 8, 2012] {{webarchive|url=https://web.archive.org/web/20150319043951/https://msdn.microsoft.com/en-us/library/windows/desktop/aa374757(v=vs.85).aspx |date=2015-03-19}}</ref>\n| {{Yes|Disabled by default}}\n| {{partial|Disabled by default in MSIE 11}}\n| {{yes}}\n| {{partial|Enabled by default by MSIE 11}}\n| {{partial|Enabled by default by MSIE 11}}\n| {{no}}\n|-\n! [[SChannel|SChannel 8 / 2012]]<ref name=Windows7schannel/>\n| {{Yes|Disabled by default}}\n| {{No|Enabled by default}}\n| {{yes}}\n| {{partial|Disabled by default}}\n| {{partial|Disabled by default}}\n| {{no}}\n|-\n! [[SChannel|SChannel 8.1 / 2012 R2, 10 v1507 & v1511]]<ref name=Windows7schannel/>\n| {{Yes|Disabled by default}}\n| {{partial|Disabled by default in MSIE 11}}\n| {{yes}}\n| {{yes}}\n| {{yes}}\n| {{no}}\n|-\n! [[SChannel|SChannel 10 v1607 / 2016]]<ref name=\"Windows10_v1607schannel\">{{Cite web |date=2017-03-21 |url=https://technet.microsoft.com/en-us/windows-server-docs/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server-2016 |title=TLS (Schannel SSP) changes in Windows 10 and Windows Server 2016 |publisher=Microsoft |accessdate=2017-03-29 |url-status=dead |archiveurl=https://web.archive.org/web/20170330011044/https://technet.microsoft.com/en-us/windows-server-docs/security/tls/tls-schannel-ssp-changes-in-windows-10-and-windows-server-2016 |archivedate=2017-03-30}}</ref>\n| {{Yes|No}}\n| {{Yes|Disabled by default}}\n| {{yes}}\n| {{yes}}\n| {{yes}}\n| {{no}}\n|-\n! Secure Transport OS X 10.2\u201310.8 / iOS 1\u20134\n| {{No|Yes}}\n| {{No|Yes}}\n| {{yes}}\n| {{no}}\n| {{no}}\n|\n|-\n! Secure Transport OS X 10.9\u201310.10 / iOS 5\u20138\n| {{Yes|No}}{{cref2|group=protocollibrary-table|c}}\n| {{No|Yes}}\n| {{yes}}\n| {{yes}}{{cref2|group=protocollibrary-table|c}}\n| {{yes}}{{cref2|group=protocollibrary-table|c}}\n|\n|-\n! Secure Transport OS X 10.11 / iOS 9\n| {{Yes|No}}\n| {{Yes|No}}{{cref2|group=protocollibrary-table|c}}\n| {{yes}}\n| {{yes}}\n| {{yes}}\n|\n|-\n! [[Seed7]] [http://seed7.sourceforge.net/libraries/tls.htm TLS/SSL Library]\n| {{Yes|No}}\n| {{No|Yes}}\n| {{yes}}\n| {{yes}}\n| {{yes}}\n|\n|-\n! [[wolfSSL]] (previously CyaSSL)\n| {{Yes|No}}\n| {{Yes|Disabled by default}}<ref name=wolfSSL-3.6.6>{{cite web|url=http://wolfssl.com/wolfSSL/Blog/Entries/2015/8/24_wolfSSL_3.6.6_is_Now_Available.html|title=[wolfssl] wolfSSL 3.6.6 Released|date=2015-08-20|accessdate=2015-08-25|url-status=live|archiveurl=https://web.archive.org/web/20151017033726/https://wolfssl.com/wolfSSL/Blog/Entries/2015/8/24_wolfSSL_3.6.6_is_Now_Available.html|archivedate=2015-10-17|df=}}</ref>\n| {{yes}}\n| {{yes}}\n| {{yes}}\n| {{partial|yes}}<br /><small>(draft version)</small><ref name=\"wolfSSL TLS 1.3 support\">{{cite web|url=https://github.com/wolfSSL/wolfssl/pull/661|title=[wolfssl] wolfSSL TLS1.3 support|date=2017-02-13|accessdate=2017-02-13}}</ref>\n|- class=\"sortbottom\"\n! Implementation\n! SSL 2.0 (insecure)\n! SSL 3.0 (insecure)\n! TLS 1.0\n! TLS 1.1\n! TLS 1.2\n! TLS 1.3\n|}\n{{cnote2 begin | liststyle=lower-alpha}}\n{{cnote2 | group=protocollibrary-table | a | SSL 2.0 client hello is supported even though SSL 2.0 is not supported or is disabled because of the backward compatibilities.}}\n{{cnote2 | group=protocolsupport | b | Server-side implementation of the SSL/TLS protocol still supports processing of received v2-compatible client hello messages.<ref name=NSS-3.24>{{cite web|url=https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.24_release_notes|work=Mozilla Developer Network|title=NSS 3.24 release notes|publisher=Mozilla|accessdate=2016-06-19|url-status=live|archiveurl=https://web.archive.org/web/20160826100711/https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.24_release_notes|archivedate=2016-08-26}}</ref>}}\n{{cnote2 | group=protocollibrary-table | c | Secure Transport: SSL 2.0 was discontinued in OS X 10.8. SSL 3.0 was discontinued in OS X 10.11 and iOS 9. TLS 1.1 and 1.2 are available on iOS 5.0 and later, and OS X 10.9 and later.<ref>{{cite web|url=https://developer.apple.com/library/ios/technotes/tn2287/|work=iOS Developer Library|title=Technical Note TN2287: iOS 5 and TLS 1.2 Interoperability Issues|publisher=Apple Inc.|accessdate=2012-05-03|url-status=live|archiveurl=https://web.archive.org/web/20150403092122/https://developer.apple.com/library/ios/technotes/tn2287/|archivedate=2015-04-03|df=}}</ref>}}<ref>[https://dev.ssllabs.com/ssltest/clients.html Qualys SSL Labs \u2013 Projects / User Agent Capabilities<!-- Bot generated title -->] {{webarchive|url=https://web.archive.org/web/20150919073935/https://dev.ssllabs.com/ssltest/clients.html |date=2015-09-19}}</ref>\n{{cnote2 end}}\n\nA paper presented at the 2012 [[Association for Computing Machinery|ACM]] [[Computer security conference|conference on computer and communications security]]<ref>{{cite book|author=Georgiev, Martin and Iyengar, Subodh and Jana, Suman and Anubhai, Rishita and Boneh, Dan and Shmatikov, Vitaly|title=The most dangerous code in the world: validating SSL certificates in non-browser software. Proceedings of the 2012 ACM conference on Computer and communications security|year=2012|isbn=978-1-4503-1651-4|url=http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf|pages=38\u201349|url-status=live|archiveurl=https://web.archive.org/web/20171022194807/http://www.cs.utexas.edu/~shmat/shmat_ccs12.pdf|archivedate=2017-10-22|df=}}</ref> showed that few applications used some of these SSL libraries correctly, leading to vulnerabilities. According to the authors\n<blockquote>\"the root cause of most of these vulnerabilities is the terrible design of the APIs to the underlying SSL libraries. Instead of expressing high-level security properties of network tunnels such as confidentiality and authentication, these APIs expose low-level details of the SSL protocol to application developers. As a consequence, developers often use SSL APIs incorrectly, misinterpreting and misunderstanding their manifold parameters, options, side effects, and return values.\"</blockquote>\n\n===Other uses===\nThe [[Simple Mail Transfer Protocol]] (SMTP) can also be protected by TLS. These applications use [[public key certificate]]s to verify the identity of endpoints.\n\nTLS can also be used for tunnelling an entire network stack to create a [[virtual private network|VPN]], which is the case with [[OpenVPN]] and [[OpenConnect]]. Many vendors have by now married TLS's encryption and authentication capabilities with authorization. There has also been substantial development since the late 1990s in creating client technology outside of Web-browsers, in order to enable support for client/server applications. Compared to traditional [[IPsec]] VPN technologies, TLS has some inherent advantages in firewall and [[network address translation|NAT]] traversal that make it easier to administer for large remote-access populations.\n\nTLS is also a standard method for protecting [[Session Initiation Protocol]] (SIP) application signaling. TLS can be used for providing authentication and encryption of the SIP signalling associated with [[Voice over Internet Protocol|VoIP]] and other SIP-based applications.{{citation needed|date=December 2013}}\n\n==Security==\n\n===SSL 2.0===\nSSL 2.0 was flawed in a variety of ways:<ref>{{cite journal|title=On the Security of Today's Online Electronic Banking Systems|author1=Joris Claessens |author2=Valentin Dem |author3=Danny De Cock |author4=Bart Preneel |author5=Joos Vandewalle |journal=Computers & Security|volume=21|issue=3|year=2002|pages=253\u2013265|doi=10.1016/S0167-4048(02)00312-7}}</ref>\n* Identical cryptographic keys were used for [[message authentication]] and encryption. <!-- please explain how this affects security --> (In SSL 3.0, MAC secrets may be larger than encryption keys, so messages can remain tamper-resistant even if encryption keys are broken.<ref name=\"RFC6101\"/>)\n* SSL 2.0 had a weak MAC construction that used the MD5 hash function with a secret prefix, making it vulnerable to [[length extension attack]]s.\n* SSL 2.0 did not have any protection for the handshake, meaning a man-in-the-middle [[downgrade attack]] could go undetected.\n* SSL 2.0 used the TCP connection close to indicate the end of data. This meant that truncation attacks were possible: the attacker simply forges a TCP FIN, leaving the recipient unaware of an illegitimate end of data message (SSL 3.0 fixed this problem by having an explicit closure alert).\n* SSL 2.0 assumed a single service and a fixed domain certificate, which clashed with the standard feature of virtual hosting in Web servers. This means that most websites were practically impaired from using SSL.\n\nSSL 2.0 was disabled by default, beginning with [[Internet Explorer 7]],<ref>{{cite web|url=http://blogs.msdn.com/ie/archive/2005/10/22/483795.aspx|title=IEBlog: Upcoming HTTPS Improvements in Internet Explorer 7 Beta 2|accessdate=2007-11-25|last=Lawrence|first=Eric|date=2005-10-22|publisher=[[Microsoft Developer Network|MSDN]] Blogs|url-status=live|archiveurl=https://www.webcitation.org/6FwL2ooJz?url=http://blogs.msdn.com/b/ie/archive/2005/10/22/483795.aspx|archivedate=2013-04-17|df=}}</ref> [[Mozilla Firefox]] 2,<ref>{{cite web|url=https://bugzilla.mozilla.org/show_bug.cgi?id=236933|title=Bugzilla@Mozilla&nbsp;\u2014 Bug 236933 \u2013 Disable SSL2 and other weak ciphers|accessdate=2007-11-25|publisher=[[Mozilla Corporation]]}}</ref> [[Opera (web browser)|Opera]] 9.5,<ref>[http://www.opera.com/docs/changelogs/windows/950/ \"Opera 9.5 for Windows Changelog\"] {{webarchive|url=https://web.archive.org/web/20090626142453/http://www.opera.com/docs/changelogs/windows/950/ |date=2009-06-26}} at [[Opera.com]]: \"Disabled SSL v2 and weak ciphers.\"</ref> and [[Safari (web browser)|Safari]]. Support for SSL 2.0 (and weak [[40-bit encryption|40-bit]] and 56-bit ciphers) was removed completely from Opera as of version 10<!--9.5=disabled, v10=removed, see changelogs-->.<ref>[http://www.opera.com/docs/changelogs/windows/1000/ \"Opera 10 for Windows changelog\"] {{webarchive|url=https://web.archive.org/web/20130326080606/http://www.opera.com/docs/changelogs/windows/1000/ |date=2013-03-26}} at [[Opera.com]]: \"Removed support for SSL v2 and weak ciphers\"</ref><ref>{{cite web|url=http://my.opera.com/yngve/blog/2007/04/30/10-years-of-ssl-in-opera |title=10 years of SSL in Opera&nbsp;\u2014 Implementer's notes |accessdate=2007-11-25 |last=Pettersen |first=Yngve |date=2007-04-30 |publisher=[[Opera Software]] |url-status=dead |archiveurl=https://web.archive.org/web/20071012205124/http://my.opera.com/yngve/blog/2007/04/30/10-years-of-ssl-in-opera |archivedate=October 12, 2007}}</ref>\n\n===SSL 3.0===\nSSL 3.0 improved upon SSL 2.0 by adding SHA-1\u2013based ciphers and support for certificate authentication.\n\nFrom a security standpoint, SSL 3.0 should be considered less desirable than TLS 1.0. The SSL 3.0 cipher suites have a weaker key derivation process; half of the master key that is established is fully dependent on the MD5 hash function, which is not resistant to collisions and is, therefore, not considered secure. Under TLS 1.0, the master key that is established depends on both MD5 and SHA-1 so its derivation process is not currently considered weak. It is for this reason that SSL 3.0 implementations cannot be validated under FIPS 140-2.<ref>{{cite web|author=National Institute of Standards and Technology |title=Implementation Guidance for FIPS PUB 140-2 and the Cryptographic Module Validation Program |date=December 2010 |url=http://csrc.nist.gov/groups/STM/cmvp/documents/fips140-2/FIPS1402IG.pdf |url-status=dead |archiveurl=https://web.archive.org/web/20101106130105/http://csrc.nist.gov/groups/STM/cmvp/documents/fips140-2/FIPS1402IG.pdf |archivedate=November 6, 2010}}</ref>\n\nIn October 2014, the vulnerability in the design of SSL 3.0 was reported, which makes CBC mode of operation with SSL 3.0 vulnerable to the padding attack (see [[#POODLE attack]]).\n\n===TLS===\nTLS has a variety of security measures:\n* Protection against a downgrade of the protocol to a previous (less secure) version or a weaker cipher suite.\n* Numbering subsequent Application records with a sequence number and using this sequence number in the [[message authentication code]]s (MACs).\n* Using a message digest enhanced with a key (so only a key-holder can check the MAC). The [[HMAC]] construction used by most TLS cipher suites is specified in {{IETF RFC|2104}} (SSL 3.0 used a different hash-based MAC).\n* The message that ends the handshake (\"Finished\") sends a hash of all the exchanged handshake messages seen by both parties.\n* The [[pseudorandomness|pseudorandom]] function splits the input data in half and processes each one with a different hashing algorithm ([[MD5]] and [[SHA-1]]), then [[exclusive or|XORs]] them together to create the MAC. This provides protection even if one of these algorithms is found to be vulnerable.\n\n===Attacks against TLS/SSL===\nSignificant attacks against TLS/SSL are listed below.\n\nIn February 2015, IETF issued an informational RFC<ref>{{cite web|rfc=7457 |title=Summarizing Known Attacks on Transport Layer Security (TLS) and Datagram TLS (DTLS)|url=https://tools.ietf.org/html/rfc7457|url-status=live|archiveurl=https://web.archive.org/web/20160304201813/https://tools.ietf.org/html/rfc7457|archivedate=2016-03-04|df=}}</ref> summarizing the various known attacks against TLS/SSL.\n\n====Renegotiation attack====\nA vulnerability of the renegotiation procedure was discovered in August 2009 that can lead to plaintext injection attacks against SSL 3.0 and all current versions of TLS.<ref>{{cite web|url=http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3555|title=CVE \u2013 CVE-2009-3555|url-status=live|archiveurl=https://web.archive.org/web/20160104234608/http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3555|archivedate=2016-01-04|df=}}</ref> For example, it allows an attacker who can hijack an https connection to splice their own requests into the beginning of the conversation the client has with the web server. The attacker can't actually decrypt the client\u2013server communication, so it is different from a typical man-in-the-middle attack. A short-term fix is for web servers to stop allowing renegotiation, which typically will not require other changes unless [[client certificate]] authentication is used. To fix the vulnerability, a renegotiation indication extension was proposed for TLS. It will require the client and server to include and verify information about previous handshakes in any renegotiation handshakes.<ref>{{cite web|author=Eric Rescorla|title=Understanding the TLS Renegotiation Attack|work=Educated Guesswork|accessdate=2009-11-27|date=2009-11-05|url=http://www.educatedguesswork.org/2009/11/understanding_the_tls_renegoti.html|url-status=live|archiveurl=https://www.webcitation.org/65JSTKRCA?url=http://www.educatedguesswork.org/2009/11/understanding_the_tls_renegoti.html|archivedate=2012-02-09|df=}}</ref> This extension has become a proposed standard and has been assigned the number {{IETF RFC|5746}}. The RFC has been implemented by several libraries.<ref>{{cite web|title=SSL_CTX_set_options SECURE_RENEGOTIATION|work=OpenSSL Docs|accessdate=2010-11-18|date=2010-02-25|url=https://www.openssl.org/docs/ssl/SSL_CTX_set_options.html#SECURE_RENEGOTIATION|url-status=live|archiveurl=https://web.archive.org/web/20101126121933/http://openssl.org/docs/ssl/SSL_CTX_set_options.html#SECURE_RENEGOTIATION|archivedate=2010-11-26|df=}}</ref><ref>{{cite web|title=GnuTLS 2.10.0 released|work=GnuTLS release notes|accessdate=2011-07-24|date=2010-06-25|url=http://article.gmane.org/gmane.network.gnutls.general/2046|url-status=live|archiveurl=https://www.webcitation.org/65JSUYEDA?url=http://article.gmane.org/gmane.network.gnutls.general/2046|archivedate=2012-02-09|df=}}</ref><ref>{{cite web|title=NSS 3.12.6 release notes |work=NSS release notes |accessdate=2011-07-24 |date=2010-03-03 |url=https://developer.mozilla.org/NSS_3.12.6_release_notes |url-status=dead |archiveurl=https://web.archive.org/web/20120306184633/https://developer.mozilla.org/NSS_3.12.6_release_notes |archivedate=March 6, 2012}}</ref>\n\n===={{Anchor|Downgrade attacks}}Downgrade attacks: {{Anchor|FREAK}}FREAK attack and {{Anchor|Logjam attack|Logjam}}Logjam attack====\n{{Main|Downgrade attack|FREAK|Logjam (computer security)}}\nA protocol [[downgrade attack]] (also called a version rollback attack) tricks a web server into negotiating connections with previous versions of TLS (such as SSLv2) that have long since been abandoned as insecure.\n\nPrevious modifications to the original protocols, like '''False Start'''<ref>{{cite web|title=Transport Layer Security (TLS) False Start|url=http://tools.ietf.org/html/draft-bmoeller-tls-falsestart-00|work=Internet Engineering Task Force|publisher=IETF|accessdate=2013-07-31|author=A. Langley|author2=N. Modadugu|author3=B. Moeller|date=2010-06-02|url-status=live|archiveurl=https://web.archive.org/web/20130905215608/http://tools.ietf.org/html/draft-bmoeller-tls-falsestart-00|archivedate=2013-09-05|df=}}</ref> (adopted and enabled by Google Chrome<ref>{{cite web | first = Wolfgang | last = Gruener | title = False Start: Google Proposes Faster Web, Chrome Supports It Already | url = http://www.conceivablytech.com/3299/products/false-start-google-proposes-faster-web-chrome-supports-it-already|accessdate=2011-03-09 |archiveurl= https://web.archive.org/web/20101007061707/http://www.conceivablytech.com/3299/products/false-start-google-proposes-faster-web-chrome-supports-it-already/ |archivedate= 2010-10-07}}</ref>) or '''Snap Start''', reportedly introduced limited TLS protocol downgrade attacks<ref>{{cite web|first= Brian|last= Smith|title= Limited rollback attacks in False Start and Snap Start|url= http://www.ietf.org/mail-archive/web/tls/current/msg06933.html|accessdate= 2011-03-09|url-status=live|archiveurl= https://web.archive.org/web/20110504014418/http://www.ietf.org/mail-archive/web/tls/current/msg06933.html|archivedate= 2011-05-04}}</ref> or allowed modifications to the cipher suite list sent by the client to the server. In doing so, an attacker might succeed in influencing the cipher suite selection in an attempt to downgrade the cipher suite negotiated to use either a weaker symmetric encryption algorithm or a weaker key exchange.<ref>{{cite web|first=Adrian|last=Dimcev|title=False Start|url=http://www.carbonwind.net/blog/post/Random-SSLTLS-101-False-Start.aspx|work=Random SSL/TLS 101|accessdate=2011-03-09|url-status=live|archiveurl=https://web.archive.org/web/20110504060256/http://www.carbonwind.net/blog/post/Random-SSLTLS-101-False-Start.aspx|archivedate=2011-05-04|df=}}</ref> A paper presented at an [[Association for Computing Machinery|ACM]] [[Computer security conference|conference on computer and communications security]] in 2012 demonstrated that the False Start extension was at risk: in certain circumstances it could allow an attacker to recover the encryption keys offline and to access the encrypted data.<ref>{{cite book|author1=Mavrogiannopoulos, Nikos|author2=Vercautern, Frederik|author3=Velichkov, Vesselin|author4=Preneel, Bart|title=A cross-protocol attack on the TLS protocol. Proceedings of the 2012 ACM conference on Computer and communications security|year=2012|isbn=978-1-4503-1651-4|url=https://www.cosic.esat.kuleuven.be/publications/article-2216.pdf|pages=62\u201372|url-status=live|archiveurl=https://web.archive.org/web/20150706104327/https://www.cosic.esat.kuleuven.be/publications/article-2216.pdf|archivedate=2015-07-06|df=}}</ref>\n\nEncryption downgrade attacks can force servers and clients to negotiate a connection using cryptographically weak keys. In 2014, a [[man-in-the-middle]] attack called FREAK was discovered affecting the [[OpenSSL]] stack, the default [[Android (operating system)|Android]] web browser, and some [[Safari (web browser)|Safari]] browsers.<ref>{{cite web|title=SMACK: State Machine AttaCKs|url=https://www.smacktls.com|url-status=live|archiveurl=https://web.archive.org/web/20150312074827/https://www.smacktls.com/|archivedate=2015-03-12|df=}}</ref> The attack involved tricking servers into negotiating a TLS connection using cryptographically weak 512 bit encryption keys.\n\nLogjam is a [[security exploit]] discovered in May 2015 that exploits the option of using legacy [[Arms Export Control Act|\"export-grade\"]] 512-bit [[Diffie\u2013Hellman key exchange|Diffie\u2013Hellman]] groups dating back to the 1990s.<ref>{{cite web|url=https://arstechnica.com/security/2015/05/https-crippling-attack-threatens-tens-of-thousands-of-web-and-mail-servers/|title=HTTPS-crippling attack threatens tens of thousands of Web and mail servers|first=Dan|last=Goodin|work=Ars Technica|date=2015-05-20|url-status=live|archiveurl=https://web.archive.org/web/20170519130937/https://arstechnica.com/security/2015/05/https-crippling-attack-threatens-tens-of-thousands-of-web-and-mail-servers/|archivedate=2017-05-19|df=}}</ref> It forces susceptible servers to downgrade to cryptographically weak 512-bit Diffie\u2013Hellman groups. An attacker can then deduce the keys the client and server determine using the [[Diffie\u2013Hellman key exchange]].\n\n====Cross-protocol attacks: DROWN====\n{{Main|DROWN attack}}\nThe [[DROWN attack]] is an exploit that attacks servers supporting contemporary SSL/TLS protocol suites by exploiting their support for the obsolete, insecure, SSLv2 protocol to leverage an attack on connections using up-to-date protocols that would otherwise be secure.<ref>{{Cite web\n |url         = https://www.theregister.co.uk/2016/03/01/drown_tls_protocol_flaw/\n |title       = One-third of all HTTPS websites open to DROWN attack\n |last        = Leyden\n |first       = John\n |date        = 1 March 2016\n |website     = The Register\n |access-date = 2016-03-02\n |url-status     = live\n |archiveurl  = https://web.archive.org/web/20160301215536/http://www.theregister.co.uk/2016/03/01/drown_tls_protocol_flaw/\n |archivedate = 1 March 2016\n}}</ref><ref name=ars201603>{{Cite web\n |url         = https://arstechnica.com/security/2016/03/more-than-13-million-https-websites-imperiled-by-new-decryption-attack/\n |title       = More than 11 million HTTPS websites imperiled by new decryption attack\n |website     = Ars Technica\n |access-date = 2016-03-02\n |url-status     = live\n |archiveurl  = https://web.archive.org/web/20160301191108/http://arstechnica.com/security/2016/03/more-than-13-million-https-websites-imperiled-by-new-decryption-attack/\n |archivedate = 2016-03-01\n}}</ref> DROWN exploits a vulnerability in the protocols used and the configuration of the server, rather than any specific implementation error. Full details of DROWN were announced in March 2016, together with a patch for the exploit. At that time, more than 81,000 of the top 1 million most popular websites were among the TLS protected websites that were vulnerable to the DROWN attack.<ref name=ars201603/>\n\n===={{Anchor|BEAST}}BEAST attack====\nOn September 23, 2011 researchers Thai Duong and Juliano Rizzo demonstrated a proof of concept called '''BEAST''' ('''Browser Exploit Against SSL/TLS''')<ref name=DuongRizzo>{{cite web|url=https://bug665814.bugzilla.mozilla.org/attachment.cgi?id=540839|title=Here Come The \u2295 Ninjas|date=2011-05-13|author1=Thai Duong|author2=Juliano Rizzo|lastauthoramp=yes|url-status=live|archiveurl=https://web.archive.org/web/20140603102506/https://bug665814.bugzilla.mozilla.org/attachment.cgi?id=540839|archivedate=2014-06-03|df=}}</ref> using a [[Java applet]] to violate [[same origin policy]] constraints, for a long-known [[cipher block chaining]] (CBC) vulnerability in TLS 1.0:<ref name=DanGoodin>{{cite web|url=https://www.theregister.co.uk/2011/09/19/beast_exploits_paypal_ssl/|title=Hackers break SSL encryption used by millions of sites|date=2011-09-19|author=Dan Goodin|url-status=live|archiveurl=https://www.webcitation.org/65JSSbOus?url=http://www.theregister.co.uk/2011/09/19/beast_exploits_paypal_ssl/|archivedate=2012-02-09|df=}}</ref><ref name=combinator>{{cite web|url=http://news.ycombinator.com/item?id=3015498|title=Y Combinator comments on the issue|date=2011-09-20|url-status=live|archiveurl=https://www.webcitation.org/6FwL5WZ8b?url=https://news.ycombinator.com/item?id=3015498|archivedate=2013-04-17|df=}}</ref> an attacker observing 2 consecutive ciphertext blocks C0, C1 can test if the plaintext block P1 is equal to x by choosing the next plaintext block P2 = x <math>\\oplus</math> C0 <math>\\oplus</math> C1; as per CBC operation, C2 = E(C1 <math>\\oplus</math> P2) = E(C1 <math>\\oplus</math> x <math>\\oplus</math> C0 <math>\\oplus</math> C1) = E(C0 <math>\\oplus</math> x), which will be equal to C1 if x = P1. Practical [[Exploit (computer security)|exploits]] had not been previously demonstrated for this [[Vulnerability (computing)|vulnerability]], which was originally discovered by [[Phillip Rogaway]]<ref>{{cite web|url=http://www.openssl.org/~bodo/tls-cbc.txt|archiveurl=https://web.archive.org/web/20120630143111/http://www.openssl.org/~bodo/tls-cbc.txt|archivedate=2012-06-30|title=Security of CBC Ciphersuites in SSL/TLS: Problems and Countermeasures|date=2004-05-20}}</ref> in 2002. The vulnerability of the attack had been fixed with TLS 1.1 in 2006, but TLS 1.1 had not seen wide adoption prior to this attack demonstration.\n\n[[RC4]] as a stream cipher is immune to BEAST attack. Therefore, RC4 was widely used as a way to mitigate BEAST attack on the server side. However, in 2013, researchers found more weaknesses in RC4. Thereafter enabling RC4 on server side was no longer recommended.<ref>{{cite web | url=https://community.qualys.com/blogs/securitylabs/2013/09/10/is-beast-still-a-threat | title=Is BEAST Still a Threat? | date=Sep 10, 2013 | accessdate=8 October 2014 | author=Ristic, Ivan | url-status=live | archiveurl=https://web.archive.org/web/20141012121824/https://community.qualys.com/blogs/securitylabs/2013/09/10/is-beast-still-a-threat | archivedate=12 October 2014}}</ref>\n\nChrome and Firefox themselves are not vulnerable to BEAST attack,<ref name=ChromeBEAST/><ref name=\"FirefoxBEAST\"/> however, Mozilla updated their [[Network Security Services|NSS]] libraries to mitigate BEAST-like [[Attack (computing)|attacks]]. NSS is used by [[Mozilla Firefox]] and [[Google Chrome]] to implement SSL. Some [[web server]]s that have a broken implementation of the SSL specification may stop working as a result.<ref>{{cite web|url=https://bugzilla.mozilla.org/show_bug.cgi?id=665814|title=(CVE-2011-3389) Rizzo/Duong chosen plaintext attack (BEAST) on SSL/TLS 1.0 (facilitated by websockets -76) |date=2011-09-30|author=Brian Smith}}</ref>\n\n[[Microsoft]] released Security Bulletin MS12-006 on January 10, 2012, which fixed the BEAST vulnerability by changing the way that the Windows Secure Channel ([[SChannel]]) component transmits encrypted network packets from the server end.<ref>{{cite web|url=https://technet.microsoft.com/library/security/ms12-006|title=Vulnerability in SSL/TLS Could Allow Information Disclosure (2643584)|date=2012-01-10|url-status=live|archiveurl=https://web.archive.org/web/20140815234322/https://technet.microsoft.com/library/security/ms12-006|archivedate=2014-08-15|df=}}</ref> Users of Internet Explorer (prior to version 11) that run on older versions of Windows ([[Windows 7]], [[Windows 8]] and [[Windows Server 2008|Windows Server 2008 R2]]) can restrict use of TLS to 1.1 or higher.\n\n[[Apple Inc.|Apple]] fixed BEAST vulnerability by implementing 1/n-1 split and turning it on by default in [[OS X Mavericks]], released on October 22, 2013.<ref>{{cite web | url=https://community.qualys.com/blogs/securitylabs/2013/10/31/apple-enabled-beast-mitigations-in-os-x-109-mavericks | title=Apple Enabled BEAST Mitigations in OS X 10.9 Mavericks | date=Oct 31, 2013 | accessdate=8 October 2014 | author=Ristic, Ivan | url-status=live | archiveurl=https://web.archive.org/web/20141012122536/https://community.qualys.com/blogs/securitylabs/2013/10/31/apple-enabled-beast-mitigations-in-os-x-109-mavericks | archivedate=12 October 2014}}</ref>\n\n===={{Anchor|CRIME attack|BREACH attack|CRIME|BREACH}} CRIME and BREACH attacks====<!-- This Anchor tag serves to provide a permanent target for incoming section links. Please do not move it out of the section heading, even though it disrupts edit summary generation (you can manually fix the edit summary before saving your changes). Please do not modify it, even if you modify the section title. It is always best to anchor an old section header that has been changed so that links to it won't be broken. See [[Template:Anchor]] for details. (This text: [[Template:Anchor comment]]) -->\n{{Main|CRIME|BREACH}}\nThe authors of the BEAST attack are also the creators of the later [[CRIME]] attack, which can allow an attacker to recover the content of web cookies when [[data compression]] is used along with TLS.<ref>{{cite web|url=https://arstechnica.com/security/2012/09/crime-hijacks-https-sessions/|title=Crack in Internet's foundation of trust allows HTTPS session hijacking|website=Ars Technica|author=Dan Goodin|date=2012-09-13|accessdate=2013-07-31|url-status=live|archiveurl=https://web.archive.org/web/20130801104610/http://arstechnica.com/security/2012/09/crime-hijacks-https-sessions/|archivedate=2013-08-01}}</ref><ref>{{cite web|url=http://threatpost.com/en_us/blogs/crime-attack-uses-compression-ratio-tls-requests-side-channel-hijack-secure-sessions-091312 |title=CRIME Attack Uses Compression Ratio of TLS Requests as Side Channel to Hijack Secure Sessions |publisher=ThreatPost |date=September 13, 2012 |author=Dennis Fisher |accessdate=2012-09-13 |url-status=dead |archiveurl=https://web.archive.org/web/20120915224635/http://threatpost.com/en_us/blogs/crime-attack-uses-compression-ratio-tls-requests-side-channel-hijack-secure-sessions-091312 |archivedate=September 15, 2012}}</ref> When used to recover the content of secret [[authentication cookie]]s, it allows an attacker to perform [[session hijacking]] on an authenticated web session.\n\nWhile the CRIME attack was presented as a general attack that could work effectively against a large number of protocols, including but not limited to TLS, and application-layer protocols such as [[SPDY]] or [[HTTP]], only exploits against TLS and SPDY were demonstrated and largely mitigated in browsers and servers. The CRIME exploit against [[HTTP compression]] has not been mitigated at all, even though the authors of CRIME have warned that this vulnerability might be even more widespread than SPDY and TLS compression combined. In 2013 a new instance of the CRIME attack against HTTP compression, dubbed [[BREACH]], was announced. Based on the CRIME attack a BREACH attack can extract login tokens, email addresses or other sensitive information from TLS encrypted web traffic in as little as 30 seconds (depending on the number of bytes to be extracted), provided the attacker tricks the victim into visiting a malicious web link or is able to inject content into valid pages the user is visiting (ex: a wireless network under the control of the attacker).<ref name=Gooin20130801>{{cite web|last=Goodin|first=Dan|title=Gone in 30 seconds: New attack plucks secrets from HTTPS-protected pages|url=https://arstechnica.com/security/2013/08/gone-in-30-seconds-new-attack-plucks-secrets-from-https-protected-pages/|work=Ars Technica|publisher=Cond\u00e9 Nast|accessdate=2 August 2013|date=1 August 2013|url-status=live|archiveurl=https://web.archive.org/web/20130803181144/http://arstechnica.com/security/2013/08/gone-in-30-seconds-new-attack-plucks-secrets-from-https-protected-pages/|archivedate=3 August 2013|df=}}</ref> All versions of TLS and SSL are at risk from BREACH regardless of the encryption algorithm or cipher used.<ref>{{cite web|last=Leyden|first=John|title=Step into the BREACH: New attack developed to read encrypted web data|url=https://www.theregister.co.uk/2013/08/02/breach_crypto_attack/|work=The Register|accessdate=2 August 2013|date=2 August 2013|url-status=live|archiveurl=https://web.archive.org/web/20130805233414/http://www.theregister.co.uk/2013/08/02/breach_crypto_attack/|archivedate=5 August 2013|df=}}</ref> Unlike previous instances of CRIME, which can be successfully defended against by turning off TLS compression or SPDY header compression, BREACH exploits HTTP compression which cannot realistically be turned off, as virtually all web servers rely upon it to improve data transmission speeds for users.<ref name=Gooin20130801/> This is a known limitation of TLS as it is susceptible to [[chosen-plaintext attack]] against the application-layer data it was meant to protect.\n\n====Timing attacks on padding====\nEarlier TLS versions were vulnerable against the [[padding oracle attack]] discovered in 2002. A novel variant, called the [[Lucky Thirteen attack]], was published in 2013.\n\nSome experts<ref name=\"best-practices\"/> also recommended avoiding [[Triple DES|Triple-DES]] CBC. Since the last supported ciphers developed to support any program using [[Windows XP]]'s SSL/TLS library like Internet Explorer on Windows XP are [[RC4]] and Triple-DES, and since RC4 is now deprecated (see discussion of [[#RC4|RC4 attacks]]), this makes it difficult to support any version of SSL for any program using this library on XP.\n\nA fix was released as the Encrypt-then-MAC extension to the TLS specification, released as {{IETF RFC|7366}}.<ref>{{cite web|url=http://tools.ietf.org/html/rfc7366|title=Encrypt-then-MAC for Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)|date=September 2014|author=P. Gutmann|url-status=live|archiveurl=https://web.archive.org/web/20150512214100/https://tools.ietf.org/html/rfc7366|archivedate=2015-05-12|df=}}</ref> The Lucky Thirteen attack can be mitigated in TLS 1.2 by using only AES_GCM ciphers; AES_CBC remains vulnerable.{{citation needed|date=December 2016}}\n\n===={{Anchor|POODLE}}POODLE attack====\n{{Main|POODLE}}\nOn October 14, 2014, Google researchers published a vulnerability in the design of SSL 3.0, which makes [[CBC mode of operation]] with SSL 3.0 vulnerable to a [[padding oracle attack|padding attack]] ([https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566 CVE-2014-3566]). They named this attack '''POODLE''' ('''Padding Oracle On Downgraded Legacy Encryption'''). On average, attackers only need to make 256 SSL 3.0 requests to reveal one byte of encrypted messages.<ref name=\"poodle_pdf\">{{cite web|url=https://www.openssl.org/~bodo/ssl-poodle.pdf|title=This POODLE Bites: Exploiting The SSL 3.0 Fallback|author1=Bodo M\u00f6ller, Thai Duong|author2=Krzysztof Kotowicz|lastauthoramp=yes|accessdate=2014-10-15|url-status=live|archiveurl=https://web.archive.org/web/20141014224443/https://www.openssl.org/~bodo/ssl-poodle.pdf|archivedate=2014-10-14|df=}}</ref>\n\nAlthough this vulnerability only exists in SSL 3.0 and most clients and servers support TLS 1.0 and above, all major browsers voluntarily downgrade to SSL 3.0 if the handshakes with newer versions of TLS fail unless they provide the option for a user or administrator to disable SSL 3.0 and the user or administrator does so{{citation needed|date=February 2015}}. Therefore, the man-in-the-middle can first conduct a [[version rollback attack]] and then exploit this vulnerability.<ref name=\"poodle_pdf\" />\n\nIn general, graceful security degradation for the sake of interoperability is difficult to carry out in a way that cannot be exploited. This is challenging especially in domains where fragmentation is high.<ref>{{cite web | url=http://www.hbarel.com/analysis/eng/poodle-flaw-and-iot | title=Poodle flaw and IoT | author=Hagai Bar-El | accessdate=15 October 2014 | url-status=live | archiveurl=https://web.archive.org/web/20150316030953/https://www.hbarel.com/analysis/eng/poodle-flaw-and-iot | archivedate=16 March 2015}}</ref>\n\nOn December 8, 2014, a variant of POODLE was announced that impacts TLS implementations that do not properly enforce padding byte requirements.<ref name=\"poodleagain\">{{cite web|url=https://www.imperialviolet.org/2014/12/08/poodleagain.html|title=The POODLE bites again|date=December 8, 2014|author=Langley, Adam|accessdate=2014-12-08|url-status=live|archiveurl=https://web.archive.org/web/20141208200653/https://www.imperialviolet.org/2014/12/08/poodleagain.html|archivedate=December 8, 2014|df=}}</ref>\n\n===={{Anchor|RC4}}RC4 attacks====\n{{Main|RC4#Security}}\nDespite the existence of attacks on [[RC4]] that broke its security, cipher suites in SSL and TLS that were based on RC4 were still considered secure prior to 2013 based on the way in which they were used in SSL and TLS. In 2011, the RC4 suite was actually recommended as a work around for the [[BEAST (computer security)|BEAST]] attack.<ref>[http://serverfault.com/questions/315042/ security \u2013 Safest ciphers to use with the BEAST? (TLS 1.0 exploit) I've read that RC4 is immune \u2013 Server Fault<!-- Bot generated title -->]</ref> New forms of attack disclosed in March 2013 conclusively demonstrated the feasibility of breaking RC4 in TLS, suggesting it was not a good workaround for BEAST.<ref name=\"community.qualys\"/> An attack scenario was proposed by AlFardan, Bernstein, Paterson, Poettering and Schuldt that used newly discovered statistical biases in the RC4 key table<ref>{{cite book |contribution=Discovery and Exploitation of New Biases in RC4 |author1=Pouyan Sepehrdad |author2=Serge Vaudenay |author3=Martin Vuagnoux|title=Selected Areas in Cryptography: 17th International Workshop, SAC 2010, Waterloo, Ontario, Canada, August 12-13, 2010, Revised Selected Papers |series=Lecture Notes in Computer Science|editors=Alex Biryukov, Guang Gong, Douglas R. Stinson |year=2011 |volume=6544 |pages=74\u201391 |doi=10.1007/978-3-642-19574-7_5|isbn = 978-3-642-19573-0}}</ref> to recover parts of the plaintext with a large number of TLS encryptions.<ref>{{cite web |url=http://blog.cryptographyengineering.com/2013/03/attack-of-week-rc4-is-kind-of-broken-in.html |title=Attack of the week: RC4 is kind of broken in TLS |work=Cryptography Engineering |accessdate=March 12, 2013 |author=Green, Matthew |url-status=live |archiveurl=https://web.archive.org/web/20130314214026/http://blog.cryptographyengineering.com/2013/03/attack-of-week-rc4-is-kind-of-broken-in.html |archivedate=March 14, 2013}}</ref><ref>{{cite web |title=On the Security of RC4 in TLS |url=http://www.isg.rhul.ac.uk/tls/ |publisher=Royal Holloway University of London |accessdate=March 13, 2013 |author=Nadhem AlFardan, Dan Bernstein, Kenny Paterson, Bertram Poettering and Jacob Schuldt |url-status=live |archiveurl=https://web.archive.org/web/20130315084623/http://www.isg.rhul.ac.uk/tls/ |archivedate=March 15, 2013}}</ref> An attack on RC4 in TLS and SSL that requires 13 \u00d7 2<sup>20</sup> encryptions to break RC4 was unveiled on 8 July 2013 and later described as \"feasible\" in the accompanying presentation at a [[USENIX]] Security Symposium in August 2013.<ref>{{cite journal |first=Nadhem J. |last=AlFardan |first2=Daniel J. |last2=Bernstein |first3=Kenneth G. |last3=Paterson |first4=Bertram |last4=Poettering |first5=Jacob C. N. |last5=Schuldt |date=8 July 2013 |title=On the Security of RC4 in TLS and WPA |accessdate=2 September 2013 |url=http://www.isg.rhul.ac.uk/tls/RC4biases.pdf |url-status=live |archiveurl=https://web.archive.org/web/20130922170155/http://www.isg.rhul.ac.uk/tls/RC4biases.pdf |archivedate=22 September 2013}}</ref><ref>{{cite conference |url=https://www.usenix.org/sites/default/files/conference/protected-files/alfardan_sec13_slides.pdf |title=On the Security of RC4 in TLS |first=Nadhem J. |last=AlFardan |first2=Daniel J. |last2=Bernstein |first3=Kenneth G. |last3=Paterson |first4=Bertram |last4=Poettering |first5=Jacob C. N. |last5=Schuldt |date=15 August 2013 |conference=22nd [[USENIX]] Security Symposium |accessdate=2 September 2013 |quote=Plaintext recovery attacks against RC4 in TLS are feasible although not truly practical |page=51 |url-status=live |archiveurl=https://web.archive.org/web/20130922133950/https://www.usenix.org/sites/default/files/conference/protected-files/alfardan_sec13_slides.pdf |archivedate=22 September 2013}}</ref> In July 2015, subsequent improvements in the attack make it increasingly practical to defeat the security of RC4-encrypted TLS.<ref>{{cite web|last1=Goodin|first1=Dan|title=Once-theoretical crypto attack against HTTPS now verges on practicality|url=https://arstechnica.com/security/2015/07/once-theoretical-crypto-attack-against-https-now-verges-on-practicality/|website=Ars Technical|publisher=Conde Nast|accessdate=16 July 2015|url-status=live|archiveurl=https://web.archive.org/web/20150716084138/http://arstechnica.com/security/2015/07/once-theoretical-crypto-attack-against-https-now-verges-on-practicality/|archivedate=16 July 2015|df=}}</ref>\n\nAs many modern browsers have been designed to defeat BEAST attacks (except Safari for Mac OS X 10.7 or earlier, for iOS 6 or earlier, and for Windows; see [[#Web browsers]]), RC4 is no longer a good choice for TLS 1.0. The CBC ciphers which were affected by the BEAST attack in the past have become a more popular choice for protection.<ref name=\"best-practices\"/> Mozilla and Microsoft recommend disabling RC4 where possible.<ref>{{cite web|url=https://wiki.mozilla.org/Security/Server_Side_TLS|title=Mozilla Security Server Side TLS Recommended Configurations|publisher=Mozilla|accessdate=2015-01-03|url-status=live|archiveurl=https://web.archive.org/web/20150103093047/https://wiki.mozilla.org/Security/Server_Side_TLS|archivedate=2015-01-03|df=}}</ref><ref>{{cite web|url=http://blogs.technet.com/b/srd/archive/2013/11/12/security-advisory-2868725-recommendation-to-disable-rc4.aspx|title=Security Advisory 2868725: Recommendation to disable RC4|date=2013-11-12|publisher=Microsoft|accessdate=2013-12-04|url-status=live|archiveurl=https://web.archive.org/web/20131118081816/http://blogs.technet.com/b/srd/archive/2013/11/12/security-advisory-2868725-recommendation-to-disable-rc4.aspx|archivedate=2013-11-18|df=}}</ref> {{IETF RFC|7465}} prohibits the use of RC4 cipher suites in all versions of TLS.\n\nOn September 1, 2015, Microsoft, Google and Mozilla announced that RC4 cipher suites would be disabled by default in their browsers ([[Microsoft Edge]], [[Internet Explorer 11]] on Windows 7/8.1/10, [[Firefox]], and [[Google Chrome|Chrome]]) in early 2016.<ref>{{cite web|url=https://blogs.windows.com/msedgedev/2015/09/01/ending-support-for-the-rc4-cipher-in-microsoft-edge-and-internet-explorer-11/|title=Ending support for the RC4 cipher in Microsoft Edge and Internet Explorer 11|publisher=Microsoft Edge Team|date=September 1, 2015|url-status=live|archiveurl=https://web.archive.org/web/20150902054341/http://blogs.windows.com/msedgedev/2015/09/01/ending-support-for-the-rc4-cipher-in-microsoft-edge-and-internet-explorer-11/|archivedate=September 2, 2015|df=}}</ref><ref>{{cite web|url=https://groups.google.com/a/chromium.org/forum/#!msg/security-dev/kVfCywocUO8/vgi_rQuhKgAJ|title=Intent to deprecate: RC4|date=Sep 1, 2015|author=Langley, Adam}}</ref><ref>{{cite web|title=Intent to ship: RC4 disabled by default in Firefox 44|url=https://groups.google.com/forum/#!topic/mozilla.dev.platform/JIEFcrGhqSM/discussion|date=Sep 1, 2015|author=Barnes, Richard|url-status=live|archiveurl=http://arquivo.pt/wayback/20110122130054/https://groups.google.com/forum/#!topic/mozilla.dev.platform/JIEFcrGhqSM/discussion|archivedate=2011-01-22|df=}}</ref>\n\n====Truncation attack====\nA TLS (logout) truncation attack blocks a victim's account logout requests so that the user unknowingly remains logged into a web service. When the request to sign out is sent, the attacker injects an unencrypted [[Transmission Control Protocol|TCP]] FIN message (no more data from sender) to close the connection. The server therefore doesn't receive the logout request and is unaware of the abnormal termination.<ref name=register20130801>{{cite web|title=Gmail, Outlook.com and e-voting 'pwned' on stage in crypto-dodge hack|url=https://www.theregister.co.uk/2013/08/01/gmail_hotmail_hijacking/|work=The Register|accessdate=1 August 2013|author=John Leyden|date=1 August 2013|url-status=live|archiveurl=https://web.archive.org/web/20130801193054/http://www.theregister.co.uk/2013/08/01/gmail_hotmail_hijacking/|archivedate=1 August 2013|df=}}</ref>\n\nPublished in July 2013,<ref>{{cite web|title=BlackHat USA Briefings|url=https://www.blackhat.com/us-13/briefings.html#Smyth|work=Black Hat 2013|accessdate=1 August 2013|url-status=live|archiveurl=https://web.archive.org/web/20130730124037/http://www.blackhat.com/us-13/briefings.html#Smyth|archivedate=30 July 2013|df=}}</ref><ref>{{cite journal|last1=Smyth|first1=Ben|last2=Pironti|first2=Alfredo|title=Truncating TLS Connections to Violate Beliefs in Web Applications|journal=7th USENIX Workshop on Offensive Technologies|date=2013|url=https://hal.inria.fr/hal-01102013|accessdate=15 February 2016|url-status=live|archiveurl=https://web.archive.org/web/20151106110117/https://hal.inria.fr/hal-01102013|archivedate=6 November 2015|df=}}</ref> the attack causes web services such as [[Gmail]] and [[Outlook.com|Hotmail]] to display a page that informs the user that they have successfully signed-out, while ensuring that the user's browser maintains authorization with the service, allowing an attacker with subsequent access to the browser to access and take over control of the user's logged-in account. The attack does not rely on installing malware on the victim's computer; attackers need only place themselves between the victim and the web server (e.g., by setting up a rogue wireless hotspot).<ref name=register20130801/> This vulnerability also requires access to the victim's computer.\nAnother possibility is when using FTP the data connection can have a false FIN in the data stream, and if the protocol rules for exchanging close_notify alerts is not adhered to a file can be truncated.\n\n====Unholy PAC attack====\nThis attack, discovered in mid-2016, exploits weaknesses in the [[Web Proxy Autodiscovery Protocol]] (WPAD) to expose the URL that a web user is attempting to reach via a TLS-enabled web link.<ref>{{cite web|last1=Goodin|first1=Dan|title=New attack bypasses HTTPS protection on Macs, Windows, and Linux|url=https://arstechnica.com/security/2016/07/new-attack-that-cripples-https-crypto-works-on-macs-windows-and-linux/|website=Ars Technica|publisher=Cond\u00e9 Nast|accessdate=28 July 2016|url-status=live|archiveurl=https://web.archive.org/web/20160727160434/http://arstechnica.com/security/2016/07/new-attack-that-cripples-https-crypto-works-on-macs-windows-and-linux/|archivedate=27 July 2016|df=}}</ref> Disclosure of a URL can violate a user's privacy, not only because of the website accessed, but also because URLs are sometimes used to authenticate users. Document sharing services, such as those offered by Google and Dropbox, also work by sending a user a security token that's included in the URL. An attacker who obtains such URLs may be able to gain full access to a victim's account or data.\n\nThe exploit works against almost all browsers and operating systems.\n\n====Sweet32 attack====\nThe Sweet32 attack breaks all 64-bit block ciphers used in CBC mode as used in TLS by exploiting a [[birthday attack]] and either a [[man-in-the-middle attack]] or injection of a malicious [[JavaScript]] into a web page. The purpose of the man-in-the-middle attack or the JavaScript injection is to allow the attacker to capture enough traffic to mount a birthday attack.<ref>{{Cite news | url = https://arstechnica.com/security/2016/08/new-attack-can-pluck-secrets-from-1-of-https-traffic-affects-top-sites/ | title = HTTPS and OpenVPN face new attack that can decrypt secret cookies | first = Dan | last = Goodin | newspaper = Ars Technica | date = August 24, 2016 | access-date = August 24, 2016 | url-status=live | archiveurl = https://web.archive.org/web/20160824181630/http://arstechnica.com/security/2016/08/new-attack-can-pluck-secrets-from-1-of-https-traffic-affects-top-sites/ | archivedate = August 24, 2016}}</ref>\n\n====Implementation errors: {{Anchor|Heartbleed}}Heartbleed bug, {{Anchor|BERserk}}BERserk attack, Cloudflare bug====\n{{Main|Heartbleed|Cloudbleed}}\nThe [[Heartbleed]] bug is a serious vulnerability specific to the implementation of SSL/TLS in the popular [[OpenSSL]] cryptographic software library, affecting versions 1.0.1 to 1.0.1f. This weakness, reported in April 2014, allows attackers to steal [[Public-key cryptography|private keys]] from servers that should normally be protected.<ref>{{cite web |url=https://www.washingtonpost.com/blogs/style-blog/wp/2014/04/09/why-is-it-called-the-heartbleed-bug/ |title=Why is it called the 'Heartbleed Bug'? |work=The Washington Post |date=2014-04-09 |url-status=live |archiveurl=https://web.archive.org/web/20141009063758/http://www.washingtonpost.com/blogs/style-blog/wp/2014/04/09/why-is-it-called-the-heartbleed-bug/ |archivedate=2014-10-09}}</ref> The Heartbleed bug allows anyone on the Internet to read the memory of the systems protected by the vulnerable versions of the OpenSSL software. This compromises the secret private keys associated with the [[X.509|public certificates]] used to identify the service providers and to encrypt the traffic, the names and passwords of the users and the actual content. This allows attackers to eavesdrop on communications, steal data directly from the services and users and to impersonate services and users.<ref>{{cite web|url=https://blogs.comodo.com/e-commerce/heartbleed-bug-comodo-urges-openssl-users-to-apply-patch/|title=Heartbleed Bug vulnerability [9 April 2014]|publisher=[[Comodo Group]]|url-status=live|archiveurl=https://web.archive.org/web/20140705212748/https://blogs.comodo.com/e-commerce/heartbleed-bug-comodo-urges-openssl-users-to-apply-patch/|archivedate=5 July 2014|df=}}</ref> The vulnerability is caused by a [[buffer over-read]] bug in the OpenSSL software, rather than a defect in the SSL or TLS protocol specification.\n\nIn September 2014, a variant of Daniel Bleichenbacher's PKCS#1 v1.5 RSA Signature Forgery vulnerability<ref>{{cite web|url=http://www.imc.org/ietf-openpgp/mail-archive/msg06063.html |title=Bleichenbacher's RSA signature forgery based on implementation error |date=August 2006 |first=Daniel |last=Bleichenbacher |url-status=dead |archiveurl=https://web.archive.org/web/20141216203704/http://www.imc.org/ietf-openpgp/mail-archive/msg06063.html |archivedate=2014-12-16}}</ref> was announced by Intel Security Advanced Threat Research. This attack, dubbed BERserk, is a result of incomplete ASN.1 length decoding of public key signatures in some SSL implementations, and allows a man-in-the-middle attack by forging a public key signature.<ref>{{cite web|url=http://www.intelsecurity.com/advanced-threat-research/|title=BERserk|date=September 2014|publisher=Intel Security: Advanced Threat Research|url-status=live|archiveurl=https://web.archive.org/web/20150112153121/http://www.intelsecurity.com/advanced-threat-research/|archivedate=2015-01-12|df=}}</ref>\n\nIn February 2015, after media reported the hidden pre-installation of [[Superfish]] adware on some Lenovo notebooks,<ref>{{cite web |url=https://arstechnica.com/information-technology/2015/02/lenovo-pcs-ship-with-man-in-the-middle-adware-that-breaks-https-connections/ |title=Lenovo PCs ship with man-in-the-middle adware that breaks HTTPS connections |last=Goodin |first=Dan |date=February 19, 2015 |website=[[Ars Technica]] |accessdate=December 10, 2017 |url-status=live |archiveurl=https://web.archive.org/web/20170912103610/https://arstechnica.com/information-technology/2015/02/lenovo-pcs-ship-with-man-in-the-middle-adware-that-breaks-https-connections/ |archivedate=September 12, 2017}}</ref> a researcher found a trusted root certificate on affected Lenovo machines to be insecure, as the keys could easily be accessed using the company name, Komodia, as a passphrase.<ref>{{cite web |first=Filippo |last=Valsorda |url=https://blog.filippo.io/komodia-superfish-ssl-validation-is-broken/ |title=Komodia/Superfish SSL validation is broken |publisher=Filippo.io |date=2015-02-20 |url-status=live |archiveurl=https://web.archive.org/web/20150224112141/https://blog.filippo.io/komodia-superfish-ssl-validation-is-broken/ |archivedate=2015-02-24}}</ref> The Komodia library was designed to intercept client-side TLS/SSL traffic for parental control and surveillance, but it was also used in numerous adware programs, including Superfish, that were often surreptitiously installed unbeknownst to the computer user. In turn, these [[potentially unwanted program]]s installed the corrupt root certificate, allowing attackers to completely control web traffic and confirm false websites as authentic.\n\nIn May 2016, it was reported that dozens of Danish HTTPS-protected websites belonging to [[Visa Inc.]] were vulnerable to attacks allowing hackers to inject malicious code and forged content into the browsers of visitors.<ref name=\"forbidden\">{{cite web|last1=Goodin|first1=Dan|title=\"Forbidden attack\" makes dozens of HTTPS Visa sites vulnerable to tampering|url=https://arstechnica.com/security/2016/05/faulty-https-settings-leave-dozens-of-visa-sites-vulnerable-to-forgery-attacks/|website=Ars Technica|accessdate=26 May 2016|url-status=live|archiveurl=https://web.archive.org/web/20160526175713/http://arstechnica.com/security/2016/05/faulty-https-settings-leave-dozens-of-visa-sites-vulnerable-to-forgery-attacks/|archivedate=26 May 2016|df=}}</ref> The attacks worked because the TLS implementation used on the affected servers incorrectly reused random numbers ([[cryptographic nonce|nonces]]) that are intended be used only once, ensuring that each [[#TLS handshake|TLS handshake]] is unique.<ref name=forbidden/>\n\nIn February 2017, an implementation error caused by a single mistyped character in code used to parse HTML created a buffer overflow error on [[Cloudflare]] servers. Similar in its effects to the Heartbleed bug discovered in 2014, this overflow error, widely known as [[Cloudbleed]], allowed unauthorized third parties to read data in the memory of programs running on the servers\u2014data that should otherwise have been protected by TLS.<ref>{{cite web|last1=Clark Estes|first1=Adam|title=Everything You Need to Know About Cloudbleed, the Latest Internet Security Disaster|url=https://gizmodo.com/everything-you-need-to-know-about-cloudbleed-the-lates-1792710616|website=[[Gizmodo]]|accessdate=2017-02-24|url-status=live|archiveurl=https://web.archive.org/web/20170225013516/http://gizmodo.com/everything-you-need-to-know-about-cloudbleed-the-lates-1792710616|archivedate=2017-02-25}}</ref>\n\n====Survey of websites vulnerable to attacks====\n{{As of|2019|08}}, Trustworthy Internet Movement estimate the ratio of websites that are vulnerable to TLS attacks.<ref name=\"trustworthy_ssl_pulse\" />\n{|class=\"wikitable\" style=\"text-align: center;\"\n|+Survey of the TLS vulnerabilities of the most popular websites\n|-\n!rowspan=\"2\" |Attacks\n!colspan=\"5\" |Security\n|-\n!colspan=\"2\"|Insecure\n!Depends\n!Secure\n!Other\n|-\n![[#Renegotiation attack|Renegotiation attack]]\n|colspan=\"2\" {{Bad|0.3% <br />support insecure renegotiation}}\n|{{Partial|0.1% <br />support both}}\n|{{Good|98.4% <br />support secure renegotiation}}\n|1.1% <br />no support\n|-\n![[#RC4 attacks|RC4 attacks]]\n|colspan=\"2\" {{Bad|1.2%<br />support RC4 suites used with modern browsers}}\n|{{Partial|12.1%<br />support some RC4 suites}}\n|{{Good|86.7%<br />no support}}\n|{{N/A}}\n|-\n![[#CRIME attack|TLS Compression (CRIME attack)]]\n|colspan=\"2\" {{Bad|0.6%<br />vulnerable}}\n|{{N/A}}\n|{{N/A}}\n|{{N/A}}\n|-\n![[#Heartbleed|Heartbleed]]\n|colspan=\"2\" {{Bad|<0.1%<br />vulnerable}}\n|{{N/A}}\n|{{N/A}}\n|{{N/A}}\n|-\n![[CVE-2014-0224|ChangeCipherSpec injection attack]]\n|colspan=\"2\" {{Bad|0.2%<br />vulnerable and exploitable}}\n|{{Partial|1.2% <br />vulnerable, not exploitable}}\n|{{Good|96.9% <br />not vulnerable}}\n|1.7% <br />unknown\n|-\n![[#POODLE attack|POODLE attack against TLS]]<br /><small>(Original POODLE against SSL 3.0 is not included)</small>\n|colspan=\"2\" {{Bad|0.3%<br />vulnerable and exploitable}}\n|{{N/A}}\n|{{Good|99.5%<br />not vulnerable}}\n|0.2% <br />unknown\n|-\n![[#Downgrade attacks|Protocol downgrade]]\n|colspan=\"2\" {{Bad|11.3%<br />Downgrade defence not supported}}\n|{{N/A}}\n|{{Good|71.6%<br />Downgrade defence supported}}\n|17.0% <br />unknown\n|}\n\n===Forward secrecy===\n{{Main|Forward secrecy}}\n[[Forward secrecy]] is a property of cryptographic systems which ensures that a session key derived from a set of public and private keys will not be compromised if one of the private keys is compromised in the future.<ref>{{cite journal|first1=Whitfield|last1=Diffie|last2=van Oorschot|first2=Paul C|last3=Wiener|first3=Michael J.|title=Authentication and Authenticated Key Exchanges|issue=2|journal=Designs, Codes and Cryptography|volume=2|pages=107\u2013125|date=June 1992|doi=10.1007/BF00124891|url=http://citeseer.ist.psu.edu/diffie92authentication.html|accessdate=2008-02-11|url-status=live|archiveurl=https://web.archive.org/web/20080313081157/http://citeseer.ist.psu.edu/diffie92authentication.html|archivedate=2008-03-13|df=|citeseerx=10.1.1.59.6682}}</ref> Without forward secrecy, if the server's private key is compromised, not only will all future TLS-encrypted sessions using that server certificate be compromised, but also any past sessions that used it as well (provided of course that these past sessions were intercepted and stored at the time of transmission).<ref>[http://www1.ietf.org/mail-archive/web/tls/current/msg02134.html Discussion on the TLS mailing list in October 2007] {{webarchive|url=https://web.archive.org/web/20130922103746/http://www.ietf.org/mail-archive/web/tls/current/msg02134.html |date=2013-09-22}}</ref> An implementation of TLS can provide forward secrecy by requiring the use of ephemeral [[Diffie\u2013Hellman key exchange]] to establish session keys, and some notable TLS implementations do so exclusively: e.g., [[Gmail]] and other Google HTTPS services that use [[OpenSSL]].<ref>{{cite web|url=http://googleonlinesecurity.blogspot.com.au/2011/11/protecting-data-for-long-term-with.html|title=Protecting data for the long term with forward secrecy|accessdate=2012-11-05|url-status=live|archiveurl=https://web.archive.org/web/20130506184654/http://googleonlinesecurity.blogspot.com.au/2011/11/protecting-data-for-long-term-with.html|archivedate=2013-05-06|df=}}</ref> However, many clients and servers supporting TLS (including browsers and web servers) are not configured to implement such restrictions.<ref>{{cite web|url=http://vincent.bernat.im/en/blog/2011-ssl-perfect-forward-secrecy.html|title=SSL/TLS & Perfect Forward Secrecy|first=Vincent|last=Bernat|accessdate=2012-11-05|url-status=live|archiveurl=https://web.archive.org/web/20120827064047/http://vincent.bernat.im/en/blog/2011-ssl-perfect-forward-secrecy.html|archivedate=2012-08-27|df=}}</ref><ref>{{cite web|title=SSL Labs: Deploying Forward Secrecy|url=https://community.qualys.com/blogs/securitylabs/2013/06/25/ssl-labs-deploying-forward-secrecy|publisher=Qualys.com|accessdate=2013-07-10|date=2013-06-25|url-status=live|archiveurl=https://web.archive.org/web/20130626193314/https://community.qualys.com/blogs/securitylabs/2013/06/25/ssl-labs-deploying-forward-secrecy|archivedate=2013-06-26|df=}}</ref> In practice, unless a web service uses Diffie\u2013Hellman key exchange to implement forward secrecy, all of the encrypted web traffic to and from that service can be decrypted by a third party if it obtains the server's master (private) key; e.g., by means of a court order.<ref>{{cite web|last=Ristic|first=Ivan|title=SSL Labs: Deploying Forward Secrecy|url=https://community.qualys.com/blogs/securitylabs/2013/06/25/ssl-labs-deploying-forward-secrecy|publisher=Qualsys|accessdate=2013-08-31|date=2013-08-05|url-status=live|archiveurl=https://web.archive.org/web/20130920150259/https://community.qualys.com/blogs/securitylabs/2013/06/25/ssl-labs-deploying-forward-secrecy|archivedate=2013-09-20|df=}}</ref>\n\nEven where Diffie\u2013Hellman key exchange is implemented, server-side session management mechanisms can impact forward secrecy. The use of [[#Resumed TLS handshake|TLS session tickets]] (a TLS extension) causes the session to be protected by AES128-CBC-SHA256 regardless of any other negotiated TLS parameters, including forward secrecy ciphersuites, and the long-lived TLS session ticket keys defeat the attempt to implement forward secrecy.<ref name=\"botchingpfs\"/><ref name=\"ticketsecwp\"/><ref name=\"ticketsecslides\"/> Stanford University research in 2014 also found that of 473,802 TLS servers surveyed, 82.9% of the servers deploying ephemeral Diffie\u2013Hellman (DHE) key exchange to support forward secrecy were using weak Diffie\u2013Hellman parameters. These weak parameter choices could potentially compromise the effectiveness of the forward secrecy that the servers sought to provide.<ref>{{cite journal|author1=L.S. Huang|author2=S. Adhikarla|author3=D. Boneh|author4=C. Jackson|title=An Experimental Study of TLS Forward Secrecy Deployments|journal=IEEE Internet Computing|date=2014|volume=18|issue=6|pages=43\u201351|url=http://crypto.stanford.edu/~dabo/pubs/abstracts/websec_ecc.html|accessdate=16 October 2015|url-status=live|archiveurl=https://web.archive.org/web/20150920011317/http://crypto.stanford.edu/~dabo/pubs/abstracts/websec_ecc.html|archivedate=20 September 2015|df=|doi=10.1109/MIC.2014.86|citeseerx=10.1.1.663.4653}}</ref>\n\nSince late 2011, Google has provided forward secrecy with TLS by default to users of its [[Gmail]] service, along with [[Google Docs]] and encrypted search, among other services.<ref name=\"googleLongTerm\">{{cite web|url=http://googleonlinesecurity.blogspot.com.au/2011/11/protecting-data-for-long-term-with.html|title=Protecting data for the long term with forward secrecy|accessdate=2014-03-07|url-status=live|archiveurl=https://web.archive.org/web/20140212214518/http://googleonlinesecurity.blogspot.com.au/2011/11/protecting-data-for-long-term-with.html|archivedate=2014-02-12|df=}}</ref>\nSince November 2013, [[Twitter]] has provided forward secrecy with TLS to users of its service.<ref>{{cite web|last=Hoffman-Andrews|first=Jacob|title=Forward Secrecy at Twitter|url=https://blog.twitter.com/2013/forward-secrecy-at-twitter-0|publisher=Twitter|accessdate=2014-03-07|url-status=live|archiveurl=https://web.archive.org/web/20140216041202/https://blog.twitter.com/2013/forward-secrecy-at-twitter-0|archivedate=2014-02-16|df=}}</ref> {{As of|2019|08}}, about 80% of TLS-enabled websites are configured to use cipher suites that provide forward secrecy to most web browsers.<ref name=\"trustworthy_ssl_pulse\" />\n\n===TLS interception===\nTLS interception (or [[HTTPS]] interception if applied particularly to that protocol) is the practice of intercepting an encrypted data stream in order to decrypt it, read and possibly manipulate it, and then re-encrypt it and send the data on its way again. This is done by way of a \"[[transparent proxy]]\": the interception software terminates the incoming TLS connection, inspects the HTTP plaintext, and then creates a new TLS connection to the destination.<ref name=\"Durumeric et al 2017\">{{cite journal |last1=Durumeric |first1=Zakir |last2=Ma |first2=Zane |last3=Springall |first3=Drew |last4=Barnes |first4=Richard |last5=Sullivan |first5=Nick |last6=Bursztein |first6=Elie |last7=Bailey |first7=Michael |last8=Halderman |first8=J. Alex |last9=Paxson |first9=Vern |title=The Security Impact of HTTPS Interception |journal=NDSS Symposium |date=5 September 2017 |doi=10.14722/ndss.2017.23456 |url=https://www.ndss-symposium.org/ndss2017/ndss-2017-programme/security-impact-https-interception/|isbn=978-1-891562-46-4 }}</ref>\n\nTLS / HTTPS interception is used as an [[information security]] measure by network operators in order to be able to scan for and protect against the intrusion of malicious content into the network, such as [[computer virus]]es and other [[malware]].<ref name=\"Durumeric et al 2017\" /> Such content could otherwise not be detected as long as it is protected by encryption, which is increasingly the case as a result of the routine use of HTTPS and other secure protocols.\n\nA significant drawback of TLS / HTTPS interception is that it introduces new security risks of its own. Because it provides a point where network traffic is available unencrypted, attackers have an incentive to attack this point in particular in order to gain access to otherwise secure content. The interception also allows the network operator, or persons who gain access to its interception system, to perform [[man-in-the-middle attack]]s against network users. A 2017 study found that \"HTTPS interception has become startlingly widespread, and that interception products as a class have a dramatically negative impact on connection security\".<ref name=\"Durumeric et al 2017\" />\n\n==Protocol details==\nThe TLS protocol exchanges ''records'', which encapsulate the data to be exchanged in a specific format (see below). Each record can be compressed, padded, appended with a [[message authentication code]] (MAC), or encrypted, all depending on the state of the connection. Each record has a ''content type'' field that designates the type of data encapsulated, a length field and a TLS version field. The data encapsulated may be control or procedural messages of the TLS itself, or simply the application data needed to be transferred by TLS. The specifications (cipher suite, keys etc.) required to exchange application data by TLS, are agreed upon in the \"TLS handshake\" between the client requesting the data and the server responding to requests. The protocol therefore defines both the structure of payloads transferred in TLS and the procedure to establish and monitor the transfer.\n\n===TLS handshake===\nWhen the connection starts, the record encapsulates a \"control\" protocol \u2013 the handshake messaging protocol (''content type'' 22). This protocol is used to exchange all the information required by both sides for the exchange of the actual application data by TLS. It defines the format of messages and the order of their exchange. These may vary according to the demands of the client and server \u2013 i.e., there are several possible procedures to set up the connection. This initial exchange results in a successful TLS connection (both parties ready to transfer application data with TLS) or an alert message (as specified below).\n\n====Basic TLS handshake====\nA typical connection example follows, illustrating a [[Handshaking|handshake]] where the server (but not the client) is authenticated by its certificate:\n\n# Negotiation phase:\n#* A client sends a '''ClientHello''' message specifying the highest TLS protocol version it supports, a random number, a list of suggested [[cipher suite]]s and suggested compression methods. If the client is attempting to perform a resumed handshake, it may send a ''session ID''. If the client can use [[Application-Layer Protocol Negotiation]], it may include a list of supported application [[Communications protocol|protocols]], such as [[HTTP/2]].\n#* The server responds with a '''ServerHello''' message, containing the chosen protocol version, a random number, cipher suite and compression method from the choices offered by the client. To confirm or allow resumed handshakes the server may send a ''session ID''. The chosen protocol version should be the highest that both the client and server support. For example, if the client supports TLS version 1.1 and the server supports version 1.2, version 1.1 should be selected; version 1.2 should not be selected.\n#* The server sends its '''Certificate''' message (depending on the selected cipher suite, this may be omitted by the server).<ref name=\"openpgp\">These certificates are currently [[X.509]], but {{IETF RFC|6091}} also specifies the use of [[OpenPGP]]-based certificates.</ref>\n#* The server sends its '''ServerKeyExchange''' message (depending on the selected cipher suite, this may be omitted by the server). This message is sent for all DHE and DH_anon cipher suites.<ref name=\"RFC5246\"/>\n#* The server sends a '''ServerHelloDone''' message, indicating it is done with handshake negotiation.\n#* The client responds with a '''ClientKeyExchange''' message, which may contain a ''PreMasterSecret'', public key, or nothing. (Again, this depends on the selected cipher.) This ''PreMasterSecret'' is encrypted using the public key of the server certificate.\n#* The client and server then use the random numbers and ''PreMasterSecret'' to compute a common secret, called the \"master secret\". All other key data for this connection is derived from this master secret (and the client- and server-generated random values), which is passed through a carefully designed [[pseudorandomness|pseudorandom]] function.\n# The client now sends a '''ChangeCipherSpec''' record, essentially telling the server, \"Everything I tell you from now on will be authenticated (and encrypted if encryption parameters were present in the server certificate).\" The ChangeCipherSpec is itself a record-level protocol with content type of 20.\n#* The client sends an authenticated and encrypted '''Finished''' message, containing a hash and MAC over the previous handshake messages.\n#* The server will attempt to decrypt the client's ''Finished'' message and verify the hash and MAC. If the decryption or verification fails, the handshake is considered to have failed and the connection should be torn down.\n# Finally, the server sends a '''ChangeCipherSpec''', telling the client, \"Everything I tell you from now on will be authenticated (and encrypted, if encryption was negotiated).\"\n#* The server sends its authenticated and encrypted '''Finished''' message.\n#* The client performs the same decryption and verification procedure as the server did in the previous step.\n# Application phase: at this point, the \"handshake\" is complete and the application protocol is enabled, with content type of 23. Application messages exchanged between client and server will also be authenticated and optionally encrypted exactly like in their ''Finished'' message. Otherwise, the content type will return 25 and the client will not authenticate.\n\n====Client-authenticated TLS handshake====\nThe following ''full'' example shows a client being authenticated (in addition to the server as in the example above) via TLS using certificates exchanged between both peers.\n\n# Negotiation Phase:\n#* A client sends a '''ClientHello''' message specifying the highest TLS protocol version it supports, a random number, a list of suggested cipher suites and compression methods.\n#* The server responds with a '''ServerHello''' message, containing the chosen protocol version, a random number, cipher suite and compression method from the choices offered by the client. The server may also send a ''session id'' as part of the message to perform a resumed handshake.\n#* The server sends its '''Certificate''' message (depending on the selected cipher suite, this may be omitted by the server).<ref name=\"openpgp\"/>\n#* The server sends its '''ServerKeyExchange''' message (depending on the selected cipher suite, this may be omitted by the server). This message is sent for all DHE and DH_anon ciphersuites.<ref name=\"RFC5246\"/>\n#* The server sends a '''CertificateRequest''' message, to request a certificate from the client so that the connection can be [[mutually authenticated]].\n#* The server sends a '''ServerHelloDone''' message, indicating it is done with handshake negotiation.\n#* The client responds with a '''Certificate''' message, which contains the client's certificate.\n#* The client sends a '''ClientKeyExchange''' message, which may contain a ''PreMasterSecret'', public key, or nothing. (Again, this depends on the selected cipher.) This ''PreMasterSecret'' is encrypted using the public key of the server certificate.\n#* The client sends a '''CertificateVerify''' message, which is a signature over the previous handshake messages using the client's certificate's private key. This signature can be verified by using the client's certificate's public key. This lets the server know that the client has access to the private key of the certificate and thus owns the certificate.\n#* The client and server then use the random numbers and ''PreMasterSecret'' to compute a common secret, called the \"master secret\". All other key data for this connection is derived from this master secret (and the client- and server-generated random values), which is passed through a carefully designed pseudorandom function.\n# The client now sends a '''ChangeCipherSpec''' record, essentially telling the server, \"Everything I tell you from now on will be authenticated (and encrypted if encryption was negotiated). \" The ChangeCipherSpec is itself a record-level protocol and has type 20 and not 22.\n#* Finally, the client sends an encrypted '''Finished''' message, containing a hash and MAC over the previous handshake messages.\n#* The server will attempt to decrypt the client's ''Finished'' message and verify the hash and MAC. If the decryption or verification fails, the handshake is considered to have failed and the connection should be torn down.\n# Finally, the server sends a '''ChangeCipherSpec''', telling the client, \"Everything I tell you from now on will be authenticated (and encrypted if encryption was negotiated). \"\n#* The server sends its own encrypted '''Finished''' message.\n#* The client performs the same decryption and verification procedure as the server did in the previous step.\n# Application phase: at this point, the \"handshake\" is complete and the application protocol is enabled, with content type of 23. Application messages exchanged between client and server will also be encrypted exactly like in their ''Finished'' message.\n\n====Resumed TLS handshake====\nPublic key operations (e.g., RSA) are relatively expensive in terms of computational power. TLS provides a secure shortcut in the handshake mechanism to avoid these operations: resumed sessions. Resumed sessions are implemented using session IDs or session tickets.\n\nApart from the performance benefit, resumed sessions can also be used for [[single sign-on]], as it guarantees that both the original session and any resumed session originate from the same client. This is of particular importance for the [[FTPS|FTP over TLS/SSL]] protocol, which would otherwise suffer from a man-in-the-middle attack in which an attacker could intercept the contents of the secondary data connections.<ref>{{cite web |author=Chris |url=http://scarybeastsecurity.blogspot.com/2009/02/vsftpd-210-released.html |title=vsftpd-2.1.0 released \u2013 Using TLS session resume for FTPS data connection authentication |publisher=Scarybeastsecurity. blogspot.com |date=2009-02-18 |accessdate=2012-05-17 |url-status=live |archiveurl=https://web.archive.org/web/20120707213409/http://scarybeastsecurity.blogspot.com/2009/02/vsftpd-210-released.html |archivedate=2012-07-07}}</ref>\n\n====TLS 1.3 handshake====\n\nThe TLS 1.3 handshake was condensed to only one round trip compared to the two round trips required in previous versions of TLS/SSL.\n\nFirst the client sends a clientHello message to the server that contains a list of supported ciphers in order of the client's preference and makes a guess on what key algorithm will be used so that it can send a secret key to share if needed. By making a guess at what key algorithm will be used, the server eliminates a round trip. After receiving the clientHello, the server sends a serverHello with its key, a certificate, the chosen cipher suite and the finished message.\n\nAfter the client receives the server's finished message, it now is coordinated with the server on which cipher suite to use.[https://blog.cloudflare.com/tls-1-3-overview-and-q-and-a/]\n\n=====Session IDs=====\nIn an ordinary ''full'' handshake, the server sends a ''session id'' as part of the '''ServerHello''' message. The client associates this ''session id'' with the server's IP address and TCP port, so that when the client connects again to that server, it can use the ''session id'' to shortcut the handshake. In the server, the ''session id'' maps to the cryptographic parameters previously negotiated, specifically the \"master secret\". Both sides must have the same \"master secret\" or the resumed handshake will fail (this prevents an eavesdropper from using a ''session id''). The random data in the '''ClientHello''' and '''ServerHello''' messages virtually guarantee that the generated connection keys will be different from in the previous connection. In the RFCs, this type of handshake is called an ''abbreviated'' handshake. It is also described in the literature as a ''restart'' handshake.\n\n# Negotiation phase:\n#* A client sends a '''ClientHello''' message specifying the highest TLS protocol version it supports, a random number, a list of suggested cipher suites and compression methods. Included in the message is the ''session id'' from the previous TLS connection.\n#* The server responds with a '''ServerHello''' message, containing the chosen protocol version, a random number, cipher suite and compression method from the choices offered by the client. If the server recognizes the ''session id'' sent by the client, it responds with the same ''session id''. The client uses this to recognize that a resumed handshake is being performed. If the server does not recognize the ''session id'' sent by the client, it sends a different value for its ''session id''. This tells the client that a resumed handshake will not be performed. At this point, both the client and server have the \"master secret\" and random data to generate the key data to be used for this connection.\n# The server now sends a '''ChangeCipherSpec''' record, essentially telling the client, \"Everything I tell you from now on will be encrypted.\" The ChangeCipherSpec is itself a record-level protocol and has type 20 and not 22.\n#* Finally, the server sends an encrypted '''Finished''' message, containing a hash and MAC over the previous handshake messages.\n#* The client will attempt to decrypt the server's ''Finished'' message and verify the hash and MAC. If the decryption or verification fails, the handshake is considered to have failed and the connection should be torn down.\n# Finally, the client sends a '''ChangeCipherSpec''', telling the server, \"Everything I tell you from now on will be encrypted. \"\n#* The client sends its own encrypted '''Finished''' message.\n#* The server performs the same decryption and verification procedure as the client did in the previous step.\n# Application phase: at this point, the \"handshake\" is complete and the application protocol is enabled, with content type of 23. Application messages exchanged between client and server will also be encrypted exactly like in their ''Finished'' message.\n\n=====Session tickets=====\n{{IETF RFC|5077}} extends TLS via use of session tickets, instead of session IDs. It defines a way to resume a TLS session without requiring that session-specific state is stored at the TLS server.\n\nWhen using session tickets, the TLS server stores its session-specific state in a session ticket and sends the session ticket to the TLS client for storing. The client resumes a TLS session by sending the session ticket to the server, and the server resumes the TLS session according to the session-specific state in the ticket. The session ticket is encrypted and authenticated by the server, and the server verifies its validity before using its contents.\n\nOne particular weakness of this method with [[OpenSSL]] is that it always limits encryption and authentication security of the transmitted TLS session ticket to <code>AES128-CBC-SHA256</code>, no matter what other TLS parameters were negotiated for the actual TLS session.<ref name=\"ticketsecwp\">{{cite web|title=TLS \"Secrets\": Whitepaper presenting the security implications of the deployment of session tickets (RFC 5077) as implemented in OpenSSL|first=Florent|last=Daigni\u00e8re|publisher=Matta Consulting Limited|accessdate=7 August 2013|url=https://media.blackhat.com/us-13/US-13-Daigniere-TLS-Secrets-WP.pdf|url-status=live|archiveurl=https://web.archive.org/web/20130806233112/https://media.blackhat.com/us-13/US-13-Daigniere-TLS-Secrets-WP.pdf|archivedate=6 August 2013|df=}}</ref> This means that the state information (the TLS session ticket) is not as well protected as the TLS session itself. Of particular concern is OpenSSL's storage of the keys in an application-wide context (<code>SSL_CTX</code>), i.e. for the life of the application, and not allowing for re-keying of the <code>AES128-CBC-SHA256</code> TLS session tickets without resetting the application-wide OpenSSL context (which is uncommon, error-prone and often requires manual administrative intervention).<ref name=\"ticketsecslides\">{{cite web|title=TLS \"Secrets\": What everyone forgot to tell you...|first=Florent|last=Daigni\u00e8re|publisher=Matta Consulting Limited|accessdate=7 August 2013|url=https://media.blackhat.com/us-13/US-13-Daigniere-TLS-Secrets-Slides.pdf|url-status=live|archiveurl=https://web.archive.org/web/20130805134805/https://media.blackhat.com/us-13/US-13-Daigniere-TLS-Secrets-Slides.pdf|archivedate=5 August 2013|df=}}</ref><ref name=\"botchingpfs\">{{cite web|title=How to botch TLS forward secrecy|first=Adam|last=Langley|website=imperialviolet.org|date=27 June 2013|url=https://www.imperialviolet.org/2013/06/27/botchingpfs.html|url-status=live|archiveurl=https://web.archive.org/web/20130808221614/https://www.imperialviolet.org/2013/06/27/botchingpfs.html|archivedate=8 August 2013|df=}}</ref>\n\n===TLS record===\nThis is the general format of all TLS records.\n\n{|class=\"wikitable\" style=\"width:100%;text-align: center\"\n|-\n! scope=\"col\" style=\"width:12%;\"| +\n! scope=\"col\" colspan=\"8\" style=\"width:22%;\"| Byte +0\n! scope=\"col\" colspan=\"8\" style=\"width:22%;\"| Byte +1\n! scope=\"col\" colspan=\"8\" style=\"width:22%;\"| Byte +2\n! scope=\"col\" colspan=\"8\" style=\"width:22%;\"| Byte +3\n|-\n! Byte<br />0\n| colspan=\"8\" style=\"background:#dfd; \"| Content type\n| colspan=\"24\" style=\"background:#aaa; \"| &nbsp;\n|-\n!rowspan=\"2\"| Bytes<br />1..4\n| colspan=\"16\" style=\"background:#fdd; \"| Legacy version\n| colspan=\"16\" style=\"background:#fdd; \"| Length\n|- style=\"font-size:90%; line-height:1.2; background:#fdd; \"\n| colspan=\"8\"| ''(Major)''\n| colspan=\"8\"| ''(Minor)''\n| colspan=\"8\"| ''(bits 15..8)''\n| colspan=\"8\"| ''(bits 7..0)''\n|-\n! Bytes<br />5..(''m''\u22121)\n| colspan=\"32\"| Protocol message(s)\n|-\n! Bytes<br />''m''..(''p''\u22121)\n| colspan=\"32\" style=\"background:#fbb; \"| [[Message authentication code|MAC]] (optional)\n|-\n! Bytes<br />''p''..(''q''\u22121)\n| colspan=\"32\" style=\"background:#fbb; \"| Padding (block ciphers only)\n|}\n\n; Content type\n: This field identifies the Record Layer Protocol Type contained in this Record.\n{| class=\"wikitable\"\n|+ Content types\n|-\n! Hex\n! Dec\n! Type\n|-\n| 0x14\n| 20\n| ChangeCipherSpec\n|-\n| 0x15\n| 21\n| Alert\n|-\n| 0x16\n| 22\n| Handshake\n|-\n| 0x17\n| 23\n| Application\n|-\n| 0x18\n| 24\n| Heartbeat\n|}\n\n; Legacy version\n: This field identifies the major and minor version of TLS prior to TLS 1.3 for the contained message. For a ClientHello message, this need not be the ''highest'' version supported by the client. For TLS 1.3 and later, this must to be set 0x0303 and application must send supported versions in an extra message extension block.\n{|class=\"wikitable\"\n|+Versions\n|-\n! Major<br />version !! Minor<br />version !! Version type\n|-\n| 3 || 0 || SSL 3.0\n|-\n| 3 || 1 || TLS 1.0\n|-\n| 3 || 2 || TLS 1.1\n|-\n| 3 || 3 || TLS 1.2\n|-\n| 3 || 4 || TLS 1.3\n|}\n\n; Length\n\n: The length of \"protocol message(s)\", \"MAC\" and \"padding\" fields combined (i.e. ''q''\u22125), not to exceed 2<sup>14</sup> bytes (16 KiB).\n; Protocol message(s)\n: One or more messages identified by the Protocol field. Note that this field may be encrypted depending on the state of the connection.\n; MAC and padding\n: A [[message authentication code]] computed over the \"protocol message(s)\" field, with additional key material included. Note that this field may be encrypted, or not included entirely, depending on the state of the connection.\n: No \"MAC\" or \"padding\" fields can be present at end of TLS records before all cipher algorithms and parameters have been negotiated and handshaked and then confirmed by sending a CipherStateChange record (see below) for signalling that these parameters will take effect in all further records sent by the same peer.\n\n====Handshake protocol====\nMost messages exchanged during the setup of the TLS session are based on this record, unless an error or warning occurs and needs to be signaled by an Alert protocol record (see below), or the encryption mode of the session is modified by another record (see ChangeCipherSpec protocol below).\n\n{|class=\"wikitable\" style=\"width:100%;text-align: center\"\n|-\n! style=\"width:1%;\"| +\n! colspan=\"8\" style=\"width:2%;\"| Byte +0\n! colspan=\"8\" style=\"width:2%;\"| Byte +1\n! colspan=\"8\" style=\"width:2%;\"| Byte +2\n! colspan=\"8\" style=\"width:2%;\"| Byte +3\n|-\n! Byte<br />0\n| colspan=\"8\" style=\"background:#dfd; \"| 22\n| colspan=\"24\" style=\"background:#aaa; \"| &nbsp;\n|-\n!rowspan=\"2\"| Bytes<br />1..4\n| colspan=\"16\" style=\"background:#fdd; \"| Version\n| colspan=\"16\" style=\"background:#fdd; \"| Length\n|- style=\"font-size:90%; line-height:1.2; background:#fdd; \"\n| colspan=\"8\"| ''(Major)''\n| colspan=\"8\"| ''(Minor)''\n| colspan=\"8\"| ''(bits 15..8)''\n| colspan=\"8\"| ''(bits 7..0)''\n|-\n!rowspan=\"2\"| Bytes<br />5..8\n| rowspan=\"2\" colspan=\"8\"| Message type\n| colspan=\"24\"| Handshake message data length\n|- style=\"font-size:90%;line-height:1.2\"\n| colspan=\"8\"| ''(bits 23..16)''\n| colspan=\"8\"| ''(bits 15..8)''\n| colspan=\"8\"| ''(bits 7..0)''\n|-\n!Bytes<br />9..(''n''\u22121)\n| colspan=\"32\"| Handshake message data\n|-\n!rowspan=\"2\"| Bytes<br />''n''..(''n''+3)\n| rowspan=\"2\" colspan=\"8\" style=\"background:#fdd; \"| Message type\n| colspan=\"24\" style=\"background:#fdd; \"| Handshake message data length\n|- style=\"font-size:90%; line-height:1.2; background:#fdd; \"\n| colspan=\"8\"| ''(bits 23..16)''\n| colspan=\"8\"| ''(bits 15..8)''\n| colspan=\"8\"| ''(bits 7..0)''\n|-\n! Bytes<br />(''n''+4)..\n| colspan=\"32\" style=\"background:#fdd; \"| Handshake message data\n|}\n\n; Message type: This field identifies the handshake message type.\n\n{|class=\"wikitable\"\n|-\n! colspan=\"2\"| Message types\n|-\n! Code\n! Description\n|-\n| 0\n| HelloRequest\n|-\n| 1\n| ClientHello\n|-\n| 2\n| ServerHello\n|-\n| 4\n| NewSessionTicket\n|-\n| 8\n| EncryptedExtensions (TLS 1.3 only)\n|-\n| 11\n| Certificate\n|-\n| 12\n| ServerKeyExchange\n|-\n| 13\n| CertificateRequest\n|-\n| 14\n| ServerHelloDone\n|-\n| 15\n| CertificateVerify\n|-\n| 16\n| ClientKeyExchange\n|-\n| 20\n| Finished\n|}\n\n; Handshake message data length\n: This is a 3-byte field indicating the length of the handshake data, not including the header.\n\nNote that multiple handshake messages may be combined within one record.\n\n====Alert protocol====\nThis record should normally not be sent during normal handshaking or application exchanges. However, this message can be sent at any time during the handshake and up to the closure of the session. If this is used to signal a fatal error, the session will be closed immediately after sending this record, so this record is used to give a reason for this closure. If the alert level is flagged as a warning, the remote can decide to close the session if it decides that the session is not reliable enough for its needs (before doing so, the remote may also send its own signal).\n\n{|class=\"wikitable\" style=\"width:100%;text-align: center\"\n|-\n! style=\"width:12%;\"| +\n! colspan=\"8\" style=\"width:22%;\"| Byte +0\n! colspan=\"8\" style=\"width:22%;\"| Byte +1\n! colspan=\"8\" style=\"width:22%;\"| Byte +2\n! colspan=\"8\" style=\"width:22%;\"| Byte +3\n|-\n! Byte<br />0\n| colspan=\"8\" style=\"background:#dfd; \"| 21\n| colspan=\"24\" style=\"background:#aaa; \"| &nbsp;\n|-\n!rowspan=\"2\"| Bytes<br />1..4\n| colspan=\"16\" style=\"background:#fdd; \"| Version\n| colspan=\"16\" style=\"background:#fdd; \"| Length\n|- style=\"font-size:90%; line-height:1.2; background:#fdd; \"\n| colspan=\"8\"| ''(Major)''\n| colspan=\"8\"| ''(Minor)''\n| colspan=\"8\"| 0\n| colspan=\"8\"| 2\n|-\n! Bytes<br />5..6\n| colspan=\"8\"| Level\n| colspan=\"8\"| Description\n| colspan=\"16\" style=\"background:#aaa; \"| &nbsp;\n|-\n! Bytes<br />''7''..(''p''\u22121)\n| colspan=\"32\" style=\"background:#fbb; \"| [[Message authentication code|MAC]] (optional)\n|-\n! Bytes<br />''p''..(''q''\u22121)\n| colspan=\"32\" style=\"background:#fbb; \"| Padding (block ciphers only)\n|}\n\n; Level\n: This field identifies the level of alert. If the level is fatal, the sender should close the session immediately. Otherwise, the recipient may decide to terminate the session itself, by sending its own fatal alert and closing the session itself immediately after sending it. The use of Alert records is optional, however if it is missing before the session closure, the session may be resumed automatically (with its handshakes).\n: Normal closure of a session after termination of the transported application should preferably be alerted with at least the ''Close notify'' Alert type (with a simple warning level) to prevent such automatic resume of a new session. Signalling explicitly the normal closure of a secure session before effectively closing its transport layer is useful to prevent or detect attacks (like attempts to truncate the securely transported data, if it intrinsically does not have a predetermined length or duration that the recipient of the secured data may expect).\n{|class=\"wikitable\" style=\"width:85%\"\n|+Alert level types\n|-\n! Code\n! Level type\n! Connection state\n|- style=\"background:#dfd; \"\n| 1 || <span style=\"color: orange\">'''warning'''</span> || connection or security may be unstable.\n|- style=\"background:#fdd; \"\n| 2 || <span style=\"color: red\">'''fatal'''</span> || connection or security may be compromised, or an unrecoverable error has occurred.\n|}\n\n; Description\n: This field identifies which type of alert is being sent.\n{|class=\"wikitable\" style=\"width:85%\"\n|+Alert description types\n|-\n! Code\n! Description\n! Level types\n! Note\n|- style=\"background:#ffd; \"\n| 0 || Close notify || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> ||\n|- style=\"background:#fdd; \"\n| 10 || Unexpected message || <span style=\"color: red\">'''fatal'''</span> ||\n|- style=\"background:#fdd; \"\n| 20 || Bad record MAC || <span style=\"color: red\">'''fatal'''</span> || Possibly a bad SSL implementation, or payload has been tampered with e.g. FTP firewall rule on FTPS server.\n|- style=\"background:#fdd; \"\n| 21 || Decryption failed || <span style=\"color: red\">'''fatal'''</span> || TLS only, reserved\n|- style=\"background:#fdd; \"\n| 22 || Record overflow || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 30 || Decompression failure || <span style=\"color: red\">'''fatal'''</span> ||\n|- style=\"background:#fdd; \"\n| 40 || Handshake failure || <span style=\"color: red\">'''fatal'''</span> ||\n|- style=\"background:#ffd; \"\n| 41 || No certificate || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> || SSL 3.0 only, reserved\n|- style=\"background:#ffd; \"\n| 42 || Bad certificate || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> ||\n|- style=\"background:#ffd; \"\n| 43 || Unsupported certificate || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> || e.g. certificate has only Server authentication usage enabled and is presented as a client certificate\n|- style=\"background:#ffd; \"\n| 44 || Certificate revoked || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> ||\n|- style=\"background:#ffd; \"\n| 45 || Certificate expired || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> || Check server certificate expire also check no certificate in the chain presented has expired</span>\n|- style=\"background:#ffd; \"\n| 46 || Certificate unknown || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> ||\n|- style=\"background:#fdd; \"\n| 47 || Illegal parameter || <span style=\"color: red\">'''fatal'''</span> ||\n|- style=\"background:#fdd; \"\n| 48 || Unknown CA ([[Certificate authority]]) || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 49 || Access denied || <span style=\"color: red\">'''fatal'''</span> || TLS only \u2013 e.g. no client certificate has been presented (TLS: Blank certificate message or SSLv3: No Certificate alert), but server is configured to require one.\n|- style=\"background:#fdd; \"\n| 50 || Decode error || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#ffd; \"\n| 51 || Decrypt error || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 60 || Export restriction || <span style=\"color: red\">'''fatal'''</span> || TLS only, reserved\n|- style=\"background:#fdd; \"\n| 70 || Protocol version || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 71 || Insufficient security || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 80 || Internal error || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 86 || Inappropriate Fallback || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 90 || User canceled || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#dfd; \"\n| 100 || No renegotiation || <span style=\"color: orange\">'''warning'''</span> || TLS only\n|- style=\"background:#dfd; \"\n| 110 || Unsupported extension || <span style=\"color: orange\">'''warning'''</span> || TLS only\n|- style=\"background:#dfd; \"\n| 111 || Certificate unobtainable || <span style=\"color: orange\">'''warning'''</span> || TLS only\n|- style=\"background:#ffd; \"\n| 112 || Unrecognized name || <span style=\"color: orange\">'''warning'''</span>/<span style=\"color: red\">'''fatal'''</span> || TLS only; client's [[Server Name Indication|Server Name Indicator]] specified a hostname not supported by the server\n|- style=\"background:#fdd; \"\n| 113 || Bad certificate status response || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 114 || Bad certificate hash value || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 115 || Unknown [[Pre-shared key|PSK]] identity (used in [[TLS-PSK]] and [[TLS-SRP]]) || <span style=\"color: red\">'''fatal'''</span> || TLS only\n|- style=\"background:#fdd; \"\n| 120 || No Application Protocol || <span style=\"color: red\">'''fatal'''</span> || TLS only, client's ALPN did not contain any server-supported protocols\n|}\n\n====ChangeCipherSpec protocol====\n{|class=\"wikitable\" style=\"width:100%;text-align: center\"\n|-\n! style=\"width:12%;\"| +\n! colspan=\"8\" style=\"width:22%;\"| Byte +0\n! colspan=\"8\" style=\"width:22%;\"| Byte +1\n! colspan=\"8\" style=\"width:22%;\"| Byte +2\n! colspan=\"8\" style=\"width:22%;\"| Byte +3\n|-\n! Byte<br />0\n| colspan=\"8\" style=\"background:#dfd; \"| 20\n| colspan=\"24\" style=\"background:#aaa; \"| &nbsp;\n|-\n!rowspan=\"2\"| Bytes<br />1..4\n| colspan=\"16\" style=\"background:#fdd; \"| Version\n| colspan=\"16\" style=\"background:#fdd; \"| Length\n|- style=\"font-size:90%; line-height:1.2; background:#fdd; \"\n| colspan=\"8\"| ''(Major)''\n| colspan=\"8\"| ''(Minor)''\n| colspan=\"8\"| 0\n| colspan=\"8\"| 1\n|-\n! Byte<br />5\n| colspan=\"8\"| CCS protocol type\n| colspan=\"24\" style=\"background:#aaa; \"| &nbsp;\n|}\n\n; CCS protocol type\n: Currently only 1.\n\n====Application protocol====\n{|class=\"wikitable\" style=\"width:100%;text-align: center\"\n|-\n! style=\"width:12%;\"| +\n! colspan=\"8\" style=\"width:22%;\"| Byte +0\n! colspan=\"8\" style=\"width:22%;\"| Byte +1\n! colspan=\"8\" style=\"width:22%;\"| Byte +2\n! colspan=\"8\" style=\"width:22%;\"| Byte +3\n|-\n! Byte<br />0\n| colspan=\"8\" style=\"background:#dfd; \"| 23\n| colspan=\"24\" style=\"background:#aaa; \"| &nbsp;\n|-\n!rowspan=\"2\"| Bytes<br />1..4\n| colspan=\"16\" style=\"background:#fdd; \"| Version\n| colspan=\"16\" style=\"background:#fdd; \"| Length\n|- style=\"font-size:90%; line-height:1.2; background:#fdd; \"\n| colspan=\"8\"| ''(Major)''\n| colspan=\"8\"| ''(Minor)''\n| colspan=\"8\"| ''(bits 15..8)''\n| colspan=\"8\"| ''(bits 7..0)''\n|-\n! Bytes<br />5..(''m''\u22121)\n| colspan=\"32\"| Application data\n|-\n! Bytes<br />''m''..(''p''\u22121)\n| colspan=\"32\" style=\"background:#fbb; \"| [[Message authentication code|MAC]] (optional)\n|-\n! Bytes<br />''p''..(''q''\u22121)\n| colspan=\"32\" style=\"background:#fbb; \"| Padding (block ciphers only)\n|}\n\n; Length\n: Length of application data (excluding the protocol header and including the MAC and padding trailers)\n; MAC\n: 20 bytes for the [[SHA-1]]-based [[HMAC]], 16 bytes for the [[MD5]]-based HMAC.\n; Padding\n: Variable length; last byte contains the padding length.\n\n==Support for name-based virtual servers==\nFrom the application protocol point of view, TLS belongs to a lower layer, although the TCP/IP model is too coarse to show it. This means that the TLS handshake is usually (except in the [[STARTTLS]] case) performed before the application protocol can start. In the [[virtual hosting#Name-based|name-based virtual server]] feature being provided by the application layer, all co-hosted virtual servers share the same certificate because the server has to select and send a certificate immediately after the ClientHello message. This is a big problem in hosting environments because it means either sharing the same certificate among all customers or using a different IP address for each of them.\n\nThere are two known workarounds provided by [[X.509]]:\n* If all virtual servers belong to the same domain, a [[wildcard certificate]] can be used.<ref>{{citation |url=https://ssl.comodo.com/wildcard-ssl-certificates.php |title=Wildcard SSL Certificate overview |accessdate=2015-07-02 |url-status=live |archiveurl=https://web.archive.org/web/20150623231035/https://ssl.comodo.com/wildcard-ssl-certificates.php |archivedate=2015-06-23}}</ref> Besides the loose host name selection that might be a problem or not, there is no common agreement about how to match wildcard certificates. Different rules are applied depending on the application protocol or software used.<ref>{{citation |url=https://www.switch.ch/pki/meetings/2007-01/namebased_ssl_virtualhosts.pdf |title=Named-based SSL virtual hosts: how to tackle the problem |accessdate=2012-05-17 |url-status=live |archiveurl=https://web.archive.org/web/20120803022659/https://www.switch.ch/pki/meetings/2007-01/namebased_ssl_virtualhosts.pdf |archivedate=2012-08-03}}</ref>\n* Add every virtual host name in the subjectAltName extension. The major problem being that the certificate needs to be reissued whenever a new virtual server is added.\n\nTo provide the server name, {{IETF RFC|4366}} Transport Layer Security (TLS) Extensions allow clients to include a [[Server Name Indication]] extension (SNI) in the extended ClientHello message. This extension hints the server immediately which name the client wishes to connect to, so the server\ncan select the appropriate certificate to send to the clients.\n\n{{IETF RFC|2817}} also documents a method to implement name-based virtual hosting by upgrading HTTP to TLS via an [[HTTP/1.1 Upgrade header]]. Normally this is to securely implement HTTP over TLS within the main \"http\" [[URI scheme]] (which avoids forking the URI space and reduces the number of used ports), however, few implementations currently support this.{{citation needed|date=February 2019}}\n\n==Standards==\n\n===Primary standards===\n'''The current approved version of TLS is version 1.3, which is specified in:'''\n* {{IETF RFC|8446}}: \"The Transport Layer Security (TLS) Protocol Version 1.3\".\n\n'''The current standard replaces these former versions, which are now considered obsolete:'''\n* {{IETF RFC|2246}}: \"The TLS Protocol Version 1.0\".\n* {{IETF RFC|4346}}: \"The Transport Layer Security (TLS) Protocol Version 1.1\".\n* {{IETF RFC|5246}}: \"The Transport Layer Security (TLS) Protocol Version 1.2\".\n\n'''As well as the never standardized SSL 2.0 and 3.0, which are considered obsolete:'''\n* [//tools.ietf.org/html/draft-hickman-netscape-ssl-00 Internet Draft (1995)], SSL Version 2.0\n* {{IETF RFC|6101}}: \"The Secure Sockets Layer (SSL) Protocol Version 3.0\".\n\n===Extensions===\nOther [[Request for comments|RFCs]] subsequently extended TLS.\n\n'''Extensions to TLS 1.0 include:'''\n* {{IETF RFC|2595}}: \"Using TLS with IMAP, POP3 and ACAP\". Specifies an extension to the IMAP, POP3 and ACAP services that allow the server and client to use transport-layer security to provide private, authenticated communication over the Internet.\n* {{IETF RFC|2712}}: \"Addition of [[Kerberos (protocol)|Kerberos]] Cipher Suites to Transport Layer Security (TLS)\". The 40-bit cipher suites defined in this memo appear only for the purpose of documenting the fact that those cipher suite codes have already been assigned.\n* {{IETF RFC|2817}}: \"Upgrading to TLS Within HTTP/1.1\", explains how to use the [[HTTP/1.1 Upgrade header|Upgrade mechanism in HTTP/1.1]] to initiate Transport Layer Security (TLS) over an existing TCP connection. This allows unsecured and secured HTTP traffic to share the same ''well known'' port (in this case, http: at 80 rather than https: at 443).\n* {{IETF RFC|2818}}: \"HTTP Over TLS\", distinguishes secured traffic from insecure traffic by the use of a different 'server port'.\n* {{IETF RFC|3207}}: \"SMTP Service Extension for Secure SMTP over Transport Layer Security\". Specifies an extension to the SMTP service that allows an SMTP server and client to use transport-layer security to provide private, authenticated communication over the Internet.\n* {{IETF RFC|3268}}: \"AES Ciphersuites for TLS\". Adds [[Advanced Encryption Standard]] (AES) cipher suites to the previously existing symmetric ciphers.\n* {{IETF RFC|3546}}: \"Transport Layer Security (TLS) Extensions\", adds a mechanism for negotiating protocol extensions during session initialisation and defines some extensions. Made obsolete by {{IETF RFC|4366}}.\n* {{IETF RFC|3749}}: \"Transport Layer Security Protocol Compression Methods\", specifies the framework for compression methods and the [[DEFLATE]] compression method.\n* {{IETF RFC|3943}}: \"Transport Layer Security (TLS) Protocol Compression Using Lempel-Ziv-Stac (LZS)\".\n* {{IETF RFC|4132}}: \"Addition of [[Camellia (cipher)|Camellia]] Cipher Suites to Transport Layer Security (TLS)\".\n* {{IETF RFC|4162}}: \"Addition of [[SEED]] Cipher Suites to Transport Layer Security (TLS)\".\n* {{IETF RFC|4217}}: \"Securing [[FTPS|FTP with TLS]]\".\n* {{IETF RFC|4279}}: \"Pre-Shared Key Ciphersuites for Transport Layer Security (TLS)\", adds three sets of new cipher suites for the TLS protocol to support authentication based on pre-shared keys.\n\n'''Extensions to TLS 1.1 include:'''\n* {{IETF RFC|4347}}: \"[[Datagram Transport Layer Security]]\" specifies a TLS variant that works over datagram protocols (such as UDP).\n* {{IETF RFC|4366}}: \"Transport Layer Security (TLS) Extensions\" describes both a set of specific extensions and a generic extension mechanism.\n* {{IETF RFC|4492}}: \"[[Elliptic Curve Cryptography]] (ECC) Cipher Suites for Transport Layer Security (TLS)\".\n* {{IETF RFC|4680}}: \"TLS Handshake Message for Supplemental Data\".\n* {{IETF RFC|4681}}: \"TLS User Mapping Extension\".\n* {{IETF RFC|4785}}: \"Pre-Shared Key (PSK) Ciphersuites with NULL Encryption for Transport Layer Security (TLS)\".\n* {{IETF RFC|5054}}: \"Using the [[Secure remote password protocol|Secure Remote Password]] (SRP) Protocol for TLS Authentication\". Defines the [[TLS-SRP]] ciphersuites.\n* {{IETF RFC|5077}}: \"Transport Layer Security (TLS) Session Resumption without Server-Side State\".\n* {{IETF RFC|5081}}: \"Using [[OpenPGP]] Keys for Transport Layer Security (TLS) Authentication\", obsoleted by {{IETF RFC|6091}}.\n\n'''Extensions to TLS 1.2 include:'''\n* {{IETF RFC|5288}}: \"AES [[Galois/Counter Mode|Galois Counter Mode]] (GCM) Cipher Suites for TLS\".\n* {{IETF RFC|5289}}: \"TLS Elliptic Curve Cipher Suites with SHA-256/384 and AES Galois Counter Mode (GCM)\".\n* {{IETF RFC|5746}}: \"Transport Layer Security (TLS) Renegotiation Indication Extension\".\n* {{IETF RFC|5878}}: \"Transport Layer Security (TLS) Authorization Extensions\".\n* {{IETF RFC|5932}}: \"Camellia Cipher Suites for TLS\"\n* {{IETF RFC|6066}}: \"Transport Layer Security (TLS) Extensions: Extension Definitions\", includes [[Server Name Indication]] and [[OCSP stapling]].\n* {{IETF RFC|6091}}: \"Using [[OpenPGP]] Keys for Transport Layer Security (TLS) Authentication\".\n* {{IETF RFC|6176}}: \"Prohibiting Secure Sockets Layer (SSL) Version 2.0\".\n* {{IETF RFC|6209}}: \"Addition of the [[ARIA (cipher)|ARIA]] Cipher Suites to Transport Layer Security (TLS)\".\n* {{IETF RFC|6347}}: \"Datagram Transport Layer Security Version 1.2\".\n* {{IETF RFC|6367}}: \"Addition of the Camellia Cipher Suites to Transport Layer Security (TLS)\".\n* {{IETF RFC|6460}}: \"Suite B Profile for Transport Layer Security (TLS)\".\n* {{IETF RFC|6655}}: \"AES-CCM Cipher Suites for Transport Layer Security (TLS)\".\n* {{IETF RFC|7027}}: \"Elliptic Curve Cryptography (ECC) Brainpool Curves for Transport Layer Security (TLS)\".\n* {{IETF RFC|7251}}: \"AES-CCM Elliptic Curve Cryptography (ECC) Cipher Suites for TLS\".\n* {{IETF RFC|7301}}: \"Transport Layer Security (TLS) [[Application-Layer Protocol Negotiation]] Extension\".\n* {{IETF RFC|7366}}: \"Encrypt-then-MAC for Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)\".\n* {{IETF RFC|7465}}: \"Prohibiting RC4 Cipher Suites\".\n* {{IETF RFC|7507}}: \"TLS Fallback Signaling Cipher Suite Value (SCSV) for Preventing Protocol Downgrade Attacks\".\n* {{IETF RFC|7568}}: \"Deprecating Secure Sockets Layer Version 3.0\".\n* {{IETF RFC|7627}}: \"Transport Layer Security (TLS) Session Hash and Extended Master Secret Extension\".\n* {{IETF RFC|7685}}: \"A Transport Layer Security (TLS) ClientHello Padding Extension\".\n\n'''Encapsulations of TLS include:'''\n* {{IETF RFC|5216}}: \"The [[Extensible Authentication Protocol|EAP]]-TLS Authentication Protocol\"\n\n===Informational RFCs===\n* {{IETF RFC|7457}}: \"Summarizing Known Attacks on Transport Layer Security (TLS) and Datagram TLS (DTLS)\"\n* {{IETF RFC|7525}}: \"Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)\"\n\n==See also==\n\n* [[Application-Layer Protocol Negotiation]] \u2013 a TLS extension used for SPDY and TLS False Start\n* [[Bullrun (decryption program)]] \u2013 a secret anti-encryption program run by the U.S. National Security Agency\n* [[Certificate authority#CA compromise|Certificate authority compromise]]\n* [[Certificate Transparency]]\n* [[HTTP Public Key Pinning]]\n* [[HTTP Strict Transport Security]] \u2013 HSTS\n* [[Key ring file]]\n* [[QUIC]] (Quick UDP Internet Connections) \u2013 \"...was designed to provide security protection equivalent to TLS/SSL\"; QUIC's main goal is to improve perceived performance of connection-oriented web applications that are currently using TCP\n* [[Server-Gated Cryptography]]\n* [[tcpcrypt]]\n* [[DTLS]]\n* [[TLS acceleration]]\n\n==References==\n{{Reflist|30em}}\n{{FOLDOC}}\n\n==Further reading==\n* {{cite conference|first=David|last=Wagner|author2=Schneier, Bruce |title=Analysis of the SSL 3.0 Protocol|booktitle=The Second USENIX Workshop on Electronic Commerce Proceedings|publisher=USENIX Press|date=November 1996|pages=29\u201340|url=http://www.schneier.com/paper-ssl.pdf}}\n* {{cite book|author=Eric Rescorla|title=SSL and TLS: Designing and Building Secure Systems|publisher=Addison-Wesley Pub Co|location=United States|year=2001|isbn=978-0-201-61598-2|url-access=registration|url=https://archive.org/details/ssltls00eric}}\n* {{cite book|author=Stephen A. Thomas|title=SSL and TLS essentials securing the Web|publisher=Wiley|location=New York|year=2000|isbn=978-0-471-38354-3}}\n* {{cite journal|title=A Challenging But Feasible Blockwise-Adaptive Chosen-Plaintext Attack on SSL|journal=International Association for Cryptologic Research|year=2006|first= Gregory|last=Bard|volume=|issue=136|pages=|id= |url=http://eprint.iacr.org/2006/136|accessdate=2011-09-23}}\n* {{cite web|url=http://lasecwww.epfl.ch/memo/memo_ssl.shtml |title=Password Interception in a SSL/TLS Channel |accessdate=2007-04-20 |last=Canvel |first=Brice}}\n* {{cite web|url=http://tools.ietf.org/html/rfc5746 |title=RFC of change for TLS Renegotiation |accessdate=2009-12-11 |last=IETF Multiple Authors}}\n* [http://www.linuxjournal.com/article/9916 Creating VPNs with IPsec and SSL/TLS] Linux Journal article by Rami Rosen\n* {{cite web|url=http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-52r1.pdf|title=Guidelines for the Selection, Configuration, and Use of Transport Layer Security (TLS) Implementations|author1=Polk, Tim |author2=McKay, Kerry |author3=Chokhani, Santosh |date=April 2014|format=|publisher=National Institute of Standards and Technology|pages=|archiveurl=https://web.archive.org/web/20140508025330/http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-52r1.pdf|archivedate=2014-05-08|url-status=dead|accessdate=2014-05-07}}\n* {{cite journal|first=AbdelRahman|last=Abdou|first2=Paul|last2=van Oorschot|title=Server Location Verification (SLV) and Server Location Pinning: Augmenting TLS Authentication|journal=Transactions on Privacy and Security|publisher=ACM|date=August 2017|url=https://dl.acm.org/citation.cfm?id=3139294}}\n\n==External links==\n{{commons category|SSL and TLS}}\n'''Specifications''' (see [[#Standards|\u00a7 Standards]] section for older SSL 2.0, SSL 3.0, TLS 1.0, TLS 1.1 links)\n* [https://tools.ietf.org/html/rfc5246 The Transport Layer Security (TLS) Protocol Version 1.2] {{IETF RFC|5246}}\n* [https://datatracker.ietf.org/wg/tls/ IETF (Internet Engineering Task Force) TLS Workgroup]\n;TLS version intolerance\n* [https://timtaubert.de/blog/2016/09/tls-version-intolerance/ TLS version intolerance]\n* [https://www.int21.de/slides/berlinsec-versionintolerance/#/ TLS 1.3 and Version Intolerance]\n;Other\n* [https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html OWASP: Transport Layer Protection Cheat Sheet]\n* [https://computing.ece.vt.edu/~jkh/Understanding_SSL_TLS.pdf A talk on SSL/TLS that tries to explain things in terms that people might understand.]\n* [https://www.cisco.com/web/about/ac123/ac147/archived_issues/ipj_1-1/ssl.html SSL: Foundation for Web Security]\n* [https://tools.ietf.org/agenda/76/slides/tls-7.pdf TLS Renegotiation Vulnerability \u2013 IETF Tools]\n* [https://www.trustworthyinternet.org/ssl-pulse/ Trustworthy Internet Movement \u2013 SSL Pulse] \u2013 Survey of TLS/SSL implementation of the most popular websites\n* [http://www.sslcentral.com/how-to-generate-csr/ How to Generate CSR for SSL]\n* [https://www.gnudeveloper.com/cyber_security/TLS_handshake.html How TLS Handshake works in private browser]\n\n{{SSL/TLS}}\n{{VPN}}\n{{Web browsers}}\n\n[[Category:Transport Layer Security| ]]\n[[Category:Cryptographic protocols]]\n[[Category:Presentation layer protocols]]\n", "name_user": "MarkBrooks", "label": "safe", "comment": "\u2192\u200eSupport for name-based virtual servers:hint is not a verb", "url_page": "//en.wikipedia.org/wiki/Transport_Layer_Security"}
{"title_page": "Robbery", "text_new": "{{short description|Taking or attempting to take something of value by force or threat of force or by putting the victim in fear}}\n{{other uses}}\n{{redirect-multi|3|Robber|Holdup|Stick up}}\n[[File:Bundesarchiv Bild 102-12763, Bank\u00fcberfall.jpg|thumb j n nnnutb|A masked robber threatens a person with a gun]]\n{{criminal law}}\n'''Robbery''' is the [[crime]] of taking or attempting to take anything of value by force, threat of force, or by putting the victim in fear. According to [[common law]], robbery is defined as taking the property of another, with the intent to permanently deprive the person of that property, by means of force or fear; that is, it is a [[larceny]] or [[theft]] accomplished by an [[assault]].<ref>{{cite web |url=http://docket.medill.northwestern.edu/archives/000439.php |title=Carter, Floyd J. vs U.S. |date=June 12, 2000 |accessdate=2008-05-04 |url-status=dead |archiveurl=https://web.archive.org/web/20060903163713/http://docket.medill.northwestern.edu/archives/000439.php |archivedate=September 3, 2006 }}</ref> Precise definitions of the offence may vary between jurisdictions. Robbery is differentiated from other forms of [[theft]] (such as [[burglary]], [[shoplifting]], [[pickpocketing]], or [[car theft]]) by its inherently violent nature (a [[violent crime]]); whereas many lesser forms of theft are punished as [[misdemeanors]], robbery is always a [[felony]] in jurisdictions that distinguish between the two. Under English law, most forms of theft are [[triable either way]], whereas robbery is [[triable only on indictment]]. The word \"rob\" came via [[French language|French]] from [[Late Latin]] words (e.g., ''deraubare'') of [[Germanic languages|Germanic]] origin, from [[Common Germanic]] ''raub'' \"theft\".\n\nAmong the types of robbery are '''armed robbery''', which involves the use of a [[weapon]], and '''aggravated robbery''', when someone brings with them a deadly weapon or something that appears to be a deadly weapon. '''Highway robbery''' or '''mugging''' takes place outside or in a [[public place]] such as a sidewalk, street, or parking lot. [[Carjacking]] is the act of stealing a car from a victim by force. [[Extortion]] is the threat to do something illegal, or the offer to not do something illegal, in the event that goods are not given, primarily using words instead of actions.\n\nCriminal slang for robbery includes \"blagging\" (armed robbery, usually of a bank) or \"stick-up\" (derived from the verbal command to robbery targets to raise their hands in the air), and \"[[steaming (crime)|steaming]]\" (organized robbery on underground train systems).\n\n== Canada ==\n\nIn Canada, the [[Criminal Code (Canada)|Criminal Code]] makes robbery an [[indictable offence]], subject to a maximum penalty of [[Life imprisonment in Canada|life imprisonment]].  If the accused uses a restricted or prohibited firearm to  commit robbery, there is a mandatory minimum sentence of five years for the first offence, and seven years for subsequent offences.<ref>[[Criminal Code (Canada)|''Criminal Code'']], [http://laws-lois.justice.gc.ca/eng/acts/C-46/page-177.html#docCont RSC 1985, c C-46, ss 343, 344.]</ref>\n\n== Republic of Ireland ==\nRobbery is a statutory offence in the [[Republic of Ireland]]. It is created by section 14(1) of the [[Criminal Justice (Theft and Fraud Offences) Act, 2001]], which provides:\n\n{{Blockquote|A person is guilty of robbery if he or she steals, and immediately before or at the time of doing so, and in order to do so, uses force on any person or puts or seeks to put any person in fear of being then and there subjected to force.<ref>[http://www.irishstatutebook.ie/2001/en/act/pub/0050/sec0014.html#sec14 Digitised copy] of section 14 of the Criminal Justice (Theft and Fraud Offences) Act, 2001. From the Office of the Attorney General.</ref>}}\n\n== United Kingdom ==\n\n=== England and Wales ===\nRobbery is a statutory offence in [[England and Wales]].<ref>The extent of section 8 of the [[Theft Act 1968]] is provided by [http://www.legislation.gov.uk/ukpga/1968/60/section/36 section 36(3)] of that Act.</ref> It is created by section 8(1) of the [[Theft Act 1968]] which reads:\n{{quote|A person is guilty of robbery if he steals, and immediately before or at the time of doing so, and in order to do so, he uses force on any person or puts or seeks to put any person in fear of being then and there subjected to force.<ref>[http://www.legislation.gov.uk/ukpga/1968/60/section/8 Digitised copy] of section 8 of the Theft Act 1968, from Legislation.gov.uk.</ref>}}\n\n====Aggravated theft====\n\nRobbery is the only offence of aggravated theft.<ref name=\"Griew, Edward 1978. page 79\">Griew, Edward. The Theft Acts 1968 and 1978. Sweet and Maxwell. Fifth Edition. 1986. Paragraph 3-01 at page 79.</ref>\n\n====Aggravated robbery====\n\nThere are no offences of aggravated robbery.<ref name=\"Griew, Edward 1978. page 79\" />\n\n==== \"Steals\" ====\nThis requires evidence to show a [[theft]] as set out in section 1(1) of the Theft Act 1968. In ''R v Robinson''<ref>R v Robinson [1977] Crim LR 173, CA</ref> the defendant threatened the victim with a knife in order to recover money which he was actually owed. His conviction for robbery was quashed on the basis that Robinson had an honest, although unreasonable, belief (under Section 2(1)(a) of the Act) in his legal right to the money. See also ''R v Skivington'' [1968] 1 QB 166, [1967] 2 WLR 655, 131 JP 265, 111 SJ 72, [1967] 1 All ER 483, 51 [[Criminal Appeal Reports|Cr App R]] 167, CA.\n\nIn ''R v Hale'' (1978)<ref>''R v Hale'' (1978) 68 Cr App R 415, [1979] Crim LR 596, [[Court of Appeal of England and Wales|CA]]</ref> the application of force and the stealing took place in different locations, and it was not possible to establish the timing; it was held that the appropriation necessary to prove theft was a continuing act, and the jury could correctly convict of robbery. This approach was followed in ''R v Lockley'' (1995)<ref>Crim LR 656</ref> when the force was applied to a shopkeeper after property had been taken. It was argued that the theft should be regarded as complete by this time, and ''R v Gomez'' (1993),<ref>[1993] AC 442, House of Lords</ref> should apply; the court disagreed, preferring to follow ''R v Hale''.\n\n==== Actual or threatened force against a person ====\nThe threat or use of force must take place immediately before or at the time of the [[theft]]. Force used after the theft is complete will not turn the theft into a robbery.\n\nThe words \"or immediately after\" that appeared in section 23(1)(b) of the [[Larceny Act 1916]] were deliberately omitted from section 8(1).<ref>The [[Criminal Law Revision Committee]]. Eighth Report. Theft and Related Offences. 1966. Cmnd 2977. Paragraph 65.</ref>\n\nThe book ''[[Archbold Criminal Pleading, Evidence and Practice|Archbold]]'' said that the facts in ''R v Harman'',<ref>''R v Harman'' (1620) 1 [[Historia Placitorum Coron\u00e6|Hale]] [https://books.google.com/books?id=2KoDAAAAQAAJ&pg=PA534 534], (1620) 2 Rolle 154, (1620) 81 [[English Reports|ER]] [http://www.commonlii.org/uk/cases/EngR/1676/218.pdf 721]</ref> which did not amount to robbery in 1620, would not amount to robbery now.<ref>''[[Archbold Criminal Pleading, Evidence and Practice]]'', 1999, para. 21-99 at p. 1772</ref>\n\nIt was held in ''R v Dawson and James'' (1978)<ref>''R v Dawson and James'' (1978) 68 Cr App R 170, CA</ref> that \"force\" is an ordinary English word and its meaning should be left to the jury. This approach was confirmed in  ''R v Clouden'' (1985)<ref>''R v Clouden'', unreported (C.A. No. 3897, 4 February 1985). For details see Griew, Edward. ''The Theft Acts 1968 and 1978''. Fifth Edition. Sweet and Maxwell. 1986. Paragraphs 3-04 and 3-05 at page 80.</ref> and ''Corcoran v Anderton'' (1980),<ref>''Corcoran v Anderton'' (1980) 71 Cr App R 104, [1980] Crim LR 385, [[Divisional Court (England and Wales)|DC]]</ref> both handbag-snatching cases. Stealing may involve a young child who is not aware that taking other persons' property is not in order.\n\n==== Threat ====\nThe victim must be placed in apprehension or fear that force would be used immediately before or at the time of the taking of the property. A threat is not immediate if the wrongdoer threatens to use force of violence some future time.\n\nRobbery occurs if an aggressor forcibly snatched a [[mobile phone]] or if they used a knife to make an implied threat of violence to the holder and then took the phone. The person being threatened does not need to be the owner of the property. It is not necessary that the victim was actually frightened, but the defendant must have put or sought to put the victim or some other person in fear of immediate force.<ref>''R v Khan'' LTL (9 April 2001) and Archbold 2006 21-101.</ref>\n\nThe force or threat may be directed against a third party, for example a customer in a jeweller's shop.<ref>''Smith v Desmond'' [1965] HL</ref> Theft accompanied by a threat to damage property will not constitute robbery, but it may disclose an offence of [[blackmail]].\n\nDishonestly dealing with property stolen during a robbery will constitute an offence of [[Handling Stolen Goods|handling]].\n\n==== Mode of trial ====\nRobbery is an [[indictable-only offence]].<ref name=\"ReferenceA\">This is the effect of section 8(2) of the [[Theft Act 1968]] and paragraph 28(a) of Schedule 1 to the [[Magistrates' Courts Act 1980]].</ref>\n\n==== Sentence ====\n[[File:Courtois.jpg|right|thumb|[[Banditry|Marauders]] attacking a group of travellers, by [[Jacques Courtois]]]]\nUnder current sentencing guidelines, the punishment for robbery is affected by a variety of aggravating and mitigating factors. Particularly important is how much harm was caused to the victim and how much [[culpability]] the offender had (e.g. carrying a weapon or leading a group effort implies high culpability). Robbery is divided into three categories which are, in increasing order of seriousness: street or less sophisticated commercial; dwelling; and professionally planned commercial.<ref name=\"sce&w\">{{cite web|url=https://www.sentencingcouncil.org.uk/wp-content/uploads/Robbery-offences-definitive-guideline-web.pdf |format=PDF |title=Sentencing Council |publisher=Sentencing Council - Robbery: Defintive guidelines |accessdate=2018-05-18}}</ref>\n\nRobbery generally results in a custodial sentence. Only a low-harm, low-culpability robbery with other mitigating factors would result in an alternative punishment, in the form of a high level [[Community service#Court ordered service|community order]].<ref name=\"sce&w\"/> The maximum legal punishment is [[Life imprisonment in England and Wales|imprisonment for life]].<ref>The [[Theft Act 1968]], section 8(2)</ref> It is also subject to the mandatory sentencing regime under the [[Criminal Justice Act 2003#Dangerous offenders|Criminal Justice Act 2003]]. Current sentencing guidelines advise that the sentence should be no longer than 20 years, for a high-harm, high-culpability robbery with other aggravating factors.\n\nThe \"starting point\" sentences are:\n*Low-harm, low-culpability street robbery: 1 year\n*Medium-harm, medium-culpability street robbery: 4 years\n*Medium-harm, medium-culpability professionally planned robbery: 5 years\n*High-harm, high-culpability street robbery: 8 years\n*High-harm, high-culpability professionally planned robbery: 16 years<ref name=\"sce&w\"/>\nAn offender may also serve a longer sentence if they are convicted of other offences alongside the robbery, such as [[assault]] and [[grievous bodily harm]].\n\n==== History ====\n[[File:Robbery Under Arms The Eveleigh Payroll Heist, 1914 (6151815914) (6).jpg|thumb|\"The Eveleigh Payroll Heist\" in 1914 was committed in the middle of the day in a busy area, and has been reported to be the first robbery in [[Australia]] where a [[getaway car]] was used.]]\n\n===== Common law =====\nRobbery was an offence under the [[common law]] of England. Matthew Hale provided the following definition:\n\n{{Blockquote|Robbery is the [[felonious]] and violent taking of any money or goods from the person of another, putting him in fear, be the value thereof above or under one shilling.<ref>1 Hale 532</ref>}}\n\nSee the statutes 23 Hen 8 c 1 and 5 & 6 Edw 6 c 9 as to [[benefit of clergy]]. And also 25 Hen 8 c 3 and 1 Edw 6 c 12. And also 29 Eliz c 15 and 3 & 4 W & M c 9.\n\nThe [[common law offence]] of robbery was abolished for all purposes not relating to offences committed before 1 January 1969<ref>The [[Theft Act 1968]], section 35(1)</ref> by section 32(1)(a) of the [[Theft Act 1968]].\n\n===== Statute =====\nSee sections 40 to 43 of the [[Larceny Act 1861]].\n\nSection 23 of the [[Larceny Act 1916]] read:\n\n{{Blockquote|23.-(1) Every person who -\n:(a) being armed with any offensive weapon or instrument, or being together with one other person or more, robs, or assaults with intent to rob, any person;\n:(b) robs any person and, at the time of or immediately before or immediately after such robbery, uses any personal violence to any person;\n\nshall be guilty of felony and on conviction thereof liable to penal servitude for life, and, in addition, if a male, to be once privately whipped.\n\n(2) Every person who robs any person shall be guilty of felony and on conviction thereof liable to penal servitude for any term not exceeding fourteen years.\n\n(3) Every person who assaults any person with intent to rob shall be guilty of felony and on conviction thereof liable to penal servitude for any term not exceeding five years.}}\n\nThis section provided maximum penalties for a number of offences of robbery and aggravated robbery.<ref name=\"Griew, Edward 1978. page 79\" />\n\nThe following cases relate to the use of force:\n* ''R v Lapier'' (1784) 1 Leach 320\n* ''R v Moore'' (1784) 1 Leach 335\n* ''R v Davies'' (1803) 2 East PC 709\n* ''R v Mason'' (1820) R & R 419\n* ''R v Gnosil'' (1824) 1 C & P 304\n* ''R v Walls and Hughes'' (1845) 2 C & K 214\n\n==== Assault with intent to rob ====\nIf a robbery is foiled before it can be completed, an alternative offence (with the same penalty, given by section 8(2) of the 1968 Act) is assault; any act which [[intention]]ally or [[Recklessness (law)|recklessly]] causes another to fear the immediate and unlawful use of force, with an intent to rob, will suffice.\n\nThe following cases are relevant:\n* ''R v Trusty and Howard'' (1783) 1 East PC 418\n* ''R v Sharwin'' (1785) 1 East PC 421\n\n=====Mode of trial and sentence=====\n\nAssault with intent to rob is an [[indictable-only offence]].<ref name=\"ReferenceA\" /> It is punishable with [[Life imprisonment in England and Wales|imprisonment for life]] or for any shorter term.<ref>The Theft Act 1968, section 8(2)</ref>\n\nAssault with intent to rob is also subject to the mandatory sentencing regime under the [[Criminal Justice Act 2003#Dangerous offenders|Criminal Justice Act 2003]].\n\n=== Northern Ireland ===\nRobbery is a statutory offence in [[Northern Ireland]]. It is created by [http://www.legislation.gov.uk/apni/1969/16/section/8 section 8] of the [[Theft Act (Northern Ireland) 1969]].\n\n== United States ==\nIn the United States, robbery is generally treated as an aggravated form of common law larceny. Specific elements and definitions differ from state to state. The common elements of robbery are:\n# a trespassory\n# taking and\n# carrying away\n# of the personal property\n# of another\n# with the intent to steal\n# from the person or presence of the victim\n# by force or threat of force.<ref>Lafave, Criminal Law 3rd ed. (West 2000) Sec. 8.11</ref>\n\nThe first six elements are the same as common law larceny. It is the last two elements that aggravate the crime to common law robbery.\n\n'''from the person or presence of the victim''' \u2013 robbery requires that the property be taken directly from the person of the victim or from their presence. This is different from larceny which simply requires that property be taken from the victim's possession, actual or constructive. Property is \"on the victim's person\" if the victim is actually holding the property, or the property is contained within clothing the victim is wearing or is attached to a victim's body such as a watch or earrings.<ref name=\"Lafave 2000\">Lafave, Criminal Law 3rd ed. (West 2000) Sec 8.11</ref> Property is in a person's presence when it is within the area of their immediate control. The property has to be close enough to the victim's person that the victim could have prevented its taking if he/she had not been placed in fear or intimidation.<ref name=\"Lafave 2000\" />\n\n'''by force or threat of force''' \u2013 the use of force or threat of force is the defining element of robbery. For there to be robbery there must be \"force or fear\" in perpetrating the theft.<ref>Lafave, Criminal Law 3rd ed. (West 2000) Sec 8.11;Boyce & Perkins, Criminal Law, 3rd ed. (1992)</ref> Questions concerning the degree of force necessary for robbery have been the subject of much litigation. Merely snatching the property from the victim's person is not sufficient force unless the victim resists or one of the items is attached or carried in such a way that a significant amount of force must be used to free the item from the victim's person.{{citation-needed|date=July 2018}}\n\nFor robbery the victim must be placed in \"fear\" of immediate harm by threat or intimidation. The threat need not be directed at the victim personally. Threats to third parties are sufficient. The threat must be one of present rather than future personal harm. Fear does not mean \"fright\",<ref name=\"Lafave 2000\" /> it means apprehension \u2013 an awareness of the danger of immediate bodily harm.\n\n=== California ===\nThe maximum sentence for robbery in California is 9 years, according to Penal Code section 213(a)(1)(A).<ref>{{cite web |url=http://www.leginfo.ca.gov/cgi-bin/displaycode?section=pen&group=00001-01000&file=211-215 |title=CALIFORNIA PENAL CODE  SECTION 211-215 |accessdate=2012-09-21 |archive-url=https://web.archive.org/web/20121023223508/http://www.leginfo.ca.gov/cgi-bin/displaycode?section=pen&group=00001-01000&file=211-215 |archive-date=2012-10-23 |url-status=dead }}</ref>\n\nThe threat or use of force does not have to take place immediately before or at the time of the theft.<ref>People v. Gomez (2008) 43 Cal.4th 249, 254.</ref> Force used after the theft will turn the theft into a robbery unless the theft is complete. The theft is considered completed when the perpetrator reaches a place of temporary safety with the property.<ref>People v. Flynn (2000) 77 Cal.App.4th 766, 772, 91 Cal.Rptr.2d 902.</ref>\n\n== Robbery statistics ==\n\n=== Robberies by country ===\n\nThe [[United Nations Office on Drugs and Crime]] notes \"that when using the figures, any cross-national comparisons should be conducted with caution because of the differences that exist between the legal definitions of offences in countries, or the different methods of offence counting and recording\". Also not every single crime is reported, meaning two things; (1) robbery rates are going to appear lower than they actually are and; (2) the percentage of crime that is not reported is going to be higher in some countries then others, for example \u2013 in one country 86% of the robberies were reported, whereas in another country only 67% of the robberies were reported. The last thing to note is that crime will vary by certain neighborhoods or areas in each country, so, just because a nationwide rate is a specified rate, does not mean that everywhere in that country retains the same amount of danger or safety.\n\n{| class=\"wikitable sortable collapsible collapsed\" border=\"1\"\n! colspan=\"13\" | Robberies by Country<ref>[http://www.unodc.org/unodc/en/data-and-analysis/statistics/crime.html Crime and criminal justice statistics], used table: [http://www.unodc.org/documents/data-and-analysis/statistics/crime/CTS2013_Robbery.xls robbery]. Retrieved May-24-2014</ref>\n|-\n! scope=\"col\" |'''Country'''\n! scope=\"col\" |'''Robberies'''\n! scope=\"col\" |'''Rate (per 100,000 inhabitants) '''\n! scope=\"col\" |'''Year'''\n|-\n| Belgium||191,126||1,728.1||2012\n|-\n| Spain||502,546||1,074.9||2012\n|-\n| Mexico||746,894||618.0||2012\n|-\n| Costa Rica||25,066||521.6||2012\n|-\n| Brazil||979,571||493.1||2012\n|-\n| Nicaragua||28,429||488.3||2010\n|-\n| Chile||81,664||467.6||2012\n|-\n| Uruguay||15,414||454.0||2012\n|-\n| Ecuador||52,655||375.5||2006\n|-\n| Trinidad and Tobago||4,436||331.7||2012\n|-\n| Swaziland||3,392||309.8||2004\n|-\n| Panama*||10,038||264.0||2012\n|-\n| Honduras||17,980||226.6||2012\n|-\n| Paraguay||15,006||224.4||2012\n|-\n| Barbados||555||196.0||2012\n|-\n| France*||123,814||193.7||2012\n|-\n| Maldives||597||190.2||2008\n|-\n| Guyana||1,401||176.1||2012\n|-\n| Portugal||18,514||174.6||2012\n|-\n| Colombia||82,620||173.2||2012\n|-\n| Peru||48,785||168.6||2009\n|-\n| Saint Kitts and Nevis||87||162.4||2010\n|-\n| Saint Vincent and the Grenadines||170||155.5||2011\n|-\n| Belize||447||141.3||2011\n|-\n| Bolivia||14,411||137.3||2012\n|-\n| Kazakhstan||20,259||124.5||2012\n|-\n| Botswana||2,461||123.9||2011\n|-\n| Bermuda||77||122.2||2004\n|-\n| United Kingdom (England and Wales)||65,156||116.2||2012\n|-\n| United States||354,520||111.7||2012\n|-\n| Italy||62,641||102.9||2012\n|-\n| Bahamas||369||100.7||2011\n|-\n| Jamaica||2,771||100.1||2012\n|-\n| Sweden||9,213||96.9||2012\n|-\n| Russian Federation||127,772||89.1||2011\n|-\n| Netherlands*||14,750||88.2||2012\n|-\n| El Salvador||5,521||87.7||2012\n|-\n| Grenada||89||84.4||2012\n|-\n| Morocco||25,935||82.9||2009\n|-\n| Malaysia||21,419||81.4||2006\n|-\n| Canada||27,680||79.5||2012\n|-\n| Luxembourg||398||77.1||2011\n|-\n| Israel||6,076||76.0||2012\n|-\n| Zimbabwe||8,796||68.8||2008\n|-\n| Guatemala||9,539||68.2||2009\n|-\n| Mauritius||814||65.9||2011\n|-\n| Lesotho||1,270||63.8||2009\n|-\n| Lithuania||1,923||63.5||2012\n|-\n| Ireland||2,818||61.6||2012\n|-\n| Malta*||257||60.1||2012\n|-\n| Belarus||5,722||60.1||2009\n|-\n| Germany||48,711||58.8||2012\n|-\n| United Kingdom (Northern Ireland)||1,040||57.4||2012\n|-\n| Greece||5,992||53.9||2012\n|-\n| Denmark||2,987||53.4||2012\n|-\n| Ukraine||23,300||50.6||2010\n|-\n| Austria||4,092||48.3||2012\n|-\n| New Zealand||2,086||46.8||2012\n|-\n| Latvia||943||45.8||2012\n|-\n| Kyrgyzstan||2,434||45.0||2011\n|-\n| Burundi||4,266||44.7||2011\n|-\n| Poland||16,685||43.7||2012\n|-\n| Bulgaria||2,955||40.6||2012\n|-\n| Sri Lanka||7,943||40.2||2004\n|-\n| Serbia||3,791||39.7||2012\n|-\n| Croatia||1,588||36.9||2012\n|-\n|Switzerland||2,746||36.4||2011\n|-\n| Estonia||457||35.4||2012\n|-\n| United Kingdom (Scotland)||1,832||34.6||2012\n|-\n| Czech Republic||3,416||32.0||2012\n|-\n| Hungary||3,036||30.4||2012\n|-\n| Finland||1,616||29.9||2012\n|-\n| Norway*||1,484||29.7||2012\n|-\n| Philippines*||26,988||27.9||2012\n|-\n| Algeria*||10,709||27.8||2012\n|-\n| Bahrain||306||27.4||2008\n|-\n| Bosnia and Herzegovina||1,010||26.3||2012\n|-\n| Kuwait||657||23.1||2009\n|-\n| Mozambique||5,267||22.5||2009\n|-\n| North Macedonia||469||22.3||2012\n|-\n| Dominican Republic||2,091||20.3||2012\n|-\n| Mongolia||536||19.5||2011\n|-\n| Senegal||2,503||19.3||2010\n|-\n| Slovenia||391||18.9||2012\n|-\n| Slovakia||974||17.9||2012\n|-\n| Uganda||5,985||17.6||2010\n|-\n| Australia||3,839||16.9||2011\n|-\n| Iceland||50||15.3||2012\n|-\n| Cyprus||173||15.3||2012\n|-\n| Jordan||802||14.8||2006\n|-\n| Romania||3,193||14.7||2012\n|-\n| Georgia||638||14.5||2010\n|-\n| Liechtenstein||5||13.6||2012\n|-\n| Turkey||7,695||10.9||2008\n|-\n| Armenia||310||10.4||2012\n|-\n| Solomon Islands||52||10.3||2008\n|-\n| Albania||326||10.3||2012\n|-\n| Oman||255||9.8||2008\n|-\n| Hong Kong||616||8.6||2012\n|-\n| Andorra||6||7.7||2012\n|-\n| Kenya||3,262||7.6||2012\n|-\n| Singapore||290||5.5||2012\n|-\n| South Korea||2,586||5.3||2012\n|-\n| Indonesia||12,355||5.0||2012\n|-\n| Moldova||167||4.8||2012\n|-\n| Syria||870||4.3||2008\n|-\n| Tajikistan||288||3.7||2011\n|-\n| Lebanon||146||3.6||2006\n|-\n| Egypt||2,673||3.4||2011\n|-\n| Sierra Leone||184||3.3||2008\n|-\n| C\u00f4te d'Ivoire||591||3.2||2008\n|-\n| Turkmenistan||141||2.9||2006\n|-\n| Qatar||21||2.9||2004\n|-\n| Japan||3,658||2.9||2012\n|-\n| Azerbaijan||252||2.7||2012\n|-\n| Yemen||442||2.0||2009\n|-\n| India||23,393||1.9||2010\n|-\n| Nigeria||2,988||1.8||2012\n|-\n| Guinea||151||1.5||2007\n|-\n| Montenegro||7||1.1||2012\n|-\n| Thailand||500||0.8||2010\n|-\n| Bangladesh||856||0.6||2006\n|-\n| Nepal||148||0.6||2006\n|-\n| S\u00e3o Tom\u00e9 and Pr\u00edncipe||1||0.5||2011\n|-\n| Brunei Darussalam||2||0.5||2006\n|-\n| United Arab Emirates||45||0.5||2012\n|-\n| Rwanda||27||0.2||2012\n|}\n\n=== Homicides during a robbery, by country ===\n\n{| class=\"wikitable sortable collapsible collapsed\" border=\"1\"\n! colspan=\"13\" | Robbery Murders by Country<ref>[http://www.unodc.org/gsh/en/data.html UNODC Homicide Statistics 2013], used two tables: [http://www.unodc.org/documents/gsh/data/GSH2013_Homicide_count_and_rate.xlsx Homicide counts and rates, time series 2000\u20132012] & [http://www.unodc.org/documents/gsh/data/GSH2013_robbery.xlsx Homicide victims killed during robbery as percentage of total homicide victims, time series 2005\u20132012]. Retrieved May-24-2014</ref>\n|-\n! scope=\"col\" |'''Country'''\n! scope=\"col\" |'''% Of Homicides w/ Robbery Motive'''\n! scope=\"col\" |'''Robbery Homicide Rate (per 100,000 inhabitants)'''\n! scope=\"col\" |'''Robbery Homicides'''\n! scope=\"col\" |'''Year of Data'''\n|-\n| Bahamas||11.0%||3.82||14||2011\n|-\n| Dominican Republic||27.6%||6.10||626||2012\n|-\n| Grenada||7.1%||0.94||1||2012\n|-\n| Jamaica||36.5%||15.00||414||2011\n|-\n| Trinidad and Tobago||14.8%||3.91||52||2011\n|-\n| Costa Rica||16.2%||1.38||66||2012\n|-\n| El Salvador||0.9%||0.37||23||2012\n|-\n| Panama||8.9%||1.53||58||2012\n|-\n| Canada||7.9%||0.12||42||2011\n|-\n| United States||5.0%||0.24||733||2011\n|-\n| Colombia||3.6%||1.21||569||2011\n|-\n| Guyana||16.9%||2.77||22||2011\n|-\n| Uruguay||15.6%||0.92||31||2011\n|-\n| Japan||8.4%||0.03||37||2011\n|-\n| Mongolia||0.0%||0.00||0||2011\n|-\n| South Korea||8.0%||0.07||34||2011\n|-\n| Singapore||6.3%||0.02||1||2011\n|-\n| Armenia||5.6%||0.10||3||2012\n|-\n| Azerbaijan||2.1%||0.04||4||2010\n|-\n| Cyprus||22.2%||0.18||2||2011\n|-\n| Georgia||0.5%||0.02||1||2010\n|-\n| Bulgaria||5.0%||0.10||7||2012\n|-\n| Czech Republic||4.7%||0.04||4||2011\n|-\n| Finland||1.8%||0.04||2||2011\n|-\n| Iceland||0.0%||0.00||0||2012\n|-\n| Albania||2.1%||0.09||3||2011\n|-\n| Bosnia and Herzegovina||0.0%||0.00||0||2011\n|-\n| Croatia||0.0%||0.00||0||2012\n|-\n| Italy||5.1%||0.05||28||2011\n|-\n| Montenegro||4.8%||0.16||1||2011\n|-\n| Spain||3.0%||0.02||11||2012\n|-\n| Macedonia||3.3%||0.05||1||2011\n|-\n| Austria||4.2%||0.03||3||2011\n|-\n| Germany||9.4%||0.08||62||2011\n|-\n| Luxembourg||25.0%||0.20||1||2011\n|-\n| Switzerland||2.2%||0.01||1||2011\n|-\n| Australia||3.0%||0.04||8||2009\n|-\n|}\n\n== In popular culture ==\n{{In popular culture|section|date=January 2019}}\nRobberies have been depicted, sometimes graphically, in various forms of media, and several robbers have become [[pop icon]]s, such as [[Bonnie and Clyde]] and [[John Dillinger]]. Examples of media works focused on robberies include:\n\n=== In film ===\n* ''[[The Killing (film)|The Killing]]'' (1956), by [[Stanley Kubrick]], depicts a graphic robbery.\n* ''[[Wake Up and Die]]'' (1966) is an Italian crime drama film directed by [[Carlo Lizzani]], based on the real life of [[Luciano Lutring]] (\"''il solista del mitra''\", translation: \"the submachine soloist\"), who kept his weapon in a violin case.<ref name=bio>{{cite news|last=Piero Colaprico|title=Milano, \u00e8 morto Luciano Lutring: lo chiamavano 'il solista del mitra'|url=http://milano.repubblica.it/cronaca/2013/05/13/news/milano_morto_luciano_lutring_lo_chiamavano_il_solista_del_mitra_-58674865/?ref=HREC1-5|accessdate=13 May 2013|newspaper=[[La Repubblica]]|date=13 May 2013}}</ref>\n* ''[[Take the Money and Run]]'' (1969), by [[Woody Allen]], depicts an unconventional view of a robbery by an incompetent robber.\n* ''Le Gitan'' (1975), directed by [[Jos\u00e9 Giovanni]], is loosely based on Luciano Lutring's autobiography. Lutring is played by [[Alain Delon]].<ref name=\"bio\" />\n* ''[[Dog Day Afternoon]]'' (1975) depicts a bank robbery which escalates to a hostage situation. \n* ''[[Reservoir Dogs]]'' (1992), by [[Quentin Tarantino]], shows the aftermath of a robbery, with an abundance of lurid details.\n\n=== In literature ===\n* [[Luciano Lutring]] (30 December 1937 \u2013 13 May 2013), known as \"the submachine gun soloist\" because he kept the weapon in a violin case, used that moniker as the title of his memoir ''[[Il solista del mitra]]''. He  was an Italian criminal, author, and painter who, when committing robberies, worked alone (which is rather rare for a robber).<ref>{{Cite web|url=http://milano.corriere.it/milano/notizie/cronaca/13_maggio_13/morto-luciano-lutring-solista-mitra-poeta-pittore-2121108754360.shtml|title=Morto Luciano Lutring, l'ex bandito divenuto scrittore e artista|last=|first=|date=|website=|publisher=|language=it-IT|access-date=2016-09-19}}</ref>\n* [[Lionel White]]'s Bloodhound mysteries novel, No.116, ''Clean Break'' (1955)<ref>{{cite book|author=White, Lionel|title=Clean Break| date=1955| publisher=Dutton| edition=First| asin=B0000CJAQV| pages=189}}</ref> was the basis for Stanley Kubrik's film ''The Killing'' (1956).<ref>{{cite news|work=The New York Times|title=Movie Review: ''The Killing'' (1956); SCREEN: 'The Killing'; New Film at the Mayfair Concerns a Robbery | author=Weiler, A.H. |date= May 21, 1956| url=https://www.nytimes.com/movie/review?res=9E03E3D9123BE333A05752C2A9639C946792D6CF}}</ref>\n\n=== In video games ===\nVideo games ''[[Payday: The Heist]]'' and ''[[Payday 2]]'' are both games by [[Overkill Software]] where one of the main objectives is to steal items of monetary value at places such as banks, art galleries, armored trucks, and more. <ref>{{cite web|url=http://overkillsoftware.com|title=OVERKILL Software|publisher=}}</ref>\n\n== See also ==\n{{columns-list|colwidth=22em|\n* [[Aircraft hijacking]]\n* [[Art theft]]\n* [[Balaclava (clothing)]]\n* [[Bank robbery]]\n* [[Brigandage]]\n* [[Bushranger]]\n* [[Convenience store crime]]\n* [[Dacoit]]\n* [[Flash mob robbery]]\n* [[Gangs in the United States]]\n* [[Hajduk]]\n* [[Highwayman]]\n* [[Home invasion]]\n* [[Klepht]]\n* [[Looting]]\n* [[Mafia]]\n* [[Marauder (disambiguation)]]\n* [[Metal theft]]\n* [[Millionaire tour]]\n* [[Organized retail crime]]\n* [[Outlaw]]\n* [[Piracy]]\n* [[Shanlin]]\n* [[Snapphane]]\n* [[Snatch theft]]\n* [[Train robbery]]\n* [[Truck hijacking]]\n}}\n\n== References ==\n* Matthew Hale. [[Historia Placitorum Coronae]]. 1736. 1800 Edition. Volume 1. Chapter XLVI. Pages [https://books.google.com/books?id=2KoDAAAAQAAJ&pg=PA530#v=onepage&q&f=false 532] to 538.\n{{reflist|30em}}\n\n== Further reading ==\n{{Commons category|Robbery}}\n* Allen, Michael. (2005). ''Textbook on Criminal Law''. Oxford: Oxford University Press. {{ISBN|0-19-927918-7}}.\n* Criminal Law Revision Committee. 8th Report. Theft and Related Offences. Cmnd. 2977\n* Griew, Edward. ''Theft Acts 1968 & 1978''. London: Sweet & Maxwell. London: LexisNexis. {{ISBN|0-406-89545-7}}\n\n== External links ==\n{{Wiktionary|robbery|robber|hold-up}}\n{{English criminal law navbox}}\n\n{{Authority control}}\n\n[[Category:Robbery| ]]\n[[Category:Crimes]]\n[[Category:Illegal occupations]]\n", "text_old": "{{short description|Taking or attempting to take something of value by force or threat of force or by putting the victim in fear}}\n{{other uses}}\n{{redirect-multi|3|Robber|Holdup|Stick up}}\n[[File:Bundesarchiv Bild 102-12763, Bank\u00fcberfall.jpg|thumb|A masked robber threatens a person with a gun]]\n{{criminal law}}\n'''Robbery''' is the [[crime]] of taking or attempting to take anything of value by force, threat of force, or by putting the victim in fear. According to [[common law]], robbery is defined as taking the property of another, with the intent to permanently deprive the person of that property, by means of force or fear; that is, it is a [[larceny]] or [[theft]] accomplished by an [[assault]].<ref>{{cite web |url=http://docket.medill.northwestern.edu/archives/000439.php |title=Carter, Floyd J. vs U.S. |date=June 12, 2000 |accessdate=2008-05-04 |url-status=dead |archiveurl=https://web.archive.org/web/20060903163713/http://docket.medill.northwestern.edu/archives/000439.php |archivedate=September 3, 2006 }}</ref> Precise definitions of the offence may vary between jurisdictions. Robbery is differentiated from other forms of [[theft]] (such as [[burglary]], [[shoplifting]], [[pickpocketing]], or [[car theft]]) by its inherently violent nature (a [[violent crime]]); whereas many lesser forms of theft are punished as [[misdemeanors]], robbery is always a [[felony]] in jurisdictions that distinguish between the two. Under English law, most forms of theft are [[triable either way]], whereas robbery is [[triable only on indictment]]. The word \"rob\" came via [[French language|French]] from [[Late Latin]] words (e.g., ''deraubare'') of [[Germanic languages|Germanic]] origin, from [[Common Germanic]] ''raub'' \"theft\".\n\nAmong the types of robbery are '''armed robbery''', which involves the use of a [[weapon]], and '''aggravated robbery''', when someone brings with them a deadly weapon or something that appears to be a deadly weapon. '''Highway robbery''' or '''mugging''' takes place outside or in a [[public place]] such as a sidewalk, street, or parking lot. [[Carjacking]] is the act of stealing a car from a victim by force. [[Extortion]] is the threat to do something illegal, or the offer to not do something illegal, in the event that goods are not given, primarily using words instead of actions.\n\nCriminal slang for robbery includes \"blagging\" (armed robbery, usually of a bank) or \"stick-up\" (derived from the verbal command to robbery targets to raise their hands in the air), and \"[[steaming (crime)|steaming]]\" (organized robbery on underground train systems).\n\n== Canada ==\n\nIn Canada, the [[Criminal Code (Canada)|Criminal Code]] makes robbery an [[indictable offence]], subject to a maximum penalty of [[Life imprisonment in Canada|life imprisonment]].  If the accused uses a restricted or prohibited firearm to  commit robbery, there is a mandatory minimum sentence of five years for the first offence, and seven years for subsequent offences.<ref>[[Criminal Code (Canada)|''Criminal Code'']], [http://laws-lois.justice.gc.ca/eng/acts/C-46/page-177.html#docCont RSC 1985, c C-46, ss 343, 344.]</ref>\n\n== Republic of Ireland ==\nRobbery is a statutory offence in the [[Republic of Ireland]]. It is created by section 14(1) of the [[Criminal Justice (Theft and Fraud Offences) Act, 2001]], which provides:\n\n{{Blockquote|A person is guilty of robbery if he or she steals, and immediately before or at the time of doing so, and in order to do so, uses force on any person or puts or seeks to put any person in fear of being then and there subjected to force.<ref>[http://www.irishstatutebook.ie/2001/en/act/pub/0050/sec0014.html#sec14 Digitised copy] of section 14 of the Criminal Justice (Theft and Fraud Offences) Act, 2001. From the Office of the Attorney General.</ref>}}\n\n== United Kingdom ==\n\n=== England and Wales ===\nRobbery is a statutory offence in [[England and Wales]].<ref>The extent of section 8 of the [[Theft Act 1968]] is provided by [http://www.legislation.gov.uk/ukpga/1968/60/section/36 section 36(3)] of that Act.</ref> It is created by section 8(1) of the [[Theft Act 1968]] which reads:\n{{quote|A person is guilty of robbery if he steals, and immediately before or at the time of doing so, and in order to do so, he uses force on any person or puts or seeks to put any person in fear of being then and there subjected to force.<ref>[http://www.legislation.gov.uk/ukpga/1968/60/section/8 Digitised copy] of section 8 of the Theft Act 1968, from Legislation.gov.uk.</ref>}}\n\n====Aggravated theft====\n\nRobbery is the only offence of aggravated theft.<ref name=\"Griew, Edward 1978. page 79\">Griew, Edward. The Theft Acts 1968 and 1978. Sweet and Maxwell. Fifth Edition. 1986. Paragraph 3-01 at page 79.</ref>\n\n====Aggravated robbery====\n\nThere are no offences of aggravated robbery.<ref name=\"Griew, Edward 1978. page 79\" />\n\n==== \"Steals\" ====\nThis requires evidence to show a [[theft]] as set out in section 1(1) of the Theft Act 1968. In ''R v Robinson''<ref>R v Robinson [1977] Crim LR 173, CA</ref> the defendant threatened the victim with a knife in order to recover money which he was actually owed. His conviction for robbery was quashed on the basis that Robinson had an honest, although unreasonable, belief (under Section 2(1)(a) of the Act) in his legal right to the money. See also ''R v Skivington'' [1968] 1 QB 166, [1967] 2 WLR 655, 131 JP 265, 111 SJ 72, [1967] 1 All ER 483, 51 [[Criminal Appeal Reports|Cr App R]] 167, CA.\n\nIn ''R v Hale'' (1978)<ref>''R v Hale'' (1978) 68 Cr App R 415, [1979] Crim LR 596, [[Court of Appeal of England and Wales|CA]]</ref> the application of force and the stealing took place in different locations, and it was not possible to establish the timing; it was held that the appropriation necessary to prove theft was a continuing act, and the jury could correctly convict of robbery. This approach was followed in ''R v Lockley'' (1995)<ref>Crim LR 656</ref> when the force was applied to a shopkeeper after property had been taken. It was argued that the theft should be regarded as complete by this time, and ''R v Gomez'' (1993),<ref>[1993] AC 442, House of Lords</ref> should apply; the court disagreed, preferring to follow ''R v Hale''.\n\n==== Actual or threatened force against a person ====\nThe threat or use of force must take place immediately before or at the time of the [[theft]]. Force used after the theft is complete will not turn the theft into a robbery.\n\nThe words \"or immediately after\" that appeared in section 23(1)(b) of the [[Larceny Act 1916]] were deliberately omitted from section 8(1).<ref>The [[Criminal Law Revision Committee]]. Eighth Report. Theft and Related Offences. 1966. Cmnd 2977. Paragraph 65.</ref>\n\nThe book ''[[Archbold Criminal Pleading, Evidence and Practice|Archbold]]'' said that the facts in ''R v Harman'',<ref>''R v Harman'' (1620) 1 [[Historia Placitorum Coron\u00e6|Hale]] [https://books.google.com/books?id=2KoDAAAAQAAJ&pg=PA534 534], (1620) 2 Rolle 154, (1620) 81 [[English Reports|ER]] [http://www.commonlii.org/uk/cases/EngR/1676/218.pdf 721]</ref> which did not amount to robbery in 1620, would not amount to robbery now.<ref>''[[Archbold Criminal Pleading, Evidence and Practice]]'', 1999, para. 21-99 at p. 1772</ref>\n\nIt was held in ''R v Dawson and James'' (1978)<ref>''R v Dawson and James'' (1978) 68 Cr App R 170, CA</ref> that \"force\" is an ordinary English word and its meaning should be left to the jury. This approach was confirmed in  ''R v Clouden'' (1985)<ref>''R v Clouden'', unreported (C.A. No. 3897, 4 February 1985). For details see Griew, Edward. ''The Theft Acts 1968 and 1978''. Fifth Edition. Sweet and Maxwell. 1986. Paragraphs 3-04 and 3-05 at page 80.</ref> and ''Corcoran v Anderton'' (1980),<ref>''Corcoran v Anderton'' (1980) 71 Cr App R 104, [1980] Crim LR 385, [[Divisional Court (England and Wales)|DC]]</ref> both handbag-snatching cases. Stealing may involve a young child who is not aware that taking other persons' property is not in order.\n\n==== Threat ====\nThe victim must be placed in apprehension or fear that force would be used immediately before or at the time of the taking of the property. A threat is not immediate if the wrongdoer threatens to use force of violence some future time.\n\nRobbery occurs if an aggressor forcibly snatched a [[mobile phone]] or if they used a knife to make an implied threat of violence to the holder and then took the phone. The person being threatened does not need to be the owner of the property. It is not necessary that the victim was actually frightened, but the defendant must have put or sought to put the victim or some other person in fear of immediate force.<ref>''R v Khan'' LTL (9 April 2001) and Archbold 2006 21-101.</ref>\n\nThe force or threat may be directed against a third party, for example a customer in a jeweller's shop.<ref>''Smith v Desmond'' [1965] HL</ref> Theft accompanied by a threat to damage property will not constitute robbery, but it may disclose an offence of [[blackmail]].\n\nDishonestly dealing with property stolen during a robbery will constitute an offence of [[Handling Stolen Goods|handling]].\n\n==== Mode of trial ====\nRobbery is an [[indictable-only offence]].<ref name=\"ReferenceA\">This is the effect of section 8(2) of the [[Theft Act 1968]] and paragraph 28(a) of Schedule 1 to the [[Magistrates' Courts Act 1980]].</ref>\n\n==== Sentence ====\n[[File:Courtois.jpg|right|thumb|[[Banditry|Marauders]] attacking a group of travellers, by [[Jacques Courtois]]]]\nUnder current sentencing guidelines, the punishment for robbery is affected by a variety of aggravating and mitigating factors. Particularly important is how much harm was caused to the victim and how much [[culpability]] the offender had (e.g. carrying a weapon or leading a group effort implies high culpability). Robbery is divided into three categories which are, in increasing order of seriousness: street or less sophisticated commercial; dwelling; and professionally planned commercial.<ref name=\"sce&w\">{{cite web|url=https://www.sentencingcouncil.org.uk/wp-content/uploads/Robbery-offences-definitive-guideline-web.pdf |format=PDF |title=Sentencing Council |publisher=Sentencing Council - Robbery: Defintive guidelines |accessdate=2018-05-18}}</ref>\n\nRobbery generally results in a custodial sentence. Only a low-harm, low-culpability robbery with other mitigating factors would result in an alternative punishment, in the form of a high level [[Community service#Court ordered service|community order]].<ref name=\"sce&w\"/> The maximum legal punishment is [[Life imprisonment in England and Wales|imprisonment for life]].<ref>The [[Theft Act 1968]], section 8(2)</ref> It is also subject to the mandatory sentencing regime under the [[Criminal Justice Act 2003#Dangerous offenders|Criminal Justice Act 2003]]. Current sentencing guidelines advise that the sentence should be no longer than 20 years, for a high-harm, high-culpability robbery with other aggravating factors.\n\nThe \"starting point\" sentences are:\n*Low-harm, low-culpability street robbery: 1 year\n*Medium-harm, medium-culpability street robbery: 4 years\n*Medium-harm, medium-culpability professionally planned robbery: 5 years\n*High-harm, high-culpability street robbery: 8 years\n*High-harm, high-culpability professionally planned robbery: 16 years<ref name=\"sce&w\"/>\nAn offender may also serve a longer sentence if they are convicted of other offences alongside the robbery, such as [[assault]] and [[grievous bodily harm]].\n\n==== History ====\n[[File:Robbery Under Arms The Eveleigh Payroll Heist, 1914 (6151815914) (6).jpg|thumb|\"The Eveleigh Payroll Heist\" in 1914 was committed in the middle of the day in a busy area, and has been reported to be the first robbery in [[Australia]] where a [[getaway car]] was used.]]\n\n===== Common law =====\nRobbery was an offence under the [[common law]] of England. Matthew Hale provided the following definition:\n\n{{Blockquote|Robbery is the [[felonious]] and violent taking of any money or goods from the person of another, putting him in fear, be the value thereof above or under one shilling.<ref>1 Hale 532</ref>}}\n\nSee the statutes 23 Hen 8 c 1 and 5 & 6 Edw 6 c 9 as to [[benefit of clergy]]. And also 25 Hen 8 c 3 and 1 Edw 6 c 12. And also 29 Eliz c 15 and 3 & 4 W & M c 9.\n\nThe [[common law offence]] of robbery was abolished for all purposes not relating to offences committed before 1 January 1969<ref>The [[Theft Act 1968]], section 35(1)</ref> by section 32(1)(a) of the [[Theft Act 1968]].\n\n===== Statute =====\nSee sections 40 to 43 of the [[Larceny Act 1861]].\n\nSection 23 of the [[Larceny Act 1916]] read:\n\n{{Blockquote|23.-(1) Every person who -\n:(a) being armed with any offensive weapon or instrument, or being together with one other person or more, robs, or assaults with intent to rob, any person;\n:(b) robs any person and, at the time of or immediately before or immediately after such robbery, uses any personal violence to any person;\n\nshall be guilty of felony and on conviction thereof liable to penal servitude for life, and, in addition, if a male, to be once privately whipped.\n\n(2) Every person who robs any person shall be guilty of felony and on conviction thereof liable to penal servitude for any term not exceeding fourteen years.\n\n(3) Every person who assaults any person with intent to rob shall be guilty of felony and on conviction thereof liable to penal servitude for any term not exceeding five years.}}\n\nThis section provided maximum penalties for a number of offences of robbery and aggravated robbery.<ref name=\"Griew, Edward 1978. page 79\" />\n\nThe following cases relate to the use of force:\n* ''R v Lapier'' (1784) 1 Leach 320\n* ''R v Moore'' (1784) 1 Leach 335\n* ''R v Davies'' (1803) 2 East PC 709\n* ''R v Mason'' (1820) R & R 419\n* ''R v Gnosil'' (1824) 1 C & P 304\n* ''R v Walls and Hughes'' (1845) 2 C & K 214\n\n==== Assault with intent to rob ====\nIf a robbery is foiled before it can be completed, an alternative offence (with the same penalty, given by section 8(2) of the 1968 Act) is assault; any act which [[intention]]ally or [[Recklessness (law)|recklessly]] causes another to fear the immediate and unlawful use of force, with an intent to rob, will suffice.\n\nThe following cases are relevant:\n* ''R v Trusty and Howard'' (1783) 1 East PC 418\n* ''R v Sharwin'' (1785) 1 East PC 421\n\n=====Mode of trial and sentence=====\n\nAssault with intent to rob is an [[indictable-only offence]].<ref name=\"ReferenceA\" /> It is punishable with [[Life imprisonment in England and Wales|imprisonment for life]] or for any shorter term.<ref>The Theft Act 1968, section 8(2)</ref>\n\nAssault with intent to rob is also subject to the mandatory sentencing regime under the [[Criminal Justice Act 2003#Dangerous offenders|Criminal Justice Act 2003]].\n\n=== Northern Ireland ===\nRobbery is a statutory offence in [[Northern Ireland]]. It is created by [http://www.legislation.gov.uk/apni/1969/16/section/8 section 8] of the [[Theft Act (Northern Ireland) 1969]].\n\n== United States ==\nIn the United States, robbery is generally treated as an aggravated form of common law larceny. Specific elements and definitions differ from state to state. The common elements of robbery are:\n# a trespassory\n# taking and\n# carrying away\n# of the personal property\n# of another\n# with the intent to steal\n# from the person or presence of the victim\n# by force or threat of force.<ref>Lafave, Criminal Law 3rd ed. (West 2000) Sec. 8.11</ref>\n\nThe first six elements are the same as common law larceny. It is the last two elements that aggravate the crime to common law robbery.\n\n'''from the person or presence of the victim''' \u2013 robbery requires that the property be taken directly from the person of the victim or from their presence. This is different from larceny which simply requires that property be taken from the victim's possession, actual or constructive. Property is \"on the victim's person\" if the victim is actually holding the property, or the property is contained within clothing the victim is wearing or is attached to a victim's body such as a watch or earrings.<ref name=\"Lafave 2000\">Lafave, Criminal Law 3rd ed. (West 2000) Sec 8.11</ref> Property is in a person's presence when it is within the area of their immediate control. The property has to be close enough to the victim's person that the victim could have prevented its taking if he/she had not been placed in fear or intimidation.<ref name=\"Lafave 2000\" />\n\n'''by force or threat of force''' \u2013 the use of force or threat of force is the defining element of robbery. For there to be robbery there must be \"force or fear\" in perpetrating the theft.<ref>Lafave, Criminal Law 3rd ed. (West 2000) Sec 8.11;Boyce & Perkins, Criminal Law, 3rd ed. (1992)</ref> Questions concerning the degree of force necessary for robbery have been the subject of much litigation. Merely snatching the property from the victim's person is not sufficient force unless the victim resists or one of the items is attached or carried in such a way that a significant amount of force must be used to free the item from the victim's person.{{citation-needed|date=July 2018}}\n\nFor robbery the victim must be placed in \"fear\" of immediate harm by threat or intimidation. The threat need not be directed at the victim personally. Threats to third parties are sufficient. The threat must be one of present rather than future personal harm. Fear does not mean \"fright\",<ref name=\"Lafave 2000\" /> it means apprehension \u2013 an awareness of the danger of immediate bodily harm.\n\n=== California ===\nThe maximum sentence for robbery in California is 9 years, according to Penal Code section 213(a)(1)(A).<ref>{{cite web |url=http://www.leginfo.ca.gov/cgi-bin/displaycode?section=pen&group=00001-01000&file=211-215 |title=CALIFORNIA PENAL CODE  SECTION 211-215 |accessdate=2012-09-21 |archive-url=https://web.archive.org/web/20121023223508/http://www.leginfo.ca.gov/cgi-bin/displaycode?section=pen&group=00001-01000&file=211-215 |archive-date=2012-10-23 |url-status=dead }}</ref>\n\nThe threat or use of force does not have to take place immediately before or at the time of the theft.<ref>People v. Gomez (2008) 43 Cal.4th 249, 254.</ref> Force used after the theft will turn the theft into a robbery unless the theft is complete. The theft is considered completed when the perpetrator reaches a place of temporary safety with the property.<ref>People v. Flynn (2000) 77 Cal.App.4th 766, 772, 91 Cal.Rptr.2d 902.</ref>\n\n== Robbery statistics ==\n\n=== Robberies by country ===\n\nThe [[United Nations Office on Drugs and Crime]] notes \"that when using the figures, any cross-national comparisons should be conducted with caution because of the differences that exist between the legal definitions of offences in countries, or the different methods of offence counting and recording\". Also not every single crime is reported, meaning two things; (1) robbery rates are going to appear lower than they actually are and; (2) the percentage of crime that is not reported is going to be higher in some countries then others, for example \u2013 in one country 86% of the robberies were reported, whereas in another country only 67% of the robberies were reported. The last thing to note is that crime will vary by certain neighborhoods or areas in each country, so, just because a nationwide rate is a specified rate, does not mean that everywhere in that country retains the same amount of danger or safety.\n\n{| class=\"wikitable sortable collapsible collapsed\" border=\"1\"\n! colspan=\"13\" | Robberies by Country<ref>[http://www.unodc.org/unodc/en/data-and-analysis/statistics/crime.html Crime and criminal justice statistics], used table: [http://www.unodc.org/documents/data-and-analysis/statistics/crime/CTS2013_Robbery.xls robbery]. Retrieved May-24-2014</ref>\n|-\n! scope=\"col\" |'''Country'''\n! scope=\"col\" |'''Robberies'''\n! scope=\"col\" |'''Rate (per 100,000 inhabitants) '''\n! scope=\"col\" |'''Year'''\n|-\n| Belgium||191,126||1,728.1||2012\n|-\n| Spain||502,546||1,074.9||2012\n|-\n| Mexico||746,894||618.0||2012\n|-\n| Costa Rica||25,066||521.6||2012\n|-\n| Brazil||979,571||493.1||2012\n|-\n| Nicaragua||28,429||488.3||2010\n|-\n| Chile||81,664||467.6||2012\n|-\n| Uruguay||15,414||454.0||2012\n|-\n| Ecuador||52,655||375.5||2006\n|-\n| Trinidad and Tobago||4,436||331.7||2012\n|-\n| Swaziland||3,392||309.8||2004\n|-\n| Panama*||10,038||264.0||2012\n|-\n| Honduras||17,980||226.6||2012\n|-\n| Paraguay||15,006||224.4||2012\n|-\n| Barbados||555||196.0||2012\n|-\n| France*||123,814||193.7||2012\n|-\n| Maldives||597||190.2||2008\n|-\n| Guyana||1,401||176.1||2012\n|-\n| Portugal||18,514||174.6||2012\n|-\n| Colombia||82,620||173.2||2012\n|-\n| Peru||48,785||168.6||2009\n|-\n| Saint Kitts and Nevis||87||162.4||2010\n|-\n| Saint Vincent and the Grenadines||170||155.5||2011\n|-\n| Belize||447||141.3||2011\n|-\n| Bolivia||14,411||137.3||2012\n|-\n| Kazakhstan||20,259||124.5||2012\n|-\n| Botswana||2,461||123.9||2011\n|-\n| Bermuda||77||122.2||2004\n|-\n| United Kingdom (England and Wales)||65,156||116.2||2012\n|-\n| United States||354,520||111.7||2012\n|-\n| Italy||62,641||102.9||2012\n|-\n| Bahamas||369||100.7||2011\n|-\n| Jamaica||2,771||100.1||2012\n|-\n| Sweden||9,213||96.9||2012\n|-\n| Russian Federation||127,772||89.1||2011\n|-\n| Netherlands*||14,750||88.2||2012\n|-\n| El Salvador||5,521||87.7||2012\n|-\n| Grenada||89||84.4||2012\n|-\n| Morocco||25,935||82.9||2009\n|-\n| Malaysia||21,419||81.4||2006\n|-\n| Canada||27,680||79.5||2012\n|-\n| Luxembourg||398||77.1||2011\n|-\n| Israel||6,076||76.0||2012\n|-\n| Zimbabwe||8,796||68.8||2008\n|-\n| Guatemala||9,539||68.2||2009\n|-\n| Mauritius||814||65.9||2011\n|-\n| Lesotho||1,270||63.8||2009\n|-\n| Lithuania||1,923||63.5||2012\n|-\n| Ireland||2,818||61.6||2012\n|-\n| Malta*||257||60.1||2012\n|-\n| Belarus||5,722||60.1||2009\n|-\n| Germany||48,711||58.8||2012\n|-\n| United Kingdom (Northern Ireland)||1,040||57.4||2012\n|-\n| Greece||5,992||53.9||2012\n|-\n| Denmark||2,987||53.4||2012\n|-\n| Ukraine||23,300||50.6||2010\n|-\n| Austria||4,092||48.3||2012\n|-\n| New Zealand||2,086||46.8||2012\n|-\n| Latvia||943||45.8||2012\n|-\n| Kyrgyzstan||2,434||45.0||2011\n|-\n| Burundi||4,266||44.7||2011\n|-\n| Poland||16,685||43.7||2012\n|-\n| Bulgaria||2,955||40.6||2012\n|-\n| Sri Lanka||7,943||40.2||2004\n|-\n| Serbia||3,791||39.7||2012\n|-\n| Croatia||1,588||36.9||2012\n|-\n|Switzerland||2,746||36.4||2011\n|-\n| Estonia||457||35.4||2012\n|-\n| United Kingdom (Scotland)||1,832||34.6||2012\n|-\n| Czech Republic||3,416||32.0||2012\n|-\n| Hungary||3,036||30.4||2012\n|-\n| Finland||1,616||29.9||2012\n|-\n| Norway*||1,484||29.7||2012\n|-\n| Philippines*||26,988||27.9||2012\n|-\n| Algeria*||10,709||27.8||2012\n|-\n| Bahrain||306||27.4||2008\n|-\n| Bosnia and Herzegovina||1,010||26.3||2012\n|-\n| Kuwait||657||23.1||2009\n|-\n| Mozambique||5,267||22.5||2009\n|-\n| North Macedonia||469||22.3||2012\n|-\n| Dominican Republic||2,091||20.3||2012\n|-\n| Mongolia||536||19.5||2011\n|-\n| Senegal||2,503||19.3||2010\n|-\n| Slovenia||391||18.9||2012\n|-\n| Slovakia||974||17.9||2012\n|-\n| Uganda||5,985||17.6||2010\n|-\n| Australia||3,839||16.9||2011\n|-\n| Iceland||50||15.3||2012\n|-\n| Cyprus||173||15.3||2012\n|-\n| Jordan||802||14.8||2006\n|-\n| Romania||3,193||14.7||2012\n|-\n| Georgia||638||14.5||2010\n|-\n| Liechtenstein||5||13.6||2012\n|-\n| Turkey||7,695||10.9||2008\n|-\n| Armenia||310||10.4||2012\n|-\n| Solomon Islands||52||10.3||2008\n|-\n| Albania||326||10.3||2012\n|-\n| Oman||255||9.8||2008\n|-\n| Hong Kong||616||8.6||2012\n|-\n| Andorra||6||7.7||2012\n|-\n| Kenya||3,262||7.6||2012\n|-\n| Singapore||290||5.5||2012\n|-\n| South Korea||2,586||5.3||2012\n|-\n| Indonesia||12,355||5.0||2012\n|-\n| Moldova||167||4.8||2012\n|-\n| Syria||870||4.3||2008\n|-\n| Tajikistan||288||3.7||2011\n|-\n| Lebanon||146||3.6||2006\n|-\n| Egypt||2,673||3.4||2011\n|-\n| Sierra Leone||184||3.3||2008\n|-\n| C\u00f4te d'Ivoire||591||3.2||2008\n|-\n| Turkmenistan||141||2.9||2006\n|-\n| Qatar||21||2.9||2004\n|-\n| Japan||3,658||2.9||2012\n|-\n| Azerbaijan||252||2.7||2012\n|-\n| Yemen||442||2.0||2009\n|-\n| India||23,393||1.9||2010\n|-\n| Nigeria||2,988||1.8||2012\n|-\n| Guinea||151||1.5||2007\n|-\n| Montenegro||7||1.1||2012\n|-\n| Thailand||500||0.8||2010\n|-\n| Bangladesh||856||0.6||2006\n|-\n| Nepal||148||0.6||2006\n|-\n| S\u00e3o Tom\u00e9 and Pr\u00edncipe||1||0.5||2011\n|-\n| Brunei Darussalam||2||0.5||2006\n|-\n| United Arab Emirates||45||0.5||2012\n|-\n| Rwanda||27||0.2||2012\n|}\n\n=== Homicides during a robbery, by country ===\n\n{| class=\"wikitable sortable collapsible collapsed\" border=\"1\"\n! colspan=\"13\" | Robbery Murders by Country<ref>[http://www.unodc.org/gsh/en/data.html UNODC Homicide Statistics 2013], used two tables: [http://www.unodc.org/documents/gsh/data/GSH2013_Homicide_count_and_rate.xlsx Homicide counts and rates, time series 2000\u20132012] & [http://www.unodc.org/documents/gsh/data/GSH2013_robbery.xlsx Homicide victims killed during robbery as percentage of total homicide victims, time series 2005\u20132012]. Retrieved May-24-2014</ref>\n|-\n! scope=\"col\" |'''Country'''\n! scope=\"col\" |'''% Of Homicides w/ Robbery Motive'''\n! scope=\"col\" |'''Robbery Homicide Rate (per 100,000 inhabitants)'''\n! scope=\"col\" |'''Robbery Homicides'''\n! scope=\"col\" |'''Year of Data'''\n|-\n| Bahamas||11.0%||3.82||14||2011\n|-\n| Dominican Republic||27.6%||6.10||626||2012\n|-\n| Grenada||7.1%||0.94||1||2012\n|-\n| Jamaica||36.5%||15.00||414||2011\n|-\n| Trinidad and Tobago||14.8%||3.91||52||2011\n|-\n| Costa Rica||16.2%||1.38||66||2012\n|-\n| El Salvador||0.9%||0.37||23||2012\n|-\n| Panama||8.9%||1.53||58||2012\n|-\n| Canada||7.9%||0.12||42||2011\n|-\n| United States||5.0%||0.24||733||2011\n|-\n| Colombia||3.6%||1.21||569||2011\n|-\n| Guyana||16.9%||2.77||22||2011\n|-\n| Uruguay||15.6%||0.92||31||2011\n|-\n| Japan||8.4%||0.03||37||2011\n|-\n| Mongolia||0.0%||0.00||0||2011\n|-\n| South Korea||8.0%||0.07||34||2011\n|-\n| Singapore||6.3%||0.02||1||2011\n|-\n| Armenia||5.6%||0.10||3||2012\n|-\n| Azerbaijan||2.1%||0.04||4||2010\n|-\n| Cyprus||22.2%||0.18||2||2011\n|-\n| Georgia||0.5%||0.02||1||2010\n|-\n| Bulgaria||5.0%||0.10||7||2012\n|-\n| Czech Republic||4.7%||0.04||4||2011\n|-\n| Finland||1.8%||0.04||2||2011\n|-\n| Iceland||0.0%||0.00||0||2012\n|-\n| Albania||2.1%||0.09||3||2011\n|-\n| Bosnia and Herzegovina||0.0%||0.00||0||2011\n|-\n| Croatia||0.0%||0.00||0||2012\n|-\n| Italy||5.1%||0.05||28||2011\n|-\n| Montenegro||4.8%||0.16||1||2011\n|-\n| Spain||3.0%||0.02||11||2012\n|-\n| Macedonia||3.3%||0.05||1||2011\n|-\n| Austria||4.2%||0.03||3||2011\n|-\n| Germany||9.4%||0.08||62||2011\n|-\n| Luxembourg||25.0%||0.20||1||2011\n|-\n| Switzerland||2.2%||0.01||1||2011\n|-\n| Australia||3.0%||0.04||8||2009\n|-\n|}\n\n== In popular culture ==\n{{In popular culture|section|date=January 2019}}\nRobberies have been depicted, sometimes graphically, in various forms of media, and several robbers have become [[pop icon]]s, such as [[Bonnie and Clyde]] and [[John Dillinger]]. Examples of media works focused on robberies include:\n\n=== In film ===\n* ''[[The Killing (film)|The Killing]]'' (1956), by [[Stanley Kubrick]], depicts a graphic robbery.\n* ''[[Wake Up and Die]]'' (1966) is an Italian crime drama film directed by [[Carlo Lizzani]], based on the real life of [[Luciano Lutring]] (\"''il solista del mitra''\", translation: \"the submachine soloist\"), who kept his weapon in a violin case.<ref name=bio>{{cite news|last=Piero Colaprico|title=Milano, \u00e8 morto Luciano Lutring: lo chiamavano 'il solista del mitra'|url=http://milano.repubblica.it/cronaca/2013/05/13/news/milano_morto_luciano_lutring_lo_chiamavano_il_solista_del_mitra_-58674865/?ref=HREC1-5|accessdate=13 May 2013|newspaper=[[La Repubblica]]|date=13 May 2013}}</ref>\n* ''[[Take the Money and Run]]'' (1969), by [[Woody Allen]], depicts an unconventional view of a robbery by an incompetent robber.\n* ''Le Gitan'' (1975), directed by [[Jos\u00e9 Giovanni]], is loosely based on Luciano Lutring's autobiography. Lutring is played by [[Alain Delon]].<ref name=\"bio\" />\n* ''[[Dog Day Afternoon]]'' (1975) depicts a bank robbery which escalates to a hostage situation. \n* ''[[Reservoir Dogs]]'' (1992), by [[Quentin Tarantino]], shows the aftermath of a robbery, with an abundance of lurid details.\n\n=== In literature ===\n* [[Luciano Lutring]] (30 December 1937 \u2013 13 May 2013), known as \"the submachine gun soloist\" because he kept the weapon in a violin case, used that moniker as the title of his memoir ''[[Il solista del mitra]]''. He  was an Italian criminal, author, and painter who, when committing robberies, worked alone (which is rather rare for a robber).<ref>{{Cite web|url=http://milano.corriere.it/milano/notizie/cronaca/13_maggio_13/morto-luciano-lutring-solista-mitra-poeta-pittore-2121108754360.shtml|title=Morto Luciano Lutring, l'ex bandito divenuto scrittore e artista|last=|first=|date=|website=|publisher=|language=it-IT|access-date=2016-09-19}}</ref>\n* [[Lionel White]]'s Bloodhound mysteries novel, No.116, ''Clean Break'' (1955)<ref>{{cite book|author=White, Lionel|title=Clean Break| date=1955| publisher=Dutton| edition=First| asin=B0000CJAQV| pages=189}}</ref> was the basis for Stanley Kubrik's film ''The Killing'' (1956).<ref>{{cite news|work=The New York Times|title=Movie Review: ''The Killing'' (1956); SCREEN: 'The Killing'; New Film at the Mayfair Concerns a Robbery | author=Weiler, A.H. |date= May 21, 1956| url=https://www.nytimes.com/movie/review?res=9E03E3D9123BE333A05752C2A9639C946792D6CF}}</ref>\n\n=== In video games ===\nVideo games ''[[Payday: The Heist]]'' and ''[[Payday 2]]'' are both games by [[Overkill Software]] where one of the main objectives is to steal items of monetary value at places such as banks, art galleries, armored trucks, and more. <ref>{{cite web|url=http://overkillsoftware.com|title=OVERKILL Software|publisher=}}</ref>\n\n== See also ==\n{{columns-list|colwidth=22em|\n* [[Aircraft hijacking]]\n* [[Art theft]]\n* [[Balaclava (clothing)]]\n* [[Bank robbery]]\n* [[Brigandage]]\n* [[Bushranger]]\n* [[Convenience store crime]]\n* [[Dacoit]]\n* [[Flash mob robbery]]\n* [[Gangs in the United States]]\n* [[Hajduk]]\n* [[Highwayman]]\n* [[Home invasion]]\n* [[Klepht]]\n* [[Looting]]\n* [[Mafia]]\n* [[Marauder (disambiguation)]]\n* [[Metal theft]]\n* [[Millionaire tour]]\n* [[Organized retail crime]]\n* [[Outlaw]]\n* [[Piracy]]\n* [[Shanlin]]\n* [[Snapphane]]\n* [[Snatch theft]]\n* [[Train robbery]]\n* [[Truck hijacking]]\n}}\n\n== References ==\n* Matthew Hale. [[Historia Placitorum Coronae]]. 1736. 1800 Edition. Volume 1. Chapter XLVI. Pages [https://books.google.com/books?id=2KoDAAAAQAAJ&pg=PA530#v=onepage&q&f=false 532] to 538.\n{{reflist|30em}}\n\n== Further reading ==\n{{Commons category|Robbery}}\n* Allen, Michael. (2005). ''Textbook on Criminal Law''. Oxford: Oxford University Press. {{ISBN|0-19-927918-7}}.\n* Criminal Law Revision Committee. 8th Report. Theft and Related Offences. Cmnd. 2977\n* Griew, Edward. ''Theft Acts 1968 & 1978''. London: Sweet & Maxwell. London: LexisNexis. {{ISBN|0-406-89545-7}}\n\n== External links ==\n{{Wiktionary|robbery|robber|hold-up}}\n{{English criminal law navbox}}\n\n{{Authority control}}\n\n[[Category:Robbery| ]]\n[[Category:Crimes]]\n[[Category:Illegal occupations]]\n", "name_user": "2601:c6:2:63f0:49fe:f2b0:3ee8:fea2", "label": "unsafe", "comment": "", "url_page": "//en.wikipedia.org/wiki/Robbery"}
{"title_page": "\u015e\u00fckr\u00fc Enis Reg\u00fc", "text_new": "{{Orphan|date=January 2012}}\n\n'''\u015e\u00fckr\u00fc Enis Reg\u00fc''' (1922 in [[\u00c7ank\u0131r\u0131]], [[Turkey]] &ndash; 19 March 1974 in [[Istanbul]], Turkey) was best known for his [[Children's poetry|poetry for children]]. He was one of the rare writers  whose approach to children's world was with an almost childish sensitivity, innocence and naivete. His work includes many tales, fables and compilations.\n\nHe finished elementary and middle-school in \u00c7ank\u0131r\u0131 before graduating from Haydarpa\u015fa Lyceum High School in Istanbul. Early in his career as a journalist, he became the editor of ''[[Do\u011fan Karde\u015f|Do\u011fan Karde\u015f Dergisi]]'', a children's magazine. During this period, his poetry and prose was published by the publishing houses of Nebio\u011flu and Atlas in their literary periodicals. Later he settled in [[Ankara]] as the Children's Editor for Ulus newspaper, the leading national daily of that period.\n\nReg\u00fc established the Yank\u0131 publishing house. He created \"Children's corner\" sections in various newspapers during this period. Through [[Milliyet Publications]], he edited many interesting and enchanting legends and tales.\n\nHis first appearance in the literary scene was as a child-poet with the publishing of his poetry and other writings in Vakit daily newspaper in 1931. Later his poetry was published in many periodicals, including ''Servet-i F\u00fcnu\u0131n'', ''Uyan\u0131\u015f'' (Awakening), ''Varl\u0131k'' (Existence), ''Hep Bu Topraktan'' (From This Earth), ''Fikirler'' (Thoughts), ''Diyelim'' (Let Us Say), ''G\u00fcney'' (South), and ''Hisar''.\n\n==External links==\n*[http://www.siirakademisi.com/index.php?/site/sair_hayat/920 \"\u015e\u00fckr\u00fc Enis REG\u00dc\"] {{in lang|tr}}\n\n\n{{authority control}}\n\n{{DEFAULTSORT:Regu, Sukru Enis}}\n[[Category:1922 births]]\n[[Category:1974 deaths]]\n[[Category:Turkish poets]]\n[[Category:20th-century poets]]\n\n\n{{Turkey-writer-stub}}\n\n[[tr:\u015e\u00fckr\u00fc Enis Reg\u00fc]]\n", "text_old": "{{Orphan|date=January 2012}}\n\n'''\u015e\u00fckr\u00fc Enis Reg\u00fc''' (1922 in [[\u00c7ank\u0131r\u0131]], [[Turkey]] &ndash; 19 March 1974 in [[Istanbul]], Turkey) was best known for his [[Children's poetry|poetry for children]]. He was one of the rare writers  whose approach to children's world was with an almost childish sensitivity, innocence and naivete. His work includes many tales, fables and compilations.\n\nHe finished elementary and middle-school in \u00c7ank\u0131r\u0131 before graduating from Haydarpa\u015fa Lyceum High School in Istanbul. Early in his career as a journalist, he became the editor of ''[[Do\u011fan Karde\u015f|Do\u011fan Karde\u015f Dergisi]]'', a children's magazine. During this period, his poetry and prose was published by the publishing houses of Nebio\u011flu and Atlas in their literary periodicals. Later he settled in [[Ankara]] as the Children's Editor for Ulus newspaper, the leading national daily of that period.\n\nReg\u00fc established the Yank\u0131 publishing house. He created \"Children's corner\" sections in various newspapers during this period. Through [[Milliyet Publications]], he edited many interesting and enchanting legends and tales.\n\nHis first appearance in the literary scene was as a child-poet with the publishing of his poetry and other writings in Vakit daily newspaper in 1931. Later his poetry was published in many periodicals, including ''Servet-i F\u00fcnu\u0131n'', ''Uyan\u0131\u015f'' (Awakening), ''Varl\u0131k'' (Existence), ''Hep Bu Topraktan'' (From This Earth), ''Fikirler'' (Thoughts), ''Diyelim'' (Let Us Say), ''G\u00fcney'' (South), and ''Hisar''.\n\n==External links==\n*[http://www.siirakademisi.com/index.php?/site/sair_hayat/920 \"\u015e\u00fckr\u00fc Enis REG\u00dc\"] {{in lang|tr}}\n\n{{DEFAULTSORT:Regu, Sukru Enis}}\n[[Category:1922 births]]\n[[Category:1974 deaths]]\n[[Category:Turkish poets]]\n[[Category:20th-century poets]]\n\n\n{{Turkey-writer-stub}}\n\n[[tr:\u015e\u00fckr\u00fc Enis Reg\u00fc]]\n", "name_user": "Ser Amantio di Nicolao", "label": "safe", "comment": "\u2192\u200eExternal links:add authority control", "url_page": "//en.wikipedia.org/wiki/%C5%9E%C3%BCkr%C3%BC_Enis_Reg%C3%BC"}
