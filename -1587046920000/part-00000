{"title_page": "Perl", "text_new": "{{short description|Interpreted programming language first released in 1987}}\n{{about|the programming language}}\n{{distinguish|PEARL (programming language)}}\n{{Use mdy dates|date=September 2014}}\n{{good article}}\n{{Infobox programming language\n| name = Perl\n| logo = Programming-republic-of-perl.png\n| paradigm = [[Multi-paradigm]]: [[Functional programming|functional]], [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]] ([[Class-based programming|class-based]]), [[Reflective programming|reflective]]\n| designer = [[Larry Wall]]\n| developer = [[Larry Wall]]\n| typing = Dynamic\n| influenced = [[CoffeeScript]],{{citation needed|date=January 2016}} [[Groovy (programming language)|Groovy]],{{citation needed|date=February 2016}} [[JavaScript]], [[Julia (programming language)|Julia]], [[LPC (programming language)|LPC]], [[PHP]], [[Python (programming language)|Python]], [[Raku (programming language)|Raku]], [[Ruby (programming language)|Ruby]], [[PowerShell]]\n| license = [[Artistic License]] 1.0<ref name=\"artistic-1.0\">{{cite web|url=http://dev.perl.org/licenses/artistic.html|title=The \"Artistic License\" - dev.perl.org|website=dev.perl.org}}</ref><ref name=\"artistic-1.0-git\">[http://perl5.git.perl.org/perl.git/blob/HEAD:/Artistic Artistic] - file on the Perl 5 git repository</ref> or [[GNU General Public License]]<ref name=\"licensing\">{{cite web |url = http://dev.perl.org/licenses |title = Perl Licensing |accessdate = 2011-01-08 |publisher = dev.perl.org }}</ref>\n| website = {{url|https://www.perl.org}}\n| wikibooks = Perl Programming\n| year = {{Start date and age|1987|12|18}}\n\n| latest_release_version = {{Unbulleted list\n\n|5.30.2<ref>{{cite web|url = https://www.nntp.perl.org/group/perl.perl5.porters/2020/03/msg257227.html |title = Perl 5.30.2 is now available! |accessdate = 2020-03-15 |publisher = www.nntp.perl.org }}</ref> / {{Start date and age|mf=yes|2020|03|14|df=yes}}\n\n|5.28.2<ref>{{cite web|url = https://www.nntp.perl.org/group/perl.perl5.porters/2019/04/msg254456.html |title = Perl 5.28.2 is now available! |accessdate = 2019-04-19 |publisher = www.nntp.perl.org }}</ref> / {{Start date and age|mf=yes|2019|04|19|df=yes}}\n\n}}\n\n| latest_preview_version = 5.31.10<ref>{{cite web|url = https://www.nntp.perl.org/group/perl.perl5.porters/2020/03/msg257274.html | title = Perl 5.31.10 is now available! | accessdate = 2020-03-21 | publisher = perl.org}}</ref>\n\n| latest_preview_date = {{Start date and age|mf=yes|2020|03|20}}\n\n| turing-complete = Yes\n| influenced_by = [[AWK (programming language)|AWK]], [[BASIC]], [[C (programming language)|C]], [[C++]], [[Lisp (programming language)|Lisp]], [[sed]], [[Unix shell]]<ref>{{cite web|title=Programming is Hard, Let's Go Scripting...|author=Larry Wall|url=https://www.perl.com/pub/2007/12/06/soto-11.html/|quote=All language designers have their occasional idiosyncracies. I\u2019m just better at it than most.|accessdate=}}</ref>\n| programming_language = [[C (programming language)|C]]\n| operating_system = [[Cross-platform]]\n| file_ext = .plx, .pl, .pm, .xs, .t, .pod\n}}\n\n'''Perl''' is a family of two [[High-level programming language|high-level]], [[General-purpose programming language|general-purpose]], [[Interpreter (computing)|interpreted]], [[dynamic programming language]]s. \"Perl\" refers to Perl 5, but from 2000 to 2019 it also referred to its redesigned \"sister language\", Perl 6, before the latter's name was officially changed to [[Raku (programming  language)|Raku]] in October 2019.<ref>{{cite web |url = https://www.perl.org/about.html |title = About Perl |publisher = perl.org |quote = \"Perl\" is a family of languages, \"Perl 6\" is part of the family, but it is a separate language that has its own development team. Its existence has no significant impact on the continuing development of \"Perl 5\". |accessdate = 2013-04-20 }}</ref><ref>{{cite web |url = https://github.com/perl6/problem-solving/pull/89/files/2d7b3f5a85ae9c8f913ba16994836ed59cf6de50 |title = Path to raku by lizmat |publisher = github.com |quote = This document describes the steps to be taken to effectuate a rename of `Perl 6` to `Raku`, as described in issue #81. | accessdate = 2019-10-16 }}</ref>\n\nThough Perl is not officially an acronym,<ref>{{cite web |url = http://learn.perl.org/faq/perlfaq1.html#Whats-the-difference-between-perl-and-Perl |title = General Questions About Perl |last = Lapworth |first = Leo |publisher = Perl.org |work = Perl FAQ |accessdate = February 24, 2012 }}</ref> there are various [[backronym]]s in use, including \"Practical [[Data extraction|Extraction]] and Reporting Language\".<ref>{{cite web |url = http://linux.die.net/man/1/perl |title = perl(1): Practical Extraction/Report Language - Linux man page |date =  |publisher = Linux.die.net |accessdate = 2013-07-23 }}</ref> Perl was originally developed by [[Larry Wall]] in 1987 as a general-purpose [[Unix]] [[scripting language]] to make report processing easier.<ref name=\"sheppard00\">{{cite web |url = http://www.perl.com/pub/2000/10/begperl1.html |title = Beginner's Introduction to Perl |last = Sheppard |first = Doug |date = 2000-10-16 |publisher = dev.perl.org |accessdate = 2011-01-08 }}</ref> Since then, it has undergone many changes and revisions. Raku, which began as a redesign of Perl 5 in 2000, eventually evolved into a separate language. Both languages continue to be developed independently by different development teams and liberally borrow ideas from one another.\n\nThe Perl languages borrow features from other programming languages including [[C (programming language)|C]], [[shell script]] ([[Unix shell|sh]]), [[AWK (programming language)|AWK]], and [[sed]];<ref name=\"perltimeline\">{{cite web |url = http://history.perl.org/PerlTimeline.html |title = The Timeline of Perl and its Culture (v3.0_0505) |year = 1999 |author = Ashton, Elaine }}</ref> Wall also alludes to [[BASIC]] and [[Lisp (programming language)|Lisp]] in the introduction to ''[[Learning Perl]]'' (Schwartz & Christiansen) and so on.<ref>{{cite web|url=http://dl.acm.org/citation.cfm?id=572875|title=Learning PERL|first1=Randal L.|last1=Schwartz|first2=Tom/Foreword By-Wall|last2=Christiansen|date=July 1, 1997|publisher=O'Reilly & Associates, Inc.|via=dl.acm.org}}{{Dead link|date=January 2020 |bot=InternetArchiveBot |fix-attempted=yes }}</ref> They provide text processing facilities without the arbitrary data-length limits of many contemporary [[List of Unix commands|Unix command line tools]],<ref name=\"programmingperl2\">{{cite book |title = Programming Perl, Third Edition |date = July 2000 |publisher = [[O'Reilly Media]] |isbn = 978-0-596-00027-1 |author = [[Larry Wall|Wall, Larry]], Tom Christiansen and [[Jon Orwant]] }}</ref> facilitating manipulation of [[text file]]s. Perl 5 gained widespread popularity in the late 1990s as a [[Common Gateway Interface|CGI scripting]] language, in part due to its unsurpassed [[regular expression]] and [[String (computing)|string]] [[parsing]] abilities.<ref>{{cite web |url = http://www.catb.org/esr/writings/taoup/html/ch14s04.html#perl |title = Language Evaluations |quote = Perl's strongest point is its extremely powerful built-in facilities for pattern-directed processing of textual, line-oriented data formats; it is unsurpassed at this. }}</ref><ref>{{cite web |url = http://www.cio.com/article/2437271/developer/you-used-perl-to-write-what--.html |title = You Used Perl to Write WHAT?! |date = January 24, 2008 |quote = perl has always been the go-to language for any task that involves pattern-matching input }}</ref><ref>{{cite web |url = http://archive.oreilly.com/pub/a/oreilly/perl/news/importance_0498.html |title = The Importance of Perl |quote = Perl's unparalleled ability to process text... |access-date = February 4, 2015 |archive-url = https://web.archive.org/web/20150202010003/http://archive.oreilly.com/pub/a/oreilly/perl/news/importance_0498.html# |archive-date = February 2, 2015 |url-status = dead |df = mdy-all }}</ref><ref name=\"roderick02\">{{cite book |title = Advanced Linux Networking |date = June 21, 2002 |publisher = Addison-Wesley Professional |isbn = 978-0-201-77423-8 |page = 594 |last1 = Smith |first1 = Roderick W. }}</ref>\n\nIn addition to CGI, Perl 5 is used for [[System administrator|system administration]], [[Computer network programming|network programming]], finance, [[bioinformatics]], and other applications, such as for [[graphical user interface|GUI]]s. It has been nicknamed \"the Swiss Army chainsaw <!-- Note to editors. This should read *chainsaw*, not knife. Check the ref -->of scripting languages\" because of its flexibility and power,<ref>{{cite web |url = http://www.perl.com/pub/a/2000/10/begperl1.html |title = Beginner's Introduction to Perl |last = Sheppard |first = Doug |date = 2000-10-16 |publisher = [[O'Reilly Media]] |accessdate = 2008-07-27 }}</ref> and also its ugliness.<ref>{{cite web |url = http://www.catb.org/jargon/html/S/Swiss-Army-chainsaw.html |title = Swiss Army chainsaw |last = Raymond |first = Eric |date = 2003-12-23 |work = The Jargon File |accessdate = 2014-11-29 }}</ref> In 1998, it was also referred to as the \"[[duct tape]] that holds the Internet together,\" in reference to both its ubiquitous use as a [[glue language]] and its perceived inelegance.<ref name=\"leonard98\">{{cite news |url = http://www.salon.com/1998/10/13/feature_269/ |title = The joy of Perl |last = Leonard |first = Andrew |work = [[Salon.com]] |accessdate = 2012-06-05 }}</ref>\n\n==History==\n\n===Early versions===\n[[Larry Wall]] began work on Perl in 1987, while working as a programmer at [[Unisys]]<ref name=\"programmingperl2\" />, and released version 1.0 to the comp.sources.misc [[newsgroup]] on December 18, 1987.<ref>{{cite newsgroup |author = Larry Wall |title = v13i001: Perl, a \"replacement\" for awk and sed, Part01/10 |date = 1988-02-01 |newsgroup = comp.sources.unix |message-id =  |url = https://groups.google.com/forum/#!topic/comp.sources.unix/Njx6b6TiZos |accessdate = 2011-01-13 }}</ref> The language expanded rapidly over the next few years.\n\nPerl 2, released in 1988, featured a better regular expression engine. Perl 3, released in 1989, added support for [[binary data]] streams.\n\nOriginally, the only documentation for Perl was a single lengthy [[man page]]. In 1991, ''[[Programming Perl]]'', known to many Perl programmers as the \"Camel Book\" because of its cover, was published and became the ''de facto'' reference for the language. At the same time, the Perl version number was bumped to 4, not to mark a major change in the language but to identify the version that was well documented by the book.\n\n=== Early Perl 5 ===\n{{Main|Perl 5 version history}}\nPerl 4 went through a series of [[maintenance release]]s, culminating in Perl 4.036 in 1993, whereupon Wall abandoned Perl 4 to begin work on Perl 5. Initial design of Perl 5 continued into 1994. The ''perl5-porters'' [[mailing list]] was established in May 1994 to coordinate work on porting Perl 5 to different platforms. It remains the primary forum for development, maintenance, and porting of Perl 5.<ref>{{Cite web | url=http://www.nntp.perl.org/group/perl.perl5.porters/ | title=perl.perl5.porters archive | access-date=2011-01-13 | publisher=perl.org}}</ref>\n\nPerl 5.000 was released on October 17, 1994.<ref>{{Cite web | url=http://perldoc.perl.org/perlhist.html | title=perlhist&nbsp;\u2014 the Perl history records | access-date=2011-01-21 | work=Perl 5 version 12.2 documentation | publisher=perldoc.perl.org}}</ref> It was a nearly complete rewrite of the [[interpreter (computing)|interpreter]], and it added many new features to the language, including [[Object (computer science)|objects]], [[Reference (computer science)|references]], [[Local variable|lexical (my) variables]], and [[Modular programming|modules]]. Importantly, modules provided a mechanism for extending the language without modifying the interpreter. This allowed the core interpreter to stabilize, even as it enabled ordinary Perl programmers to add new language features. Perl 5 has been in active development since then.\n\nPerl 5.001 was released on March 13, 1995. Perl 5.002 was released on February 29, 1996 with the new prototypes feature. This allowed module authors to make [[subroutine]]s that behaved like Perl [[Shell builtin|builtins]]. Perl 5.003 was released June 25, 1996, as a security release.\n\nOne of the most important events in Perl 5 history took place outside of the language proper and was a consequence of its module support. On October 26, 1995, the [[CPAN|Comprehensive Perl Archive Network]] (CPAN) was established as a [[Software repository|repository]] for the Perl language and [[Perl module]]s; as of May 2017, it carries over 185,178 modules in 35,190 distributions, written by more than 13,071 authors, and is mirrored worldwide at more than 245 locations.<ref>{{Cite web | url=https://www.cpan.org/ | title=CPAN | access-date=2017-05-08 | publisher=[[CPAN]]}}</ref>\n\nPerl 5.004 was released on May 15, 1997, and included, among other things, the UNIVERSAL package, giving Perl a base object to which all [[Class (computer programming)|classes]] were automatically derived and the ability to require versions of modules. Another significant development was the inclusion of the [[CGI.pm]] module,<ref name=\"5004delta\">{{Cite web | url=http://perldoc.perl.org/perl5004delta.html | title=perl5004delta&nbsp;\u2014 what's new for perl5.004 | access-date=2011-01-08 | work=Perl 5 version 12.2 documentation | publisher=perldoc.perl.org}}</ref> which contributed to Perl's popularity as a [[Common Gateway Interface|CGI scripting language]].<ref name=\"patwardhan02\">{{Cite book | last1=Patwardhan | first1=Nathan | last2=Siever | first2=Ellen | last3=Spainhour | first3=Stephen | title=Perl in a Nutshell, Second Edition | publisher=[[O'Reilly Media]] | year=2002 | isbn=978-0-596-00241-1 | url=https://archive.org/details/perlinnutshell00patw }}</ref>\n\nPerl 5.004 also added support for [[Microsoft Windows]] and several other operating systems.<ref name=\"5004delta\" />\n\nPerl 5.005 was released on July 22, 1998. This release included several enhancements to the [[Regular expression|regex]] engine, new hooks into the backend through the <code>B::*</code> modules, the <code>qr//</code> regex quote operator, a large selection of other new core modules, and added support for several more operating systems, including [[BeOS]].<ref name=\"5005delta\">{{Cite web | url=http://perldoc.perl.org/perl5005delta.html | title=perl5005delta - what's new for perl5.005 | access-date=2011-01-21 | work=Perl 5 version 12.2 documentation | publisher=perldoc.perl.org}}</ref>\n\n===2000\u2013present===\n{| class=\"wikitable floatright\"\n|-\n! Major version\n! Latest update\n|-\n| {{Version|o|5.005}}\n| 2004-02-23<ref name=\"cpan-src\">{{cite web |url = http://www.cpan.org/src/ |title = Perl Source |publisher = www.cpan.org |date =  |accessdate = 2017-06-05 }}</ref>\n|-\n| {{Version|o|5.6}}\n| 2003-11-15<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.8}}\n| 2008-12-14<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.10}}\n| 2009-08-23<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.12}}\n| 2012-11-10<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.14}}\n| 2013-03-10<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.16}}\n| 2013-03-11<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.18}}\n| 2014-10-02<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.20}}\n| 2015-09-12<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.22}}\n| 2017-07-15<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.24}}\n| 2018-04-14<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.26}}\n| 2018-11-29<ref name=\"cpan-src\" />\n|-\n| {{Version|co|5.28}}\n| 2019-04-19<ref name=\"cpan-src\" />\n|-\n| {{Version|c|5.30}}\n| 2019-05-22<ref name=\"cpan-src\" />\n|-\n| {{Version|p|5.32}}\n| 2020-05\n|-\n| colspan=\"99\" | <small>{{Version |lv |show=011101}}</small>\n|}\nPerl 5.6 was released on March 22, 2000.  Major changes included [[64-bit computing|64-bit]] support, [[Unicode]] string representation, support for files over 2 GiB, and the \"our\" keyword.<ref name=\"56delta\">{{cite web |url = http://perldoc.perl.org/perl56delta.html |title = perl56delta - what's new for perl v5.6.0 |accessdate = 2011-01-21 |work = Perl 5 version 12.2 documentation |publisher = perldoc.perl.org }}</ref><ref name=\"561delta\">{{cite web |url = http://perldoc.perl.org/perl561delta.html |title = perl56delta - what's new for perl v5.6.x |accessdate = 2011-01-21 |work = Perl 5 version 12.2 documentation |publisher = perldoc.perl.org }}</ref>  When developing Perl 5.6, the decision was made to switch the [[software versioning|versioning]] scheme to one more similar to other open source projects; after 5.005_63, the next version became 5.5.640, with plans for development versions to have odd numbers and stable versions to have even numbers.\n\nIn 2000, Wall put forth a call for suggestions for a new version of Perl from the community. The process resulted in 361 RFC (request for comments) documents that were to be used in guiding development of Perl 6. In 2001,<ref>{{cite web |url = http://dev.perl.org/perl6/doc/design/apo/A01.html |title = Apocalypse 1: The Ugly, the Bad, and the Good |accessdate = 2011-01-08 |last = Wall |first = Larry }}</ref> work began on the \"Apocalypses\" for Perl 6, a series of documents meant to summarize the change requests and present the design of the next generation of Perl. They were presented as a digest of the RFCs, rather than a formal document. At this point, Perl 6 existed only as a description of a language.\n\nPerl 5.8 was first released on July 18, 2002, and had nearly yearly updates since then. Perl 5.8 improved Unicode support, added a new I/O implementation, added a new thread implementation, improved numeric accuracy, and added several new modules.<ref name=\"perl58delta\">{{cite web |url = http://perldoc.perl.org/perl58delta.html |title = perl58delta - what is new for perl v5.8.0 |accessdate = 2011-01-21 |work = Perl 5 version 12.2 documentation |publisher = perldoc.perl.org }}</ref> As of 2013 this version still remains the most popular version of Perl and is used by Red Hat 5, Suse 10, Solaris 10, HP-UX 11.31 and AIX 5.\n\nIn 2004, work began on the \"Synopses\"{{snd}}documents that originally summarized the Apocalypses, but which became the specification for the Perl 6 language. In February 2005, [[Audrey Tang]] began work on [[Pugs (programming)|Pugs]], a Perl 6 interpreter written in [[Haskell (programming language)|Haskell]].<ref>{{cite web |url = http://www.perl.com/pub/a/2005/03/03/pugs_interview.html |title = A Plan for Pugs |date = 2005-03-03 |publisher = [[O'Reilly Media]] |accessdate = 2011-01-27 }}</ref> This was the first concerted effort towards making Perl 6 a reality. This effort stalled in 2006.<ref>{{cite web |url = http://www.perlmonks.org/?node_id=835936 |title = Re: How to Implement Perl 6 in Ten Years |accessdate = 2011-01-03 |last = Tang |first = Audrey |date = 2010-04-21 |publisher = [[PerlMonks]] }}</ref>\n\nOn December 18, 2007, the 20th anniversary of Perl 1.0, Perl 5.10.0 was released. Perl 5.10.0 included notable new features, which brought it closer to Perl 6. These included a [[switch statement]] (called \"given\"/\"when\"), regular expressions updates, and the '''smart match operator'' (~~).<ref name=\"5100delta\">{{cite web |url = http://perldoc.perl.org/perl5100delta.html |title = perl5100delta - what is new for perl 5.10.0 |accessdate = 2011-01-08 |work = Perl 5 version 12.2 documentation |publisher = perldoc.perl.org }}</ref><ref name=\"perlsyn-smart\">{{cite web |url = http://perldoc.perl.org/perlsyn.html#Smart-matching-in-detail |title = perlsyn - Perl syntax |accessdate = 2011-01-21 |work = Perl 5 version 12.2 documentation |publisher = perldoc.perl.org }}</ref>\nAround this same time, development began in earnest on another implementation of Perl 6 known as [[Rakudo|Rakudo Perl]], developed in tandem with the [[Parrot virtual machine]]. As of November 2009, Rakudo Perl has had regular monthly releases and now is the most complete implementation of Perl 6.\n\nA major change in the development process of Perl 5 occurred with Perl 5.11; the development community has switched to a monthly release cycle of development releases, with a yearly schedule of stable releases. By that plan, bugfix point releases will follow the stable releases every three months.\n\nOn April 12, 2010, Perl 5.12.0 was released. Notable core enhancements include new <code>package NAME VERSION</code> syntax, the Yada Yada operator (intended to mark placeholder code that is not yet implemented), implicit strictures<!-- \"strictures\" is not a typo -->, full [[Y2038]] compliance, regex conversion overloading, [[DTrace]] support, and [[Unicode]] 5.2.<ref name=\"5120delta\">{{cite web |url = http://perldoc.perl.org/perl5120delta.html |title = perl5120delta - what is new for perl v5.12.0 |accessdate = 2011-01-08 |work = Perl 5 version 12.2 documentation |publisher = perldoc.perl.org }}</ref> On January 21, 2011, Perl 5.12.3 was released; it contains updated modules and some documentation changes.<ref name=\"5123delta\">{{cite web |url = http://perldoc.perl.org/perl5123delta.html |title = perldelta - what is new for perl v5.12.3 |accessdate = 2011-01-08 |work = Perl 5 version 12.2 documentation |publisher = perldoc.perl.org }}</ref> Version 5.12.4 was released on June 20, 2011. The latest version of that branch, 5.12.5, was released on November 10, 2012.\n\nOn May 14, 2011, Perl 5.14 was released. [[JSON]] support is built-in as of 5.14.0.<ref>{{cite web|url=https://metacpan.org/pod/distribution/perl/pod/perl5140delta.pod|title=perl5140delta - what is new for perl v5.14.0 - metacpan.org|website=metacpan.org}}</ref> The latest version of that branch, 5.14.4, was released on March 10, 2013.\n\nOn May 20, 2012, Perl 5.16 was released. Notable new features include the ability to specify a given version of Perl that one wishes to emulate, allowing users to upgrade their version of Perl, but still run old scripts that would normally be incompatible.<ref name=\"5160delta_version\">{{cite web |url = https://metacpan.org/module/RJBS/perl-5.16.0/pod/perldelta.pod |title = perldelta - what is new for perl v5.16.0 |accessdate = 2012-05-21 |work = Perl 5 version 16.0 documentation |publisher = metacpan.org }}</ref> Perl 5.16 also updates the core to support [[Unicode]] 6.1.<ref name=\"5160delta_version\" />\n\nOn May 18, 2013, Perl 5.18 was released. Notable new features include the new dtrace hooks, lexical subs, more CORE:: subs, overhaul of the hash for security reasons, support for Unicode 6.2.<ref name=\"5180delta_version\">{{cite web |url = https://metacpan.org/pod/release/RJBS/perl-5.18.1/pod/perl5180delta.pod |title = perl5180delta - what is new for perl v5.18.0 - Perl programming language |accessdate = 2013-10-27 |work = Perl 5 version 18.0 documentation |publisher = metacpan.org }}</ref>\n\nOn May 27, 2014, Perl 5.20 was released. Notable new features include subroutine signatures, hash slices/new slice syntax, postfix dereferencing (experimental), Unicode 6.3, rand() using consistent random number generator.<ref name=\"5200delta_version\">{{cite web |url = https://metacpan.org/source/RJBS/perl-5.20.0/pod/perldelta.pod |title = perl5200delta - what is new for perl v5.20.0 - Perl programming language |accessdate = 2014-05-27 |work = Perl 5 version 20.0 documentation |publisher = metacpan.org }}</ref>\n\nSome observers credit the release of Perl 5.10 with the start of the Modern Perl movement.<ref>[http://www.modernperlbooks.com/mt/2009/07/milestones-in-the-perl-renaissance.html Milestones in the Perl Renaissance - Modern Perl Programming]. Modernperlbooks.com. Retrieved on 2013-07-17.</ref> In particular, this phrase describes a style of development that embraces the use of the CPAN, takes advantage of recent developments in the language, and is rigorous about creating high quality code.<ref>[http://modernperlbooks.com/books/modern_perl/ Preface (Modern Perl 2011-2012)]. Modernperlbooks.com. Retrieved on 2013-07-17.</ref> While the book \"Modern Perl\"<ref>[http://onyxneon.com/books/modern_perl/ Modern Perl 2011-2012 edition by chromatic | Onyx Neon Press]. Onyxneon.com. Retrieved on 2013-07-17.</ref> may be the most visible standard-bearer of this idea, other groups such as the Enlightened Perl Organization<ref>{{cite web|url=http://www.enlightenedperl.org/|title=Enlightened Perl|website=Enlightened Perl}}</ref> have taken up the cause.\n\nIn late 2012 and 2013, several projects for alternative implementations for Perl 5 started: Perl5 in [[Raku (programming language)|Perl6]] by the Rakudo Perl team,<ref>{{cite web |url = http://www.yapcna.org/yn2013/talk/4725 |title = YAPC::NA 2013 - June 3-5, Austin, Texas |publisher = Yapcna.org |date = 2013-06-04 |accessdate = 2014-04-11 |archive-url = https://web.archive.org/web/20130622201417/http://www.yapcna.org/yn2013/talk/4725 |archive-date = June 22, 2013 |url-status = dead }}</ref> ''moe'' by Stevan Little and friends,<ref>{{cite web |last = Little |first = Stevan |url = http://blogs.perl.org/users/stevan_little/2013/02/what-is-moe-a-clarification.html |title = What is Moe (a clarification) &#124; Stevan Little |publisher = Blogs.perl.org |date = 2013-02-08 |accessdate = 2014-04-11 }}</ref> ''p2''<ref>{{cite web |url = http://perl11.org/p2/ |title = p2 on potion |publisher = Perl11.org |date = 2004-02-07 |accessdate = 2014-04-11 }}</ref> by the Perl11 team under Reini Urban, ''gperl'' by goccy,<ref>{{cite web |url = https://github.com/goccy/gperl/ |title = goccy/gperl \u8def GitHub |publisher = Github.com |date =  |accessdate = 2014-04-11 }}</ref> and ''rperl'' a kickstarter project led by Will Braswell and affiliated with the Perll11 project.<ref>{{cite web |url = http://rperl.org/faq.html |title = rperl |publisher = RPerl.org |date =  |accessdate = 2014-08-11 }}</ref>\n\n===PONIE===\n'''PONIE''' is an acronym for Perl On New Internal Engine. The PONIE Project existed from 2003 until 2006 and was to be a bridge between Perl 5 and Perl 6. It was an effort to rewrite the Perl 5 interpreter to run on [[Parrot virtual machine|Parrot]], the Perl 6 virtual machine. The goal was to ensure the future of the millions of lines of Perl 5 code at thousands of companies around the world.<ref>{{citation | title = OSCON 4.4: Inside Ponie, the Bridge from Perl 5 to Perl 6 | date = August 8, 2005 <!-- 8:52PM  --> | author =  Geoff Broadwell | url = http://www.oreillynet.com/onlamp/blog/2005/08/oscon_44_inside_ponie_the_brid.html | publisher = O'Reilly ONLamp Blog }}</ref>\n\nThe PONIE project ended in 2006 and is no longer being actively developed.  Some of the improvements made to the Perl 5 interpreter as part of PONIE were folded into that project.<ref>{{citation | title = Ponie has been put out to pasture | author = [[Jesse Vincent]] | date = August 23, 2006<!-- 10:40 PM --> | url = http://news.perlfoundation.org/2006/08/ponie_has_been_put_out_to_past.html | publisher = The Perl Foundation | access-date = January 15, 2019 | archive-url = https://web.archive.org/web/20090627091007/http://news.perlfoundation.org/2006/08/ponie_has_been_put_out_to_past.html | archive-date = June 27, 2009 | url-status = dead | df = mdy-all }}</ref>\n\n===Name===\nPerl was originally named \"Pearl\". Wall wanted to give the language a short name with positive connotations; he claims that he considered every three- and four-letter word in the dictionary. He also considered naming it after his wife Gloria. Wall discovered the existing [[PEARL (programming language)|PEARL]] programming language before Perl's official release and changed the spelling of the name.<ref name=\"richardson1999\">{{cite journal |url = http://www.linuxjournal.com/article/3394 |title = Larry Wall, the Guru of Perl |accessdate = 2011-01-03 |last = Richardson |first = Marjorie |date = 1999-05-01 |journal = [[Linux Journal]] }}</ref>\n\nWhen referring to the language, the name is normally capitalized (''Perl'') as a proper noun. When referring to the interpreter program itself, the name is often uncapitalized (''perl'') because most Unix-like file systems are case-sensitive. Before the release of the first edition of ''Programming Perl'', it was common to refer to the language as ''perl''; [[Randal L. Schwartz]], however, capitalized the language's name in the book to make it stand out better when typeset. This case distinction was subsequently documented as canonical.<ref name=\"capitalization\">{{cite web |url = http://perldoc.perl.org/perlfaq1.html#What's-the-difference-between-%22perl%22-and-%22Perl%22%3f |title = perlfaq1: What's the difference between \"perl\" and \"Perl\"? |work = perldoc.perl.org - Perl 5 version 12.2 documentation }}</ref>\n\nThe name is occasionally expanded as ''Practical Extraction and Report Language'', but this is a [[backronym]].<ref>{{cite book |last1 = Schwartz |first1 = Randal |authorlink1 = Randal Schwartz |last2 = foy |first2 = brian |authorlink2 = brian d foy |last3 = Phoenix |first3 = Tom |title = Learning Perl |publisher = O'Reilly Media, Inc. |date = June 16, 2011 |page = 4 |isbn = 978-1449313142 |quote = Perl is sometimes called the \"Practical Extraction and Report Language,\" although it has also been called a \"Pathologically Eclectic Rubbish Lister,\" among other expansions. It's actually a backronym, not an acronym, since Larry Wall, Perl\u2019s creator, came up with the name first and the expansion later. That\u2019s why \"Perl\" isn\u2019t in all caps. There's no point in arguing that expansion is correct: Larry endorses both. }}</ref> Other expansions have been suggested as equally canonical, including Wall's own ''Pathologically Eclectic Rubbish Lister'' which is in the [[man page|manual page]] for perl.<ref>{{cite web |last = Wall |first = Larry |authorlink = Larry Wall |title = perl - The Perl language interpreter |work = Perl 5 version 12.2 documentation |url = http://perldoc.perl.org/perl.html#BUGS |accessdate = 2011-01-26 }}</ref> Indeed, Wall claims that the name was intended to inspire many different expansions.<ref>{{cite web |last = Wall |first = Larry |authorlink = Larry Wall |title = Re^7: PERL as shibboleth and the Perl community |url = http://www.perlmonks.org/index.pl?node_id=511722 |publisher = [[PerlMonks]] |accessdate = 2011-01-02 }}</ref>\n\n===Camel symbol===\n[[File:Perl-camel-small.png|thumb|The Camel symbol used by O'Reilly Media]]\n''Programming Perl'', published by [[O'Reilly Media]], features a picture of a [[camel|dromedary camel]] on the cover and is commonly called the \"Camel Book\".<ref name=\"schwartz01\">{{cite book |last1 = Schwartz |first1 = Randal L |authorlink1 = Randal L. Schwartz |last2 = Phoenix |first2 = Tom |last3 = Foy |first3 = Brian |authorlink3 = Brian D Foy |title = Learning Perl, Third Edition |isbn = 978-0-596-00132-2 |date = 2007-12-06 |url = https://archive.org/details/learningperl00schw }}</ref> This image of a camel has become an unofficial symbol of Perl as well as a general [[Hacker (programmer subculture)|hacker]] emblem, appearing on T-shirts and other clothing items.\n\nO'Reilly owns the image as a [[trademark]] but licenses it for [[non-commercial]] use, requiring only an acknowledgement and a link to www.perl.com. Licensing for commercial use is decided on a case by case basis.<ref name=\"camel\">{{cite web |url = http://onlamp.com/pub/a/oreilly/perl/usage/ |title = The Perl Camel Usage and Trademark Information |accessdate = 2011-01-09 |publisher = [[O'Reilly Media]] }}</ref> O'Reilly also provides \"Programming Republic of Perl\" logos for non-commercial sites and \"Powered by Perl\" buttons for any site that uses Perl.<ref name=\"camel\" />\n\n===Onion symbol===\n[[File:Onion 64x64.png|thumb|120x120px|The onion logo used by The Perl Foundation]]\n[[The Perl Foundation]] owns an alternative symbol, an onion, which it licenses to its subsidiaries, [[Perl Mongers]], [[PerlMonks]], Perl.org, and others.<ref name=\"onion\">{{cite web |url = http://www.perlfoundation.org/perl_trademark |title = Perl Trademark |accessdate = 2011-01-09 |publisher = [[The Perl Foundation]] |archive-url = https://web.archive.org/web/20110503211915/http://www.perlfoundation.org/perl_trademark# |archive-date = May 3, 2011 |url-status = dead |df = mdy-all }}</ref> The symbol is a [[visual pun]] on [[pearl onion]].<ref name=\"gillmore98\">{{cite news |first = Dan |last = Gillmore |title = Republic Of Perl |date = 1998-10-25 |url = http://articles.chicagotribune.com/1998-10-25/news/9810250094_1_programmers-open-source-movement-programming-community |work = Chicago Tribune |accessdate = 2011-01-10 }}</ref>\n\n===Raptor symbol===\n[[File:Perl5Raptor.png|thumb|Alternative Perl 5 Logo]]\nSebastian Riedel, the creator of [[Mojolicious]], has created a logo depicting a [[Dromaeosauridae|raptor dinosaur]], which is available under a CC-SA License, Version 4.0.<ref name=\"riedel11\">{{cite web |first = Sebastian |last = Riedel |title = Perl 5 Raptor |date = 2012-01-18 |url = https://github.com/kraih/perl-raptor |work = Sebastian Riedel |access-date = 2017-11-12 }}</ref> The logo is being remixed and used in different places and is symbolising Perl 5. The analogue of the raptor comes from a series of talks given by Matt S Trout beginning in 2010.<ref name=\"trout10\">{{cite web |first = Matt |last = Trout |title = State of the Velociraptor - Phase two |date = 2005-06-16 |url = https://shadow.cat/blog/matt-s-trout/sotv-vi/ |work = Shadowcat Systems Limited |access-date = 2017-11-12 }}</ref> The talks were aimed at being more Perl 5 community-centric, in a period where Perl 6 was a hot topic.\n\n==Overview==\n{{Main|Perl language structure}}\nAccording to Wall, Perl has two slogans. The first is \"[[There's more than one way to do it]],\" commonly known as TMTOWTDI. The second slogan is \"Easy things should be easy and hard things should be possible\".<ref name=\"programmingperl2\" />\n\n===Features===\nThe overall structure of Perl derives broadly from C. Perl is [[procedural programming|procedural]] in nature, with [[variable (programming)|variable]]s, [[expression (programming)|expressions]], [[assignment statement]]s, [[bracket|brace]]-delimited [[block (programming)|block]]s, [[control structure]]s, and [[subroutine]]s.\n\nPerl also takes features from shell programming. All variables are marked with leading [[sigil (computer programming)|sigils]], which allow variables to be [[Variable interpolation|interpolated]] directly into [[String (computer science)|strings]]. However, unlike the shell, Perl uses sigils on all accesses to variables, and unlike most other programming languages that use sigils, the sigil doesn't denote the type of the variable but the type of the expression. So for example, to access a list of values in a [[Associative array|hash]], the sigil for an [[Array data type|array]] (\"@\") is used, not the sigil for a hash (\"%\").\nPerl also has many built-in functions that provide tools often used in shell programming (although many of these tools are implemented by programs external to the shell) such as [[Ascending order|sorting]], and calling [[operating system]] facilities.\n\nPerl takes [[List (computing)|lists]] from [[Lisp (programming language)|Lisp]], [[associative array|hashes]] (\"associative arrays\") from [[AWK]], and [[regular expression]]s from [[sed]]. These simplify and facilitate many parsing, text-handling, and data-management tasks. Also shared with Lisp are the implicit [[Return statement|return]] of the last value in a block, and the fact that all statements have a value, and thus are also expressions and can be used in larger expressions themselves.\n\nPerl 5 added features that support complex [[data structure]]s, [[first-class function]]s (that is, [[Closure (computer science)|closures]] as values), and an object-oriented programming model. These include [[reference (computer science)|references]], packages, class-based [[Dynamic dispatch|method dispatch]], and [[Scope (programming)|lexically scoped variables]], along with [[compiler directive]]s (for example, the <code>strict</code> pragma). A major additional feature introduced with Perl 5 was the ability to package code as reusable modules. Wall later stated that \"The whole intent of Perl 5's module system was to encourage the growth of Perl culture rather than the Perl core.\"<ref>{{cite newsgroup |title = title unknown |author =  |date = 1997-05-10 |newsgroup =  |message-id = 199705101952.MAA00756@wall.org |url =  |accessdate = }}{{Dead link|date=November 2014}}</ref>\n\nAll versions of Perl do automatic [[Type system|data-typing]] and automatic [[memory management]]. The interpreter knows the type and [[Computer data storage|storage]] requirements of every data object in the program; it allocates and frees storage for them as necessary using [[reference counting]] (so it cannot deallocate [[circular dependency|circular data structures]] without manual intervention). Legal [[type conversion]]s \u2014 for example, conversions from number to string \u2014 are done automatically at [[Run time (program lifecycle phase)|run time]]; illegal type conversions are fatal errors.\n\n===Design===\nThe design of Perl can be understood as a response to three broad trends in the computer industry: falling hardware costs, rising labor costs, and improvements in [[compiler]] technology. Many earlier computer languages, such as [[Fortran]] and C, aimed to make efficient use of expensive computer hardware. In contrast, Perl was designed so that computer programmers could write programs more quickly and easily.\n\nPerl has many features that ease the task of the programmer at the expense of greater [[CPU]] and memory requirements. These include automatic memory management; [[dynamic typing]]; strings, lists, and hashes; regular expressions; introspection; and an <code>eval()</code> function. Perl follows the theory of \"no built-in limits,\"<ref name=\"schwartz01\" /> an idea similar to the [[Zero One Infinity]] rule.\n\nWall was trained as a linguist, and the design of Perl is very much informed by [[linguistic]] principles. Examples include [[Huffman coding]] (common constructions should be short), good end-weighting (the important information should come first), and a large collection of [[language primitive]]s. Perl favors language constructs that are concise and natural for humans to write, even where they complicate the Perl interpreter.\n\nPerl's [[Syntax (programming languages)|syntax]] reflects the idea that \"things that are different should look different.\"<ref name=\"wall97\">{{cite journal |url = http://www.linuxjournal.com/article/2070 |title = Wherefore Art, Thou? |accessdate = 2011-03-13 |last = Wall |first = Larry |date = 1997-03-01 |journal = [[Linux Journal]] }}</ref> For example, scalars, arrays, and hashes have different leading sigils. Array indices and hash keys use different kinds of braces. Strings and regular expressions have different standard delimiters. This approach can be contrasted with a language such as [[Lisp (programming language)|Lisp]], where the same basic syntax, composed of simple and universal [[S-expression|symbolic expressions]], is used for all purposes.\n\nPerl does not enforce any particular [[programming paradigm]] ([[Procedural programming|procedural]], [[Object-oriented programming|object-oriented]], [[Functional programming|functional]], or others) or even require the programmer to choose among them.\n\nThere is a broad practical bent to both the Perl language and the community and culture that surround it. The preface to ''Programming Perl'' begins: \"Perl is a language for getting your job done.\"<ref name=\"programmingperl2\" /> One consequence of this is that Perl is not a tidy language. It includes many features, tolerates exceptions to its rules, and employs [[heuristics]] to resolve syntactical ambiguities. Because of the forgiving nature of the compiler, bugs can sometimes be hard to find. Perl's function documentation remarks on the variant behavior of built-in functions in list and scalar contexts by saying, \"In general, they do what you want, unless you want consistency.\"<ref name=\"perlfunc\">{{cite web |url = http://perldoc.perl.org/perlfunc.html |title = perlfunc - Perl builtin functions |accessdate = 2011-01-10 |work = Perl 5 version 12.2 documentation |publisher = perldoc.perl.org }}</ref>\n\nNo written [[Formal specification|specification]] or standard for the Perl language exists for Perl versions through Perl 5, and there are no plans to create one for the current version of Perl. There has been only one implementation of the interpreter, and the language has evolved along with it. That interpreter, together with its functional tests, stands as a ''de facto'' specification of the language. Perl 6, however, started with a specification,<ref>{{cite web |url = http://www.perl6.org/specification |title = Perl 6 Specification |accessdate = 2011-01-27 |publisher = The Perl 6 Project }}</ref> and several projects<ref>{{cite web |url = http://www.perl6.org/compilers/ |title = Perl 6 Compilers |accessdate = 2011-01-27 |publisher = The Perl 6 Project }}</ref> aim to implement some or all of the specification.\n\n===Applications===\nPerl has many and varied applications, compounded by the availability of many standard and third-party modules.\n\nPerl has chiefly been used to write [[Common Gateway Interface|CGI]] scripts: large projects written in Perl include [[cPanel]], [[Slash (weblog system)|Slash]], [[Bugzilla]], [[Request Tracker|RT]], [[TWiki]], and [[Movable Type]]; high-traffic websites that use Perl extensively include [[Priceline.com]], [[Craigslist]],<ref>{{cite book |last1 = Gilmore |first1 = W. J. |title = Beginning PHP and MySQL: From Novice to Professional, Fourth Edition |publisher = Apress |page = 484 |isbn = 978-1-4302-3114-1 }}</ref> [[Internet Movie Database|IMDb]],<ref>{{cite web |title = IMDb Helpdesk: What software/hardware are you using to run the site? |website = Internet Movie Database |url = https://www.imdb.com/help/search?domain=helpdesk_faq&index=1&file=techinfo |accessdate = 2011-02-12 }}</ref> [[LiveJournal]], [[DuckDuckGo]],<ref>DuckDuckGo handles a large amount of search queries at 4.5 million queries per day . https://duckduckgo.com/traffic.html</ref><ref>DuckDuckGo uses Perl https://news.ycombinator.com/item?id=1500487</ref> [[Slashdot]] and [[Ticketmaster]]. <!-- THIS IS ''not'' A LIST OF EVERY WEBSITE USING PERL. It's a listing of 'high traffic websites'. Please consider traffic volume before adding your own Web site to it. Refs for lesser known websites certainly needed. -->\nIt is also an optional component of the popular [[LAMP (software bundle)|LAMP]] technology stack for [[Web development]], in lieu of [[PHP]] or [[Python (programming language)|Python]]. Perl is used extensively as a [[system programming language]] in the [[Debian]] GNU/Linux distribution.<ref>{{cite web|url=https://wiki.debian.org/PerlFAQ|title=Perl FAQ|quote=Perl is used quite extensively in Debian. Not only are some core functions written in Perl, but there are over 700 packages in unstable that have perl in their name (Mar 2004).}}</ref>\n\nPerl is often used as a [[glue language]], tying together systems and interfaces that were not specifically designed to interoperate, and for \"[[data munging]],\"<ref>{{cite web |url = http://books.perl.org/book/95 |title = Perl Books - Book: Data Munging with Perl |work = Perl.org |accessdate = December 30, 2010 }}</ref> that is, converting or processing large amounts of data for tasks such as creating reports. In fact, these strengths are intimately linked. The combination makes Perl a popular all-purpose language for [[system administrator]]s, particularly because short programs, often called \"[[one-liner program]]s,\" can be entered and run on a single [[Command-line interface|command line]].\n\nPerl code can be made portable across [[Microsoft Windows|Windows]] and Unix; such code is often used by suppliers of software (both [[Commercial off-the-shelf|COTS]] and bespoke) to simplify packaging and maintenance of software build- and deployment-scripts.\n\n[[Graphical user interface]]s (GUIs) may be developed using Perl. For example, [[Tk (framework)|Perl/Tk]] and [[wxPerl]] are commonly used to enable user interaction with Perl scripts. Such interaction may be synchronous or asynchronous, using [[Callback (computer programming)|callbacks]] to update the GUI.\n\n===Implementation===\nPerl is implemented as a core interpreter, written in C, together with a large collection of modules, written in Perl and C. {{As of|2010}}, the interpreter is 150,000 lines of C code and compiles to a 1&nbsp;MB executable on typical machine architectures. Alternatively, the interpreter can be compiled to a link library and embedded in other programs. There are nearly 500 modules in the distribution, comprising 200,000 lines of Perl and an additional 350,000 lines of C code (much of the C code in the modules consists of [[character encoding]] tables).\n\nThe interpreter has an object-oriented architecture. All of the elements of the Perl language\u2014scalars, arrays, hashes, coderefs, [[file handle]]s\u2014are represented in the interpreter by [[struct (C programming language)|C structs]]. Operations on these structs are defined by a large collection of [[Macro (computer science)|macros]], [[typedef]]s, and functions; these constitute the Perl C [[application programming interface|API]]. The Perl API can be bewildering to the uninitiated, but its entry points follow a consistent [[naming scheme]], which provides guidance to those who use it.\n\nThe life of a Perl interpreter divides broadly into a compile phase and a run phase.<ref>A description of the Perl 5 interpreter can be found in ''Programming Perl'', 3rd Ed., chapter 18. See particularly page 467, which carefully distinguishes run phase and compile phase from [[Run time (program lifecycle phase)|run time]] and [[compile time]].  Perl \"time\" and \"phase\" are often confused.</ref>  In Perl, the '''phases''' are the major stages in the interpreter's life-cycle. Each interpreter goes through each phase only once, and the phases follow in a fixed sequence.\n\nMost of what happens in Perl's compile phase is compilation, and most of what happens in Perl's run phase is execution, but there are significant exceptions. Perl makes important use of its capability to execute Perl code during the compile phase. Perl will also delay compilation into the run phase. The terms that indicate the kind of processing that is actually occurring at any moment are '''compile time''' and '''run time'''.  Perl is in compile time at most points during the compile phase, but compile time may also be entered during the run phase. The compile time for code in a string argument passed to the <code>[[eval]]</code> built-in occurs during the run phase. Perl is often in run time during the compile phase and spends most of the run phase in run time.  Code in <code>BEGIN</code> blocks executes at run time but in the compile phase.<!-- NOTE TO EDITORS:  There is something missing in the preceding sentence -- for one thing, a comma before the conjunction.  The sentence might reasonably read 'Code in BEGIN blocks executes NOT at run time, but in the compile phase,' but is that what the author intended? -->\n\nAt compile time, the interpreter parses Perl code into a [[Abstract syntax tree|syntax tree]]. At run time, it executes the program by [[Tree traversal|walking the tree]]. Text is parsed only once, and the syntax tree is subject to optimization before it is executed, so that execution is relatively efficient. Compile-time optimizations on the syntax tree include [[constant folding]] and context propagation, but [[peephole optimization]] is also performed.\n\nPerl has a [[Turing-complete]] [[formal grammar|grammar]] because parsing can be affected by run-time code executed during the compile phase.<ref>{{cite web |last = Schwartz |first = Randal |authorlink = Randal L. Schwartz |title = On Parsing Perl |url = http://www.perlmonks.org/index.pl?node_id=44722 |accessdate = 2007-01-03 }}</ref> Therefore, Perl cannot be parsed by a straight [[Lex programming tool|Lex]]/[[Yacc]] [[Lexical analysis|lexer]]/[[parser]] combination. Instead, the interpreter implements its own lexer, which coordinates with a modified [[GNU bison]] parser to resolve ambiguities in the language.\n\nIt is often said that \"Only perl can parse Perl,\"<ref>{{cite web |url = ftp://ftp.ora.com/pub/labs/tpj/tpj2.pdf |title = The Perl Journal #19/9.26 |accessdate = 2011-02-04 |publisher = [[O'Reilly Media]] }}</ref> meaning that only the Perl interpreter (''<code>perl</code>'') can parse the Perl language (''Perl''), but even this is not, in general, true. Because the Perl interpreter can simulate a Turing machine during its compile phase, it would need to decide the [[halting problem]] in order to complete parsing in every case. It is a long-standing result that the halting problem is undecidable, and therefore not even perl can always parse Perl. Perl makes the unusual choice of giving the user access to its full programming power in its own compile phase. The cost in terms of theoretical purity is high, but practical inconvenience seems to be rare.\n\nOther programs that undertake to parse Perl, such as [[Static program analysis|source-code]] analyzers and [[Indent style|auto-indenters]], have to contend not only with ambiguous [[Language construct|syntactic constructs]] but also with the [[Recursive language|undecidability]] of Perl parsing in the general case. [[Adam Kennedy (programmer)|Adam Kennedy]]'s PPI project focused on parsing Perl code as a document (retaining its integrity as a document), instead of parsing Perl as executable code (that not even Perl itself can always do). It was Kennedy who first conjectured that \"parsing Perl suffers from the '[[halting problem]]',\"<ref>{{cite web |url = https://metacpan.org/module/PPI |title = PPI\u2014Parse, Analyze and Manipulate Perl (without perl) |author = Kennedy, Adam |year = 2006 |publisher = [[CPAN]] }}</ref> which was later proved.<ref>{{cite journal |authorlink = Jeffrey Kegler |title = Rice's Theorem |journal = The Perl Review |volume = 4 |issue = 3 |pages = 23\u201329 |date = Summer 2008 }} and {{cite journal |authorlink = Jeffrey Kegler |title = Perl is Undecidable |journal = The Perl Review |volume = 5 |pages = 7\u201311 |date = Fall 2008 }}, available online at {{cite web |url = http://www.jeffreykegler.com/Home/perl-and-undecidability |title = Perl and Undecidability |author = Kegler, Jeffrey }}\n</ref>\n\nPerl is distributed with over 250,000 [[Functional testing|functional tests]] for core Perl language and over 250,000 [[Functional testing|functional tests]] for core modules. These run as part of the normal build process and extensively exercise the interpreter and its core modules. Perl developers rely on the functional tests to ensure that changes to the interpreter do not introduce [[software bug]]s; additionally, Perl users who see that the interpreter passes its functional tests on their system can have a high degree of confidence that it is working properly.\n\n===Availability===\n<!--Note to editors:\nPerl is available on so many platforms that it doesn't make sense to keep a laundry list in this article.\nDo not list a specific platform unless there are notable issues about running Perl on it.\n-->\nPerl is [[dual licensed]] under both the [[Artistic License]] 1.0<ref name=\"artistic-1.0\" /><ref name=\"artistic-1.0-git\" /> and the [[GNU General Public License]].<ref name=\"licensing\" /> Distributions are available for most [[operating system]]s. It is particularly prevalent on [[Unix]] and [[Unix-like]] systems, but it has been ported to most modern (and many obsolete) platforms. With only six{{citation needed|date=November 2017}} reported exceptions, Perl can be compiled from [[source code]] on all [[POSIX]]-compliant, or otherwise-Unix-compatible platforms.<ref name=\"cpanports\">{{cite web |url = http://www.cpan.org/ports/ |title = Perl Ports (Binary Distributions) |publisher = CPAN.org |author = Hietaniemi, Jarkko |year = 1998 }}</ref>\n\nBecause of unusual changes required for the [[classic Mac OS]] environment, a special port called MacPerl was shipped independently.<ref name=\"macperl\">{{cite web |url = http://www.macperl.com/ |title = The MacPerl Pages |year = 1997 |publisher = Prime Time Freeware }}</ref>\n\nThe [[CPAN|Comprehensive Perl Archive Network]] carries a complete list of supported platforms with links to the distributions available on each.<ref>{{cite web |url = http://www.cpan.org/ports/ |title = Perl Ports (Binary Distributions) |accessdate = 2011-01-27 |publisher = [[CPAN]] }}</ref> CPAN is also the source for publicly available Perl modules that are not part of the core Perl distribution.\n\n====Windows====\nUsers of [[Microsoft Windows]] typically install one of the native binary distributions of Perl for Win32, most commonly [[Strawberry Perl]] or [[ActivePerl]]. Compiling Perl from [[source code]] under Windows is possible, but most installations lack the requisite C compiler and build tools. This also makes it difficult to install modules from the CPAN, particularly those that are partially written in C.\n\n[[ActivePerl]] is a closed source distribution from [[ActiveState]] that has regular releases that track the core Perl releases.<ref name=\"activestate\">{{cite web |url = http://www.activestate.com/activeperl |title = ActivePerl is Perl for Windows, Mac, Linux, AIX, HP-UX & Solaris |accessdate = 2011-01-09 |publisher = [[ActiveState|ActiveState Software]] |archive-url = https://web.archive.org/web/20160331201814/http://www.activestate.com/activeperl |archive-date = March 31, 2016 |url-status = dead }}</ref> The distribution previously included the [[Perl package manager]] (PPM),<ref name=\"activestateppm\">{{cite web |url = http://docs.activestate.com/activeperl/5.12/faq/ActivePerl-faq2.html |title = Using PPM |accessdate = 2011-01-09 |publisher = [[ActiveState|ActiveState Software]] }}</ref> a popular tool for installing, removing, upgrading, and managing the use of common Perl modules, however this tool was discontinued as of ActivePerl 5.28<ref>{{Cite web |url=https://www.activestate.com/blog/goodbye-ppm-hello-state-tool/ title=Goodbye PPM, Hello State Tool |website=activestate.com}}</ref>.  Included also is [[PerlScript]], a [[Windows Script Host]] (WSH) engine implementing the Perl language.  [[Visual Perl]] is an ActiveState tool that adds Perl to the Visual Studio .NET development suite.  A [[VBScript]] to Perl converter, as well as a Perl compiler for Windows, and converters of [[awk]] and [[sed]] to Perl have also been produced by this company and included on the ''ActiveState CD for Windows'', which includes all of their distributions plus the [[Komodo IDE]] and all but the first on the Unix/Linux/Posix variant thereof in 2002 and subsequently.<ref>readme.txt</ref>\n\n[[Strawberry Perl]] is an open source distribution for Windows.  It has had regular, quarterly releases since January 2008, including new modules as feedback and requests come in.  Strawberry Perl aims to be able to install modules like standard Perl distributions on other platforms, including compiling XS modules.\n\nThe [[Cygwin]] emulation layer is another way of running Perl under Windows. Cygwin provides a Unix-like environment on Windows, and both Perl and CPAN are available as standard pre-compiled packages in the Cygwin setup program. Since Cygwin also includes [[GNU Compiler Collection|gcc]], compiling Perl from source is also possible.\n\nA perl executable is included in several Windows Resource kits in the directory with other scripting tools.\n\nImplementations of Perl come with the [[MKS Toolkit]], [[Interix]] (the base of earlier implementations of [[Windows Services for Unix]], and [[UWIN]].\n\n==Database interfaces==\nPerl's text-handling capabilities can be used for generating [[SQL]] queries; arrays, hashes, and automatic memory management make it easy to collect and process the returned data. For example, in Tim Bunce's [[Perl DBI]] [[application programming interface]] (API), the arguments to the API can be the text of SQL queries; thus it is possible to program in multiple languages at the same time (e.g., for generating a [[Web page]] using [[HTML]], [[JavaScript]], and SQL in a [[here document]]). The use of Perl [[variable interpolation]] to programmatically customize each of the SQL queries, and the specification of Perl arrays or hashes as the structures to programmatically hold the resulting [[data set]]s from each SQL query, allows a high-level mechanism for handling large amounts of data for post-processing by a Perl subprogram.<ref>{{cite book |last = Descartes |first = Alligator |title = Programming the Perl DBI : [database programming with Perl] |year = 2000 |publisher = O'Reilly |location = Beijing [u.a.] |isbn = 978-1-56592-699-8 |edition = 1 |author2 = Bunce, Tim |url = https://archive.org/details/programmingperld00desc }}</ref>\nIn early versions of Perl, database interfaces were created by relinking the interpreter with a [[client-side]] database library. This was sufficiently difficult that it was done for only a few of the most-important and most widely used databases, and it restricted the resulting <code>perl</code> executable to using just one database interface at a time.\n\nIn Perl 5, database interfaces are implemented by [[Perl DBI]] modules. The DBI (Database Interface) module presents a single, database-independent interface to Perl applications, while the DBD (Database Driver) modules handle the details of accessing some 50 different databases; there are DBD drivers for most [[American National Standards Institute|ANSI]] [[SQL]] databases.\n\nDBI provides caching for database handles and queries, which can greatly improve performance in long-lived execution environments such as [[mod perl]],<ref>{{cite web |last = Bekman |first = Stas |title = Efficient Work with Databases under mod_perl |url = http://perl.apache.org/docs/1.0/guide/performance.html#Efficient_Work_with_Databases_under_mod_perl |accessdate = 2007-09-01 }}</ref> helping high-volume systems avert load spikes as in the [[Slashdot effect]].\n\nIn modern Perl applications, especially those written using [[web framework]]s such as [[Catalyst (software)|Catalyst]], the DBI module is often used indirectly via [[object-relational mapper]]s such as [[DBIx::Class]], Class::DBI<ref>{{Cite web|url=https://metacpan.org/pod/Class::DBI|title=Class::DBI - Simple Database Abstraction - metacpan.org|website=metacpan.org|access-date=2020-04-08}}</ref> or Rose::DB::Object<ref>{{Cite web|url=https://metacpan.org/pod/Rose::DB::Object|title=Rose::DB::Object - Extensible, high performance object-relational mapper (ORM). - metacpan.org|website=metacpan.org|access-date=2020-04-08}}</ref> that generate SQL queries and handle data transparently to the application author.\n\n==Comparative performance==\n[[The Computer Language Benchmarks Game]] compares the performance of implementations of typical programming problems in several programming languages.<ref>{{cite web |url = http://alioth.debian.org/projects/benchmarksgame/ |title = Alioth: The Computer Language Benchmarks Game: Project Info |accessdate = 2011-01-13 |publisher = [[Alioth]] |archive-url = https://web.archive.org/web/20130325192723/https://alioth.debian.org/projects/benchmarksgame/ |archive-date = March 25, 2013 |url-status = dead |df = mdy-all }}</ref> The submitted Perl implementations typically perform toward the high end of the memory-usage spectrum and give varied speed results. Perl's performance in the benchmarks game is typical for interpreted languages.<ref>{{cite web |url = http://benchmarksgame.alioth.debian.org/u32/which-programs-are-fastest.php?v8=on&lua=on&jruby=on&php=on&python3=on&yarv=on&perl=on |archive-url = https://web.archive.org/web/20130517145336/http://benchmarksgame.alioth.debian.org/u32/which-programs-are-fastest.php?v8=on&lua=on&jruby=on&php=on&python3=on&yarv=on&perl=on |url-status = dead |archive-date = 2013-05-17 |title = Which programs are fastest? |accessdate = 2011-01-13 |work = Computer Language Benchmarks Game |publisher = [[Alioth]] }}</ref>\n\nLarge Perl programs start more slowly than similar programs in compiled languages because perl has to compile the source every time it runs. In a talk at the [[Yet Another Perl Conference|YAPC::Europe 2005]] conference and subsequent article \"A Timely Start,\" Jean-Louis Leroy found that his Perl programs took much longer to run than expected because the perl interpreter spent significant time finding modules within his over-large include path.<ref>{{cite web |url = http://www.perl.com/pub/a/2005/12/21/a_timely_start.html |title = A Timely Start |author = Leroy, Jean-Louis |date = 2005-12-01 |publisher = O'Reilly }}</ref> Unlike Java, Python, and Ruby, Perl has only experimental support for pre-compiling.<ref>{{cite web |url = https://metacpan.org/module/NWCLARK/perl-5.8.8/ext/B/B/Bytecode.pm#KNOWN-BUGS |title = B::Bytecode Perl compiler's bytecode backend |author1 = Beattie, Malcolm |author2 = Enache Adrian |lastauthoramp = yes |year = 2003 |publisher = [[CPAN]] }}</ref> Therefore, Perl programs pay this overhead penalty on every execution. The run phase of typical programs is long enough that [[amortized]] startup time is not substantial, but benchmarks that measure very short execution times are likely to be skewed due to this overhead.\n\nA number of tools have been introduced to improve this situation. The first such tool was Apache's [[mod perl]], which sought to address one of the most-common reasons that small Perl programs were invoked rapidly: [[Common Gateway Interface|CGI]] [[World Wide Web|Web]] development. [[ActiveState|ActivePerl]], via Microsoft [[ISAPI]], provides similar performance improvements.\n\nOnce Perl code is compiled, there is additional overhead during the execution phase that typically isn't present for programs written in compiled languages such as C or C++. Examples of such overhead include [[bytecode]] interpretation, reference-counting memory management, and dynamic type-checking.\n\n===Optimizing===\nBecause Perl is an interpreted language, it can [[Interpreted language#Disadvantages|give problems]] when efficiency is critical; in such situations, the most critical routines can be written in other languages (such as [[C (programming language)|C]]), which can be connected to Perl via simple Inline modules or the more complex but flexible [[XS (Perl)|XS]] mechanism.<ref>{{cite web |url = https://metacpan.org/module/Inline |title = Inline - metacpan.org |accessdate = 2011-01-26 |last = Ingerson |first = Brian |publisher = [[CPAN]] |url-status = dead |archiveurl = https://web.archive.org/web/20130613163723/https://metacpan.org/module/Inline |archivedate = June 13, 2013 }}</ref>\n\n==Perl 5==\nPerl 5, the language usually referred to as \"Perl\", continues to be actively developed. Perl 5.12.0 was released in April 2010 with some new features influenced by the design of Perl 6,<ref name=\"5120delta\" /><ref name=\"heise2010\">{{cite web |url = http://www.h-online.com/open/news/item/Perl-5-12-0-released-Update-976919.html |archiveurl = https://web.archive.org/web/20100419023449/http://www.h-online.com/open/news/item/Perl-5-12-0-released-Update-976919.html |archivedate = April 19, 2010 |title = Perl 5.12.0 released - Update |accessdate = 2011-01-08 |date = 2010-04-13 |publisher = Heise Media UK }}</ref> followed by Perl 5.14.1 (released on June 17, 2011), Perl 5.16.1 (released on August 9, 2012.<ref>{{cite web |url = http://www.perlmonks.org/?node_id=986397 |accessdate = 2012-08-26 |date = 2012-08-09 |title = perl 5.16.1 released! }}</ref>), and Perl 5.18.0 (released on May 18, 2013). Perl 5 development versions are released on a monthly basis, with major releases coming out once per year.<ref>{{cite web |url = https://lwn.net/Articles/484297/ |accessdate = 2012-03-28 |date = 2012-02-29 |publisher = LWN.net |title = The unstoppable Perl release train? }}</ref>\n\nThe relative proportion of Internet searches for \"Perl programming\", as compared with similar searches for other programming languages, steadily declined from about 10% in 2005 to about 2% in 2011, to about 0.7% in 2020.<ref>{{cite web |title = TIOBE Programming Community Index Perl |author = TIOBE Software Index |year = 2020 |url = https://www.tiobe.com/tiobe-index/ |accessdate = 2020-02-06 }}</ref>\n\n==Raku (Perl 6)==\n{{Main|Raku (programming language)}}\n[[Image:Camelia.svg|thumb|right|200px|''Camelia'', the logo for the Perl 6 project.<ref>{{cite web |url = http://perl6.org/ |title = Perl 6 |accessdate = 2011-02-27 |publisher = The Perl 6 Project }}</ref>]]\n\nAt the 2000 [[O'Reilly Open Source Convention|Perl Conference]], Jon Orwant made a case for a major new language-initiative.<ref>\n{{cite web |url = http://www.nntp.perl.org/group/perl.perl6.meta/2000/10/msg424.html |title = Transcription of Larry's talk |accessdate = 2011-01-25 |last = Torkington |first = Nathan |publisher = nntp.perl.org }}</ref> This led to a decision to begin work on a redesign of the language, to be called Perl 6. Proposals for new language features were solicited from the Perl community at large, which submitted more than 300 [[Request for Comments|RFCs]].\n\nWall spent the next few years digesting the RFCs and synthesizing them into a coherent framework for Perl 6. He presented his design for Perl 6 in a series of documents called \"apocalypses\"{{snd}}numbered to correspond to chapters in ''Programming Perl''. {{as of|2011|January}}, the developing specification of Perl 6 was encapsulated in design documents called Synopses{{snd}}numbered to correspond to Apocalypses.<ref name=\"syn6\">{{cite web |url = http://perlcabal.org/syn/ |title = Official Perl 6 Documentation |accessdate = 2011-01-25 |publisher = The Perl 6 Project |archive-url = https://web.archive.org/web/20090831103918/http://perlcabal.org/syn/ |archive-date = August 31, 2009 |url-status = dead }}</ref>\n\nThesis work by [[Bradley M. Kuhn]], overseen by Wall, considered the possible use of the [[Java virtual machine]] as a runtime for Perl.<ref>{{cite journal |last = Kuhn |first = Bradley |authorlink = Bradley M. Kuhn |title = Considerations on Porting Perl to the Java Virtual Machine |publisher = University of Cincinnati |date = January 2001 |url = http://www.ebb.org/bkuhn/writings/technical/thesis/ |accessdate = 2008-06-28 }}\n</ref> Kuhn's thesis showed this approach to be problematic. In 2001, it was decided that Perl 6 would run on a cross-language [[virtual machine]] called [[Parrot virtual machine|Parrot]]. This will mean that other languages targeting the Parrot will gain native access to [[CPAN]], allowing some level of cross-language development.\n\nIn 2005, [[Audrey Tang]] created the [[Pugs (programming)|Pugs]] project, an implementation of Perl 6 in [[Haskell (programming language)|Haskell]]. This acted as, and continues to act as, a test platform for the Perl 6 language (separate from the development of the actual implementation){{snd}}allowing the language designers to explore. The Pugs project spawned an active Perl/Haskell cross-language community centered around the [[freenode]] #perl6 IRC channel. Many [[functional programming]] influences were absorbed by the Perl 6 design team.\n\nIn 2012, Perl 6 development was centered primarily around two compilers:<ref>{{cite web |url = http://perl6.org/compilers/features |title = Feature comparison of Perl 6 compilers |access-date = March 28, 2012 |archive-url = https://web.archive.org/web/20170811073233/https://perl6.org/compilers/features |archive-date = August 11, 2017 |url-status = dead }}</ref>\n# [[Rakudo]], an implementation running on the [[Parrot virtual machine]] and the [[Java virtual machine]].<ref>{{cite web |last = Worthington |first = Jonathan |title = Rakudo JVM News: More tests, plus Thread and Promise prototypes |url = http://6guts.wordpress.com/2013/07/15/rakudo-jvm-news-more-tests-plus-thread-and-promise-prototypes/ |work = 6guts |accessdate = July 24, 2013 }}</ref>\n# [[Niecza]], which targets the [[Common Language Runtime]].\n\nIn 2013, [[MoarVM]] (\u201cMetamodel On A Runtime\u201d), a C language-based [[virtual machine]] designed primarily for Rakudo was announced.<ref>{{cite web |last = Worthington |first = Jonathan |title = MoarVM: A virtual machine for NQP and Rakudo |url = http://6guts.wordpress.com/2013/05/31/moarvm-a-virtual-machine-for-nqp-and-rakudo/ |work = 6guts |accessdate = July 24, 2013 }}</ref>\n\nIn October 2019, Perl 6 was renamed to Raku.<ref>{{cite web|url=https://lwn.net/Articles/802329/ |title=rename-lwn}}</ref>\n\n{{As of|2017}} only the [[Rakudo]] implementation and [[MoarVM]] are under active development, and other virtual machines, such as the [[Java Virtual Machine]] and [[JavaScript]] are supported.<ref>{{cite web|url=https://github.com/rakudo/rakudo/ |title=rakudo/rakudo - GitHub |publisher=Github.com |date= |accessdate=2013-09-21}}</ref>\n\n==Perl community==\nPerl's culture and community has developed alongside the language itself. [[Usenet]] was the first public venue in which Perl was introduced, but over the course of its evolution, Perl's community was shaped by the growth of broadening Internet-based services including the introduction of the World Wide Web. The community that surrounds Perl was, in fact, the topic of Wall's first \"State of the Onion\" talk.<ref>{{cite web |url = http://grnlight.net/index.php/programming-articles/100-perl-culture |title = Perl Culture (AKA the first State of the Onion) |first = Larry |last = Wall |authorlink = Larry Wall |date = 2014-05-22 }}</ref>\n\n===State of the Onion===\nState of the Onion is the name for Wall's yearly [[keynote]]-style summaries on the progress of Perl and its community.  They are characterized by his hallmark humor, employing references to Perl's culture, the wider hacker culture, Wall's linguistic background, sometimes his family life, and occasionally even his Christian background.<ref>{{cite web |title = 2nd State of the Onion |author = Larry Wall |url = http://www.wall.org/~larry/onion/onion.html |accessdate = 2012-10-12 }} (Search for 'church')</ref>\n\nEach talk is first given at various Perl conferences and is eventually also published online.\n\n===Perl pastimes===\n; JAPHs\n: In email, Usenet, and message board postings, \"[[Just another Perl hacker]]\" (JAPH) programs are a common trend, originated by [[Randal L. Schwartz]], one of the earliest professional Perl trainers.<ref>\n{{cite newsgroup |author = [[Randal L. Schwartz]] |title = Who is Just another Perl hacker? |message-id = m1hfpvh2jq.fsf@halfdome.holdit.com |newsgroup = comp.lang.perl.misc |date = 1999-05-02 |url = https://groups.google.com/forum/#!msg/comp.lang.perl.misc/nK-lswsaMec/DBL87v4FxOwJ |accessdate = December 5, 2014 }}\n</ref> In the parlance of Perl culture, Perl programmers are known as Perl hackers, and from this derives the practice of writing short programs to print out the phrase \"Just another Perl hacker\". In the spirit of the original concept, these programs are moderately obfuscated and short enough to fit into the signature of an email or Usenet message. The \"canonical\" JAPH as developed by Schwartz includes the comma at the end, although this is often omitted.<ref>{{cite web |url = http://www.perlmonks.org/bare/?node_id=443856 |title = Canonical JAPH |accessdate = 2011-05-16 |last = Schwartz |first = Randal |authorlink = Randal L. Schwartz |date = 2005-03-31 |publisher = [[PerlMonks]] }}</ref>\n; Perl golf\n: Perl \"golf\" is the pastime of reducing the number of characters (key \"strokes\") used in a Perl program to the bare minimum, much in the same way that [[golf]] players seek to take as few shots as possible in a round. The phrase's first use<ref name=\"perl-golf-coined\">{{cite newsgroup |author = Greg Bacon |title = Re: Incrementing a value in a slice |message-id = 7imnti$mjh$1@info2.uah.edu |newsgroup = comp.lang.perl.misc |date = 1999-05-28 |url = http://groups.google.com/group/comp.lang.perl.misc/msg/7b97c434492c8d20 |accessdate = 2011-07-12 }}</ref> emphasized the difference between pedestrian code meant to teach a newcomer and terse hacks likely to amuse experienced Perl programmers, an example of the latter being [[JAPH]]s that were already used in signatures in Usenet postings and elsewhere. Similar stunts had been an unnamed pastime in the language [[APL (programming language)|APL]] in previous decades. The use of Perl to write a program that performed [[RSA (algorithm)|RSA]] encryption prompted a widespread and practical interest in this pastime.<ref name=\"rsa\">\n{{cite web |url = http://www.cypherspace.org/rsa/pureperl.html |title = RSA in 5 lines of perl |accessdate = 2011-01-10 |last = Back |first = Adam }}</ref> In subsequent years, the term \"[[code golf]]\" has been applied to the pastime in other languages.<ref>{{cite web |url = http://codegolf.com/ |title = Code Golf: What is Code Golf? |publisher = 29degrees |year = 2007 |access-date = November 26, 2018 |archive-url = https://web.archive.org/web/20120113152453/http://codegolf.com/# |archive-date = January 13, 2012 |url-status = dead |df = mdy-all }}</ref> A Perl Golf Apocalypse was held at Perl Conference 4.0 in Monterey, California in July 2000.\n; Obfuscation\n: As with C, [[obfuscated code]] competitions were a well known pastime in the late 1990s. The [[Obfuscated Perl Contest]] was a competition held by [[The Perl Journal]] from 1996 to 2000 that made an arch virtue of Perl's syntactic flexibility. Awards were given for categories such as \"most powerful\"\u2014programs that made efficient use of space\u2014and \"best four-line signature\" for programs that fit into four lines of 76 characters in the style of a Usenet [[signature block]].<ref name=\"gallo03\">\n{{cite book |last1 = Gallo |first1 = Felix |title = Games, diversions, and Perl culture: best of the Perl journal |chapter = The Zeroth Obfuscated Perl Contest |editor= Jon Orwant |publisher = O'Reilly Media |year = 2003 |chapter-url = http://oreilly.com/catalog/tpj3/chapter/ch43.pdf |accessdate = 2011-01-12 |url-status = dead |archiveurl = https://web.archive.org/web/20091122114544/http://oreilly.com/catalog/tpj3/chapter/ch43.pdf |archivedate = November 22, 2009 |df = mdy-all }}\n</ref>\n; Poetry\n: Perl poetry is the practice of writing poems that can be compiled as legal Perl code, for example the piece known as [[Black Perl]]. Perl poetry is made possible by the large number of English words that are used in the Perl language. New poems are regularly submitted to the community at [[PerlMonks]].<ref>\n{{cite web |url = http://www.perlmonks.org/?node_id=1590 |title = Perl Poetry |accessdate = 2011-01-27 |publisher = [[PerlMonks]] }}\n</ref>\n\n===Perl on IRC===\nThere are a number of [[Internet Relay Chat|IRC]] channels that offer support for the language and some modules.\n\n{| class=\"wikitable\"\n|-\n! IRC Network\n! Channels\n|-\n| irc.freenode.net\n| #perl #perl6 #cbstream #perlcafe #poe\n|-\n| irc.perl.org\n| #moose #poe #catalyst #dbix-class #perl-help #distzilla #epo #corehackers #sdl #win32 #toolchain #padre #dancer\n|-\n| irc.slashnet.org\n| #perlmonks\n|-\n| irc.oftc.net\n| #perl\n|-\n| irc.efnet.net\n| #perlhelp\n|-\n| irc.rizon.net\n| #perl\n|-\n| irc.debian.org\n| #debian-perl (packaging Perl modules for Debian)\n|}\n\n===CPAN Acme===\nThere are also many examples of code written purely for entertainment on the [[CPAN]]. <code>Lingua::Romana::Perligata</code>, for example, allows writing programs in [[Latin]].<ref>{{cite web |url = http://www.csse.monash.edu.au/~damian/papers/HTML/Perligata.html |title = Lingua::Romana::Perligata -- Perl for the XXI-imum Century |author = Conway, Damian }}</ref> Upon execution of such a program, the module translates its source code into regular Perl and runs it.\n\nThe Perl community has set aside the \"[[Acme Corporation|Acme]]\" namespace for modules that are fun in nature (but its scope has widened to include exploratory or experimental code or any other module that is not meant to ever be used in production). Some of the Acme modules are deliberately implemented in amusing ways. This includes <code>Acme::Bleach</code>, one of the first modules in the <code>Acme::</code> namespace,<ref>{{cite web |url = http://grnlight.net/index.php/programming-articles/101-use-perl-journal-of-acme |archive-url = https://web.archive.org/web/20140522123044/http://grnlight.net/index.php/programming-articles/101-use-perl-journal-of-acme |url-status = dead |archive-date = 2014-05-22 |title = use Perl; Journal of acme |date = 2014-05-22 |author = Brocard, Leon |publisher = GrnLight.net }}</ref> which allows the program's source code to be \"whitened\" (i.e., all characters replaced with whitespace) and yet still work.\n\n==Example code==\nIn older versions of Perl, one would write the [[Hello World]] program as:\n\n<source lang=\"perl\">\nprint \"Hello, World!\\n\";\n</source>\n\nHere is a more complex Perl program, that counts down the seconds up to a given threshold:\n\n<source lang=\"perl\">\n#!/usr/bin/perl\nuse strict;\nuse warnings;\nuse IO::Handle;\n\nmy ( $remaining, $total );\n\n$remaining = $total = shift(@ARGV);\n\nSTDOUT->autoflush(1);\n\nwhile ( $remaining ) {\n    printf ( \"Remaining %s/%s \\r\", $remaining--, $total );\n    sleep 1;\n}\n\nprint \"\\n\";\n</source>\n\nThe perl interpreter can also be used for one-off scripts on the command line. The following example (as invoked from an sh-compatible shell, such as Bash) translates the string \"Bob\" in all files ending with .txt in the current directory to \"Robert\":\n\n<source lang=\"bash\">\n$ perl -i.bak -lp -e 's/Bob/Robert/g' *.txt\n</source>\n\n==Criticism==\nPerl has been referred to as \"[[wikt:line noise|line noise]]\" by some programmers who claim its syntax makes it a [[write-only language]]. The earliest such mention was in the first edition of the book ''[[Learning Perl]]'', a Perl 4 tutorial book written by [[Randal L. Schwartz]],<ref>{{cite journal |title = Developer Update|volume = 2 |journal = Dr. Dobb's Developer Update |publisher = Miller-Freeman |year = 1995 }}</ref><!-- page 15 --> in the first chapter of which he states: \"Yes, sometimes Perl looks like line noise to the uninitiated, but to the seasoned Perl programmer, it looks like checksummed line noise with a mission in life.\"<ref name=\"LP\">{{cite book |title = Learning Perl |last = Schwartz |first = Randal L. |authorlink = Randal L. Schwartz |publisher = O'Reilly & Associates |year = 1993 |title-link = Learning Perl |bibcode = 1993lepe.book.....S }}</ref> He also stated that the accusation that Perl is a write-only language could be avoided by coding with \"proper care\".<ref name=\"LP\" /> The Perl overview document ''perlintro'' states that the names of built-in \"magic\" scalar [[Variable (computer science)|variables]] \"look like punctuation or line noise\".<ref>{{cite web |url = http://perldoc.perl.org/perlintro.html |title = perlintro |work = Perl 5 version 18.0 documentation |publisher = Perl 5 Porters and perldoc.perl.org |accessdate = 2013-06-30 |archive-url = https://web.archive.org/web/20110109121845/http://perldoc.perl.org/perlintro.html |archive-date = January 9, 2011 |url-status = dead }}</ref> However, the English module provides  both long and short English alternatives. ''perlstyle'' document states that line noise in regular expressions could be mitigated using the <code>/x</code> modifier to add whitespace.<ref>{{cite web |url = http://perldoc.perl.org/perlstyle.html |title = perlstyle |work = Perl 5 version 18.0 documentation |publisher = Perl 5 Porters and perldoc.perl.org |accessdate = 2013-06-30 }}</ref>\n\nAccording to the ''Perl 6 FAQ'', Perl 6 was designed to mitigate \"the usual suspects\" that elicit the \"line noise\" claim from Perl 5 critics, including the removal of \"the majority of the punctuation variables\" and the sanitization of the regex syntax.<ref name=\"P6FAQ\">{{cite web |url = http://www.perl6.org/archive/faq.html |title = Perl 6 FAQ |publisher = Perl 6 Project |accessdate = 2013-06-30 }}</ref> The ''Perl 6 FAQ'' also states that what is sometimes referred to as Perl's line noise is \"the actual syntax of the language\" just as [[gerund]]s and [[Preposition and postposition|prepositions]] are a part of the [[English language]].<ref name=\"P6FAQ\" /> In a December 2012 blog posting, despite claiming that \"Rakudo Perl 6 has failed and will continue to fail unless it gets some adult supervision\", [[chromatic (programmer)|chromatic]] stated that the design of Perl 6 has a \"well-defined grammar\" as well as an \"improved type system, a unified object system with an intelligent metamodel, metaoperators, and a clearer system of context that provides for such niceties as pervasive laziness\".<ref name=\"chromatic-blog\">{{cite web |url = http://www.modernperlbooks.com/mt/2012/12/the-implementation-of-perl-5-versus-perl-6.html |title = The Implementation of Perl 5 versus Perl 6 |author = chromatic |authorlink = chromatic (programmer) |date = 2012-12-31 |accessdate = 2013-06-30 }}</ref> He also stated that \"Perl 6 has a coherence and a consistency that Perl 5 lacks.\"<ref name=\"chromatic-blog\" />\n\n==See also==\n{{Portal|Free and open-source software|Computer programming}}\n* [[Outline of Perl]]\n* [[Perl Data Language]]\n* [[Perl Object Environment]]\n* [[Plain Old Documentation]]\n\n==References==\n{{reflist|30em}}\n\n==Further reading==\n* [http://shop.oreilly.com/product/0636920018452.do Learning Perl] 6th Edition (2011), O'Reilly. Beginner-level introduction to Perl.\n* [http://ofps.oreilly.com/titles/9781118013847/index.html Beginning Perl] 1st Edition (2012), Wrox. A beginner's tutorial for those new to programming or just new to Perl.\n* [http://onyxneon.com/books/modern_perl/ Modern Perl] 2nd Edition (2012), Onyx Neon. Describes [[Modern Perl]] programming techniques.\n* [http://shop.oreilly.com/product/9780596004927.do Programming Perl] 4th Edition (2012), O'Reilly. The definitive Perl reference.\n* [http://www.pearsonhighered.com/educator/product/Effective-Perl-Programming-Ways-to-Write-Better-More-Idiomatic-Perl-2E/9780321496942.page Effective Perl Programming] 2nd Edition (2010), Addison-Wesley. Intermediate- to advanced-level guide to writing idiomatic Perl.\n* ''[[Perl Cookbook]]'', {{ISBN|0-596-00313-7}}. Practical Perl programming examples.\n* {{cite book |last = Dominus |first = Mark Jason |title = Higher Order Perl |url = http://hop.perl.plover.com/book/ |year = 2005 |publisher = Morgan Kaufmann |isbn = 978-1-55860-701-9 }} Functional programming techniques in Perl.\n\n==External links==\n{{Sister project links|commons=Category:Perl (programming language)|v=Topic:Perl|n=no|q=Perl|s=no|b=Perl Programming}}\n<!--======================== {{No more links}} ============================\n    | PLEASE BE CAUTIOUS IN ADDING MORE LINKS TO THIS ARTICLE. Wikipedia  |\n    | is not a collection of links nor should it be used for advertising. |\n    |                                                                     |\n    |           Excessive or inappropriate links WILL BE DELETED.         |\n    | See [[Wikipedia:External links]] & [[Wikipedia:Spam]] for details.  |\n    |                                                                     |\n    | If there are already plentiful links, please propose additions or   |\n    | replacements on this article's discussion page, or submit your link |\n    | to the relevant category at the Open Directory Project (dmoz.org)   |\n    | and link back to that category using the {{dmoz}} template.         |\n==={{No more links}}=========-->\n<!-- Before adding any links, make sure you have read the External Links style guide, then stopped and reread it again. If you aren't absolutely sure the link is in compliance, ask on the talk page first!\n-->\n* {{Official website}}\n\n<!-- Before adding any links, make sure you have read the External Links style guide, then stopped and reread it again. If you aren't absolutely sure the link is in compliance, ask on the talk page first!\nSee [http://en.wikipedia.org/wiki/Wikipedia:External_links/Noticeboard#.27Perl.27_external_links]\n-->\n{{Perl}}\n{{Programming languages}}\n{{FOSS}}\n\n{{Authority control}}\n\n[[Category:Perl| ]]\n[[Category:American inventions]]\n[[Category:C programming language family]]\n[[Category:Cross-platform software]]\n[[Category:Dynamic programming languages]]\n[[Category:Dynamically typed programming languages]]\n[[Category:Free compilers and interpreters]]\n[[Category:Free software programmed in C]]\n[[Category:High-level programming languages]]\n[[Category:Object-oriented programming languages]]\n[[Category:Procedural programming languages]]\n[[Category:Programming languages created in 1987]]\n[[Category:Scripting languages]]\n[[Category:Software using the Artistic license]]\n[[Category:Text-oriented programming languages]]\n[[Category:Unix programming tools]]\n[[Category:Articles with example code]]\n", "text_old": "{{short description|Interpreted programming language first released in 1987}}\n{{about|the programming language}}\n{{distinguish|PEARL (programming language)}}\n{{Use mdy dates|date=September 2014}}\n{{good article}}\n{{Infobox programming language\n| name = Perl\n| logo = Programming-republic-of-perl.png\n| paradigm = [[Multi-paradigm]]: [[Functional programming|functional]], [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]] ([[Class-based programming|class-based]]), [[Reflective programming|reflective]]\n| designer = [[Larry Wall]]\n| developer = [[Larry Wall]]\n| typing = Dynamic\n| influenced = [[CoffeeScript]],{{citation needed|date=January 2016}} [[Groovy (programming language)|Groovy]],{{citation needed|date=February 2016}} [[JavaScript]], [[Julia (programming language)|Julia]], [[LPC (programming language)|LPC]], [[PHP]], [[Python (programming language)|Python]], [[Raku (programming language)|Raku]], [[Ruby (programming language)|Ruby]], [[PowerShell]]\n| license = [[Artistic License]] 1.0<ref name=\"artistic-1.0\">{{cite web|url=http://dev.perl.org/licenses/artistic.html|title=The \"Artistic License\" - dev.perl.org|website=dev.perl.org}}</ref><ref name=\"artistic-1.0-git\">[http://perl5.git.perl.org/perl.git/blob/HEAD:/Artistic Artistic] - file on the Perl 5 git repository</ref> or [[GNU General Public License]]<ref name=\"licensing\">{{cite web |url = http://dev.perl.org/licenses |title = Perl Licensing |accessdate = 2011-01-08 |publisher = dev.perl.org }}</ref>\n| website = {{url|https://www.perl.org}}\n| wikibooks = Perl Programming\n| year = {{Start date and age|1987|12|18}}\n\n| latest_release_version = {{Unbulleted list\n\n|5.30.2<ref>{{cite web|url = https://www.nntp.perl.org/group/perl.perl5.porters/2020/03/msg257227.html |title = Perl 5.30.2 is now available! |accessdate = 2020-03-15 |publisher = www.nntp.perl.org }}</ref> / {{Start date and age|mf=yes|2020|03|14|df=yes}}\n\n|5.28.2<ref>{{cite web|url = https://www.nntp.perl.org/group/perl.perl5.porters/2019/04/msg254456.html |title = Perl 5.28.2 is now available! |accessdate = 2019-04-19 |publisher = www.nntp.perl.org }}</ref> / {{Start date and age|mf=yes|2019|04|19|df=yes}}\n\n}}\n\n| latest_preview_version = 5.31.10<ref>{{cite web|url = https://www.nntp.perl.org/group/perl.perl5.porters/2020/03/msg257274.html | title = Perl 5.31.10 is now available! | accessdate = 2020-03-21 | publisher = perl.org}}</ref>\n\n| latest_preview_date = {{Start date and age|mf=yes|2020|03|20}}\n\n| turing-complete = Yes\n| influenced_by = [[AWK (programming language)|AWK]], [[BASIC]], [[C (programming language)|C]], [[C++]], [[Lisp (programming language)|Lisp]], [[sed]], [[Unix shell]]<ref>{{cite web|title=Programming is Hard, Let's Go Scripting...|author=Larry Wall|url=https://www.perl.com/pub/2007/12/06/soto-11.html/|quote=All language designers have their occasional idiosyncracies. I\u2019m just better at it than most.|accessdate=}}</ref>\n| programming_language = [[C (programming language)|C]]\n| operating_system = [[Cross-platform]]\n| file_ext = .plx, .pl, .pm, .xs, .t, .pod\n}}\n\n'''Perl''' is a family of two [[High-level programming language|high-level]], [[General-purpose programming language|general-purpose]], [[Interpreter (computing)|interpreted]], [[dynamic programming language]]s. \"Perl\" refers to Perl 5, but from 2000 to 2019 it also referred to its redesigned \"sister language\", Perl 6, before the latter's name was officially changed to [[Raku (programming  language)|Raku]] in October 2019.<ref>{{cite web |url = https://www.perl.org/about.html |title = About Perl |publisher = perl.org |quote = \"Perl\" is a family of languages, \"Perl 6\" is part of the family, but it is a separate language that has its own development team. Its existence has no significant impact on the continuing development of \"Perl 5\". |accessdate = 2013-04-20 }}</ref><ref>{{cite web |url = https://github.com/perl6/problem-solving/pull/89/files/2d7b3f5a85ae9c8f913ba16994836ed59cf6de50 |title = Path to raku by lizmat |publisher = github.com |quote = This document describes the steps to be taken to effectuate a rename of `Perl 6` to `Raku`, as described in issue #81. | accessdate = 2019-10-16 }}</ref>\n\nThough Perl is not officially an acronym,<ref>{{cite web |url = http://learn.perl.org/faq/perlfaq1.html#Whats-the-difference-between-perl-and-Perl |title = General Questions About Perl |last = Lapworth |first = Leo |publisher = Perl.org |work = Perl FAQ |accessdate = February 24, 2012 }}</ref> there are various [[backronym]]s in use, including \"Practical [[Data extraction|Extraction]] and Reporting Language\".<ref>{{cite web |url = http://linux.die.net/man/1/perl |title = perl(1): Practical Extraction/Report Language - Linux man page |date =  |publisher = Linux.die.net |accessdate = 2013-07-23 }}</ref> Perl was originally developed by [[Larry Wall]] in 1987 as a general-purpose [[Unix]] [[scripting language]] to make report processing easier.<ref name=\"sheppard00\">{{cite web |url = http://www.perl.com/pub/2000/10/begperl1.html |title = Beginner's Introduction to Perl |last = Sheppard |first = Doug |date = 2000-10-16 |publisher = dev.perl.org |accessdate = 2011-01-08 }}</ref> Since then, it has undergone many changes and revisions. Raku, which began as a redesign of Perl 5 in 2000, eventually evolved into a separate language. Both languages continue to be developed independently by different development teams and liberally borrow ideas from one another.\n\nThe Perl languages borrow features from other programming languages including [[C (programming language)|C]], [[shell script]] ([[Unix shell|sh]]), [[AWK (programming language)|AWK]], and [[sed]];<ref name=\"perltimeline\">{{cite web |url = http://history.perl.org/PerlTimeline.html |title = The Timeline of Perl and its Culture (v3.0_0505) |year = 1999 |author = Ashton, Elaine }}</ref> Wall also alludes to [[BASIC]] and [[Lisp (programming language)|Lisp]] in the introduction to ''[[Learning Perl]]'' (Schwartz & Christiansen) and so on.<ref>{{cite web|url=http://dl.acm.org/citation.cfm?id=572875|title=Learning PERL|first1=Randal L.|last1=Schwartz|first2=Tom/Foreword By-Wall|last2=Christiansen|date=July 1, 1997|publisher=O'Reilly & Associates, Inc.|via=dl.acm.org}}{{Dead link|date=January 2020 |bot=InternetArchiveBot |fix-attempted=yes }}</ref> They provide text processing facilities without the arbitrary data-length limits of many contemporary [[List of Unix commands|Unix command line tools]],<ref name=\"programmingperl2\">{{cite book |title = Programming Perl, Third Edition |date = July 2000 |publisher = [[O'Reilly Media]] |isbn = 978-0-596-00027-1 |author = [[Larry Wall|Wall, Larry]], Tom Christiansen and [[Jon Orwant]] }}</ref> facilitating manipulation of [[text file]]s. Perl 5 gained widespread popularity in the late 1990s as a [[Common Gateway Interface|CGI scripting]] language, in part due to its unsurpassed [[regular expression]] and [[String (computing)|string]] [[parsing]] abilities.<ref>{{cite web |url = http://www.catb.org/esr/writings/taoup/html/ch14s04.html#perl |title = Language Evaluations |quote = Perl's strongest point is its extremely powerful built-in facilities for pattern-directed processing of textual, line-oriented data formats; it is unsurpassed at this. }}</ref><ref>{{cite web |url = http://www.cio.com/article/2437271/developer/you-used-perl-to-write-what--.html |title = You Used Perl to Write WHAT?! |date = January 24, 2008 |quote = perl has always been the go-to language for any task that involves pattern-matching input }}</ref><ref>{{cite web |url = http://archive.oreilly.com/pub/a/oreilly/perl/news/importance_0498.html |title = The Importance of Perl |quote = Perl's unparalleled ability to process text... |access-date = February 4, 2015 |archive-url = https://web.archive.org/web/20150202010003/http://archive.oreilly.com/pub/a/oreilly/perl/news/importance_0498.html# |archive-date = February 2, 2015 |url-status = dead |df = mdy-all }}</ref><ref name=\"roderick02\">{{cite book |title = Advanced Linux Networking |date = June 21, 2002 |publisher = Addison-Wesley Professional |isbn = 978-0-201-77423-8 |page = 594 |last1 = Smith |first1 = Roderick W. }}</ref>\n\nIn addition to CGI, Perl 5 is used for [[System administrator|system administration]], [[Computer network programming|network programming]], finance, [[bioinformatics]], and other applications, such as for [[graphical user interface|GUI]]s. It has been nicknamed \"the Swiss Army chainsaw <!-- Note to editors. This should read *chainsaw*, not knife. Check the ref -->of scripting languages\" because of its flexibility and power,<ref>{{cite web |url = http://www.perl.com/pub/a/2000/10/begperl1.html |title = Beginner's Introduction to Perl |last = Sheppard |first = Doug |date = 2000-10-16 |publisher = [[O'Reilly Media]] |accessdate = 2008-07-27 }}</ref> and also its ugliness.<ref>{{cite web |url = http://www.catb.org/jargon/html/S/Swiss-Army-chainsaw.html |title = Swiss Army chainsaw |last = Raymond |first = Eric |date = 2003-12-23 |work = The Jargon File |accessdate = 2014-11-29 }}</ref> In 1998, it was also referred to as the \"[[duct tape]] that holds the Internet together,\" in reference to both its ubiquitous use as a [[glue language]] and its perceived inelegance.<ref name=\"leonard98\">{{cite news |url = http://www.salon.com/1998/10/13/feature_269/ |title = The joy of Perl |last = Leonard |first = Andrew |work = [[Salon.com]] |accessdate = 2012-06-05 }}</ref>\n\n==History==\n\n===Early versions===\n[[Larry Wall]] began work on Perl in 1987, while working as a programmer at [[Unisys]]<ref name=\"programmingperl2\" />, and released version 1.0 to the comp.sources.misc [[newsgroup]] on December 18, 1987.<ref>{{cite newsgroup |author = Larry Wall |title = v13i001: Perl, a \"replacement\" for awk and sed, Part01/10 |date = 1988-02-01 |newsgroup = comp.sources.unix |message-id =  |url = https://groups.google.com/forum/#!topic/comp.sources.unix/Njx6b6TiZos |accessdate = 2011-01-13 }}</ref> The language expanded rapidly over the next few years.\n\nPerl 2, released in 1988, featured a better regular expression engine. Perl 3, released in 1989, added support for [[binary data]] streams.\n\nOriginally, the only documentation for Perl was a single lengthy [[man page]]. In 1991, ''[[Programming Perl]]'', known to many Perl programmers as the \"Camel Book\" because of its cover, was published and became the ''de facto'' reference for the language. At the same time, the Perl version number was bumped to 4, not to mark a major change in the language but to identify the version that was well documented by the book.\n\n=== Early Perl 5 ===\n{{Main|Perl 5 version history}}\nPerl 4 went through a series of [[maintenance release]]s, culminating in Perl 4.036 in 1993, whereupon Wall abandoned Perl 4 to begin work on Perl 5. Initial design of Perl 5 continued into 1994. The ''perl5-porters'' [[mailing list]] was established in May 1994 to coordinate work on porting Perl 5 to different platforms. It remains the primary forum for development, maintenance, and porting of Perl 5.<ref>{{Cite web | url=http://www.nntp.perl.org/group/perl.perl5.porters/ | title=perl.perl5.porters archive | access-date=2011-01-13 | publisher=perl.org}}</ref>\n\nPerl 5.000 was released on October 17, 1994.<ref>{{Cite web | url=http://perldoc.perl.org/perlhist.html | title=perlhist&nbsp;\u2014 the Perl history records | access-date=2011-01-21 | work=Perl 5 version 12.2 documentation | publisher=perldoc.perl.org}}</ref> It was a nearly complete rewrite of the [[interpreter (computing)|interpreter]], and it added many new features to the language, including [[Object (computer science)|objects]], [[Reference (computer science)|references]], [[Local variable|lexical (my) variables]], and [[Modular programming|modules]]. Importantly, modules provided a mechanism for extending the language without modifying the interpreter. This allowed the core interpreter to stabilize, even as it enabled ordinary Perl programmers to add new language features. Perl 5 has been in active development since then.\n\nPerl 5.001 was released on March 13, 1995. Perl 5.002 was released on February 29, 1996 with the new prototypes feature. This allowed module authors to make [[subroutine]]s that behaved like Perl [[Shell builtin|builtins]]. Perl 5.003 was released June 25, 1996, as a security release.\n\nOne of the most important events in Perl 5 history took place outside of the language proper and was a consequence of its module support. On October 26, 1995, the [[CPAN|Comprehensive Perl Archive Network]] (CPAN) was established as a [[Software repository|repository]] for the Perl language and [[Perl module]]s; as of May 2017, it carries over 185,178 modules in 35,190 distributions, written by more than 13,071 authors, and is mirrored worldwide at more than 245 locations.<ref>{{Cite web | url=https://www.cpan.org/ | title=CPAN | access-date=2017-05-08 | publisher=[[CPAN]]}}</ref>\n\nPerl 5.004 was released on May 15, 1997, and included, among other things, the UNIVERSAL package, giving Perl a base object to which all [[Class (computer programming)|classes]] were automatically derived and the ability to require versions of modules. Another significant development was the inclusion of the [[CGI.pm]] module,<ref name=\"5004delta\">{{Cite web | url=http://perldoc.perl.org/perl5004delta.html | title=perl5004delta&nbsp;\u2014 what's new for perl5.004 | access-date=2011-01-08 | work=Perl 5 version 12.2 documentation | publisher=perldoc.perl.org}}</ref> which contributed to Perl's popularity as a [[Common Gateway Interface|CGI scripting language]].<ref name=\"patwardhan02\">{{Cite book | last1=Patwardhan | first1=Nathan | last2=Siever | first2=Ellen | last3=Spainhour | first3=Stephen | title=Perl in a Nutshell, Second Edition | publisher=[[O'Reilly Media]] | year=2002 | isbn=978-0-596-00241-1 | url=https://archive.org/details/perlinnutshell00patw }}</ref>\n\nPerl 5.004 also added support for [[Microsoft Windows]] and several other operating systems.<ref name=\"5004delta\" />\n\nPerl 5.005 was released on July 22, 1998. This release included several enhancements to the [[Regular expression|regex]] engine, new hooks into the backend through the <code>B::*</code> modules, the <code>qr//</code> regex quote operator, a large selection of other new core modules, and added support for several more operating systems, including [[BeOS]].<ref name=\"5005delta\">{{Cite web | url=http://perldoc.perl.org/perl5005delta.html | title=perl5005delta - what's new for perl5.005 | access-date=2011-01-21 | work=Perl 5 version 12.2 documentation | publisher=perldoc.perl.org}}</ref>\n\n===2000\u2013present===\n{| class=\"wikitable floatright\"\n|-\n! Major version\n! Latest update\n|-\n| {{Version|o|5.005}}\n| 2004-02-23<ref name=\"cpan-src\">{{cite web |url = http://www.cpan.org/src/ |title = Perl Source |publisher = www.cpan.org |date =  |accessdate = 2017-06-05 }}</ref>\n|-\n| {{Version|o|5.6}}\n| 2003-11-15<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.8}}\n| 2008-12-14<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.10}}\n| 2009-08-23<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.12}}\n| 2012-11-10<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.14}}\n| 2013-03-10<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.16}}\n| 2013-03-11<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.18}}\n| 2014-10-02<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.20}}\n| 2015-09-12<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.22}}\n| 2017-07-15<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.24}}\n| 2018-04-14<ref name=\"cpan-src\" />\n|-\n| {{Version|o|5.26}}\n| 2018-11-29<ref name=\"cpan-src\" />\n|-\n| {{Version|co|5.28}}\n| 2019-04-19<ref name=\"cpan-src\" />\n|-\n| {{Version|c|5.30}}\n| 2019-05-22<ref name=\"cpan-src\" />\n|-\n| {{Version|p|5.32}}\n| 2020-05\n|-\n| colspan=\"99\" | <small>{{Version |lv |show=011101}}</small>\n|}\nPerl 5.6 was released on March 22, 2000.  Major changes included [[64-bit computing|64-bit]] support, [[Unicode]] string representation, support for files over 2 GiB, and the \"our\" keyword.<ref name=\"56delta\">{{cite web |url = http://perldoc.perl.org/perl56delta.html |title = perl56delta - what's new for perl v5.6.0 |accessdate = 2011-01-21 |work = Perl 5 version 12.2 documentation |publisher = perldoc.perl.org }}</ref><ref name=\"561delta\">{{cite web |url = http://perldoc.perl.org/perl561delta.html |title = perl56delta - what's new for perl v5.6.x |accessdate = 2011-01-21 |work = Perl 5 version 12.2 documentation |publisher = perldoc.perl.org }}</ref>  When developing Perl 5.6, the decision was made to switch the [[software versioning|versioning]] scheme to one more similar to other open source projects; after 5.005_63, the next version became 5.5.640, with plans for development versions to have odd numbers and stable versions to have even numbers.\n\nIn 2000, Wall put forth a call for suggestions for a new version of Perl from the community. The process resulted in 361 RFC (request for comments) documents that were to be used in guiding development of Perl 6. In 2001,<ref>{{cite web |url = http://dev.perl.org/perl6/doc/design/apo/A01.html |title = Apocalypse 1: The Ugly, the Bad, and the Good |accessdate = 2011-01-08 |last = Wall |first = Larry }}</ref> work began on the \"Apocalypses\" for Perl 6, a series of documents meant to summarize the change requests and present the design of the next generation of Perl. They were presented as a digest of the RFCs, rather than a formal document. At this point, Perl 6 existed only as a description of a language.\n\nPerl 5.8 was first released on July 18, 2002, and had nearly yearly updates since then. Perl 5.8 improved Unicode support, added a new I/O implementation, added a new thread implementation, improved numeric accuracy, and added several new modules.<ref name=\"perl58delta\">{{cite web |url = http://perldoc.perl.org/perl58delta.html |title = perl58delta - what is new for perl v5.8.0 |accessdate = 2011-01-21 |work = Perl 5 version 12.2 documentation |publisher = perldoc.perl.org }}</ref> As of 2013 this version still remains the most popular version of Perl and is used by Red Hat 5, Suse 10, Solaris 10, HP-UX 11.31 and AIX 5.\n\nIn 2004, work began on the \"Synopses\"{{snd}}documents that originally summarized the Apocalypses, but which became the specification for the Perl 6 language. In February 2005, [[Audrey Tang]] began work on [[Pugs (programming)|Pugs]], a Perl 6 interpreter written in [[Haskell (programming language)|Haskell]].<ref>{{cite web |url = http://www.perl.com/pub/a/2005/03/03/pugs_interview.html |title = A Plan for Pugs |date = 2005-03-03 |publisher = [[O'Reilly Media]] |accessdate = 2011-01-27 }}</ref> This was the first concerted effort towards making Perl 6 a reality. This effort stalled in 2006.<ref>{{cite web |url = http://www.perlmonks.org/?node_id=835936 |title = Re: How to Implement Perl 6 in Ten Years |accessdate = 2011-01-03 |last = Tang |first = Audrey |date = 2010-04-21 |publisher = [[PerlMonks]] }}</ref>\n\nOn December 18, 2007, the 20th anniversary of Perl 1.0, Perl 5.10.0 was released. Perl 5.10.0 included notable new features, which brought it closer to Perl 6. These included a [[switch statement]] (called \"given\"/\"when\"), regular expressions updates, and the '''smart match operator'' (~~).<ref name=\"5100delta\">{{cite web |url = http://perldoc.perl.org/perl5100delta.html |title = perl5100delta - what is new for perl 5.10.0 |accessdate = 2011-01-08 |work = Perl 5 version 12.2 documentation |publisher = perldoc.perl.org }}</ref><ref name=\"perlsyn-smart\">{{cite web |url = http://perldoc.perl.org/perlsyn.html#Smart-matching-in-detail |title = perlsyn - Perl syntax |accessdate = 2011-01-21 |work = Perl 5 version 12.2 documentation |publisher = perldoc.perl.org }}</ref>\nAround this same time, development began in earnest on another implementation of Perl 6 known as [[Rakudo|Rakudo Perl]], developed in tandem with the [[Parrot virtual machine]]. As of November 2009, Rakudo Perl has had regular monthly releases and now is the most complete implementation of Perl 6.\n\nA major change in the development process of Perl 5 occurred with Perl 5.11; the development community has switched to a monthly release cycle of development releases, with a yearly schedule of stable releases. By that plan, bugfix point releases will follow the stable releases every three months.\n\nOn April 12, 2010, Perl 5.12.0 was released. Notable core enhancements include new <code>package NAME VERSION</code> syntax, the Yada Yada operator (intended to mark placeholder code that is not yet implemented), implicit strictures<!-- \"strictures\" is not a typo -->, full [[Y2038]] compliance, regex conversion overloading, [[DTrace]] support, and [[Unicode]] 5.2.<ref name=\"5120delta\">{{cite web |url = http://perldoc.perl.org/perl5120delta.html |title = perl5120delta - what is new for perl v5.12.0 |accessdate = 2011-01-08 |work = Perl 5 version 12.2 documentation |publisher = perldoc.perl.org }}</ref> On January 21, 2011, Perl 5.12.3 was released; it contains updated modules and some documentation changes.<ref name=\"5123delta\">{{cite web |url = http://perldoc.perl.org/perl5123delta.html |title = perldelta - what is new for perl v5.12.3 |accessdate = 2011-01-08 |work = Perl 5 version 12.2 documentation |publisher = perldoc.perl.org }}</ref> Version 5.12.4 was released on June 20, 2011. The latest version of that branch, 5.12.5, was released on November 10, 2012.\n\nOn May 14, 2011, Perl 5.14 was released. [[JSON]] support is built-in as of 5.14.0.<ref>{{cite web|url=https://metacpan.org/pod/distribution/perl/pod/perl5140delta.pod|title=perl5140delta - what is new for perl v5.14.0 - metacpan.org|website=metacpan.org}}</ref> The latest version of that branch, 5.14.4, was released on March 10, 2013.\n\nOn May 20, 2012, Perl 5.16 was released. Notable new features include the ability to specify a given version of Perl that one wishes to emulate, allowing users to upgrade their version of Perl, but still run old scripts that would normally be incompatible.<ref name=\"5160delta_version\">{{cite web |url = https://metacpan.org/module/RJBS/perl-5.16.0/pod/perldelta.pod |title = perldelta - what is new for perl v5.16.0 |accessdate = 2012-05-21 |work = Perl 5 version 16.0 documentation |publisher = metacpan.org }}</ref> Perl 5.16 also updates the core to support [[Unicode]] 6.1.<ref name=\"5160delta_version\" />\n\nOn May 18, 2013, Perl 5.18 was released. Notable new features include the new dtrace hooks, lexical subs, more CORE:: subs, overhaul of the hash for security reasons, support for Unicode 6.2.<ref name=\"5180delta_version\">{{cite web |url = https://metacpan.org/pod/release/RJBS/perl-5.18.1/pod/perl5180delta.pod |title = perl5180delta - what is new for perl v5.18.0 - Perl programming language |accessdate = 2013-10-27 |work = Perl 5 version 18.0 documentation |publisher = metacpan.org }}</ref>\n\nOn May 27, 2014, Perl 5.20 was released. Notable new features include subroutine signatures, hash slices/new slice syntax, postfix dereferencing (experimental), Unicode 6.3, rand() using consistent random number generator.<ref name=\"5200delta_version\">{{cite web |url = https://metacpan.org/source/RJBS/perl-5.20.0/pod/perldelta.pod |title = perl5200delta - what is new for perl v5.20.0 - Perl programming language |accessdate = 2014-05-27 |work = Perl 5 version 20.0 documentation |publisher = metacpan.org }}</ref>\n\nSome observers credit the release of Perl 5.10 with the start of the Modern Perl movement.<ref>[http://www.modernperlbooks.com/mt/2009/07/milestones-in-the-perl-renaissance.html Milestones in the Perl Renaissance - Modern Perl Programming]. Modernperlbooks.com. Retrieved on 2013-07-17.</ref> In particular, this phrase describes a style of development that embraces the use of the CPAN, takes advantage of recent developments in the language, and is rigorous about creating high quality code.<ref>[http://modernperlbooks.com/books/modern_perl/ Preface (Modern Perl 2011-2012)]. Modernperlbooks.com. Retrieved on 2013-07-17.</ref> While the book \"Modern Perl\"<ref>[http://onyxneon.com/books/modern_perl/ Modern Perl 2011-2012 edition by chromatic | Onyx Neon Press]. Onyxneon.com. Retrieved on 2013-07-17.</ref> may be the most visible standard-bearer of this idea, other groups such as the Enlightened Perl Organization<ref>{{cite web|url=http://www.enlightenedperl.org/|title=Enlightened Perl|website=Enlightened Perl}}</ref> have taken up the cause.\n\nIn late 2012 and 2013, several projects for alternative implementations for Perl 5 started: Perl5 in [[Raku (programming language)|Perl6]] by the Rakudo Perl team,<ref>{{cite web |url = http://www.yapcna.org/yn2013/talk/4725 |title = YAPC::NA 2013 - June 3-5, Austin, Texas |publisher = Yapcna.org |date = 2013-06-04 |accessdate = 2014-04-11 |archive-url = https://web.archive.org/web/20130622201417/http://www.yapcna.org/yn2013/talk/4725 |archive-date = June 22, 2013 |url-status = dead }}</ref> ''moe'' by Stevan Little and friends,<ref>{{cite web |last = Little |first = Stevan |url = http://blogs.perl.org/users/stevan_little/2013/02/what-is-moe-a-clarification.html |title = What is Moe (a clarification) &#124; Stevan Little |publisher = Blogs.perl.org |date = 2013-02-08 |accessdate = 2014-04-11 }}</ref> ''p2''<ref>{{cite web |url = http://perl11.org/p2/ |title = p2 on potion |publisher = Perl11.org |date = 2004-02-07 |accessdate = 2014-04-11 }}</ref> by the Perl11 team under Reini Urban, ''gperl'' by goccy,<ref>{{cite web |url = https://github.com/goccy/gperl/ |title = goccy/gperl \u8def GitHub |publisher = Github.com |date =  |accessdate = 2014-04-11 }}</ref> and ''rperl'' a kickstarter project led by Will Braswell and affiliated with the Perll11 project.<ref>{{cite web |url = http://rperl.org/faq.html |title = rperl |publisher = RPerl.org |date =  |accessdate = 2014-08-11 }}</ref>\n\n===PONIE===\n'''PONIE''' is an acronym for Perl On New Internal Engine. The PONIE Project existed from 2003 until 2006 and was to be a bridge between Perl 5 and Perl 6. It was an effort to rewrite the Perl 5 interpreter to run on [[Parrot virtual machine|Parrot]], the Perl 6 virtual machine. The goal was to ensure the future of the millions of lines of Perl 5 code at thousands of companies around the world.<ref>{{citation | title = OSCON 4.4: Inside Ponie, the Bridge from Perl 5 to Perl 6 | date = August 8, 2005 <!-- 8:52PM  --> | author =  Geoff Broadwell | url = http://www.oreillynet.com/onlamp/blog/2005/08/oscon_44_inside_ponie_the_brid.html | publisher = O'Reilly ONLamp Blog }}</ref>\n\nThe PONIE project ended in 2006 and is no longer being actively developed.  Some of the improvements made to the Perl 5 interpreter as part of PONIE were folded into that project.<ref>{{citation | title = Ponie has been put out to pasture | author = [[Jesse Vincent]] | date = August 23, 2006<!-- 10:40 PM --> | url = http://news.perlfoundation.org/2006/08/ponie_has_been_put_out_to_past.html | publisher = The Perl Foundation | access-date = January 15, 2019 | archive-url = https://web.archive.org/web/20090627091007/http://news.perlfoundation.org/2006/08/ponie_has_been_put_out_to_past.html | archive-date = June 27, 2009 | url-status = dead | df = mdy-all }}</ref>\n\n===Name===\nPerl was originally named \"Pearl\". Wall wanted to give the language a short name with positive connotations; he claims that he considered every three- and four-letter word in the dictionary. He also considered naming it after his wife Gloria. Wall discovered the existing [[PEARL (programming language)|PEARL]] programming language before Perl's official release and changed the spelling of the name.<ref name=\"richardson1999\">{{cite journal |url = http://www.linuxjournal.com/article/3394 |title = Larry Wall, the Guru of Perl |accessdate = 2011-01-03 |last = Richardson |first = Marjorie |date = 1999-05-01 |journal = [[Linux Journal]] }}</ref>\n\nWhen referring to the language, the name is normally capitalized (''Perl'') as a proper noun. When referring to the interpreter program itself, the name is often uncapitalized (''perl'') because most Unix-like file systems are case-sensitive. Before the release of the first edition of ''Programming Perl'', it was common to refer to the language as ''perl''; [[Randal L. Schwartz]], however, capitalized the language's name in the book to make it stand out better when typeset. This case distinction was subsequently documented as canonical.<ref name=\"capitalization\">{{cite web |url = http://perldoc.perl.org/perlfaq1.html#What's-the-difference-between-%22perl%22-and-%22Perl%22%3f |title = perlfaq1: What's the difference between \"perl\" and \"Perl\"? |work = perldoc.perl.org - Perl 5 version 12.2 documentation }}</ref>\n\nThe name is occasionally expanded as ''Practical Extraction and Report Language'', but this is a [[backronym]].<ref>{{cite book |last1 = Schwartz |first1 = Randal |authorlink1 = Randal Schwartz |last2 = foy |first2 = brian |authorlink2 = brian d foy |last3 = Phoenix |first3 = Tom |title = Learning Perl |publisher = O'Reilly Media, Inc. |date = June 16, 2011 |page = 4 |isbn = 978-1449313142 |quote = Perl is sometimes called the \"Practical Extraction and Report Language,\" although it has also been called a \"Pathologically Eclectic Rubbish Lister,\" among other expansions. It's actually a backronym, not an acronym, since Larry Wall, Perl\u2019s creator, came up with the name first and the expansion later. That\u2019s why \"Perl\" isn\u2019t in all caps. There's no point in arguing that expansion is correct: Larry endorses both. }}</ref> Other expansions have been suggested as equally canonical, including Wall's own ''Pathologically Eclectic Rubbish Lister'' which is in the [[man page|manual page]] for perl.<ref>{{cite web |last = Wall |first = Larry |authorlink = Larry Wall |title = perl - The Perl language interpreter |work = Perl 5 version 12.2 documentation |url = http://perldoc.perl.org/perl.html#BUGS |accessdate = 2011-01-26 }}</ref> Indeed, Wall claims that the name was intended to inspire many different expansions.<ref>{{cite web |last = Wall |first = Larry |authorlink = Larry Wall |title = Re^7: PERL as shibboleth and the Perl community |url = http://www.perlmonks.org/index.pl?node_id=511722 |publisher = [[PerlMonks]] |accessdate = 2011-01-02 }}</ref>\n\n===Camel symbol===\n[[File:Perl-camel-small.png|thumb|The Camel symbol used by O'Reilly Media]]\n''Programming Perl'', published by [[O'Reilly Media]], features a picture of a [[camel|dromedary camel]] on the cover and is commonly called the \"Camel Book\".<ref name=\"schwartz01\">{{cite book |last1 = Schwartz |first1 = Randal L |authorlink1 = Randal L. Schwartz |last2 = Phoenix |first2 = Tom |last3 = Foy |first3 = Brian |authorlink3 = Brian D Foy |title = Learning Perl, Third Edition |isbn = 978-0-596-00132-2 |date = 2007-12-06 |url = https://archive.org/details/learningperl00schw }}</ref> This image of a camel has become an unofficial symbol of Perl as well as a general [[Hacker (programmer subculture)|hacker]] emblem, appearing on T-shirts and other clothing items.\n\nO'Reilly owns the image as a [[trademark]] but licenses it for [[non-commercial]] use, requiring only an acknowledgement and a link to www.perl.com. Licensing for commercial use is decided on a case by case basis.<ref name=\"camel\">{{cite web |url = http://onlamp.com/pub/a/oreilly/perl/usage/ |title = The Perl Camel Usage and Trademark Information |accessdate = 2011-01-09 |publisher = [[O'Reilly Media]] }}</ref> O'Reilly also provides \"Programming Republic of Perl\" logos for non-commercial sites and \"Powered by Perl\" buttons for any site that uses Perl.<ref name=\"camel\" />\n\n===Onion symbol===\n[[File:Onion 64x64.png|thumb|120x120px|The onion logo used by The Perl Foundation]]\n[[The Perl Foundation]] owns an alternative symbol, an onion, which it licenses to its subsidiaries, [[Perl Mongers]], [[PerlMonks]], Perl.org, and others.<ref name=\"onion\">{{cite web |url = http://www.perlfoundation.org/perl_trademark |title = Perl Trademark |accessdate = 2011-01-09 |publisher = [[The Perl Foundation]] |archive-url = https://web.archive.org/web/20110503211915/http://www.perlfoundation.org/perl_trademark# |archive-date = May 3, 2011 |url-status = dead |df = mdy-all }}</ref> The symbol is a [[visual pun]] on [[pearl onion]].<ref name=\"gillmore98\">{{cite news |first = Dan |last = Gillmore |title = Republic Of Perl |date = 1998-10-25 |url = http://articles.chicagotribune.com/1998-10-25/news/9810250094_1_programmers-open-source-movement-programming-community |work = Chicago Tribune |accessdate = 2011-01-10 }}</ref>\n\n===Raptor symbol===\n[[File:Perl5Raptor.png|thumb|Alternative Perl 5 Logo]]\nSebastian Riedel, the creator of [[Mojolicious]], has created a logo depicting a [[Dromaeosauridae|raptor dinosaur]], which is available under a CC-SA License, Version 4.0.<ref name=\"riedel11\">{{cite web |first = Sebastian |last = Riedel |title = Perl 5 Raptor |date = 2012-01-18 |url = https://github.com/kraih/perl-raptor |work = Sebastian Riedel |access-date = 2017-11-12 }}</ref> The logo is being remixed and used in different places and is symbolising Perl 5. The analogue of the raptor comes from a series of talks given by Matt S Trout beginning in 2010.<ref name=\"trout10\">{{cite web |first = Matt |last = Trout |title = State of the Velociraptor - Phase two |date = 2005-06-16 |url = https://shadow.cat/blog/matt-s-trout/sotv-vi/ |work = Shadowcat Systems Limited |access-date = 2017-11-12 }}</ref> The talks were aimed at being more Perl 5 community-centric, in a period where Perl 6 was a hot topic.\n\n==Overview==\n{{Main|Perl language structure}}\nAccording to Wall, Perl has two slogans. The first is \"[[There's more than one way to do it]],\" commonly known as TMTOWTDI. The second slogan is \"Easy things should be easy and hard things should be possible\".<ref name=\"programmingperl2\" />\n\n===Features===\nThe overall structure of Perl derives broadly from C. Perl is [[procedural programming|procedural]] in nature, with [[variable (programming)|variable]]s, [[expression (programming)|expressions]], [[assignment statement]]s, [[bracket|brace]]-delimited [[block (programming)|block]]s, [[control structure]]s, and [[subroutine]]s.\n\nPerl also takes features from shell programming. All variables are marked with leading [[sigil (computer programming)|sigils]], which allow variables to be [[Variable interpolation|interpolated]] directly into [[String (computer science)|strings]]. However, unlike the shell, Perl uses sigils on all accesses to variables, and unlike most other programming languages that use sigils, the sigil doesn't denote the type of the variable but the type of the expression. So for example, to access a list of values in a [[Associative array|hash]], the sigil for an [[Array data type|array]] (\"@\") is used, not the sigil for a hash (\"%\").\nPerl also has many built-in functions that provide tools often used in shell programming (although many of these tools are implemented by programs external to the shell) such as [[Ascending order|sorting]], and calling [[operating system]] facilities.\n\nPerl takes [[List (computing)|lists]] from [[Lisp (programming language)|Lisp]], [[associative array|hashes]] (\"associative arrays\") from [[AWK]], and [[regular expression]]s from [[sed]]. These simplify and facilitate many parsing, text-handling, and data-management tasks. Also shared with Lisp are the implicit [[Return statement|return]] of the last value in a block, and the fact that all statements have a value, and thus are also expressions and can be used in larger expressions themselves.\n\nPerl 5 added features that support complex [[data structure]]s, [[first-class function]]s (that is, [[Closure (computer science)|closures]] as values), and an object-oriented programming model. These include [[reference (computer science)|references]], packages, class-based [[Dynamic dispatch|method dispatch]], and [[Scope (programming)|lexically scoped variables]], along with [[compiler directive]]s (for example, the <code>strict</code> pragma). A major additional feature introduced with Perl 5 was the ability to package code as reusable modules. Wall later stated that \"The whole intent of Perl 5's module system was to encourage the growth of Perl culture rather than the Perl core.\"<ref>{{cite newsgroup |title = title unknown |author =  |date = 1997-05-10 |newsgroup =  |message-id = 199705101952.MAA00756@wall.org |url =  |accessdate = }}{{Dead link|date=November 2014}}</ref>\n\nAll versions of Perl do automatic [[Type system|data-typing]] and automatic [[memory management]]. The interpreter knows the type and [[Computer data storage|storage]] requirements of every data object in the program; it allocates and frees storage for them as necessary using [[reference counting]] (so it cannot deallocate [[circular dependency|circular data structures]] without manual intervention). Legal [[type conversion]]s \u2014 for example, conversions from number to string \u2014 are done automatically at [[Run time (program lifecycle phase)|run time]]; illegal type conversions are fatal errors.\n\n===Design===\nThe design of Perl can be understood as a response to three broad trends in the computer industry: falling hardware costs, rising labor costs, and improvements in [[compiler]] technology. Many earlier computer languages, such as [[Fortran]] and C, aimed to make efficient use of expensive computer hardware. In contrast, Perl was designed so that computer programmers could write programs more quickly and easily.\n\nPerl has many features that ease the task of the programmer at the expense of greater [[CPU]] and memory requirements. These include automatic memory management; [[dynamic typing]]; strings, lists, and hashes; regular expressions; introspection; and an <code>eval()</code> function. Perl follows the theory of \"no built-in limits,\"<ref name=\"schwartz01\" /> an idea similar to the [[Zero One Infinity]] rule.\n\nWall was trained as a linguist, and the design of Perl is very much informed by [[linguistic]] principles. Examples include [[Huffman coding]] (common constructions should be short), good end-weighting (the important information should come first), and a large collection of [[language primitive]]s. Perl favors language constructs that are concise and natural for humans to write, even where they complicate the Perl interpreter.\n\nPerl's [[Syntax (programming languages)|syntax]] reflects the idea that \"things that are different should look different.\"<ref name=\"wall97\">{{cite journal |url = http://www.linuxjournal.com/article/2070 |title = Wherefore Art, Thou? |accessdate = 2011-03-13 |last = Wall |first = Larry |date = 1997-03-01 |journal = [[Linux Journal]] }}</ref> For example, scalars, arrays, and hashes have different leading sigils. Array indices and hash keys use different kinds of braces. Strings and regular expressions have different standard delimiters. This approach can be contrasted with a language such as [[Lisp (programming language)|Lisp]], where the same basic syntax, composed of simple and universal [[S-expression|symbolic expressions]], is used for all purposes.\n\nPerl does not enforce any particular [[programming paradigm]] ([[Procedural programming|procedural]], [[Object-oriented programming|object-oriented]], [[Functional programming|functional]], or others) or even require the programmer to choose among them.\n\nThere is a broad practical bent to both the Perl language and the community and culture that surround it. The preface to ''Programming Perl'' begins: \"Perl is a language for getting your job done.\"<ref name=\"programmingperl2\" /> One consequence of this is that Perl is not a tidy language. It includes many features, tolerates exceptions to its rules, and employs [[heuristics]] to resolve syntactical ambiguities. Because of the forgiving nature of the compiler, bugs can sometimes be hard to find. Perl's function documentation remarks on the variant behavior of built-in functions in list and scalar contexts by saying, \"In general, they do what you want, unless you want consistency.\"<ref name=\"perlfunc\">{{cite web |url = http://perldoc.perl.org/perlfunc.html |title = perlfunc - Perl builtin functions |accessdate = 2011-01-10 |work = Perl 5 version 12.2 documentation |publisher = perldoc.perl.org }}</ref>\n\nNo written [[Formal specification|specification]] or standard for the Perl language exists for Perl versions through Perl 5, and there are no plans to create one for the current version of Perl. There has been only one implementation of the interpreter, and the language has evolved along with it. That interpreter, together with its functional tests, stands as a ''de facto'' specification of the language. Perl 6, however, started with a specification,<ref>{{cite web |url = http://www.perl6.org/specification |title = Perl 6 Specification |accessdate = 2011-01-27 |publisher = The Perl 6 Project }}</ref> and several projects<ref>{{cite web |url = http://www.perl6.org/compilers/ |title = Perl 6 Compilers |accessdate = 2011-01-27 |publisher = The Perl 6 Project }}</ref> aim to implement some or all of the specification.\n\n===Applications===\nPerl has many and varied applications, compounded by the availability of many standard and third-party modules.\n\nPerl has chiefly been used to write [[Common Gateway Interface|CGI]] scripts: large projects written in Perl include [[cPanel]], [[Slash (weblog system)|Slash]], [[Bugzilla]], [[Request Tracker|RT]], [[TWiki]], and [[Movable Type]]; high-traffic websites that use Perl extensively include [[Priceline.com]], [[Craigslist]],<ref>{{cite book |last1 = Gilmore |first1 = W. J. |title = Beginning PHP and MySQL: From Novice to Professional, Fourth Edition |publisher = Apress |page = 484 |isbn = 978-1-4302-3114-1 }}</ref> [[Internet Movie Database|IMDb]],<ref>{{cite web |title = IMDb Helpdesk: What software/hardware are you using to run the site? |website = Internet Movie Database |url = https://www.imdb.com/help/search?domain=helpdesk_faq&index=1&file=techinfo |accessdate = 2011-02-12 }}</ref> [[LiveJournal]], [[DuckDuckGo]],<ref>DuckDuckGo handles a large amount of search queries at 4.5 million queries per day . https://duckduckgo.com/traffic.html</ref><ref>DuckDuckGo uses Perl https://news.ycombinator.com/item?id=1500487</ref> [[Slashdot]] and [[Ticketmaster]]. <!-- THIS IS ''not'' A LIST OF EVERY WEBSITE USING PERL. It's a listing of 'high traffic websites'. Please consider traffic volume before adding your own Web site to it. Refs for lesser known websites certainly needed. -->\nIt is also an optional component of the popular [[LAMP (software bundle)|LAMP]] technology stack for [[Web development]], in lieu of [[PHP]] or [[Python (programming language)|Python]]. Perl is used extensively as a [[system programming language]] in the [[Debian]] GNU/Linux distribution.<ref>{{cite web|url=https://wiki.debian.org/PerlFAQ|title=Perl FAQ|quote=Perl is used quite extensively in Debian. Not only are some core functions written in Perl, but there are over 700 packages in unstable that have perl in their name (Mar 2004).}}</ref>\n\nPerl is often used as a [[glue language]], tying together systems and interfaces that were not specifically designed to interoperate, and for \"[[data munging]],\"<ref>{{cite web |url = http://books.perl.org/book/95 |title = Perl Books - Book: Data Munging with Perl |work = Perl.org |accessdate = December 30, 2010 }}</ref> that is, converting or processing large amounts of data for tasks such as creating reports. In fact, these strengths are intimately linked. The combination makes Perl a popular all-purpose language for [[system administrator]]s, particularly because short programs, often called \"[[one-liner program]]s,\" can be entered and run on a single [[Command-line interface|command line]].\n\nPerl code can be made portable across [[Microsoft Windows|Windows]] and Unix; such code is often used by suppliers of software (both [[Commercial off-the-shelf|COTS]] and bespoke) to simplify packaging and maintenance of software build- and deployment-scripts.\n\n[[Graphical user interface]]s (GUIs) may be developed using Perl. For example, [[Tk (framework)|Perl/Tk]] and [[wxPerl]] are commonly used to enable user interaction with Perl scripts. Such interaction may be synchronous or asynchronous, using [[Callback (computer programming)|callbacks]] to update the GUI.\n\n===Implementation===\nPerl is implemented as a core interpreter, written in C, together with a large collection of modules, written in Perl and C. {{As of|2010}}, the interpreter is 150,000 lines of C code and compiles to a 1&nbsp;MB executable on typical machine architectures. Alternatively, the interpreter can be compiled to a link library and embedded in other programs. There are nearly 500 modules in the distribution, comprising 200,000 lines of Perl and an additional 350,000 lines of C code (much of the C code in the modules consists of [[character encoding]] tables).\n\nThe interpreter has an object-oriented architecture. All of the elements of the Perl language\u2014scalars, arrays, hashes, coderefs, [[file handle]]s\u2014are represented in the interpreter by [[struct (C programming language)|C structs]]. Operations on these structs are defined by a large collection of [[Macro (computer science)|macros]], [[typedef]]s, and functions; these constitute the Perl C [[application programming interface|API]]. The Perl API can be bewildering to the uninitiated, but its entry points follow a consistent [[naming scheme]], which provides guidance to those who use it.\n\nThe life of a Perl interpreter divides broadly into a compile phase and a run phase.<ref>A description of the Perl 5 interpreter can be found in ''Programming Perl'', 3rd Ed., chapter 18. See particularly page 467, which carefully distinguishes run phase and compile phase from [[Run time (program lifecycle phase)|run time]] and [[compile time]].  Perl \"time\" and \"phase\" are often confused.</ref>  In Perl, the '''phases''' are the major stages in the interpreter's life-cycle. Each interpreter goes through each phase only once, and the phases follow in a fixed sequence.\n\nMost of what happens in Perl's compile phase is compilation, and most of what happens in Perl's run phase is execution, but there are significant exceptions. Perl makes important use of its capability to execute Perl code during the compile phase. Perl will also delay compilation into the run phase. The terms that indicate the kind of processing that is actually occurring at any moment are '''compile time''' and '''run time'''.  Perl is in compile time at most points during the compile phase, but compile time may also be entered during the run phase. The compile time for code in a string argument passed to the <code>[[eval]]</code> built-in occurs during the run phase. Perl is often in run time during the compile phase and spends most of the run phase in run time.  Code in <code>BEGIN</code> blocks executes at run time but in the compile phase.<!-- NOTE TO EDITORS:  There is something missing in the preceding sentence -- for one thing, a comma before the conjunction.  The sentence might reasonably read 'Code in BEGIN blocks executes NOT at run time, but in the compile phase,' but is that what the author intended? -->\n\nAt compile time, the interpreter parses Perl code into a [[Abstract syntax tree|syntax tree]]. At run time, it executes the program by [[Tree traversal|walking the tree]]. Text is parsed only once, and the syntax tree is subject to optimization before it is executed, so that execution is relatively efficient. Compile-time optimizations on the syntax tree include [[constant folding]] and context propagation, but [[peephole optimization]] is also performed.\n\nPerl has a [[Turing-complete]] [[formal grammar|grammar]] because parsing can be affected by run-time code executed during the compile phase.<ref>{{cite web |last = Schwartz |first = Randal |authorlink = Randal L. Schwartz |title = On Parsing Perl |url = http://www.perlmonks.org/index.pl?node_id=44722 |accessdate = 2007-01-03 }}</ref> Therefore, Perl cannot be parsed by a straight [[Lex programming tool|Lex]]/[[Yacc]] [[Lexical analysis|lexer]]/[[parser]] combination. Instead, the interpreter implements its own lexer, which coordinates with a modified [[GNU bison]] parser to resolve ambiguities in the language.\n\nIt is often said that \"Only perl can parse Perl,\"<ref>{{cite web |url = ftp://ftp.ora.com/pub/labs/tpj/tpj2.pdf |title = The Perl Journal #19/9.26 |accessdate = 2011-02-04 |publisher = [[O'Reilly Media]] }}</ref> meaning that only the Perl interpreter (''<code>perl</code>'') can parse the Perl language (''Perl''), but even this is not, in general, true. Because the Perl interpreter can simulate a Turing machine during its compile phase, it would need to decide the [[halting problem]] in order to complete parsing in every case. It is a long-standing result that the halting problem is undecidable, and therefore not even perl can always parse Perl. Perl makes the unusual choice of giving the user access to its full programming power in its own compile phase. The cost in terms of theoretical purity is high, but practical inconvenience seems to be rare.\n\nOther programs that undertake to parse Perl, such as [[Static program analysis|source-code]] analyzers and [[Indent style|auto-indenters]], have to contend not only with ambiguous [[Language construct|syntactic constructs]] but also with the [[Recursive language|undecidability]] of Perl parsing in the general case. [[Adam Kennedy (programmer)|Adam Kennedy]]'s PPI project focused on parsing Perl code as a document (retaining its integrity as a document), instead of parsing Perl as executable code (that not even Perl itself can always do). It was Kennedy who first conjectured that \"parsing Perl suffers from the '[[halting problem]]',\"<ref>{{cite web |url = https://metacpan.org/module/PPI |title = PPI\u2014Parse, Analyze and Manipulate Perl (without perl) |author = Kennedy, Adam |year = 2006 |publisher = [[CPAN]] }}</ref> which was later proved.<ref>{{cite journal |authorlink = Jeffrey Kegler |title = Rice's Theorem |journal = The Perl Review |volume = 4 |issue = 3 |pages = 23\u201329 |date = Summer 2008 }} and {{cite journal |authorlink = Jeffrey Kegler |title = Perl is Undecidable |journal = The Perl Review |volume = 5 |pages = 7\u201311 |date = Fall 2008 }}, available online at {{cite web |url = http://www.jeffreykegler.com/Home/perl-and-undecidability |title = Perl and Undecidability |author = Kegler, Jeffrey }}\n</ref>\n\nPerl is distributed with over 250,000 [[Functional testing|functional tests]] for core Perl language and over 250,000 [[Functional testing|functional tests]] for core modules. These run as part of the normal build process and extensively exercise the interpreter and its core modules. Perl developers rely on the functional tests to ensure that changes to the interpreter do not introduce [[software bug]]s; additionally, Perl users who see that the interpreter passes its functional tests on their system can have a high degree of confidence that it is working properly.\n\n===Availability===\n<!--Note to editors:\nPerl is available on so many platforms that it doesn't make sense to keep a laundry list in this article.\nDo not list a specific platform unless there are notable issues about running Perl on it.\n-->\nPerl is [[dual licensed]] under both the [[Artistic License]] 1.0<ref name=\"artistic-1.0\" /><ref name=\"artistic-1.0-git\" /> and the [[GNU General Public License]].<ref name=\"licensing\" /> Distributions are available for most [[operating system]]s. It is particularly prevalent on [[Unix]] and [[Unix-like]] systems, but it has been ported to most modern (and many obsolete) platforms. With only six{{citation needed|date=November 2017}} reported exceptions, Perl can be compiled from [[source code]] on all [[POSIX]]-compliant, or otherwise-Unix-compatible platforms.<ref name=\"cpanports\">{{cite web |url = http://www.cpan.org/ports/ |title = Perl Ports (Binary Distributions) |publisher = CPAN.org |author = Hietaniemi, Jarkko |year = 1998 }}</ref>\n\nBecause of unusual changes required for the [[classic Mac OS]] environment, a special port called MacPerl was shipped independently.<ref name=\"macperl\">{{cite web |url = http://www.macperl.com/ |title = The MacPerl Pages |year = 1997 |publisher = Prime Time Freeware }}</ref>\n\nThe [[CPAN|Comprehensive Perl Archive Network]] carries a complete list of supported platforms with links to the distributions available on each.<ref>{{cite web |url = http://www.cpan.org/ports/ |title = Perl Ports (Binary Distributions) |accessdate = 2011-01-27 |publisher = [[CPAN]] }}</ref> CPAN is also the source for publicly available Perl modules that are not part of the core Perl distribution.\n\n====Windows====\nUsers of [[Microsoft Windows]] typically install one of the native binary distributions of Perl for Win32, most commonly [[Strawberry Perl]] or [[ActivePerl]]. Compiling Perl from [[source code]] under Windows is possible, but most installations lack the requisite C compiler and build tools. This also makes it difficult to install modules from the CPAN, particularly those that are partially written in C.\n\n[[ActivePerl]] is a closed source distribution from [[ActiveState]] that has regular releases that track the core Perl releases.<ref name=\"activestate\">{{cite web |url = http://www.activestate.com/activeperl |title = ActivePerl is Perl for Windows, Mac, Linux, AIX, HP-UX & Solaris |accessdate = 2011-01-09 |publisher = [[ActiveState|ActiveState Software]] |archive-url = https://web.archive.org/web/20160331201814/http://www.activestate.com/activeperl |archive-date = March 31, 2016 |url-status = dead }}</ref> The distribution previously included the [[Perl package manager]] (PPM),<ref name=\"activestateppm\">{{cite web |url = http://docs.activestate.com/activeperl/5.12/faq/ActivePerl-faq2.html |title = Using PPM |accessdate = 2011-01-09 |publisher = [[ActiveState|ActiveState Software]] }}</ref> a popular tool for installing, removing, upgrading, and managing the use of common Perl modules, however this tool was discontinued as of ActivePerl 5.28<ref>{{Cite web|url=https://www.activestate.com/blog/goodbye-ppm-hello-state-tool/|website=activestate.com}}</ref>.  Included also is [[PerlScript]], a [[Windows Script Host]] (WSH) engine implementing the Perl language.  [[Visual Perl]] is an ActiveState tool that adds Perl to the Visual Studio .NET development suite.  A [[VBScript]] to Perl converter, as well as a Perl compiler for Windows, and converters of [[awk]] and [[sed]] to Perl have also been produced by this company and included on the ''ActiveState CD for Windows'', which includes all of their distributions plus the [[Komodo IDE]] and all but the first on the Unix/Linux/Posix variant thereof in 2002 and subsequently.<ref>readme.txt</ref>\n\n[[Strawberry Perl]] is an open source distribution for Windows.  It has had regular, quarterly releases since January 2008, including new modules as feedback and requests come in.  Strawberry Perl aims to be able to install modules like standard Perl distributions on other platforms, including compiling XS modules.\n\nThe [[Cygwin]] emulation layer is another way of running Perl under Windows. Cygwin provides a Unix-like environment on Windows, and both Perl and CPAN are available as standard pre-compiled packages in the Cygwin setup program. Since Cygwin also includes [[GNU Compiler Collection|gcc]], compiling Perl from source is also possible.\n\nA perl executable is included in several Windows Resource kits in the directory with other scripting tools.\n\nImplementations of Perl come with the [[MKS Toolkit]], [[Interix]] (the base of earlier implementations of [[Windows Services for Unix]], and [[UWIN]].\n\n==Database interfaces==\nPerl's text-handling capabilities can be used for generating [[SQL]] queries; arrays, hashes, and automatic memory management make it easy to collect and process the returned data. For example, in Tim Bunce's [[Perl DBI]] [[application programming interface]] (API), the arguments to the API can be the text of SQL queries; thus it is possible to program in multiple languages at the same time (e.g., for generating a [[Web page]] using [[HTML]], [[JavaScript]], and SQL in a [[here document]]). The use of Perl [[variable interpolation]] to programmatically customize each of the SQL queries, and the specification of Perl arrays or hashes as the structures to programmatically hold the resulting [[data set]]s from each SQL query, allows a high-level mechanism for handling large amounts of data for post-processing by a Perl subprogram.<ref>{{cite book |last = Descartes |first = Alligator |title = Programming the Perl DBI : [database programming with Perl] |year = 2000 |publisher = O'Reilly |location = Beijing [u.a.] |isbn = 978-1-56592-699-8 |edition = 1 |author2 = Bunce, Tim |url = https://archive.org/details/programmingperld00desc }}</ref>\nIn early versions of Perl, database interfaces were created by relinking the interpreter with a [[client-side]] database library. This was sufficiently difficult that it was done for only a few of the most-important and most widely used databases, and it restricted the resulting <code>perl</code> executable to using just one database interface at a time.\n\nIn Perl 5, database interfaces are implemented by [[Perl DBI]] modules. The DBI (Database Interface) module presents a single, database-independent interface to Perl applications, while the DBD (Database Driver) modules handle the details of accessing some 50 different databases; there are DBD drivers for most [[American National Standards Institute|ANSI]] [[SQL]] databases.\n\nDBI provides caching for database handles and queries, which can greatly improve performance in long-lived execution environments such as [[mod perl]],<ref>{{cite web |last = Bekman |first = Stas |title = Efficient Work with Databases under mod_perl |url = http://perl.apache.org/docs/1.0/guide/performance.html#Efficient_Work_with_Databases_under_mod_perl |accessdate = 2007-09-01 }}</ref> helping high-volume systems avert load spikes as in the [[Slashdot effect]].\n\nIn modern Perl applications, especially those written using [[web framework]]s such as [[Catalyst (software)|Catalyst]], the DBI module is often used indirectly via [[object-relational mapper]]s such as [[DBIx::Class]], Class::DBI<ref>{{Cite web|url=https://metacpan.org/pod/Class::DBI|title=Class::DBI - Simple Database Abstraction - metacpan.org|website=metacpan.org|access-date=2020-04-08}}</ref> or Rose::DB::Object<ref>{{Cite web|url=https://metacpan.org/pod/Rose::DB::Object|title=Rose::DB::Object - Extensible, high performance object-relational mapper (ORM). - metacpan.org|website=metacpan.org|access-date=2020-04-08}}</ref> that generate SQL queries and handle data transparently to the application author.\n\n==Comparative performance==\n[[The Computer Language Benchmarks Game]] compares the performance of implementations of typical programming problems in several programming languages.<ref>{{cite web |url = http://alioth.debian.org/projects/benchmarksgame/ |title = Alioth: The Computer Language Benchmarks Game: Project Info |accessdate = 2011-01-13 |publisher = [[Alioth]] |archive-url = https://web.archive.org/web/20130325192723/https://alioth.debian.org/projects/benchmarksgame/ |archive-date = March 25, 2013 |url-status = dead |df = mdy-all }}</ref> The submitted Perl implementations typically perform toward the high end of the memory-usage spectrum and give varied speed results. Perl's performance in the benchmarks game is typical for interpreted languages.<ref>{{cite web |url = http://benchmarksgame.alioth.debian.org/u32/which-programs-are-fastest.php?v8=on&lua=on&jruby=on&php=on&python3=on&yarv=on&perl=on |archive-url = https://web.archive.org/web/20130517145336/http://benchmarksgame.alioth.debian.org/u32/which-programs-are-fastest.php?v8=on&lua=on&jruby=on&php=on&python3=on&yarv=on&perl=on |url-status = dead |archive-date = 2013-05-17 |title = Which programs are fastest? |accessdate = 2011-01-13 |work = Computer Language Benchmarks Game |publisher = [[Alioth]] }}</ref>\n\nLarge Perl programs start more slowly than similar programs in compiled languages because perl has to compile the source every time it runs. In a talk at the [[Yet Another Perl Conference|YAPC::Europe 2005]] conference and subsequent article \"A Timely Start,\" Jean-Louis Leroy found that his Perl programs took much longer to run than expected because the perl interpreter spent significant time finding modules within his over-large include path.<ref>{{cite web |url = http://www.perl.com/pub/a/2005/12/21/a_timely_start.html |title = A Timely Start |author = Leroy, Jean-Louis |date = 2005-12-01 |publisher = O'Reilly }}</ref> Unlike Java, Python, and Ruby, Perl has only experimental support for pre-compiling.<ref>{{cite web |url = https://metacpan.org/module/NWCLARK/perl-5.8.8/ext/B/B/Bytecode.pm#KNOWN-BUGS |title = B::Bytecode Perl compiler's bytecode backend |author1 = Beattie, Malcolm |author2 = Enache Adrian |lastauthoramp = yes |year = 2003 |publisher = [[CPAN]] }}</ref> Therefore, Perl programs pay this overhead penalty on every execution. The run phase of typical programs is long enough that [[amortized]] startup time is not substantial, but benchmarks that measure very short execution times are likely to be skewed due to this overhead.\n\nA number of tools have been introduced to improve this situation. The first such tool was Apache's [[mod perl]], which sought to address one of the most-common reasons that small Perl programs were invoked rapidly: [[Common Gateway Interface|CGI]] [[World Wide Web|Web]] development. [[ActiveState|ActivePerl]], via Microsoft [[ISAPI]], provides similar performance improvements.\n\nOnce Perl code is compiled, there is additional overhead during the execution phase that typically isn't present for programs written in compiled languages such as C or C++. Examples of such overhead include [[bytecode]] interpretation, reference-counting memory management, and dynamic type-checking.\n\n===Optimizing===\nBecause Perl is an interpreted language, it can [[Interpreted language#Disadvantages|give problems]] when efficiency is critical; in such situations, the most critical routines can be written in other languages (such as [[C (programming language)|C]]), which can be connected to Perl via simple Inline modules or the more complex but flexible [[XS (Perl)|XS]] mechanism.<ref>{{cite web |url = https://metacpan.org/module/Inline |title = Inline - metacpan.org |accessdate = 2011-01-26 |last = Ingerson |first = Brian |publisher = [[CPAN]] |url-status = dead |archiveurl = https://web.archive.org/web/20130613163723/https://metacpan.org/module/Inline |archivedate = June 13, 2013 }}</ref>\n\n==Perl 5==\nPerl 5, the language usually referred to as \"Perl\", continues to be actively developed. Perl 5.12.0 was released in April 2010 with some new features influenced by the design of Perl 6,<ref name=\"5120delta\" /><ref name=\"heise2010\">{{cite web |url = http://www.h-online.com/open/news/item/Perl-5-12-0-released-Update-976919.html |archiveurl = https://web.archive.org/web/20100419023449/http://www.h-online.com/open/news/item/Perl-5-12-0-released-Update-976919.html |archivedate = April 19, 2010 |title = Perl 5.12.0 released - Update |accessdate = 2011-01-08 |date = 2010-04-13 |publisher = Heise Media UK }}</ref> followed by Perl 5.14.1 (released on June 17, 2011), Perl 5.16.1 (released on August 9, 2012.<ref>{{cite web |url = http://www.perlmonks.org/?node_id=986397 |accessdate = 2012-08-26 |date = 2012-08-09 |title = perl 5.16.1 released! }}</ref>), and Perl 5.18.0 (released on May 18, 2013). Perl 5 development versions are released on a monthly basis, with major releases coming out once per year.<ref>{{cite web |url = https://lwn.net/Articles/484297/ |accessdate = 2012-03-28 |date = 2012-02-29 |publisher = LWN.net |title = The unstoppable Perl release train? }}</ref>\n\nThe relative proportion of Internet searches for \"Perl programming\", as compared with similar searches for other programming languages, steadily declined from about 10% in 2005 to about 2% in 2011, to about 0.7% in 2020.<ref>{{cite web |title = TIOBE Programming Community Index Perl |author = TIOBE Software Index |year = 2020 |url = https://www.tiobe.com/tiobe-index/ |accessdate = 2020-02-06 }}</ref>\n\n==Raku (Perl 6)==\n{{Main|Raku (programming language)}}\n[[Image:Camelia.svg|thumb|right|200px|''Camelia'', the logo for the Perl 6 project.<ref>{{cite web |url = http://perl6.org/ |title = Perl 6 |accessdate = 2011-02-27 |publisher = The Perl 6 Project }}</ref>]]\n\nAt the 2000 [[O'Reilly Open Source Convention|Perl Conference]], Jon Orwant made a case for a major new language-initiative.<ref>\n{{cite web |url = http://www.nntp.perl.org/group/perl.perl6.meta/2000/10/msg424.html |title = Transcription of Larry's talk |accessdate = 2011-01-25 |last = Torkington |first = Nathan |publisher = nntp.perl.org }}</ref> This led to a decision to begin work on a redesign of the language, to be called Perl 6. Proposals for new language features were solicited from the Perl community at large, which submitted more than 300 [[Request for Comments|RFCs]].\n\nWall spent the next few years digesting the RFCs and synthesizing them into a coherent framework for Perl 6. He presented his design for Perl 6 in a series of documents called \"apocalypses\"{{snd}}numbered to correspond to chapters in ''Programming Perl''. {{as of|2011|January}}, the developing specification of Perl 6 was encapsulated in design documents called Synopses{{snd}}numbered to correspond to Apocalypses.<ref name=\"syn6\">{{cite web |url = http://perlcabal.org/syn/ |title = Official Perl 6 Documentation |accessdate = 2011-01-25 |publisher = The Perl 6 Project |archive-url = https://web.archive.org/web/20090831103918/http://perlcabal.org/syn/ |archive-date = August 31, 2009 |url-status = dead }}</ref>\n\nThesis work by [[Bradley M. Kuhn]], overseen by Wall, considered the possible use of the [[Java virtual machine]] as a runtime for Perl.<ref>{{cite journal |last = Kuhn |first = Bradley |authorlink = Bradley M. Kuhn |title = Considerations on Porting Perl to the Java Virtual Machine |publisher = University of Cincinnati |date = January 2001 |url = http://www.ebb.org/bkuhn/writings/technical/thesis/ |accessdate = 2008-06-28 }}\n</ref> Kuhn's thesis showed this approach to be problematic. In 2001, it was decided that Perl 6 would run on a cross-language [[virtual machine]] called [[Parrot virtual machine|Parrot]]. This will mean that other languages targeting the Parrot will gain native access to [[CPAN]], allowing some level of cross-language development.\n\nIn 2005, [[Audrey Tang]] created the [[Pugs (programming)|Pugs]] project, an implementation of Perl 6 in [[Haskell (programming language)|Haskell]]. This acted as, and continues to act as, a test platform for the Perl 6 language (separate from the development of the actual implementation){{snd}}allowing the language designers to explore. The Pugs project spawned an active Perl/Haskell cross-language community centered around the [[freenode]] #perl6 IRC channel. Many [[functional programming]] influences were absorbed by the Perl 6 design team.\n\nIn 2012, Perl 6 development was centered primarily around two compilers:<ref>{{cite web |url = http://perl6.org/compilers/features |title = Feature comparison of Perl 6 compilers |access-date = March 28, 2012 |archive-url = https://web.archive.org/web/20170811073233/https://perl6.org/compilers/features |archive-date = August 11, 2017 |url-status = dead }}</ref>\n# [[Rakudo]], an implementation running on the [[Parrot virtual machine]] and the [[Java virtual machine]].<ref>{{cite web |last = Worthington |first = Jonathan |title = Rakudo JVM News: More tests, plus Thread and Promise prototypes |url = http://6guts.wordpress.com/2013/07/15/rakudo-jvm-news-more-tests-plus-thread-and-promise-prototypes/ |work = 6guts |accessdate = July 24, 2013 }}</ref>\n# [[Niecza]], which targets the [[Common Language Runtime]].\n\nIn 2013, [[MoarVM]] (\u201cMetamodel On A Runtime\u201d), a C language-based [[virtual machine]] designed primarily for Rakudo was announced.<ref>{{cite web |last = Worthington |first = Jonathan |title = MoarVM: A virtual machine for NQP and Rakudo |url = http://6guts.wordpress.com/2013/05/31/moarvm-a-virtual-machine-for-nqp-and-rakudo/ |work = 6guts |accessdate = July 24, 2013 }}</ref>\n\nIn October 2019, Perl 6 was renamed to Raku.<ref>{{cite web|url=https://lwn.net/Articles/802329/ |title=rename-lwn}}</ref>\n\n{{As of|2017}} only the [[Rakudo]] implementation and [[MoarVM]] are under active development, and other virtual machines, such as the [[Java Virtual Machine]] and [[JavaScript]] are supported.<ref>{{cite web|url=https://github.com/rakudo/rakudo/ |title=rakudo/rakudo - GitHub |publisher=Github.com |date= |accessdate=2013-09-21}}</ref>\n\n==Perl community==\nPerl's culture and community has developed alongside the language itself. [[Usenet]] was the first public venue in which Perl was introduced, but over the course of its evolution, Perl's community was shaped by the growth of broadening Internet-based services including the introduction of the World Wide Web. The community that surrounds Perl was, in fact, the topic of Wall's first \"State of the Onion\" talk.<ref>{{cite web |url = http://grnlight.net/index.php/programming-articles/100-perl-culture |title = Perl Culture (AKA the first State of the Onion) |first = Larry |last = Wall |authorlink = Larry Wall |date = 2014-05-22 }}</ref>\n\n===State of the Onion===\nState of the Onion is the name for Wall's yearly [[keynote]]-style summaries on the progress of Perl and its community.  They are characterized by his hallmark humor, employing references to Perl's culture, the wider hacker culture, Wall's linguistic background, sometimes his family life, and occasionally even his Christian background.<ref>{{cite web |title = 2nd State of the Onion |author = Larry Wall |url = http://www.wall.org/~larry/onion/onion.html |accessdate = 2012-10-12 }} (Search for 'church')</ref>\n\nEach talk is first given at various Perl conferences and is eventually also published online.\n\n===Perl pastimes===\n; JAPHs\n: In email, Usenet, and message board postings, \"[[Just another Perl hacker]]\" (JAPH) programs are a common trend, originated by [[Randal L. Schwartz]], one of the earliest professional Perl trainers.<ref>\n{{cite newsgroup |author = [[Randal L. Schwartz]] |title = Who is Just another Perl hacker? |message-id = m1hfpvh2jq.fsf@halfdome.holdit.com |newsgroup = comp.lang.perl.misc |date = 1999-05-02 |url = https://groups.google.com/forum/#!msg/comp.lang.perl.misc/nK-lswsaMec/DBL87v4FxOwJ |accessdate = December 5, 2014 }}\n</ref> In the parlance of Perl culture, Perl programmers are known as Perl hackers, and from this derives the practice of writing short programs to print out the phrase \"Just another Perl hacker\". In the spirit of the original concept, these programs are moderately obfuscated and short enough to fit into the signature of an email or Usenet message. The \"canonical\" JAPH as developed by Schwartz includes the comma at the end, although this is often omitted.<ref>{{cite web |url = http://www.perlmonks.org/bare/?node_id=443856 |title = Canonical JAPH |accessdate = 2011-05-16 |last = Schwartz |first = Randal |authorlink = Randal L. Schwartz |date = 2005-03-31 |publisher = [[PerlMonks]] }}</ref>\n; Perl golf\n: Perl \"golf\" is the pastime of reducing the number of characters (key \"strokes\") used in a Perl program to the bare minimum, much in the same way that [[golf]] players seek to take as few shots as possible in a round. The phrase's first use<ref name=\"perl-golf-coined\">{{cite newsgroup |author = Greg Bacon |title = Re: Incrementing a value in a slice |message-id = 7imnti$mjh$1@info2.uah.edu |newsgroup = comp.lang.perl.misc |date = 1999-05-28 |url = http://groups.google.com/group/comp.lang.perl.misc/msg/7b97c434492c8d20 |accessdate = 2011-07-12 }}</ref> emphasized the difference between pedestrian code meant to teach a newcomer and terse hacks likely to amuse experienced Perl programmers, an example of the latter being [[JAPH]]s that were already used in signatures in Usenet postings and elsewhere. Similar stunts had been an unnamed pastime in the language [[APL (programming language)|APL]] in previous decades. The use of Perl to write a program that performed [[RSA (algorithm)|RSA]] encryption prompted a widespread and practical interest in this pastime.<ref name=\"rsa\">\n{{cite web |url = http://www.cypherspace.org/rsa/pureperl.html |title = RSA in 5 lines of perl |accessdate = 2011-01-10 |last = Back |first = Adam }}</ref> In subsequent years, the term \"[[code golf]]\" has been applied to the pastime in other languages.<ref>{{cite web |url = http://codegolf.com/ |title = Code Golf: What is Code Golf? |publisher = 29degrees |year = 2007 |access-date = November 26, 2018 |archive-url = https://web.archive.org/web/20120113152453/http://codegolf.com/# |archive-date = January 13, 2012 |url-status = dead |df = mdy-all }}</ref> A Perl Golf Apocalypse was held at Perl Conference 4.0 in Monterey, California in July 2000.\n; Obfuscation\n: As with C, [[obfuscated code]] competitions were a well known pastime in the late 1990s. The [[Obfuscated Perl Contest]] was a competition held by [[The Perl Journal]] from 1996 to 2000 that made an arch virtue of Perl's syntactic flexibility. Awards were given for categories such as \"most powerful\"\u2014programs that made efficient use of space\u2014and \"best four-line signature\" for programs that fit into four lines of 76 characters in the style of a Usenet [[signature block]].<ref name=\"gallo03\">\n{{cite book |last1 = Gallo |first1 = Felix |title = Games, diversions, and Perl culture: best of the Perl journal |chapter = The Zeroth Obfuscated Perl Contest |editor= Jon Orwant |publisher = O'Reilly Media |year = 2003 |chapter-url = http://oreilly.com/catalog/tpj3/chapter/ch43.pdf |accessdate = 2011-01-12 |url-status = dead |archiveurl = https://web.archive.org/web/20091122114544/http://oreilly.com/catalog/tpj3/chapter/ch43.pdf |archivedate = November 22, 2009 |df = mdy-all }}\n</ref>\n; Poetry\n: Perl poetry is the practice of writing poems that can be compiled as legal Perl code, for example the piece known as [[Black Perl]]. Perl poetry is made possible by the large number of English words that are used in the Perl language. New poems are regularly submitted to the community at [[PerlMonks]].<ref>\n{{cite web |url = http://www.perlmonks.org/?node_id=1590 |title = Perl Poetry |accessdate = 2011-01-27 |publisher = [[PerlMonks]] }}\n</ref>\n\n===Perl on IRC===\nThere are a number of [[Internet Relay Chat|IRC]] channels that offer support for the language and some modules.\n\n{| class=\"wikitable\"\n|-\n! IRC Network\n! Channels\n|-\n| irc.freenode.net\n| #perl #perl6 #cbstream #perlcafe #poe\n|-\n| irc.perl.org\n| #moose #poe #catalyst #dbix-class #perl-help #distzilla #epo #corehackers #sdl #win32 #toolchain #padre #dancer\n|-\n| irc.slashnet.org\n| #perlmonks\n|-\n| irc.oftc.net\n| #perl\n|-\n| irc.efnet.net\n| #perlhelp\n|-\n| irc.rizon.net\n| #perl\n|-\n| irc.debian.org\n| #debian-perl (packaging Perl modules for Debian)\n|}\n\n===CPAN Acme===\nThere are also many examples of code written purely for entertainment on the [[CPAN]]. <code>Lingua::Romana::Perligata</code>, for example, allows writing programs in [[Latin]].<ref>{{cite web |url = http://www.csse.monash.edu.au/~damian/papers/HTML/Perligata.html |title = Lingua::Romana::Perligata -- Perl for the XXI-imum Century |author = Conway, Damian }}</ref> Upon execution of such a program, the module translates its source code into regular Perl and runs it.\n\nThe Perl community has set aside the \"[[Acme Corporation|Acme]]\" namespace for modules that are fun in nature (but its scope has widened to include exploratory or experimental code or any other module that is not meant to ever be used in production). Some of the Acme modules are deliberately implemented in amusing ways. This includes <code>Acme::Bleach</code>, one of the first modules in the <code>Acme::</code> namespace,<ref>{{cite web |url = http://grnlight.net/index.php/programming-articles/101-use-perl-journal-of-acme |archive-url = https://web.archive.org/web/20140522123044/http://grnlight.net/index.php/programming-articles/101-use-perl-journal-of-acme |url-status = dead |archive-date = 2014-05-22 |title = use Perl; Journal of acme |date = 2014-05-22 |author = Brocard, Leon |publisher = GrnLight.net }}</ref> which allows the program's source code to be \"whitened\" (i.e., all characters replaced with whitespace) and yet still work.\n\n==Example code==\nIn older versions of Perl, one would write the [[Hello World]] program as:\n\n<source lang=\"perl\">\nprint \"Hello, World!\\n\";\n</source>\n\nHere is a more complex Perl program, that counts down the seconds up to a given threshold:\n\n<source lang=\"perl\">\n#!/usr/bin/perl\nuse strict;\nuse warnings;\nuse IO::Handle;\n\nmy ( $remaining, $total );\n\n$remaining = $total = shift(@ARGV);\n\nSTDOUT->autoflush(1);\n\nwhile ( $remaining ) {\n    printf ( \"Remaining %s/%s \\r\", $remaining--, $total );\n    sleep 1;\n}\n\nprint \"\\n\";\n</source>\n\nThe perl interpreter can also be used for one-off scripts on the command line. The following example (as invoked from an sh-compatible shell, such as Bash) translates the string \"Bob\" in all files ending with .txt in the current directory to \"Robert\":\n\n<source lang=\"bash\">\n$ perl -i.bak -lp -e 's/Bob/Robert/g' *.txt\n</source>\n\n==Criticism==\nPerl has been referred to as \"[[wikt:line noise|line noise]]\" by some programmers who claim its syntax makes it a [[write-only language]]. The earliest such mention was in the first edition of the book ''[[Learning Perl]]'', a Perl 4 tutorial book written by [[Randal L. Schwartz]],<ref>{{cite journal |title = Developer Update|volume = 2 |journal = Dr. Dobb's Developer Update |publisher = Miller-Freeman |year = 1995 }}</ref><!-- page 15 --> in the first chapter of which he states: \"Yes, sometimes Perl looks like line noise to the uninitiated, but to the seasoned Perl programmer, it looks like checksummed line noise with a mission in life.\"<ref name=\"LP\">{{cite book |title = Learning Perl |last = Schwartz |first = Randal L. |authorlink = Randal L. Schwartz |publisher = O'Reilly & Associates |year = 1993 |title-link = Learning Perl |bibcode = 1993lepe.book.....S }}</ref> He also stated that the accusation that Perl is a write-only language could be avoided by coding with \"proper care\".<ref name=\"LP\" /> The Perl overview document ''perlintro'' states that the names of built-in \"magic\" scalar [[Variable (computer science)|variables]] \"look like punctuation or line noise\".<ref>{{cite web |url = http://perldoc.perl.org/perlintro.html |title = perlintro |work = Perl 5 version 18.0 documentation |publisher = Perl 5 Porters and perldoc.perl.org |accessdate = 2013-06-30 |archive-url = https://web.archive.org/web/20110109121845/http://perldoc.perl.org/perlintro.html |archive-date = January 9, 2011 |url-status = dead }}</ref> However, the English module provides  both long and short English alternatives. ''perlstyle'' document states that line noise in regular expressions could be mitigated using the <code>/x</code> modifier to add whitespace.<ref>{{cite web |url = http://perldoc.perl.org/perlstyle.html |title = perlstyle |work = Perl 5 version 18.0 documentation |publisher = Perl 5 Porters and perldoc.perl.org |accessdate = 2013-06-30 }}</ref>\n\nAccording to the ''Perl 6 FAQ'', Perl 6 was designed to mitigate \"the usual suspects\" that elicit the \"line noise\" claim from Perl 5 critics, including the removal of \"the majority of the punctuation variables\" and the sanitization of the regex syntax.<ref name=\"P6FAQ\">{{cite web |url = http://www.perl6.org/archive/faq.html |title = Perl 6 FAQ |publisher = Perl 6 Project |accessdate = 2013-06-30 }}</ref> The ''Perl 6 FAQ'' also states that what is sometimes referred to as Perl's line noise is \"the actual syntax of the language\" just as [[gerund]]s and [[Preposition and postposition|prepositions]] are a part of the [[English language]].<ref name=\"P6FAQ\" /> In a December 2012 blog posting, despite claiming that \"Rakudo Perl 6 has failed and will continue to fail unless it gets some adult supervision\", [[chromatic (programmer)|chromatic]] stated that the design of Perl 6 has a \"well-defined grammar\" as well as an \"improved type system, a unified object system with an intelligent metamodel, metaoperators, and a clearer system of context that provides for such niceties as pervasive laziness\".<ref name=\"chromatic-blog\">{{cite web |url = http://www.modernperlbooks.com/mt/2012/12/the-implementation-of-perl-5-versus-perl-6.html |title = The Implementation of Perl 5 versus Perl 6 |author = chromatic |authorlink = chromatic (programmer) |date = 2012-12-31 |accessdate = 2013-06-30 }}</ref> He also stated that \"Perl 6 has a coherence and a consistency that Perl 5 lacks.\"<ref name=\"chromatic-blog\" />\n\n==See also==\n{{Portal|Free and open-source software|Computer programming}}\n* [[Outline of Perl]]\n* [[Perl Data Language]]\n* [[Perl Object Environment]]\n* [[Plain Old Documentation]]\n\n==References==\n{{reflist|30em}}\n\n==Further reading==\n* [http://shop.oreilly.com/product/0636920018452.do Learning Perl] 6th Edition (2011), O'Reilly. Beginner-level introduction to Perl.\n* [http://ofps.oreilly.com/titles/9781118013847/index.html Beginning Perl] 1st Edition (2012), Wrox. A beginner's tutorial for those new to programming or just new to Perl.\n* [http://onyxneon.com/books/modern_perl/ Modern Perl] 2nd Edition (2012), Onyx Neon. Describes [[Modern Perl]] programming techniques.\n* [http://shop.oreilly.com/product/9780596004927.do Programming Perl] 4th Edition (2012), O'Reilly. The definitive Perl reference.\n* [http://www.pearsonhighered.com/educator/product/Effective-Perl-Programming-Ways-to-Write-Better-More-Idiomatic-Perl-2E/9780321496942.page Effective Perl Programming] 2nd Edition (2010), Addison-Wesley. Intermediate- to advanced-level guide to writing idiomatic Perl.\n* ''[[Perl Cookbook]]'', {{ISBN|0-596-00313-7}}. Practical Perl programming examples.\n* {{cite book |last = Dominus |first = Mark Jason |title = Higher Order Perl |url = http://hop.perl.plover.com/book/ |year = 2005 |publisher = Morgan Kaufmann |isbn = 978-1-55860-701-9 }} Functional programming techniques in Perl.\n\n==External links==\n{{Sister project links|commons=Category:Perl (programming language)|v=Topic:Perl|n=no|q=Perl|s=no|b=Perl Programming}}\n<!--======================== {{No more links}} ============================\n    | PLEASE BE CAUTIOUS IN ADDING MORE LINKS TO THIS ARTICLE. Wikipedia  |\n    | is not a collection of links nor should it be used for advertising. |\n    |                                                                     |\n    |           Excessive or inappropriate links WILL BE DELETED.         |\n    | See [[Wikipedia:External links]] & [[Wikipedia:Spam]] for details.  |\n    |                                                                     |\n    | If there are already plentiful links, please propose additions or   |\n    | replacements on this article's discussion page, or submit your link |\n    | to the relevant category at the Open Directory Project (dmoz.org)   |\n    | and link back to that category using the {{dmoz}} template.         |\n==={{No more links}}=========-->\n<!-- Before adding any links, make sure you have read the External Links style guide, then stopped and reread it again. If you aren't absolutely sure the link is in compliance, ask on the talk page first!\n-->\n* {{Official website}}\n\n<!-- Before adding any links, make sure you have read the External Links style guide, then stopped and reread it again. If you aren't absolutely sure the link is in compliance, ask on the talk page first!\nSee [http://en.wikipedia.org/wiki/Wikipedia:External_links/Noticeboard#.27Perl.27_external_links]\n-->\n{{Perl}}\n{{Programming languages}}\n{{FOSS}}\n\n{{Authority control}}\n\n[[Category:Perl| ]]\n[[Category:American inventions]]\n[[Category:C programming language family]]\n[[Category:Cross-platform software]]\n[[Category:Dynamic programming languages]]\n[[Category:Dynamically typed programming languages]]\n[[Category:Free compilers and interpreters]]\n[[Category:Free software programmed in C]]\n[[Category:High-level programming languages]]\n[[Category:Object-oriented programming languages]]\n[[Category:Procedural programming languages]]\n[[Category:Programming languages created in 1987]]\n[[Category:Scripting languages]]\n[[Category:Software using the Artistic license]]\n[[Category:Text-oriented programming languages]]\n[[Category:Unix programming tools]]\n[[Category:Articles with example code]]\n", "name_user": "GreatMarkO", "label": "safe", "comment": "\u2192\u200eWindows", "url_page": "//en.wikipedia.org/wiki/Perl"}
{"title_page": "1993\u201394 Alpha Ethniki", "text_new": "{{Infobox football league season\n| competition        = [[Alpha Ethniki]]\n| season             = 1993\u201394\n| winners            = [[AEK Athens F.C.|AEK Athens]]<br/>11th Greek title\n| relegated          = [[Panachaiki F.C.|Panachaiki]]<br/>[[Apollon Pontou FC|Apollon Kalamarias]]<br/>[[Naoussa F.C.|Naoussa]]\n| continentalcup1    = [[1994-95 UEFA Champions League|Champions League]]\n| continentalcup1 qualifiers = [[AEK Athens F.C.|AEK Athens]]\n| continentalcup2    = [[1994-95 UEFA Cup Winners' Cup|Cup Winners' Cup]]\n| continentalcup2 qualifiers = [[Panathinaikos F.C.|Panathinaikos]]\n| continentalcup3    = [[1994-95 UEFA Cup|UEFA Cup]]\n| continentalcup3 qualifiers = [[Olympiacos F.C.|Olympiacos]]<br/>[[Aris Thessaloniki F.C.|Aris]]\n| league topscorer   = [[Alexis Alexandris]]<br/>[[Krzysztof Warzycha]] (24)\n| biggest home win   = \n| biggest away win   = \n| highest scoring    = \n| matches            = 306\n| total goals        = 874\n| longest wins       = \n| longest unbeaten   = \n| longest winless    = \n| longest losses     = \n| highest attendance = \n| lowest attendance  = \n| prevseason         = [[1992\u201393 Alpha Ethniki|1992\u201393]]\n| nextseason         = [[1994\u201395 Alpha Ethniki|1994\u201395]]\n}}\n\n{{Location map+ |Greece |width=380 |float=center |caption=Location of teams in '''1993\u201394 Alpha Ethniki''' |places=\n{{Location map~ |Greece |lat=37.966667 |long=23.716667 |label=<small>[[AEK Athens F.C.|AEK Athens]]</small><br><small>[[Apollon Smyrni F.C.|Apollon]]</small><br><small>[[Athinaikos F.C.|Athinaikos]]</small><br><small>[[Panathinaikos FC|Panathinaikos]]</small><br><small>[[Panionios F.C.|Panionios]]</small>}}\n{{Location map~ |Greece |lat=40.65     |long=22.9      |label=<small>[[Apollon Kalamarias F.C.|Apollon]]</small><br><small>[[Aris F.C. (Thessaloniki)|Aris]]</small><br><small>[[Iraklis Thessaloniki F.C.|Iraklis]]</small><br><small>[[PAOK F.C.|PAOK]]</small>}}\n{{Location map~ |Greece |lat=37.95     |long=23.633333 |label=<small>[[Olympiacos F.C.|Olympiacos]]</small> |position=left}}\n{{Location map~ |Greece |lat=41.15     |long=24.133333 |label=<small>[[Doxa Drama F.C.|Doxa]]</small> |position=left}}\n{{Location map~ |Greece |lat=40.8      |long=22.05     |label=<small>[[Edessaikos F.C.|Edessaikos]]</small> |position=left}}\n{{Location map~ |Greece |lat=39.641667 |long=22.416667 |label=<small>[[AEL 1964 FC|Larissa]]</small> |position=left}}\n{{Location map~ |Greece |lat=38.433333 |long=22.866667 |label=<small>[[Levadiakos F.C.|Levadiakos]]</small> |position=right}}\n{{Location map~ |Greece |lat=40.633333 |long=22.066667 |label=<small>[[Naoussa F.C.|Naoussa]]</small> |position=bottom}}\n{{Location map~ |Greece |lat=35.333333 |long=25.133333 |label=<small>[[OFI Crete|OFI]]</small>}}\n{{Location map~ |Greece |lat=38.25     |long=21.733333 |label=<small>[[Panachaiki]]</small> |position=left}}\n{{Location map~ |Greece |lat=41.133333 |long=24.883333 |label=<small>[[Skoda Xanthi F.C.|Skoda Xanthi]]</small>}}\n}}\n\n==League standings==\n<onlyinclude>{{#invoke:sports table|main|style=WDL\n|show_limit = 5\n|res_col_header=QR\n\n|team1=AEK|name_AEK=[[AEK Athens F.C.|AEK Athens]]\n|team2=PAT|name_PAT=[[Panathinaikos F.C.|Panathinaikos]]\n|team3=OLY|name_OLY=[[Olympiacos F.C.|Olympiacos]]\n|team4=ARI|name_ARI=[[Aris Thessaloniki F.C.|Aris]]\n|team5=PAOK|name_PAOK=[[PAOK FC|PAOK]]\n|team6=IRT|name_IRT=[[Iraklis 1908 Thessaloniki F.C.|Iraklis]]\n|team7=OFI|name_OFI=[[OFI Crete|OFI]]\n|team8=XAN|name_XAN=[[Xanthi F.C.|Xanthi]]\n|team9=PIO|name_PIO=[[Panionios F.C.|Panionios]]\n|team10=LAR|name_LAR=[[Athlitiki Enosi Larissa F.C.|Larissa]]\n|team11=LEV|name_LEV=[[Levadiakos F.C.|Levadiakos]]\n|team12=ATH|name_ATH=[[Athinaikos F.C.|Athinaikos]]\n|team13=APA|name_APA=[[Apollon Smyrni F.C.|Apollon Athens]]\n|team14=EDE|name_EDE=[[Edessaikos F.C.|Edessaikos]]\n|team15=DOX|name_DOX=[[Doxa Drama F.C.|Doxa Drama]]\n|team16=PCK|name_PCK=[[Panachaiki F.C.|Panachaiki]]\n|team17=APL|name_APL=[[Apollon Pontou FC|Apollon Kalamarias]]\n|team18=NAO|name_NAO=[[Naoussa F.C.|Naoussa]]\n\n|win_AEK=25|draw_AEK=4|loss_AEK=5|gf_AEK=63|ga_AEK=28|status_AEK=C\n|win_PAT=22|draw_PAT=6|loss_PAT=6|gf_PAT=82|ga_PAT=32\n|win_OLY=18|draw_OLY=14|loss_OLY=2|gf_OLY=63|ga_OLY=27\n|win_ARI=18|draw_ARI=9|loss_ARI=7|gf_ARI=55|ga_ARI=34\n|win_PAOK=14|draw_PAOK=9|loss_PAOK=11|gf_PAOK=45|ga_PAOK=38\n|win_IRT=13|draw_IRT=10|loss_IRT=11|gf_IRT=59|ga_IRT=45\n|win_OFI=13|draw_OFI=8|loss_OFI=13|gf_OFI=55|ga_OFI=42\n|win_XAN=12|draw_XAN=9|loss_XAN=13|gf_XAN=62|ga_XAN=63\n|win_PIO=12|draw_PIO=7|loss_PIO=15|gf_PIO=49|ga_PIO=58\n|win_LAR=11|draw_LAR=9|loss_LAR=14|gf_LAR=45|ga_LAR=53\n|win_LEV=11|draw_LEV=9|loss_LEV=14|gf_LEV=38|ga_LEV=45\n|win_ATH=11|draw_ATH=7|loss_ATH=16|gf_ATH=34|ga_ATH=50\n|win_APA=9|draw_APA=13|loss_APA=12|gf_APA=30|ga_APA=41\n|win_EDE=11|draw_EDE=6|loss_EDE=17|gf_EDE=41|ga_EDE=56\n|win_DOX=11|draw_DOX=5|loss_DOX=18|gf_DOX=37|ga_DOX=64\n|win_PCK=9|draw_PCK=10|loss_PCK=15|gf_PCK=36|ga_PCK=56|status_PCK=R\n|win_APL=8|draw_APL=8|loss_APL=18|gf_APL=42|ga_APL=66|status_APL=R\n|win_NAO=5|draw_NAO=3|loss_NAO=26|gf_NAO=38|ga_NAO=76|status_NAO=R\n|col_CLQR=green1|text_CLQR=Qualification for [[1994\u201395 UEFA Champions League#Qualifying round|Champions League qualifying round]]\n|result1=CLQR\n|col_CWC1=yellow1|text_CWC1=Qualification for [[1994\u201395 UEFA Cup Winners' Cup#First round|Cup Winners' Cup first round]] \n|result2=CWC1\n|col_UC1=blue1|text_UC1=Qualification for [[1994\u201395 UEFA Cup#First round|UEFA Cup first round]]\n|result3=UC1\n|col_UCPR=blue2|text_UCPR=Qualification for [[1994\u201395 UEFA Cup#Preliminary round|UEFA Cup preliminary round]]\n|result4=UCPR\n|col_R=red1|text_R=Relegation to [[1994\u201395 Beta Ethniki|Beta Ethniki]]\n|result16=R|result17=R|result18=R\n|update=complete\n|source=[http://www.rsssf.com/tablesg/grk94.html RSSSF]\n|class_rules=1st points; 2nd head-to-head points; 3rd head-to-head goal difference; 4th decision match.\n}}</onlyinclude>\n\n{{winners||[[Super League Greece|Alpha Ethniki]] 1993\u201394<br>Champions|[[File:600px Giallo con aquila bicefala nera2 svg.png|150px]]<br>[[AEK Athens F.C.|AEK Athens]]<br>11th Title}}\n\n==Results==\n{{#invoke:Sports results|main\n|matches_style=FBR|solid_cell=grey\n|team1=AEK|team2=APA|team3=APL|team4=ARI|team5=ATH\n|team6=DOX|team7=EDE|team8=IRT|team9=LAR|team10=LEV\n|team11=NAO|team12=OFI|team13=OLY|team14=PCK|team15=PAT\n|team16=PIO|team17=PAOK|team18=XAN\n\n|name_AEK=[[AEK Athens F.C.|AEK Athens]]\n|match_AEK_APA=4-0\n|match_AEK_APL=3-0\n|match_AEK_ARI=3-0\n|match_AEK_ATH=3-2\n|match_AEK_DOX=3-1\n|match_AEK_EDE=4-1\n|match_AEK_IRT=2-1\n|match_AEK_LAR=1-0\n|match_AEK_LEV=2-1\n|match_AEK_NAO=4-2\n|match_AEK_OFI=2-1\n|match_AEK_OLY=[[Olympiacos\u2013AEK rivalry|1-2]]\n|match_AEK_PCK=2-0\n|match_AEK_PAT=[[AEK\u2013Panathinaikos rivalry|2-0]]\n|match_AEK_PIO=1-0\n|match_AEK_PAOK=[[Double-headed eagles derby|2-0]]\n|match_AEK_XAN=2-2\n\n|name_APA=[[Apollon Smyrni F.C.|Apollon Athens]]\n|match_APA_AEK=1-3\n|match_APA_APL=2-0\n|match_APA_ARI=1-2\n|match_APA_ATH=1-1\n|match_APA_DOX=1-0\n|match_APA_EDE=1-1\n|match_APA_IRT=0-0\n|match_APA_LAR=2-0\n|match_APA_LEV=0-0\n|match_APA_NAO=3-1\n|match_APA_OFI=1-0\n|match_APA_OLY=0-0\n|match_APA_PCK=0-1\n|match_APA_PAT=0-0\n|match_APA_PIO=1-0\n|match_APA_PAOK=3-1\n|match_APA_XAN=3-1\n\n|name_APL=[[Apollon Pontou FC|Apollon Kalamarias]]\n|match_APL_AEK=1-2\n|match_APL_APA=1-2\n|match_APL_ARI=1-2\n|match_APL_ATH=1-3\n|match_APL_DOX=4-0\n|match_APL_EDE=2-2\n|match_APL_IRT=1-1\n|match_APL_LAR=5-2\n|match_APL_LEV=1-0\n|match_APL_NAO=1-0\n|match_APL_OFI=2-1\n|match_APL_OLY=0-0\n|match_APL_PCK=1-0\n|match_APL_PAT=0-1\n|match_APL_PIO=1-1\n|match_APL_PAOK=1-1\n|match_APL_XAN=0-0\n\n|name_ARI=[[Aris Thessaloniki F.C.|Aris]]\n|match_ARI_AEK=2-0\n|match_ARI_APA=0-0\n|match_ARI_APL=3-0\n|match_ARI_ATH=2-0\n|match_ARI_DOX=1-2\n|match_ARI_EDE=3-1\n|match_ARI_IRT=1-1\n|match_ARI_LAR=1-0\n|match_ARI_LEV=3-0\n|match_ARI_NAO=2-1\n|match_ARI_OFI=2-0\n|match_ARI_OLY=1-1\n|match_ARI_PCK=2-0\n|match_ARI_PAT=1-2\n|match_ARI_PIO=3-1\n|match_ARI_PAOK=[[Derby of Northern Greece|1-0]]\n|match_ARI_XAN=3-1\n\n|name_ATH=[[Athinaikos F.C.|Athinaikos]]\n|match_ATH_AEK=1-0\n|match_ATH_APA=3-1\n|match_ATH_APL=3-1\n|match_ATH_ARI=0-0\n|match_ATH_DOX=1-0\n|match_ATH_EDE=3-0\n|match_ATH_IRT=1-0\n|match_ATH_LAR=1-1\n|match_ATH_LEV=0-0\n|match_ATH_NAO=1-3\n|match_ATH_OFI=2-0\n|match_ATH_OLY=0-1\n|match_ATH_PCK=0-0\n|match_ATH_PAT=1-1\n|match_ATH_PIO=0-1\n|match_ATH_PAOK=4-0\n|match_ATH_XAN=2-1\n\n|name_DOX=[[Doxa Drama F.C.|Doxa Drama]]\n|match_DOX_AEK=1-3\n|match_DOX_APA=0-0\n|match_DOX_APL=2-1\n|match_DOX_ARI=1-0\n|match_DOX_ATH=1-0\n|match_DOX_EDE=0-1\n|match_DOX_IRT=1-2\n|match_DOX_LAR=1-2\n|match_DOX_LEV=2-1\n|match_DOX_NAO=3-2\n|match_DOX_OFI=0-0\n|match_DOX_OLY=0-1\n|match_DOX_PCK=3-2\n|match_DOX_PAT=1-2\n|match_DOX_PIO=3-1\n|match_DOX_PAOK=1-1\n|match_DOX_XAN=1-0\n\n|name_EDE=[[Edessaikos F.C.|Edessaikos]]\n|match_EDE_AEK=0-1\n|match_EDE_APA=1-1\n|match_EDE_APL=3-1\n|match_EDE_ARI=2-2\n|match_EDE_ATH=5-1\n|match_EDE_DOX=1-2\n|match_EDE_IRT=1-0\n|match_EDE_LAR=1-0\n|match_EDE_LEV=1-2\n|match_EDE_NAO=3-1\n|match_EDE_OFI=2-2\n|match_EDE_OLY=0-2\n|match_EDE_PCK=0-0\n|match_EDE_PAT=2-0\n|match_EDE_PIO=3-1\n|match_EDE_PAOK=1-0\n|match_EDE_XAN=2-0\n\n|name_IRT=[[Iraklis 1908 Thessaloniki F.C.|Iraklis]]\n|match_IRT_AEK=0-1\n|match_IRT_APA=3-1\n|match_IRT_APL=3-1\n|match_IRT_ARI=3-3\n|match_IRT_ATH=2-0\n|match_IRT_DOX=5-0\n|match_IRT_EDE=1-0\n|match_IRT_LAR=3-1\n|match_IRT_LEV=5-1\n|match_IRT_NAO=4-2\n|match_IRT_OFI=0-0\n|match_IRT_OLY=1-2\n|match_IRT_PCK=2-0\n|match_IRT_PAT=2-3\n|match_IRT_PIO=2-1\n|match_IRT_PAOK=1-1\n|match_IRT_XAN=5-3\n\n|name_LAR=[[Athlitiki Enosi Larissa F.C.|Larissa]]\n|match_LAR_AEK=0-0\n|match_LAR_APA=0-0\n|match_LAR_APL=3-1\n|match_LAR_ARI=3-1\n|match_LAR_ATH=3-0\n|match_LAR_DOX=2-0\n|match_LAR_EDE=2-0\n|match_LAR_IRT=0-1\n|match_LAR_LEV=1-1\n|match_LAR_NAO=1-1\n|match_LAR_OFI=3-1\n|match_LAR_OLY=2-2\n|match_LAR_PCK=1-0\n|match_LAR_PAT=4-4\n|match_LAR_PIO=5-0\n|match_LAR_PAOK=1-1\n|match_LAR_XAN=1-1\n\n|name_LEV=[[Levadiakos F.C.|Levadiakos]]\n|match_LEV_AEK=0-1\n|match_LEV_APA=0-0\n|match_LEV_APL=2-1\n|match_LEV_ARI=1-1\n|match_LEV_ATH=3-0\n|match_LEV_DOX=3-0\n|match_LEV_EDE=2-1\n|match_LEV_IRT=4-3\n|match_LEV_LAR=0-1\n|match_LEV_NAO=3-1\n|match_LEV_OFI=1-0\n|match_LEV_OLY=0-0\n|match_LEV_PCK=5-0\n|match_LEV_PAT=1-2\n|match_LEV_PIO=1-1\n|match_LEV_PAOK=1-0\n|match_LEV_XAN=1-1\n\n|name_NAO=[[Naoussa F.C.|Naoussa]]\n|match_NAO_AEK=1-3\n|match_NAO_APA=1-0\n|match_NAO_APL=0-1\n|match_NAO_ARI=1-4\n|match_NAO_ATH=2-0\n|match_NAO_DOX=2-3\n|match_NAO_EDE=0-1\n|match_NAO_IRT=3-3\n|match_NAO_LAR=2-3\n|match_NAO_LEV=2-1\n|match_NAO_OFI=0-0\n|match_NAO_OLY=0-5\n|match_NAO_PCK=0-1\n|match_NAO_PAT=0-3\n|match_NAO_PIO=0-1\n|match_NAO_PAOK=0-1\n|match_NAO_XAN=0-1\n\n|name_OFI=[[OFI Crete|OFI]]\n|match_OFI_AEK=1-2\n|match_OFI_APA=5-1\n|match_OFI_APL=3-1\n|match_OFI_ARI=2-0\n|match_OFI_ATH=4-0\n|match_OFI_DOX=3-2\n|match_OFI_EDE=3-0\n|match_OFI_IRT=3-3\n|match_OFI_LAR=2-1\n|match_OFI_LEV=4-0\n|match_OFI_NAO=4-0\n|match_OFI_OLY=2-0\n|match_OFI_PCK=2-0\n|match_OFI_PAT=0-0\n|match_OFI_PIO=3-0\n|match_OFI_PAOK=1-0\n|match_OFI_XAN=2-2\n\n|name_OLY=[[Olympiacos F.C.|Olympiacos]]\n|match_OLY_AEK=[[Olympiacos\u2013AEK rivalry|3-0]]\n|match_OLY_APA=1-1\n|match_OLY_APL=6-0\n|match_OLY_ARI=1-1\n|match_OLY_ATH=2-0\n|match_OLY_DOX=3-0\n|match_OLY_EDE=3-0\n|match_OLY_IRT=1-1\n|match_OLY_LAR=4-1\n|match_OLY_LEV=2-2\n|match_OLY_NAO=2-1\n|match_OLY_OFI=2-0\n|match_OLY_PCK=3-2\n|match_OLY_PAT=[[Derby of the eternal enemies|0-0]]\n|match_OLY_PIO=1-1\n|match_OLY_PAOK=[[Olympiacos\u2013P.A.O.K. rivalry|1-0]]\n|match_OLY_XAN=1-1\n\n|name_PCK=[[Panachaiki F.C.|Panachaiki]]\n|match_PCK_AEK=0-2\n|match_PCK_APA=0-0\n|match_PCK_APL=5-5\n|match_PCK_ARI=0-2\n|match_PCK_ATH=0-2\n|match_PCK_DOX=2-2\n|match_PCK_EDE=2-0\n|match_PCK_IRT=1-1\n|match_PCK_LAR=1-0\n|match_PCK_LEV=1-0\n|match_PCK_NAO=5-4\n|match_PCK_OFI=3-3\n|match_PCK_OLY=2-1\n|match_PCK_PAT=0-4\n|match_PCK_PIO=1-1\n|match_PCK_PAOK=1-1\n|match_PCK_XAN=2-1\n\n|name_PAT=[[Panathinaikos F.C.|Panathinaikos]]\n|match_PAT_AEK=[[AEK\u2013Panathinaikos rivalry|1-2]]\n|match_PAT_APA=3-0\n|match_PAT_APL=5-1\n|match_PAT_ARI=1-1\n|match_PAT_ATH=5-1\n|match_PAT_DOX=8-0\n|match_PAT_EDE=3-1\n|match_PAT_IRT=2-0\n|match_PAT_LAR=5-0\n|match_PAT_LEV=3-0\n|match_PAT_NAO=2-1\n|match_PAT_OFI=4-1\n|match_PAT_OLY=[[Derby of the eternal enemies|1-2]]\n|match_PAT_PCK=1-0\n|match_PAT_PIO=3-1\n|match_PAT_PAOK=2-0\n|match_PAT_XAN=5-0\n\n|name_PIO=[[Panionios F.C.|Panionios]]\n|match_PIO_AEK=2-2\n|match_PIO_APA=3-2\n|match_PIO_APL=2-1\n|match_PIO_ARI=0-1\n|match_PIO_ATH=2-0\n|match_PIO_DOX=4-3\n|match_PIO_EDE=2-1\n|match_PIO_IRT=1-0\n|match_PIO_LAR=5-1\n|match_PIO_LEV=0-1\n|match_PIO_NAO=3-0\n|match_PIO_OFI=2-0\n|match_PIO_OLY=1-1\n|match_PIO_PCK=0-2\n|match_PIO_PAT=2-4\n|match_PIO_PAOK=1-1\n|match_PIO_XAN=4-1\n\n|name_PAOK=[[PAOK FC|PAOK]]\n|match_PAOK_AEK=[[Double-headed eagles derby|0-0]]\n|match_PAOK_APA=1-0\n|match_PAOK_APL=1-1\n|match_PAOK_ARI=[[Derby of Northern Greece|1-2]]\n|match_PAOK_ATH=3-0\n|match_PAOK_DOX=1-0\n|match_PAOK_EDE=6-1\n|match_PAOK_IRT=2-0\n|match_PAOK_LAR=2-0\n|match_PAOK_LEV=2-0\n|match_PAOK_NAO=1-0\n|match_PAOK_OFI=2-1\n|match_PAOK_OLY=[[Olympiacos\u2013P.A.O.K. rivalry|1-1]]\n|match_PAOK_PCK=4-1\n|match_PAOK_PAT=3-1\n|match_PAOK_PIO=3-2\n|match_PAOK_XAN=2-1\n\n|name_XAN=[[Xanthi F.C.|Xanthi]]\n|match_XAN_AEK=1-0\n|match_XAN_APA=4-1\n|match_XAN_APL=2-3\n|match_XAN_ARI=3-2\n|match_XAN_ATH=1-1\n|match_XAN_DOX=1-1\n|match_XAN_EDE=3-2\n|match_XAN_IRT=1-0\n|match_XAN_LAR=3-0\n|match_XAN_LEV=3-0\n|match_XAN_NAO=3-4\n|match_XAN_OFI=2-1\n|match_XAN_OLY=4-6\n|match_XAN_PCK=1-1\n|match_XAN_PAT=2-1\n|match_XAN_PIO=6-2\n|match_XAN_PAOK=5-2\n\n|update=complete|source=\n}}\n\n==Top goalscorers==\n\n{| class=\"wikitable\" style=\"text-align:center\"\n|-\n!Rank\n!Player\n!Club\n!Goals\n|-\n!rowspan=\"2\"|1\n|align=\"left\"|{{flagicon|Greece}} [[Alexis Alexandris]]\n|align=\"left\"|[[AEK Athens F.C.|AEK Athens]]\n|rowspan=\"2\"|24\n|-\n|align=\"left\"|{{flagicon|Poland}} [[Krzysztof Warzycha]]\n|align=\"left\"|[[Panathinaikos F.C.|Panathinaikos]]\n|-\n!3\n|align=\"left\"|{{flagicon|Greece}} [[Fanis Toutziaris]]\n|align=\"left\"|[[Iraklis 1908 Thessaloniki F.C.|Iraklis]]\n|19\n|-\n!rowspan=\"2\"|4\n|align=\"left\"|{{flagicon|Slovakia}} [[Milan Luhov\u00fd]]\n|align=\"left\"|[[PAOK FC|PAOK]]\n|rowspan=\"2\"|15\n|-\n|align=\"left\"|{{flagicon|Greece}} [[Dimitris Saravakos]]\n|align=\"left\"|[[Panathinaikos F.C.|Panathinaikos]]\n|-\n!6\n|align=\"left\"|{{flagicon|FR Yugoslavia}} [[Zoran Lon\u010dar (footballer)|Zoran Lon\u010dar]]\n|align=\"left\"|[[Aris Thessaloniki F.C.|Aris]]\n|13\n|-\n!rowspan=\"2\"|7\n|align=\"left\"|{{flagicon|FR Yugoslavia}} [[Ljubi\u0161a Milojevi\u0107]]\n|align=\"left\"|[[Aris Thessaloniki F.C.|Aris]]\n|rowspan=\"2\"|12\n|-\n|align=\"left\"|{{flagicon|FR Yugoslavia}} [[Sa\u0161a \u0160kara]]\n|align=\"left\"|[[Edessaikos F.C.|Edessaikos]] \n|-\n!rowspan=\"2\"|9\n|align=\"left\"|{{flagicon|Greece}} [[Vasilis Dimitriadis]]\n|align=\"left\"|[[AEK Athens F.C.|AEK Athens]]\n|rowspan=\"2\"|11\n|-\n|align=\"left\"|{{flagicon|Greece}} [[Panagiotis Tsalouchidis]]\n|align=\"left\"|[[Olympiacos F.C.|Olympiacos]] \n|}\n\n==External links==\n* [http://www.epo.gr Official Greek FA Site]\n* [http://www.rsssf.com/tablesg/grk94.html RSSSF]\n* [http://www.superleaguegreece.net Greek SuperLeague official Site]\n* [https://web.archive.org/web/20070613222837/http://www.galanissportsdata.com/sdatesgr.asp SuperLeague Statistics]\n \n{{Super League Greece seasons}}\n{{1993\u201394 in Greek football}}\n{{1993\u201394 in European Football (UEFA)}}\n\n{{DEFAULTSORT:1993-94 Alpha Ethniki}}\n[[Category:Alpha Ethniki seasons]]\n[[Category:1993\u201394 in European association football leagues|Greece]]\n[[Category:1993\u201394 in Greek football|1]]\n", "text_old": "{{Infobox football league season\n| competition        = [[Alpha Ethniki]]\n| season             = 1993\u201394\n| winners            = [[AEK Athens F.C.|AEK Athens]]<br/>11th Greek title\n| relegated          = [[Panachaiki F.C.|Panachaiki]]<br/>[[Apollon Pontou FC|Apollon Kalamarias]]<br/>[[Naoussa F.C.|Naoussa]]\n| continentalcup1    = [[1994-95 UEFA Champions League|Champions League]]\n| continentalcup1 qualifiers = [[AEK Athens F.C.|AEK Athens]]\n| continentalcup2    = [[1994-95 UEFA Cup Winners' Cup|Cup Winners' Cup]]\n| continentalcup2 qualifiers = [[Panathinaikos F.C.|Panathinaikos]]\n| continentalcup3    = [[1994-95 UEFA Cup|UEFA Cup]]\n| continentalcup3 qualifiers = [[Olympiacos F.C.|Olympiacos]]<br/>[[Aris Thessaloniki F.C.|Aris]]\n| league topscorer   = [[Alexis Alexandris]]<br/>[[Krzysztof Warzycha]] (24)\n| biggest home win   = \n| biggest away win   = \n| highest scoring    = \n| matches            = 306\n| total goals        = 874\n| longest wins       = \n| longest unbeaten   = \n| longest winless    = \n| longest losses     = \n| highest attendance = \n| lowest attendance  = \n| prevseason         = [[1992\u201393 Alpha Ethniki|1992\u201393]]\n| nextseason         = [[1994\u201395 Alpha Ethniki|1994\u201395]]\n}}\n\n{{Location map+ |Greece |width=380 |float=center |caption=Location of teams in '''1993\u201394 Alpha Ethniki''' |places=\n{{Location map~ |Greece |lat=37.966667 |long=23.716667 |label=<small>[[AEK Athens F.C.|AEK Athens]]</small><br><small>[[Apollon Smyrni F.C.|Apollon]]</small><br><small>[[Athinaikos F.C.|Athinaikos]]</small><br><small>[[Panathinaikos FC|Panathinaikos]]</small><br><small>[[Panionios F.C.|Panionios]]</small>}}\n{{Location map~ |Greece |lat=40.65     |long=22.9      |label=<small>[[Apollon Kalamarias F.C.|Apollon]]</small><br><small>[[Aris F.C. (Thessaloniki)|Aris]]</small><br><small>[[Iraklis Thessaloniki F.C.|Iraklis]]</small><br><small>[[PAOK F.C.|PAOK]]</small>}}\n{{Location map~ |Greece |lat=37.95     |long=23.633333 |label=<small>[[Olympiacos F.C.|Olympiacos]]</small> |position=left}}\n{{Location map~ |Greece |lat=41.15     |long=24.133333 |label=<small>[[Doxa Drama F.C.|Doxa]]</small> |position=left}}\n{{Location map~ |Greece |lat=40.8      |long=22.05     |label=<small>[[Edessaikos F.C.|Edessaikos]]</small> |position=left}}\n{{Location map~ |Greece |lat=39.641667 |long=22.416667 |label=<small>[[AEL 1964 FC|Larissa]]</small> |position=left}}\n{{Location map~ |Greece |lat=38.433333 |long=22.866667 |label=<small>[[Levadiakos F.C.|Levadiakos]]</small> |position=right}}\n{{Location map~ |Greece |lat=40.633333 |long=22.066667 |label=<small>[[Naoussa F.C.|Naoussa]]</small> |position=bottom}}\n{{Location map~ |Greece |lat=35.333333 |long=25.133333 |label=<small>[[OFI Crete|OFI]]</small>}}\n{{Location map~ |Greece |lat=38.25     |long=21.733333 |label=<small>[[Panachaiki]]</small> |position=left}}\n{{Location map~ |Greece |lat=41.133333 |long=24.883333 |label=<small>[[Skoda Xanthi F.C.|Skoda Xanthi]]</small>}}\n}}\n\n==League standings==\n<onlyinclude>{{#invoke:sports table|main|style=WDL\n|show_limit = 5\n|res_col_header=QR\n\n|team1=AEK|name_AEK=[[AEK Athens F.C.|AEK Athens]]\n|team2=PAT|name_PAT=[[Panathinaikos F.C.|Panathinaikos]]\n|team3=OLY|name_OLY=[[Olympiacos F.C.|Olympiacos]]\n|team4=ARI|name_ARI=[[Aris Thessaloniki F.C.|Aris]]\n|team5=PAOK|name_PAOK=[[PAOK FC|PAOK]]\n|team6=IRT|name_IRT=[[Iraklis 1908 Thessaloniki F.C.|Iraklis]]\n|team7=OFI|name_OFI=[[OFI Crete|OFI]]\n|team8=XAN|name_XAN=[[Xanthi F.C.|Xanthi]]\n|team9=PIO|name_PIO=[[Panionios F.C.|Panionios]]\n|team10=LAR|name_LAR=[[Athlitiki Enosi Larissa F.C.|Larissa]]\n|team11=LEV|name_LEV=[[Levadiakos F.C.|Levadiakos]]\n|team12=ATH|name_ATH=[[Athinaikos F.C.|Athinaikos]]\n|team13=APA|name_APA=[[Apollon Smyrni F.C.|Apollon Athens]]\n|team14=EDE|name_EDE=[[Edessaikos F.C.|Edessaikos]]\n|team15=DOX|name_DOX=[[Doxa Drama F.C.|Doxa Drama]]\n|team16=PCK|name_PCK=[[Panachaiki F.C.|Panachaiki]]\n|team17=APL|name_APL=[[Apollon Pontou FC|Apollon Kalamarias]]\n|team18=NAO|name_NAO=[[Naoussa F.C.|Naoussa]]\n\n|win_AEK=25|draw_AEK=4|loss_AEK=5|gf_AEK=63|ga_AEK=28|status_AEK=C\n|win_PAT=22|draw_PAT=6|loss_PAT=6|gf_PAT=82|ga_PAT=32\n|win_OLY=18|draw_OLY=14|loss_OLY=2|gf_OLY=63|ga_OLY=27\n|win_ARI=18|draw_ARI=9|loss_ARI=7|gf_ARI=55|ga_ARI=34\n|win_PAOK=14|draw_PAOK=9|loss_PAOK=11|gf_PAOK=45|ga_PAOK=38\n|win_IRT=13|draw_IRT=10|loss_IRT=11|gf_IRT=59|ga_IRT=45\n|win_OFI=13|draw_OFI=8|loss_OFI=13|gf_OFI=55|ga_OFI=42\n|win_XAN=12|draw_XAN=9|loss_XAN=13|gf_XAN=62|ga_XAN=63\n|win_PIO=12|draw_PIO=7|loss_PIO=15|gf_PIO=49|ga_PIO=58\n|win_LAR=11|draw_LAR=9|loss_LAR=14|gf_LAR=45|ga_LAR=53\n|win_LEV=11|draw_LEV=9|loss_LEV=14|gf_LEV=38|ga_LEV=45\n|win_ATH=11|draw_ATH=7|loss_ATH=16|gf_ATH=34|ga_ATH=50\n|win_APA=9|draw_APA=13|loss_APA=12|gf_APA=30|ga_APA=41\n|win_EDE=11|draw_EDE=6|loss_EDE=17|gf_EDE=41|ga_EDE=56\n|win_DOX=11|draw_DOX=5|loss_DOX=18|gf_DOX=37|ga_DOX=64\n|win_PCK=9|draw_PCK=10|loss_PCK=15|gf_PCK=36|ga_PCK=56|status_PCK=R\n|win_APL=8|draw_APL=8|loss_APL=18|gf_APL=42|ga_APL=66|status_APL=R\n|win_NAO=5|draw_NAO=3|loss_NAO=26|gf_NAO=38|ga_NAO=76|status_NAO=R\n|col_CLQR=green1|text_CLQR=Qualification for [[1994\u201395 UEFA Champions League#Qualifying round|Champions League qualifying round]]\n|result1=CLQR\n|col_CWC1=yellow1|text_CWC1=Qualification for [[1994\u201395 UEFA Cup Winners' Cup#First round|Cup Winners' Cup first round]] \n|result2=CWC1\n|col_UC1=blue1|text_UC1=Qualification for [[1994\u201395 UEFA Cup#First round|UEFA Cup first round]]\n|result3=UC1\n|col_UCPR=blue2|text_UCPR=Qualification for [[1994\u201395 UEFA Cup#Preliminary round|UEFA Cup preliminary round]]\n|result4=UCPR\n|col_R=red1|text_R=Relegation to [[Football League (Greece)|Beta Ethniki]]\n|result16=R|result17=R|result18=R\n|update=complete\n|source=[http://www.rsssf.com/tablesg/grk94.html RSSSF]\n|class_rules=1st points; 2nd head-to-head points; 3rd head-to-head goal difference; 4th decision match.\n}}</onlyinclude>\n\n{{winners||[[Super League Greece|Alpha Ethniki]] 1993\u201394<br>Champions|[[File:600px Giallo con aquila bicefala nera2 svg.png|150px]]<br>[[AEK Athens F.C.|AEK Athens]]<br>11th Title}}\n\n==Results==\n{{#invoke:Sports results|main\n|matches_style=FBR|solid_cell=grey\n|team1=AEK|team2=APA|team3=APL|team4=ARI|team5=ATH\n|team6=DOX|team7=EDE|team8=IRT|team9=LAR|team10=LEV\n|team11=NAO|team12=OFI|team13=OLY|team14=PCK|team15=PAT\n|team16=PIO|team17=PAOK|team18=XAN\n\n|name_AEK=[[AEK Athens F.C.|AEK Athens]]\n|match_AEK_APA=4-0\n|match_AEK_APL=3-0\n|match_AEK_ARI=3-0\n|match_AEK_ATH=3-2\n|match_AEK_DOX=3-1\n|match_AEK_EDE=4-1\n|match_AEK_IRT=2-1\n|match_AEK_LAR=1-0\n|match_AEK_LEV=2-1\n|match_AEK_NAO=4-2\n|match_AEK_OFI=2-1\n|match_AEK_OLY=[[Olympiacos\u2013AEK rivalry|1-2]]\n|match_AEK_PCK=2-0\n|match_AEK_PAT=[[AEK\u2013Panathinaikos rivalry|2-0]]\n|match_AEK_PIO=1-0\n|match_AEK_PAOK=[[Double-headed eagles derby|2-0]]\n|match_AEK_XAN=2-2\n\n|name_APA=[[Apollon Smyrni F.C.|Apollon Athens]]\n|match_APA_AEK=1-3\n|match_APA_APL=2-0\n|match_APA_ARI=1-2\n|match_APA_ATH=1-1\n|match_APA_DOX=1-0\n|match_APA_EDE=1-1\n|match_APA_IRT=0-0\n|match_APA_LAR=2-0\n|match_APA_LEV=0-0\n|match_APA_NAO=3-1\n|match_APA_OFI=1-0\n|match_APA_OLY=0-0\n|match_APA_PCK=0-1\n|match_APA_PAT=0-0\n|match_APA_PIO=1-0\n|match_APA_PAOK=3-1\n|match_APA_XAN=3-1\n\n|name_APL=[[Apollon Pontou FC|Apollon Kalamarias]]\n|match_APL_AEK=1-2\n|match_APL_APA=1-2\n|match_APL_ARI=1-2\n|match_APL_ATH=1-3\n|match_APL_DOX=4-0\n|match_APL_EDE=2-2\n|match_APL_IRT=1-1\n|match_APL_LAR=5-2\n|match_APL_LEV=1-0\n|match_APL_NAO=1-0\n|match_APL_OFI=2-1\n|match_APL_OLY=0-0\n|match_APL_PCK=1-0\n|match_APL_PAT=0-1\n|match_APL_PIO=1-1\n|match_APL_PAOK=1-1\n|match_APL_XAN=0-0\n\n|name_ARI=[[Aris Thessaloniki F.C.|Aris]]\n|match_ARI_AEK=2-0\n|match_ARI_APA=0-0\n|match_ARI_APL=3-0\n|match_ARI_ATH=2-0\n|match_ARI_DOX=1-2\n|match_ARI_EDE=3-1\n|match_ARI_IRT=1-1\n|match_ARI_LAR=1-0\n|match_ARI_LEV=3-0\n|match_ARI_NAO=2-1\n|match_ARI_OFI=2-0\n|match_ARI_OLY=1-1\n|match_ARI_PCK=2-0\n|match_ARI_PAT=1-2\n|match_ARI_PIO=3-1\n|match_ARI_PAOK=[[Derby of Northern Greece|1-0]]\n|match_ARI_XAN=3-1\n\n|name_ATH=[[Athinaikos F.C.|Athinaikos]]\n|match_ATH_AEK=1-0\n|match_ATH_APA=3-1\n|match_ATH_APL=3-1\n|match_ATH_ARI=0-0\n|match_ATH_DOX=1-0\n|match_ATH_EDE=3-0\n|match_ATH_IRT=1-0\n|match_ATH_LAR=1-1\n|match_ATH_LEV=0-0\n|match_ATH_NAO=1-3\n|match_ATH_OFI=2-0\n|match_ATH_OLY=0-1\n|match_ATH_PCK=0-0\n|match_ATH_PAT=1-1\n|match_ATH_PIO=0-1\n|match_ATH_PAOK=4-0\n|match_ATH_XAN=2-1\n\n|name_DOX=[[Doxa Drama F.C.|Doxa Drama]]\n|match_DOX_AEK=1-3\n|match_DOX_APA=0-0\n|match_DOX_APL=2-1\n|match_DOX_ARI=1-0\n|match_DOX_ATH=1-0\n|match_DOX_EDE=0-1\n|match_DOX_IRT=1-2\n|match_DOX_LAR=1-2\n|match_DOX_LEV=2-1\n|match_DOX_NAO=3-2\n|match_DOX_OFI=0-0\n|match_DOX_OLY=0-1\n|match_DOX_PCK=3-2\n|match_DOX_PAT=1-2\n|match_DOX_PIO=3-1\n|match_DOX_PAOK=1-1\n|match_DOX_XAN=1-0\n\n|name_EDE=[[Edessaikos F.C.|Edessaikos]]\n|match_EDE_AEK=0-1\n|match_EDE_APA=1-1\n|match_EDE_APL=3-1\n|match_EDE_ARI=2-2\n|match_EDE_ATH=5-1\n|match_EDE_DOX=1-2\n|match_EDE_IRT=1-0\n|match_EDE_LAR=1-0\n|match_EDE_LEV=1-2\n|match_EDE_NAO=3-1\n|match_EDE_OFI=2-2\n|match_EDE_OLY=0-2\n|match_EDE_PCK=0-0\n|match_EDE_PAT=2-0\n|match_EDE_PIO=3-1\n|match_EDE_PAOK=1-0\n|match_EDE_XAN=2-0\n\n|name_IRT=[[Iraklis 1908 Thessaloniki F.C.|Iraklis]]\n|match_IRT_AEK=0-1\n|match_IRT_APA=3-1\n|match_IRT_APL=3-1\n|match_IRT_ARI=3-3\n|match_IRT_ATH=2-0\n|match_IRT_DOX=5-0\n|match_IRT_EDE=1-0\n|match_IRT_LAR=3-1\n|match_IRT_LEV=5-1\n|match_IRT_NAO=4-2\n|match_IRT_OFI=0-0\n|match_IRT_OLY=1-2\n|match_IRT_PCK=2-0\n|match_IRT_PAT=2-3\n|match_IRT_PIO=2-1\n|match_IRT_PAOK=1-1\n|match_IRT_XAN=5-3\n\n|name_LAR=[[Athlitiki Enosi Larissa F.C.|Larissa]]\n|match_LAR_AEK=0-0\n|match_LAR_APA=0-0\n|match_LAR_APL=3-1\n|match_LAR_ARI=3-1\n|match_LAR_ATH=3-0\n|match_LAR_DOX=2-0\n|match_LAR_EDE=2-0\n|match_LAR_IRT=0-1\n|match_LAR_LEV=1-1\n|match_LAR_NAO=1-1\n|match_LAR_OFI=3-1\n|match_LAR_OLY=2-2\n|match_LAR_PCK=1-0\n|match_LAR_PAT=4-4\n|match_LAR_PIO=5-0\n|match_LAR_PAOK=1-1\n|match_LAR_XAN=1-1\n\n|name_LEV=[[Levadiakos F.C.|Levadiakos]]\n|match_LEV_AEK=0-1\n|match_LEV_APA=0-0\n|match_LEV_APL=2-1\n|match_LEV_ARI=1-1\n|match_LEV_ATH=3-0\n|match_LEV_DOX=3-0\n|match_LEV_EDE=2-1\n|match_LEV_IRT=4-3\n|match_LEV_LAR=0-1\n|match_LEV_NAO=3-1\n|match_LEV_OFI=1-0\n|match_LEV_OLY=0-0\n|match_LEV_PCK=5-0\n|match_LEV_PAT=1-2\n|match_LEV_PIO=1-1\n|match_LEV_PAOK=1-0\n|match_LEV_XAN=1-1\n\n|name_NAO=[[Naoussa F.C.|Naoussa]]\n|match_NAO_AEK=1-3\n|match_NAO_APA=1-0\n|match_NAO_APL=0-1\n|match_NAO_ARI=1-4\n|match_NAO_ATH=2-0\n|match_NAO_DOX=2-3\n|match_NAO_EDE=0-1\n|match_NAO_IRT=3-3\n|match_NAO_LAR=2-3\n|match_NAO_LEV=2-1\n|match_NAO_OFI=0-0\n|match_NAO_OLY=0-5\n|match_NAO_PCK=0-1\n|match_NAO_PAT=0-3\n|match_NAO_PIO=0-1\n|match_NAO_PAOK=0-1\n|match_NAO_XAN=0-1\n\n|name_OFI=[[OFI Crete|OFI]]\n|match_OFI_AEK=1-2\n|match_OFI_APA=5-1\n|match_OFI_APL=3-1\n|match_OFI_ARI=2-0\n|match_OFI_ATH=4-0\n|match_OFI_DOX=3-2\n|match_OFI_EDE=3-0\n|match_OFI_IRT=3-3\n|match_OFI_LAR=2-1\n|match_OFI_LEV=4-0\n|match_OFI_NAO=4-0\n|match_OFI_OLY=2-0\n|match_OFI_PCK=2-0\n|match_OFI_PAT=0-0\n|match_OFI_PIO=3-0\n|match_OFI_PAOK=1-0\n|match_OFI_XAN=2-2\n\n|name_OLY=[[Olympiacos F.C.|Olympiacos]]\n|match_OLY_AEK=[[Olympiacos\u2013AEK rivalry|3-0]]\n|match_OLY_APA=1-1\n|match_OLY_APL=6-0\n|match_OLY_ARI=1-1\n|match_OLY_ATH=2-0\n|match_OLY_DOX=3-0\n|match_OLY_EDE=3-0\n|match_OLY_IRT=1-1\n|match_OLY_LAR=4-1\n|match_OLY_LEV=2-2\n|match_OLY_NAO=2-1\n|match_OLY_OFI=2-0\n|match_OLY_PCK=3-2\n|match_OLY_PAT=[[Derby of the eternal enemies|0-0]]\n|match_OLY_PIO=1-1\n|match_OLY_PAOK=[[Olympiacos\u2013P.A.O.K. rivalry|1-0]]\n|match_OLY_XAN=1-1\n\n|name_PCK=[[Panachaiki F.C.|Panachaiki]]\n|match_PCK_AEK=0-2\n|match_PCK_APA=0-0\n|match_PCK_APL=5-5\n|match_PCK_ARI=0-2\n|match_PCK_ATH=0-2\n|match_PCK_DOX=2-2\n|match_PCK_EDE=2-0\n|match_PCK_IRT=1-1\n|match_PCK_LAR=1-0\n|match_PCK_LEV=1-0\n|match_PCK_NAO=5-4\n|match_PCK_OFI=3-3\n|match_PCK_OLY=2-1\n|match_PCK_PAT=0-4\n|match_PCK_PIO=1-1\n|match_PCK_PAOK=1-1\n|match_PCK_XAN=2-1\n\n|name_PAT=[[Panathinaikos F.C.|Panathinaikos]]\n|match_PAT_AEK=[[AEK\u2013Panathinaikos rivalry|1-2]]\n|match_PAT_APA=3-0\n|match_PAT_APL=5-1\n|match_PAT_ARI=1-1\n|match_PAT_ATH=5-1\n|match_PAT_DOX=8-0\n|match_PAT_EDE=3-1\n|match_PAT_IRT=2-0\n|match_PAT_LAR=5-0\n|match_PAT_LEV=3-0\n|match_PAT_NAO=2-1\n|match_PAT_OFI=4-1\n|match_PAT_OLY=[[Derby of the eternal enemies|1-2]]\n|match_PAT_PCK=1-0\n|match_PAT_PIO=3-1\n|match_PAT_PAOK=2-0\n|match_PAT_XAN=5-0\n\n|name_PIO=[[Panionios F.C.|Panionios]]\n|match_PIO_AEK=2-2\n|match_PIO_APA=3-2\n|match_PIO_APL=2-1\n|match_PIO_ARI=0-1\n|match_PIO_ATH=2-0\n|match_PIO_DOX=4-3\n|match_PIO_EDE=2-1\n|match_PIO_IRT=1-0\n|match_PIO_LAR=5-1\n|match_PIO_LEV=0-1\n|match_PIO_NAO=3-0\n|match_PIO_OFI=2-0\n|match_PIO_OLY=1-1\n|match_PIO_PCK=0-2\n|match_PIO_PAT=2-4\n|match_PIO_PAOK=1-1\n|match_PIO_XAN=4-1\n\n|name_PAOK=[[PAOK FC|PAOK]]\n|match_PAOK_AEK=[[Double-headed eagles derby|0-0]]\n|match_PAOK_APA=1-0\n|match_PAOK_APL=1-1\n|match_PAOK_ARI=[[Derby of Northern Greece|1-2]]\n|match_PAOK_ATH=3-0\n|match_PAOK_DOX=1-0\n|match_PAOK_EDE=6-1\n|match_PAOK_IRT=2-0\n|match_PAOK_LAR=2-0\n|match_PAOK_LEV=2-0\n|match_PAOK_NAO=1-0\n|match_PAOK_OFI=2-1\n|match_PAOK_OLY=[[Olympiacos\u2013P.A.O.K. rivalry|1-1]]\n|match_PAOK_PCK=4-1\n|match_PAOK_PAT=3-1\n|match_PAOK_PIO=3-2\n|match_PAOK_XAN=2-1\n\n|name_XAN=[[Xanthi F.C.|Xanthi]]\n|match_XAN_AEK=1-0\n|match_XAN_APA=4-1\n|match_XAN_APL=2-3\n|match_XAN_ARI=3-2\n|match_XAN_ATH=1-1\n|match_XAN_DOX=1-1\n|match_XAN_EDE=3-2\n|match_XAN_IRT=1-0\n|match_XAN_LAR=3-0\n|match_XAN_LEV=3-0\n|match_XAN_NAO=3-4\n|match_XAN_OFI=2-1\n|match_XAN_OLY=4-6\n|match_XAN_PCK=1-1\n|match_XAN_PAT=2-1\n|match_XAN_PIO=6-2\n|match_XAN_PAOK=5-2\n\n|update=complete|source=\n}}\n\n==Top goalscorers==\n\n{| class=\"wikitable\" style=\"text-align:center\"\n|-\n!Rank\n!Player\n!Club\n!Goals\n|-\n!rowspan=\"2\"|1\n|align=\"left\"|{{flagicon|Greece}} [[Alexis Alexandris]]\n|align=\"left\"|[[AEK Athens F.C.|AEK Athens]]\n|rowspan=\"2\"|24\n|-\n|align=\"left\"|{{flagicon|Poland}} [[Krzysztof Warzycha]]\n|align=\"left\"|[[Panathinaikos F.C.|Panathinaikos]]\n|-\n!3\n|align=\"left\"|{{flagicon|Greece}} [[Fanis Toutziaris]]\n|align=\"left\"|[[Iraklis 1908 Thessaloniki F.C.|Iraklis]]\n|19\n|-\n!rowspan=\"2\"|4\n|align=\"left\"|{{flagicon|Slovakia}} [[Milan Luhov\u00fd]]\n|align=\"left\"|[[PAOK FC|PAOK]]\n|rowspan=\"2\"|15\n|-\n|align=\"left\"|{{flagicon|Greece}} [[Dimitris Saravakos]]\n|align=\"left\"|[[Panathinaikos F.C.|Panathinaikos]]\n|-\n!6\n|align=\"left\"|{{flagicon|FR Yugoslavia}} [[Zoran Lon\u010dar (footballer)|Zoran Lon\u010dar]]\n|align=\"left\"|[[Aris Thessaloniki F.C.|Aris]]\n|13\n|-\n!rowspan=\"2\"|7\n|align=\"left\"|{{flagicon|FR Yugoslavia}} [[Ljubi\u0161a Milojevi\u0107]]\n|align=\"left\"|[[Aris Thessaloniki F.C.|Aris]]\n|rowspan=\"2\"|12\n|-\n|align=\"left\"|{{flagicon|FR Yugoslavia}} [[Sa\u0161a \u0160kara]]\n|align=\"left\"|[[Edessaikos F.C.|Edessaikos]] \n|-\n!rowspan=\"2\"|9\n|align=\"left\"|{{flagicon|Greece}} [[Vasilis Dimitriadis]]\n|align=\"left\"|[[AEK Athens F.C.|AEK Athens]]\n|rowspan=\"2\"|11\n|-\n|align=\"left\"|{{flagicon|Greece}} [[Panagiotis Tsalouchidis]]\n|align=\"left\"|[[Olympiacos F.C.|Olympiacos]] \n|}\n\n==External links==\n* [http://www.epo.gr Official Greek FA Site]\n* [http://www.rsssf.com/tablesg/grk94.html RSSSF]\n* [http://www.superleaguegreece.net Greek SuperLeague official Site]\n* [https://web.archive.org/web/20070613222837/http://www.galanissportsdata.com/sdatesgr.asp SuperLeague Statistics]\n \n{{Super League Greece seasons}}\n{{1993\u201394 in Greek football}}\n{{1993\u201394 in European Football (UEFA)}}\n\n{{DEFAULTSORT:1993-94 Alpha Ethniki}}\n[[Category:Alpha Ethniki seasons]]\n[[Category:1993\u201394 in European association football leagues|Greece]]\n[[Category:1993\u201394 in Greek football|1]]\n", "name_user": "Jolicnikola", "label": "safe", "comment": "\u2192\u200eLeague standings", "url_page": "//en.wikipedia.org/wiki/1993%E2%80%9394_Alpha_Ethniki"}
{"title_page": "Francisco Rubio (astronaut)", "text_new": "{{short description|US astronaut candidate}}\n{{Infobox astronaut\n|name = Francisco Rubio\n|image = Francisco Rubio portrait.jpg\n|type = [[NASA]] Astronaut\n|status = Active\n|birth_name = Francisco Carlos Rubio\n|birth_date = {{birth date and age|1975|12|11}}\n|birth_place = [[Los Angeles]], [[California]], U.S.\n|death_date = \n|death_place = \n|current_occupation = Physician\n|previous_occupation =  Helicopter pilot\n|alma_mater = [[United States Military Academy]] ([[Bachelor of Science|BS]])<br>[[Uniformed Services University of the Health Sciences]] ([[Doctor of Medicine|MD]])\n|rank = \n|space_time = \n|selection = [[NASA Astronaut Group 22|NASA Group 22]]\n|evas = \n|eva_time =    <!-- h m s -->\n|missions =    <!-- or: |mission= -->\n|insignia = \n|retirement =  <!-- {{end date|YYYY|MM|DD}} -->\n|awards = \n|memorials = \n|website =     <!-- {{URL|example.com}} -->\n|module = \n}}\n\n'''Francisco Carlos Rubio''' (born December 11, 1975; [[Major|MAJ]], [[US Army|USA]]) is a  US Army helicopter pilot, flight surgeon, and [[NASA]] astronaut.\n\n==Early life and education==\nFrancisco Rubio was born on December 11, 1975, in [[Los Angeles, California]] to Salvadoran parents.<ref name=\"nasabio\">{{Cite news|url=https://www.nasa.gov/astronauts/biographies/frank-rubio/biography|title=Astronaut Candidate Frank Rubio|last=Garcia|first=Mark|date=February 7, 2018|publisher=[[NASA]]|access-date=September 13, 2018|language=en}}</ref><ref name=\"timestory\">{{cite web\n  | last = Morales\n  | first = Maria\n  | title = The Last Frontier\n  | work = American Voices\n  | publisher = [[Time Magazine]]\n  | url = http://time.com/collection/american-voices-2017/4919068/american-voices-frank-rubio/\n  | accessdate = September 13, 2018  }}</ref>  His family moved to [[Miami, Florida]], where he attended [[Miami Sunset Senior High School]].  He attended the [[United States Military Academy]], and earned a bachelor's degree in international relations.<ref name=nasabio /><ref name=\"spacefacts\">{{cite web\n  | title = Francisco Carlos \"Frank\" Rubio\n  | publisher = Spacefacts\n  | date = April 18, 2018\n  | url = http://www.spacefacts.de/bios/astronauts/english/rubio_frank.htm\n  | accessdate = September 13, 2018  }}</ref>\n\n==Military career==\nAfter commissioning as a second lieutenant in the [[US Army]], Rubio became a [[UH-60 Blackhawk]] pilot.  Rubio was a platoon leader in [[82nd Aviation Regiment (United States)|A Company, 2nd Battalion, 82nd Airborne Division]], and a company commander for [[3rd Aviation Regiment (United States)|A Company, 2nd Battalion, 3rd Aviation Regiment]]. As a pilot, Rubio had over 1,100 hours of flying time, including 600 combat hours during operations in [[Bosnian War|Bosnia]], [[Iraq War|Iraq]], and [[War in Afghanistan (2001\u2013present)|Afghanistan]].<ref name=nasabio />\n\nRubio received a Doctorate of Medicine from the [[Uniformed Services University of the Health Sciences]], and completed a family medicine residency at [[Fort Benning]].  He served as a clinic supervisor and flight surgeon at [[Redstone Arsenal]].  At the time of his selection as an astronaut candidate, Rubio was the surgeon for 3rd Battalion, [[10th Special Forces Group (United States)|10th Special Force Group]] at [[Fort Carson]].<ref name=nasabio />\n\n==NASA career==\nIn 2017, Rubio was selected as a member of [[NASA Astronaut Group 22]], and began his two-year training.<ref name=nasabio /><ref name=\"CBS News - 7 June 2017 - NASA introduces 12 new astronauts\">{{cite news|url=http://www.cbsnews.com/news/nasa-new-astronauts/|title=NASA introduces 12 new astronauts|last=Harwood|first=William|date=June 7, 2017|work=[[CBS News]]|publisher=[[CBS Broadcasting]]|accessdate=September 13, 2018}}</ref>\n\n==Personal life==\nRubio and his wife, Deborah, have four children.<ref name=nasabio /><ref name=timestory />\n\n==Awards and honors==\nRubio has received the [[Bronze Star]], [[Meritorious Service Medal]], and [[Army Achievement Medal]].  He is a graduate of the [[US Army Command and General Staff College]], and has earned the Senior [[United States Aviator Badge#United States Army|US Army Aviator]], [[Pathfinder Badge (United States)|Pathfinder]], [[Air Assault Badge|Air Assault]], and the [[Parachutist Badge (United States)|Parachutist]] badges.<ref name=nasabio />\n\n==References==\n{{Reflist}}\n{{authority control}}\n{{NASA Astronaut Group 22}}\n\n{{DEFAULTSORT:Rubio, Francisco}}\n[[Category:Living people]]\n[[Category:American astronauts]]\n[[Category:Physician astronauts]]\n[[Category:American military doctors]]\n[[Category:Uniformed Services University of the Health Sciences alumni]]\n[[Category:United States Army Medical Corps officers]]\n[[Category:People from Los Angeles]]\n[[Category:United States Military Academy alumni]]\n[[Category:Military personnel from California]]\n[[Category:Helicopter pilots]]\n[[Category:Military personnel from Florida]]\n[[Category:1975 births]]\n[[Category:Astronaut candidates]]\n", "text_old": "{{short description|US astronaut candidate}}\n{{Infobox astronaut\n|name = Francisco Rubio\n|image = Francisco Rubio portrait.jpg\n|type = [[NASA]] Astronaut\n|status = Active\n|birth_name = Francisco Carlos Rubio\n|birth_date = {{birth date and age|1975|12|11}}\n|birth_place = [[Los Angeles]], [[California]], U.S.\n|death_date = \n|death_place = \n|current_occupation = Physician\n|previous_occupation =  Helicopter pilot\n|alma_mater = [[United States Military Academy]] ([[Bachelor of Science|BS]])<br>[[Uniformed Services University of the Health Sciences]] ([[Doctor of Medicine|MD]])\n|rank = \n|space_time = \n|selection = [[NASA Astronaut Group 22|NASA Group 22]]\n|evas = \n|eva_time =    <!-- h m s -->\n|missions =    <!-- or: |mission= -->\n|insignia = \n|retirement =  <!-- {{end date|YYYY|MM|DD}} -->\n|awards = \n|memorials = \n|website =     <!-- {{URL|example.com}} -->\n|module = \n}}\n\n'''Francisco Carlos Rubio''' (born December 11, 1975; [[Major|MAJ]], [[US Army|USA]]) is a  US Army helicopter pilot, flight surgeon, and [[NASA]] astronaut.\n\n==Early life and education==\nFrancisco Rubio was born on December 11, 1975, in [[Los Angeles, California]] to Salvadoran parents.<ref name=\"nasabio\">{{Cite news|url=https://www.nasa.gov/astronauts/biographies/frank-rubio/biography|title=Astronaut Candidate Frank Rubio|last=Garcia|first=Mark|date=February 7, 2018|publisher=[[NASA]]|access-date=September 13, 2018|language=en}}</ref><ref name=\"timestory\">{{cite web\n  | last = Morales\n  | first = Maria\n  | title = The Last Frontier\n  | work = American Voices\n  | publisher = [[Time Magazine]]\n  | url = http://time.com/collection/american-voices-2017/4919068/american-voices-frank-rubio/\n  | accessdate = September 13, 2018  }}</ref>  His family moved to [[Miami, Florida]], where he attended [[Miami Sunset Senior High School]].  He attended the [[United States Military Academy]], and earned a Bachelor's degree in international relations.<ref name=nasabio /><ref name=\"spacefacts\">{{cite web\n  | title = Francisco Carlos \"Frank\" Rubio\n  | publisher = Spacefacts\n  | date = April 18, 2018\n  | url = http://www.spacefacts.de/bios/astronauts/english/rubio_frank.htm\n  | accessdate = September 13, 2018  }}</ref>\n\n==Military career==\nAfter commissioning as a second lieutenant in the [[US Army]], Rubio became a [[UH-60 Blackhawk]] pilot.  Rubio was a platoon leader in [[82nd Aviation Regiment (United States)|A Company, 2nd Battalion, 82nd Airborne Division]], and a company commander for [[3rd Aviation Regiment (United States)|A Company, 2nd Battalion, 3rd Aviation Regiment]]. As a pilot, Rubio had over 1,100 hours of flying time, including 600 combat hours during operations in [[Bosnian War|Bosnia]], [[Iraq War|Iraq]], and [[War in Afghanistan (2001\u2013present)|Afghanistan]].<ref name=nasabio />\n\nRubio received a Doctorate of Medicine from the [[Uniformed Services University of the Health Sciences]], and completed a family medicine residency at [[Fort Benning]].  He served as a clinic supervisor and flight surgeon at [[Redstone Arsenal]].  At the time of his selection as an astronaut candidate, Rubio was the surgeon for 3rd Battalion, [[10th Special Forces Group (United States)|10th Special Force Group]] at [[Fort Carson]].<ref name=nasabio />\n\n==NASA career==\nIn 2017, Rubio was selected as a member of [[NASA Astronaut Group 22]], and began his two-year training.<ref name=nasabio /><ref name=\"CBS News - 7 June 2017 - NASA introduces 12 new astronauts\">{{cite news|url=http://www.cbsnews.com/news/nasa-new-astronauts/|title=NASA introduces 12 new astronauts|last=Harwood|first=William|date=June 7, 2017|work=[[CBS News]]|publisher=[[CBS Broadcasting]]|accessdate=September 13, 2018}}</ref>\n\n==Personal life==\nRubio and his wife, Deborah, have four children.<ref name=nasabio /><ref name=timestory />\n\n==Awards and honors==\nRubio has received the [[Bronze Star]], [[Meritorious Service Medal]], and [[Army Achievement Medal]].  He is a graduate of the [[US Army Command and General Staff College]], and has earned the Senior [[United States Aviator Badge#United States Army|US Army Aviator]], [[Pathfinder Badge (United States)|Pathfinder]], [[Air Assault Badge|Air Assault]], and the [[Parachutist Badge (United States)|Parachutist]] badges.<ref name=nasabio />\n\n==References==\n{{Reflist}}\n{{authority control}}\n{{NASA Astronaut Group 22}}\n\n{{DEFAULTSORT:Rubio, Francisco}}\n[[Category:Living people]]\n[[Category:American astronauts]]\n[[Category:Physician astronauts]]\n[[Category:American military doctors]]\n[[Category:Uniformed Services University of the Health Sciences alumni]]\n[[Category:United States Army Medical Corps officers]]\n[[Category:People from Los Angeles]]\n[[Category:United States Military Academy alumni]]\n[[Category:Military personnel from California]]\n[[Category:Helicopter pilots]]\n[[Category:Military personnel from Florida]]\n[[Category:1975 births]]\n[[Category:Astronaut candidates]]\n", "name_user": "Majavah", "label": "safe", "comment": "\u2192\u200eEarly life and education:clean up,typo(s) fixed: Bachelor's degree \u2192 bachelor's degree", "url_page": "//en.wikipedia.org/wiki/Francisco_Rubio_(astronaut)"}
{"title_page": "I Don't Wanna Fight", "text_new": "{{short description|1993 single by Tina Turner}}\n{{About|the song by Tina Turner|the song by Alabama Shakes|Don't Wanna Fight|the Westlife song|Westlife (album)}}\n{{Infobox song\n| name       = I Don't Wanna Fight\n| cover      = I_don't_wanna_fight.jpg\n| alt        =\n| border     = yes\n| type       = single\n| artist     = [[Tina Turner]]\n| album      = [[What's Love Got to Do with It (album)|What's Love Got to Do with It]]\n| B-side     = \"Tina's Wish\" (1993 Version)\n| released   = April 23, 1993\n| format     = {{flatlist|\n*[[7\" single|7\"]]\n*[[maxi single]]\n*[[CD single]]\n}}\n| recorded   =\n| studio     =\n| venue      =\n| genre      = [[contemporary R&B|R&B]], [[Pop music|pop]]\n| length     = 6:06 (album version)\n                   4:26 (radio edit)\n| label      = [[Parlophone Records|Parlophone]]\n| writer     = {{flatlist|\n*[[Lulu (singer)|Lulu]]\n*Billy Lawrie\n*[[Steve DuBerry]]\n}}\n| producer   = {{flatlist|\n*Chris Lord-Alge\n*Roger Davies\n}}\n| prev_title = [[The Best (song)#Tina Turner version|(Simply) The Best]]\n| prev_year  = 1992\n| next_title = [[Disco Inferno#Tina Turner version|Disco Inferno]]\n| next_year  = 1993\n| misc       = {{External music video|type=single|header=Music video|1={{YouTube|3pD_0Czkmtc|\"I Don't Wanna Fight\"}}}}\n}}\n\n\"'''I Don't Wanna Fight'''\" is a song performed by recording artist [[Tina Turner]]. It was written by British singer [[Lulu (singer)|Lulu]], her brother Billy Lawrie and [[Steve DuBerry]] and first offered to singer [[Sade (singer)|Sade]], who sent it on to Turner. Turner recorded it in 1993 as part of the soundtrack for her autobiographical film, ''[[What's Love Got to Do with It (film)|What's Love Got to Do with It]]''. Lulu's version appears as the b-side to her 1993 single \"How 'Bout Us\" as well as on the 2003 album ''[[The Greatest Hits (Lulu album)|The Greatest Hits]]''.\n\nFeaturing a wistful but resolute vocal set against a [[synthesizer]] line, the track was a substantial hit on both sides of the Atlantic, reaching No. 9 on the US [[Billboard Hot 100|''Billboard'' Hot 100]] and No. 7 on the [[UK Singles Chart]]. In Canada it peaked at No. 1 for three weeks, and in Iceland it reached No. 3. The song was nominated at the [[36th Grammy Awards]] for [[Grammy Award for Best Female Pop Vocal Performance|Best Female Pop Vocal Performance]] and [[Grammy Award for Best Song Written for Visual Media|The Grammy Award for Best Song Written Specifically for a Motion Picture or for Television]]. To date, it remains Turner's last single to chart in the Top Ten of the Billboard Hot 100.\n\n==Critical reception==\nThe song received positive reviews from music critics. [[Larry Flick]] from ''[[Billboard (magazine)|Billboard]]'' complimented Turner's \"distinctive and worldly vocal delivery\". He also noted that she \"makes her [[Virgin Records|Virgin]] debut with a shuffling pop/dance ditty that stylistically lands somewhere between her comeback hit, \"[[Let's Stay Together (Al Green song)#Tina Turner version|Let's Stay Together]],\" and [[Amy Grant]]'s \"[[Baby Baby (Amy Grant song)|Baby Baby]].\"\"<ref>{{cite magazine|url=https://www.americanradiohistory.com/Archive-Billboard/90s/1993/BB-1993-05-08.pdf|title=Single Reviews|magazine=[[Billboard (magazine)|Billboard]]|date=May 8, 1993|accessdate=February 2, 2020|page=62|format=PDF}}</ref> ''[[People (magazine)|People Magazine]]'' described the song as an \"ardent ballad\" that prove that Turner \"has mellowed\".<ref>{{cite magazine|url=https://dev.element.people.com/archive/picks-and-pans-review-whats-love-got-to-do-with-it-vol-40-no-15/|title=Picks and Pans Review: What's Love Got to Do with It|magazine=[[People (magazine)|People]]|date=October 11, 1993|accessdate=March 9, 2020}}</ref> James Hunter from ''[[Vibe (magazine)|Vibe]]'' wrote that \"when Turner tears up her voice at the top of the bridge, it's as involving as soulful pop music gets. This is one of the best records of her career.\"<ref>{{cite magazine|url=https://books.google.no/books?id=IigEAAAAMBAJ|title=Single File|magazine=[[Vibe (magazine)|Vibe]]|date=September 1, 1993|accessdate=March 2, 2020}}</ref>\n\n==Versions and remixes==\n* Single Edit - 4:26\n* Album Version - 6:06\n* Urban Radio - 4:03\n* Urban Mix - 5:17\n* Urban Radio Instrumental - 4:02\n* Holiday Inn Lounge Mix - 5:43\n* Club House Mix - 5:26\n\n==Charts==\n{{col-begin}}\n{{col-2}}\n\n===Weekly charts===\n{|class=\"wikitable plainrowheaders sortable\" style=\"text-align:center\"\n!scope=\"col\"|Chart (1993)\n!scope=\"col\"|Peak<br/>position\n|-\n!scope=\"row\"{{singlechart|Australia|39|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=January 3, 2014}}\n|-\n!scope=\"row\"{{singlechart|Austria|29|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=January 3, 2014}}\n|-\n!scope=\"row\"{{singlechart|Flanders|8|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=January 3, 2014}}\n|-\n!scope=\"row\"{{singlechart|Canadatopsingles|1|chartid=2186|accessdate=October 6, 2015}}\n|-\n!scope=\"row\"{{singlechart|Canadaadultcontemporary|1|chartid=2182|accessdate=October 6, 2015}}\n|-\n!scope=\"row\"|Europe ([[European Hot 100 Singles]])<ref>{{cite web|url=http://www.americanradiohistory.com/Archive-Billboard/90s/1993/BB-1993-06-19.pdf|title=Hits of the World|work=Billboard|publisher=Prometheus Global Media|date=June 19, 1993|accessdate=October 6, 2015}}</ref>\n| 11\n|-\n!scope=\"row\"{{singlechart|France|49|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=January 3, 2014}}\n|-\n!scope=\"row\"{{singlechart|Germany2|35|artist=Tina Turner|song=I Don't Wanna Fight|songid=2626|accessdate=November 24, 2019}}\n|-\n!scope=\"row\"|Iceland ([[\u00cdslenski listinn|\u00cdslenski Listinn Topp 40]])<ref>{{cite web|url=http://timarit.is/files/11732247.pdf#navpanes=1&view=FitH|title=\u00cdslenski Listinn Topp 40 (17.06.1993 \u2013 23.06.1993)|publisher=Dagbla\u00f0i\u00f0 V\u00edsir \u2013 T\u00f3nlist|accessdate=February 4, 2018}}</ref>\n| 3\n|-\n!scope=\"row\"{{singlechart|Ireland2|14|song=I Don't Wanna Fight|accessdate=October 6, 2015}}\n|-\n!scope=\"row\"|Italy (''[[Musica e dischi]]'')<ref>{{cite magazine|url=https://www.americanradiohistory.com/Archive-Music-and-Media/90s/1993/MM-1993-08-21.pdf|title=Top 10 Sales in Europe|magazine=[[Music & Media]]|volume=10|issue=34|page=24|date=August 21, 1993|access-date=November 24, 2019}}</ref>\n| 7\n|-\n!scope=\"row\"{{singlechart|Dutch40|18|year=1993|week=27|accessdate=November 24, 2019}}\n|-\n!scope=\"row\"{{singlechart|Dutch100|14|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=October 6, 2015}}\n|-\n!scope=\"row\"{{singlechart|New Zealand|7|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=January 3, 2014}}\n|-\n!scope=\"row\"{{singlechart|Norway|8|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=January 3, 2014}}\n|-\n!scope=\"row\"{{singlechart|Sweden|39|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=January 3, 2014}}\n|-\n!scope=\"row\"{{singlechart|Switzerland|11|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=January 3, 2014}}\n|-\n!scope=\"row\"{{singlechart|UKsinglesbyname|7|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=October 6, 2015}}\n|-\n!scope=\"row\"{{singlechart|Billboardhot100|9|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=September 12, 2013}}\n|-\n!scope=\"row\"{{singlechart|Billboardadultcontemporary|1|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=September 12, 2013}}\n|-\n!scope=\"row\"{{singlechart|Billboardrandbhiphop|51|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=October 6, 2015}}\n|-\n!scope=\"row\"{{singlechart|Billboardpopsongs|6|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=October 6, 2015}}\n|-\n!scope=\"row\"{{singlechart|Billboardrhythmic|36|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=October 6, 2015}}\n|}\n{{col-2}}\n\n===Year-end charts===\n{|class=\"wikitable sortable plainrowheaders\" style=\"text-align:center\"\n!scope=\"col\"|Chart (1993)\n!scope=\"col\"|Position\n|-\n!scope=\"row\"|Belgium (Ultratop)<ref>{{cite web|url=http://www.ultratop.be/nl/annual.asp?year=1993|title=Jaaroverzichten 1993|publisher=[[Ultratop]]|language=Dutch|accessdate=October 6, 2015}}</ref>\n| 71\n|-\n!scope=\"row\"|Canada Top Singles (''RPM'')<ref>{{cite web|url=http://www.bac-lac.gc.ca/eng/discover/films-videos-sound-recordings/rpm/Pages/image.aspx?Image=nlc008388.2339&URLjpg=http%3a%2f%2fwww.collectionscanada.gc.ca%2fobj%2f028020%2ff4%2fnlc008388.2339.gif&Ecopy=nlc008388.2339|title=The RPM Top 100 Hit Tracks of 1993|magazine=[[RPM (magazine)|RPM]]|publisher=[[Library and Archives Canada]]|date=December 18, 1993|accessdate=October 6, 2015}}</ref>\n| 5\n|-\n!scope=\"row\"|Canada Adult Contemporary (''RPM'')<ref>{{cite magazine|url=http://www.bac-lac.gc.ca/eng/discover/films-videos-sound-recordings/rpm/Pages/image.aspx?Image=nlc008388.2334&URLjpg=http%3a%2f%2fwww.collectionscanada.gc.ca%2fobj%2f028020%2ff4%2fnlc008388.2334.gif&Ecopy=nlc008388.2334|title=The RPM Top 100 A\\C Tracks of 1993|magazine=[[RPM (magazine)|RPM]]|publisher=[[Library and Archives Canada]]|date=December 18, 1993|accessdate=October 6, 2015}}</ref>\n| 1\n|-\n!scope=\"row\"|Europe (Eurochart Hot 100)<ref>{{cite magazine|url=https://www.americanradiohistory.com/Archive-Music-and-Media/90s/1993/MM-1993-12-18.pdf|title=1993 Year-End Sales Charts: Eurochart Hot 100 Singles|accessdate=November 27, 2019|work=Music & Media}}</ref> \n| 92\n|-\n!scope=\"row\"|Netherlands (Single Top 100)<ref>{{cite web|url=http://dutchcharts.nl/jaaroverzichten.asp?year=1993&cat=s|title=Jaaroverzichten - Single 1993|publisher=Hung Medien|language=Dutch|accessdate=October 6, 2015}}</ref>\n| 96\n|-\n!scope=\"row\"|Switzerland (Schweizer Hitparade)<ref>{{cite web|url=http://www.swisscharts.com/charts/jahreshitparade/1993|title=Schweizer Jahreshitparade 1993|language=German|access-date=November 24, 2019}}</ref>\n| 40\n|-\n!scope=\"row\"|UK Singles (Official Charts Company)<ref>{{cite web|url=http://hosting1642755.az.pl/sp%20uk%20best%201993.html |title=Najlepsze single na UK Top 40-1993 wg sprzeda\u017cy |language=Polish |publisher=Official Charts Company |accessdate=October 21, 2015 }}{{dead link|date=April 2017 |bot=InternetArchiveBot |fix-attempted=yes }}</ref>\n| 84\n|-\n!scope=\"row\"|US ''Billboard'' Hot 100<ref name=\"usyearend\">{{cite web|url=http://www.americanradiohistory.com/Archive-Billboard/90s/1993/BB-1993-12-25.pdf|title=The Year in Music: 1993|work=[[Billboard (magazine)|Billboard]]|date=December 25, 1993|accessdate=October 6, 2015}}</ref>\n| 42\n|-\n!scope=\"row\"|US Adult Contemporary (''Billboard'')<ref name=\"usyearend\"/>\n| 2\n|}\n{{col-end}}\n\n==References==\n{{Reflist|30em}}\n\n==External links==\n* {{MetroLyrics song|tina-turner|i-dont-wanna-fight}}<!-- Licensed lyrics provider -->\n\n{{Tina Turner singles}}\n\n[[Category:1993 singles]]\n[[Category:Lulu (singer) songs]]\n[[Category:Tina Turner songs]]\n[[Category:RPM Top Singles number-one singles]]\n[[Category:Billboard Adult Contemporary number-one singles]]\n[[Category:Songs written for films]]\n[[Category:Songs written by Steve DuBerry]]\n[[Category:Songs written by Billy Lawrie]]\n[[Category:Songs written by Lulu (singer)]]\n[[Category:1993 songs]]\n[[Category:RPM Adult Contemporary number-one singles]]\n[[Category:Contemporary R&B ballads]]\n[[Category:Pop ballads]]\n[[Category:1990s ballads]]\n", "text_old": "{{short description|1993 single by Tina Turner}}\n{{About|the song by Tina Turner|the song by Alabama Shakes|Don't Wanna Fight|the Westlife song|Westlife (album)}}\n{{Infobox song\n| name       = I Don't Wanna Fight\n| cover      = I_don't_wanna_fight.jpg\n| alt        =\n| border     = yes\n| type       = single\n| artist     = [[Tina Turner]]\n| album      = [[What's Love Got to Do with It (album)|What's Love Got to Do with It]]\n| B-side     = \"Tina's Wish\" (1993 Version)\n| released   = April 23, 1993\n| format     = {{flatlist|\n*[[7\" single|7\"]]\n*[[maxi single]]\n*[[CD single]]\n}}\n| recorded   =\n| studio     =\n| venue      =\n| genre      = [[contemporary R&B|R&B]], [[Pop music|pop]]\n| length     = 6:06 (album version)\n                   4:26 (radio edit)\n| label      = [[Parlophone Records|Parlophone]]\n| writer     = {{flatlist|\n*[[Lulu (singer)|Lulu]]\n*Billy Lawrie\n*[[Steve DuBerry]]\n}}\n| producer   = {{flatlist|\n*Chris Lord-Alge\n*Roger Davies\n}}\n| prev_title = [[The Best (song)#Tina Turner version|(Simply) The Best]]\n| prev_year  = 1992\n| next_title = [[Disco Inferno#Tina Turner version|Disco Inferno]]\n| next_year  = 1993\n| misc       = {{External music video|type=single|header=Music video|1={{YouTube|3pD_0Czkmtc|\"I Don't Wanna Fight\"}}}}\n}}\n\n\"'''I Don't Wanna Fight'''\" is a song performed by recording artist [[Tina Turner]]. It was written by British singer [[Lulu (singer)|Lulu]], her brother Billy Lawrie and [[Steve DuBerry]] and first offered to singer [[Sade (singer)|Sade]], who sent it on to Turner. Turner recorded it in 1993 as part of the soundtrack for her autobiographical film, ''[[What's Love Got to Do with It (film)|What's Love Got to Do with It]]''. Lulu's version appears as the b-side to her 1993 single \"How 'Bout Us\" as well as on the 2003 album ''[[The Greatest Hits (Lulu album)|The Greatest Hits]]''.\n\nFeaturing a wistful but resolute vocal set against a [[synthesizer]] line, the track was a substantial hit on both sides of the Atlantic, reaching No. 9 on the US [[Billboard Hot 100|''Billboard'' Hot 100]] and No. 7 on the [[UK Singles Chart]]. In Canada it peaked at No. 1 for three weeks, and in Iceland it reached No. 3. The song was nominated at the [[36th Grammy Awards]] for [[Grammy Award for Best Female Pop Vocal Performance|Best Female Pop Vocal Performance]] and [[Grammy Award for Best Song Written for Visual Media|The Grammy Award for Best Song Written Specifically for a Motion Picture or for Television]]. To date, it remains Turner's last single to chart in the Top Ten of the Billboard Hot 100.\n\n==Critical reception==\nThe song received positive reviews from music critics. [[Larry Flick]] from ''[[Billboard (magazine)|Billboard]]'' complimented Turner's \"distinctive and worldly vocal delivery\". He also noted that she \"makes her [[Virgin Records|Virgin]] debut with a shuffling pop/dance ditty that stylistically lands somewhere between her comeback hit, \"[[Let's Stay Together (Al Green song)#Tina Turner version|Let's Stay Together]],\" and [[Amy Grant]]'s \"[[Baby Baby (Amy Grant song)|Baby Baby]].\"\"<ref>{{cite magazine|url=https://www.americanradiohistory.com/Archive-Billboard/90s/1993/BB-1993-05-08.pdf|title=Single Reviews|magazine=[[Billboard (magazine)|Billboard]]|date=May 8, 1993|accessdate=February 2, 2020|page=62|format=PDF}}</ref> ''[[People (magazine)|People Magazine]]'' described the song as an \"ardent ballad\" that prove that Turner \"has mellowed\".<ref>{{cite magazine|url=https://dev.element.people.com/archive/picks-and-pans-review-whats-love-got-to-do-with-it-vol-40-no-15/|title=Picks and Pans Review: What's Love Got to Do with It|magazine=[[People (magazine)|People]]|date=October 11, 1993|accessdate=March 9, 2020}}</ref> James Hunter from ''[[Vibe (magazine)|Vibe]]'' wrote that \"when Turner tears up her voice at the top of the bridge, it's as involving as soulful pop music gets. This is one of the best records of her career.\"<ref>{{cite magazine|url=https://books.google.no/books?id=IigEAAAAMBAJ|title=Single File|magazine=[[Vibe (magazine)|Vibe]]|date=September 1, 1993|accessdate=March 2, 2020}}</ref>\n\n==Versions and remixes==\n* Single Edit - 4:26\n* Album Version - 6:06\n* Urban Radio - 4:03\n* Urban Mix - 5:17\n* Urban Radio Instrumental - 4:02\n* Holiday Inn Lounge Mix - 5:43\n* Club House Mix - 5:26\n\n==Charts==\n{{col-begin}}\n{{col-2}}\n\n===Weekly charts===\n{|class=\"wikitable plainrowheaders sortable\" style=\"text-align:center\"\n!scope=\"col\"|Chart (1993)\n!scope=\"col\"|Peak<br/>position\n|-\n!scope=\"row\"{{singlechart|Australia|39|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=January 3, 2014}}\n|-\n!scope=\"row\"{{singlechart|Austria|29|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=January 3, 2014}}\n|-\n!scope=\"row\"{{singlechart|Flanders|8|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=January 3, 2014}}\n|-\n!scope=\"row\"{{singlechart|Canadatopsingles|1|chartid=2186|accessdate=October 6, 2015}}\n|-\n!scope=\"row\"{{singlechart|Canadaadultcontemporary|1|chartid=2182|accessdate=October 6, 2015}}\n|-\n!scope=\"row\"|Europe ([[European Hot 100 Singles]])<ref>{{cite web|url=http://www.americanradiohistory.com/Archive-Billboard/90s/1993/BB-1993-06-19.pdf|title=Hits of the World|work=Billboard|publisher=Prometheus Global Media|date=June 19, 1993|accessdate=October 6, 2015}}</ref>\n| 11\n|-\n!scope=\"row\"{{singlechart|France|49|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=January 3, 2014}}\n|-\n!scope=\"row\"{{singlechart|Germany2|35|artist=Tina Turner|song=I Don't Wanna Fight|songid=2626|accessdate=Novmeber 24, 2019}}\n|-\n!scope=\"row\"|Iceland ([[\u00cdslenski listinn|\u00cdslenski Listinn Topp 40]])<ref>{{cite web|url=http://timarit.is/files/11732247.pdf#navpanes=1&view=FitH|title=\u00cdslenski Listinn Topp 40 (17.06.1993 \u2013 23.06.1993)|publisher=Dagbla\u00f0i\u00f0 V\u00edsir \u2013 T\u00f3nlist|accessdate=February 4, 2018}}</ref>\n| 3\n|-\n!scope=\"row\"{{singlechart|Ireland2|14|song=I Don't Wanna Fight|accessdate=October 6, 2015}}\n|-\n!scope=\"row\"|Italy (''[[Musica e dischi]]'')<ref>{{cite magazine|url=https://www.americanradiohistory.com/Archive-Music-and-Media/90s/1993/MM-1993-08-21.pdf|title=Top 10 Sales in Europe|magazine=[[Music & Media]]|volume=10|issue=34|page=24|date=August 21, 1993|access-date=November 24, 2019}}</ref>\n| 7\n|-\n!scope=\"row\"{{singlechart|Dutch40|18|year=1993|week=27|accessdate=November 24, 2019}}\n|-\n!scope=\"row\"{{singlechart|Dutch100|14|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=October 6, 2015}}\n|-\n!scope=\"row\"{{singlechart|New Zealand|7|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=January 3, 2014}}\n|-\n!scope=\"row\"{{singlechart|Norway|8|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=January 3, 2014}}\n|-\n!scope=\"row\"{{singlechart|Sweden|39|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=January 3, 2014}}\n|-\n!scope=\"row\"{{singlechart|Switzerland|11|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=January 3, 2014}}\n|-\n!scope=\"row\"{{singlechart|UKsinglesbyname|7|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=October 6, 2015}}\n|-\n!scope=\"row\"{{singlechart|Billboardhot100|9|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=September 12, 2013}}\n|-\n!scope=\"row\"{{singlechart|Billboardadultcontemporary|1|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=September 12, 2013}}\n|-\n!scope=\"row\"{{singlechart|Billboardrandbhiphop|51|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=October 6, 2015}}\n|-\n!scope=\"row\"{{singlechart|Billboardpopsongs|6|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=October 6, 2015}}\n|-\n!scope=\"row\"{{singlechart|Billboardrhythmic|36|artist=Tina Turner|song=I Don't Wanna Fight|accessdate=October 6, 2015}}\n|}\n{{col-2}}\n\n===Year-end charts===\n{|class=\"wikitable sortable plainrowheaders\" style=\"text-align:center\"\n!scope=\"col\"|Chart (1993)\n!scope=\"col\"|Position\n|-\n!scope=\"row\"|Belgium (Ultratop)<ref>{{cite web|url=http://www.ultratop.be/nl/annual.asp?year=1993|title=Jaaroverzichten 1993|publisher=[[Ultratop]]|language=Dutch|accessdate=October 6, 2015}}</ref>\n| 71\n|-\n!scope=\"row\"|Canada Top Singles (''RPM'')<ref>{{cite web|url=http://www.bac-lac.gc.ca/eng/discover/films-videos-sound-recordings/rpm/Pages/image.aspx?Image=nlc008388.2339&URLjpg=http%3a%2f%2fwww.collectionscanada.gc.ca%2fobj%2f028020%2ff4%2fnlc008388.2339.gif&Ecopy=nlc008388.2339|title=The RPM Top 100 Hit Tracks of 1993|magazine=[[RPM (magazine)|RPM]]|publisher=[[Library and Archives Canada]]|date=December 18, 1993|accessdate=October 6, 2015}}</ref>\n| 5\n|-\n!scope=\"row\"|Canada Adult Contemporary (''RPM'')<ref>{{cite magazine|url=http://www.bac-lac.gc.ca/eng/discover/films-videos-sound-recordings/rpm/Pages/image.aspx?Image=nlc008388.2334&URLjpg=http%3a%2f%2fwww.collectionscanada.gc.ca%2fobj%2f028020%2ff4%2fnlc008388.2334.gif&Ecopy=nlc008388.2334|title=The RPM Top 100 A\\C Tracks of 1993|magazine=[[RPM (magazine)|RPM]]|publisher=[[Library and Archives Canada]]|date=December 18, 1993|accessdate=October 6, 2015}}</ref>\n| 1\n|-\n!scope=\"row\"|Europe (Eurochart Hot 100)<ref>{{cite magazine|url=https://www.americanradiohistory.com/Archive-Music-and-Media/90s/1993/MM-1993-12-18.pdf|title=1993 Year-End Sales Charts: Eurochart Hot 100 Singles|accessdate=November 27, 2019|work=Music & Media}}</ref> \n| 92\n|-\n!scope=\"row\"|Netherlands (Single Top 100)<ref>{{cite web|url=http://dutchcharts.nl/jaaroverzichten.asp?year=1993&cat=s|title=Jaaroverzichten - Single 1993|publisher=Hung Medien|language=Dutch|accessdate=October 6, 2015}}</ref>\n| 96\n|-\n!scope=\"row\"|Switzerland (Schweizer Hitparade)<ref>{{cite web|url=http://www.swisscharts.com/charts/jahreshitparade/1993|title=Schweizer Jahreshitparade 1993|language=German|access-date=November 24, 2019}}</ref>\n| 40\n|-\n!scope=\"row\"|UK Singles (Official Charts Company)<ref>{{cite web|url=http://hosting1642755.az.pl/sp%20uk%20best%201993.html |title=Najlepsze single na UK Top 40-1993 wg sprzeda\u017cy |language=Polish |publisher=Official Charts Company |accessdate=October 21, 2015 }}{{dead link|date=April 2017 |bot=InternetArchiveBot |fix-attempted=yes }}</ref>\n| 84\n|-\n!scope=\"row\"|US ''Billboard'' Hot 100<ref name=\"usyearend\">{{cite web|url=http://www.americanradiohistory.com/Archive-Billboard/90s/1993/BB-1993-12-25.pdf|title=The Year in Music: 1993|work=[[Billboard (magazine)|Billboard]]|date=December 25, 1993|accessdate=October 6, 2015}}</ref>\n| 42\n|-\n!scope=\"row\"|US Adult Contemporary (''Billboard'')<ref name=\"usyearend\"/>\n| 2\n|}\n{{col-end}}\n\n==References==\n{{Reflist|30em}}\n\n==External links==\n* {{MetroLyrics song|tina-turner|i-dont-wanna-fight}}<!-- Licensed lyrics provider -->\n\n{{Tina Turner singles}}\n\n[[Category:1993 singles]]\n[[Category:Lulu (singer) songs]]\n[[Category:Tina Turner songs]]\n[[Category:RPM Top Singles number-one singles]]\n[[Category:Billboard Adult Contemporary number-one singles]]\n[[Category:Songs written for films]]\n[[Category:Songs written by Steve DuBerry]]\n[[Category:Songs written by Billy Lawrie]]\n[[Category:Songs written by Lulu (singer)]]\n[[Category:1993 songs]]\n[[Category:RPM Adult Contemporary number-one singles]]\n[[Category:Contemporary R&B ballads]]\n[[Category:Pop ballads]]\n[[Category:1990s ballads]]\n", "name_user": "S.Didam", "label": "safe", "comment": "\u2192\u200eWeekly charts:typo", "url_page": "//en.wikipedia.org/wiki/I_Don%27t_Wanna_Fight"}
{"title_page": "Ellen Ochoa", "text_new": "{{pp-blp|small=yes}}\n{{short description|Former astronaut and current Deputy Director of the Johnson Space Center}}\n{{Use American English|date=December 2017}}\n{{Use mdy dates|date=December 2017}}\n{{Infobox astronaut\n| name          =Ellen L. Ochoa\n| image         =Ellen Ochoa.jpg\n| type          =[[NASA]] astronaut\n| birth_date    ={{Birth date and age|1958|05|10}}\n| birth_place   =[[Los Angeles]], [[California]], US\n|alma_mater     = [[San Diego State University]], [[Stanford University]]\n|occupation     = Director [[Johnson Space Center]]\n| selection     =[[List of astronauts by selection#1990|1990 NASA Group]]\n| time          = 40d 19h 36m\n| mission      =[[STS-56]], [[STS-66]], [[STS-96]], [[STS-110]]\n| insignia      =[[File:Sts-56-patch.png|40px]] [[File:Sts-66-patch.png|40px]] [[File:Sts-96-patch.svg|40px]] [[File:Sts-110-patch.png|40px]]\n}}\n'''Ellen L. Ochoa'''<ref>https://www.nndb.com/people/037/000163545/</ref> (born May 10, 1958) is an American engineer, former astronaut and former director of the [[Lyndon B. Johnson Space Center|Johnson Space Center]].<ref name=\"nasa bio\"/> In 1993 Ochoa became the first [[Hispanic]] woman to go to space when she served on a nine-day mission aboard the [[Space Shuttle Discovery|Space Shuttle ''Discovery'']].<ref>{{Cite web|url=http://www.spacetoday.org/History/ManInSpaceFirsts/ManyPeoples.html|title=Space Today Online -- Man In Space Firsts -- table of contents|website=www.spacetoday.org|access-date=2019-10-08}}</ref> Ochoa became director of the center upon the retirement of the previous director, [[Michael Coats]], on December 31, 2012.<ref name=JSC>{{cite web |author=|url=http://www.nasa.gov/centers/johnson/news/releases/2012/J12-020.html |title=Ochoa Named Johnson Space Center Director: Coats to Retire |date=16 November 2012|accessdate=27 November 2017|work=NASA}}</ref> She was the first Hispanic director and the second female director of Johnson Space Center.\n\n== Early life and education ==\nOchoa was born on May 10, 1958 in [[Los Angeles]], [[California]] to Joseph and Rosanne (n\u00e9e Deardorff) Ochoa. Her paternal grandparents immigrated from [[Sonora]] to [[Arizona]] and later to California where her father was born.<ref>{{Cite book|title=Ellen Ochoa|last=Hasday|first=Judy L.|publisher=|year=|isbn=978-1-4381-4611-9|location=New York, NY|pages=|oclc=913784636}}</ref> She grew up in [[La Mesa, California]].<ref name=\"nasa bio\" />\n\nOchoa graduated from [[Grossmont High School]] in El Cajon in 1975. Her parents divorced when she was in high school and she lived with her mother and her brothers.\n\nOchoa received a bachelor of science degree in physics from [[San Diego State University]] and graduated [[Phi Beta Kappa]] in 1980, before earning a master of science degree and a doctorate from [[Stanford Department of Electrical Engineering]] in 1981 and 1985, respectively.<ref name=\"sdsu_Ochoa\">{{cite web |url=http://www.calstate.edu/alumni/madeinthecsu/aerospace-aviation/ochoa.shtml |title=CSU Alumni - Aerospace & Aviation - Ellen Ochoa |publisher=calstate.edu |accessdate=November 12, 2018}}</ref>\n\n== Career ==\n=== Research ===\nAs a doctoral student at Stanford, and later as a researcher at [[Sandia National Laboratories]] and the [[NASA Ames Research Center]], Ochoa investigated optical systems for performing information processing.<ref name=\"nasa bio\" /> At the NASA Ames Research Center, she led a research group working primarily on optical systems for automated space exploration.<ref name=\"nasa bio\" /> She patented an optical system to detect defects in a repeating pattern and is a co-inventor on three patents for an optical inspection system, an optical object recognition method and a method for noise removal in images.<ref>{{Cite journal|date=1985-06-14|others=Joseph W. Goodman, Lambertus Hesselink, Ellen Ochoa, Leland Stanford Junior University, Leland Stanford Junior University|title=System for enhancement of optical features|url=https://patents.google.com/patent/US4674824A/en?inventor=ellen+ochoa}}</ref><ref>{{Cite journal|date=1987-09-15|others=Ellen Ochoa, George F. Schils, Donald W. Sweeney, US Department of Energy, US Department of Energy|title=Position, rotation, and intensity invariant recognizing method|url=https://patents.google.com/patent/US4838644A/en?inventor=ellen+ochoa}}</ref><ref>{{Cite journal|date=1987-10-09|others=Jan P. Allebach, Ellen Ochoa, Donald W. Sweeney, US Department of Energy, US Department of Energy|title=Optical ranked-order filtering using threshold decomposition|url=https://patents.google.com/patent/US4949389A/en?inventor=ellen+ochoa}}</ref> As Chief of the Intelligent Systems Technology Branch at Ames, she supervised 35 engineers and scientists in the research and development of computational systems for aerospace missions. Ochoa has presented numerous papers at technical conferences and in scientific journals.\n\n=== NASA ===\n[[File:Ellen Ochoa with Robonaut2.jpg|right|upright|thumb|Ochoa next to [[Robonaut|Robonaut 2]] during a JSC media day on August 4, 2010.]]\nOchoa was selected by NASA in January 1991 and became an astronaut in July 1991.<ref name=\"nasa bio\"/> Her technical assignments in the Astronaut Office included serving as the crew representative for flight software, computer hardware and robotics, Assistant for Space Station to the Chief of the Astronaut Office, lead spacecraft communicator (CAPCOM) in Mission Control and as acting as Deputy Chief of the Astronaut Office.<ref name=\"nasa bio\"/>\n\nOchoa became the first [[Hispanic]] woman to go to space<ref name=\"britannica.com\">{{cite web|url=http://www.britannica.com/hispanic_heritage/browse?browseId=251042|title=Guide to Hispanic Heritage<!-- Bot generated title -->|website=britannica.com}}</ref><ref name=\"spacetoday.org\">{{cite web|url=http://www.spacetoday.org/History/ManInSpaceFirsts/ManyPeoples.html|title=Space Today Online -- Man In Space Firsts -- table of contents|last=Curtis|first=Anthony R.|website=www.spacetoday.org}}</ref> when she served on a nine-day mission aboard the [[Space Shuttle Discovery|Space Shuttle ''Discovery'']] in 1993. The purpose of the Shuttle mission was to study the Earth's ozone layer. A veteran of four space flights, Ochoa has logged nearly 1000 hours in space.<ref>{{Cite web|url=https://www.nbcnews.com/know-your-value/feature/ellen-ochoa-first-latina-go-space-how-get-more-women-ncna1100761|title=Ellen Ochoa, the first Latina to go to space: How to get more women into STEM|last=Delmore|first=Erin|date=2019-12-12|website=NBC News|language=en|url-status=live|archive-url=|archive-date=|access-date=2020-02-13}}</ref> She was a mission specialist on [[STS-56]] (1993), was payload commander on [[STS-66]], and was mission specialist and flight engineer on [[STS-96]] and [[STS-110]] in 2002.<ref name=\"nasa bio\">{{cite web\n  | title = Astronaut Bio: Ellen Ochoa\n  | publisher = [[NASA]]\n  | date = October 3, 2006\n  | url=http://www.jsc.nasa.gov/Bios/htmlbios/ochoa.html\n  | accessdate = 2007-01-25 }}</ref><ref>{{cite web|url=http://www.spacefacts.de/bios/astronauts/english/ochoa_ellen.htm|title=Spacefacts biography of Ellen Ochoa}}</ref> Ochoa was in Mission Control during the [[Space Shuttle Columbia disaster|Space Shuttle ''Columbia'' disaster]] and was one of the first personnel informed of television coverage showing ''Columbia''{{'}}s disintegration.<ref>{{cite web|title=STS-107 Entry Timeline|url=http://spaceflightnow.com/shuttle/sts107/timeline/|publisher=spaceflightnow.com|accessdate=2 February 2012}}</ref>\n\nFrom 2007, after retiring from spacecraft operations, Ochoa served as Deputy Director of the Johnson Space Center, helping to manage and direct the Astronaut Office and Aircraft Operations. On January 1, 2013, Ochoa became the first Hispanic and second female director of NASA's Johnson Space Center.<ref>{{cite web|title=Ochoa Named Johnson Space Center Director|url=http://www.nasa.gov/centers/johnson/news/releases/2012/J12-020.html|publisher=nasa.gov|accessdate=10 January 2013}}</ref>\n\n== National Service ==\nOchoa was named Vice Chair of the [[National Science Board]] for the 2018\u20132020 term. She currently chairs the committee evaluating nominations for the [[National Medal for Technology and Innovation]].<ref name=\":0\">{{Cite web|url=https://www.nsf.gov/nsb/news/news_summ.jsp?cntn_id=245368|title=National Science Board|website=National Science Board|access-date=2018-12-01}}</ref>\n\n== Personal life ==\nOchoa's husband is Coe Miles, an [[intellectual property]] attorney.<ref name=\"nasa_J17-001\" /> They have two sons.<ref name=\"nasa_J17-001\">{{cite web |url=https://www.nasa.gov/press-release/nasa-johnson-space-center-director-ellen-ochoa-to-be-inducted-into-us-astronaut-hall |title=NASA Johnson Space Center Director Ellen Ochoa to Be Inducted Into U.S. Astronaut Hall of Fame. Release J17-001 |first=Christina |last=Canales |date=February 14, 2017 |accessdate=November 12, 2018}}</ref> Ochoa is a classical flutist and played with the Stanford Symphony Orchestra, once receiving the Student Soloist Award.<ref>{{cite web |url=https://www.aps.org/careers/physicists/profiles/ochoa.cfm|title=Ellen Ochoa|website=American Physical Society|access-date=2016-01-31}}</ref>\n\n==Recognition==\n[[File:Ellen Ochoa, official portrait.jpg|right|upright|thumb|Ochoa in 2014]]\nOchoa was recognized during Hispanic Heritage Month activities in [[Cleveland, Ohio]] on September 14, 2011.\n<ref>http://www.clevelandairport.com/Airport-Guide/News---Media-Relations/Top-Stories/CLE_Bio_PDF.aspx{{dead link|date=December 2016 |bot=InternetArchiveBot |fix-attempted=yes }}</ref> The Ochoa Middle School located in [[Pasco, Washington]], the Ellen Ochoa Elementary School in [[Cudahy, CA]] and the \u00c1nimo Ellen Ochoa Charter Middle School in [[East Los Angeles, California|East Los Angeles]] are named in her honor. In addition, Grand Prairie, Texas has the Ellen Ochoa STEM Academy at Ben Milam Elementary School and Pico Rivera, California has the Ellen Ochoa Prep Academy.<ref>{{Cite web|url=http://ochoaprep.erusd.org/|title=Ellen Ochoa Prep Academy|website=ochoaprep.erusd.org|language=en|access-date=2017-10-10}}</ref> Union Public Schools in Tulsa, named a new elementary school after her as well. A flag with the rocket logo of the Ochoa Middle School in Pasco, Washington flew with Ochoa in April 2002 aboard the Shuttle ''[[Space Shuttle Atlantis|Atlantis]]'' for an 11-day mission to the International Space Station. Ochoa returned the flag to the school when she visited as a special guest at the 2002 dedication and it remains on permanent display.\n\nOchoa has received many awards among which are NASA's Distinguished Service Medal (2015),<ref>{{Cite web|url=https://www.history.com/this-day-in-history/astronaut-ellen-ochoa-becomes-first-hispanic-woman-in-space|title=Astronaut Ellen Ochoa becomes the first Hispanic woman in space|date=|website=HISTORY|language=en|url-status=live|archive-url=|archive-date=|access-date=2020-02-13}}</ref> Exceptional Service Medal (1997), Outstanding Leadership Medal (1995) and Space Flight Medals (2002, 1999, 1994, 1993).<ref name=\"nasa bio\"/> Ochoa and [[Michael Foale]] were announced as the 2017 class of the [[United States Astronaut Hall of Fame]].<ref name=\"halloffame\">{{cite web|url=http://astronautscholarship.org/programs-and-events/ahof-induction/ | title=U.S. Astronaut Hall of Fame Induction Ceremony & Gala |access-date=February 22, 2017}}</ref> Ochoa was recognized in ''Hispanic Executive'''s 2017 Best of the Boardroom<ref>{{cite web|title=Hispanic Executive's 2017 Best of the Boardroom|url=https://hispanicexecutive.com/2017/2017-best-of-the-boardroom/|website=Hispanic Executive|publisher=Guerrero Media}}</ref> issue for her work as a board director for Johnson Space Center. She was inducted into the 2018 International Air and Space Hall of Fame class.<ref>{{cite web|url=http://sandiegoairandspace.org/press/release/worlds-most-prestigious-air-space-hall-of-fame-to-enshrine-distinguished-cl|title=World's Most Prestigious Air & Space Hall of Fame to Enshrine Distinguished Class of 2018|website=San Diego Air & Space Museum|access-date=October 30, 2019}}</ref>\n\nOchoa is a Fellow of [[American Association for the Advancement of Science|AAAS]], the [[American Institute of Aeronautics and Astronautics]], and the [[National Academy of Inventors]].<ref name=\":0\" />\n\nAn animated version of Ochoa was featured in the episode \"Astronaut Ellen Ochoa\" of the children's television program, ''[[Ready Jet Go!]]''.\n\n==See also==\n{{Portal|Latino and Hispanic American|Biography}}\n* [[List of Hispanic astronauts]]\n* [https://www.nasa.gov/sites/default/files/atoms/files/ochoa.pdf NASA biography]\n\n==References==\n{{Reflist}}\n\n==External links==\n* [http://www.ieeeghn.org/wiki/index.php/Ellen_Ochoa Biography of Ochoa from IEEE]\n* [http://www.makers.com/ellen-ochoa Ellen Ochoa]  Video produced by ''[[Makers: Women Who Make America]]''\n* [http://www.careergirls.org/careers/astronaut-0 Interview with Ochoa aimed at young women]\n*[https://www.womenshistory.org/articles/qa-ellen-ochoa National Women's History Museum - Q&A with Ellen Ochoa (August 8, 2018)]\n\n{{NASA Astronaut Group 13}}\n\n{{Authority control}}\n\n{{DEFAULTSORT:Ochoa, Ellen}}\n[[Category:1958 births]]\n[[Category:Living people]]\n[[Category:American astronauts]]\n[[Category:American academics of Mexican descent]]\n[[Category:San Diego State University alumni]]\n[[Category:Sandia National Laboratories people]]\n[[Category:Stanford University School of Engineering alumni]]\n[[Category:Stanford University trustees]]\n[[Category:United States Astronaut Hall of Fame inductees]]\n[[Category:Women astronauts]]\n[[Category:NASA astronauts]]\n[[Category:American electrical engineers]]\n[[Category:American women engineers]]\n[[Category:Space Shuttle program astronauts]]\n[[Category:20th-century American engineers]]\n[[Category:20th-century women engineers]]\n[[Category:21st-century women engineers]]\n[[Category:21st-century American engineers]]\n[[Category:Engineers from California]]\n[[Category:Fellows of the American Institute of Aeronautics and Astronautics]]\n[[Category:Fellows of the American Association for the Advancement of Science]]\n", "text_old": "{{pp-blp|small=yes}}\n{{short description|Former astronaut and current Deputy Director of the Johnson Space Center}}\n{{Use American English|date=December 2017}}\n{{Use mdy dates|date=December 2017}}\n{{Infobox astronaut\n| name          =Ellen L. Ochoa\n| image         =Ellen Ochoa.jpg\n| type          =[[NASA]] astronaut\n| birth_date    ={{Birth date and age|1958|05|10}}\n| birth_place   =[[Los Angeles]], [[California]], US\n|alma_mater     = [[San Diego State University]], [[Stanford University]]\n|occupation     = Director [[Johnson Space Center]]\n| selection     =[[List of astronauts by selection#1990|1990 NASA Group]]\n| time          = 40d 19h 36m\n| mission      =[[STS-56]], [[STS-66]], [[STS-96]], [[STS-110]]\n| insignia      =[[File:Sts-56-patch.png|40px]] [[File:Sts-66-patch.png|40px]] [[File:Sts-96-patch.svg|40px]] [[File:Sts-110-patch.png|40px]]\n}}\n'''Ellen L. Ochoa'''<ref>https://www.nndb.com/people/037/000163545/</ref> (born May 10, 1958) is an American engineer, former astronaut and former director of the [[Lyndon B. Johnson Space Center|Johnson Space Center]].<ref name=\"nasa bio\"/> In 1993 Ochoa became the first [[Hispanic]] woman to go to space when she served on a nine-day mission aboard the [[Space Shuttle Discovery|Space Shuttle ''Discovery'']].<ref>{{Cite web|url=http://www.spacetoday.org/History/ManInSpaceFirsts/ManyPeoples.html|title=Space Today Online -- Man In Space Firsts -- table of contents|website=www.spacetoday.org|access-date=2019-10-08}}</ref> Ochoa became director of the center upon the retirement of the previous director, [[Michael Coats]], on December 31, 2012.<ref name=JSC>{{cite web |author=|url=http://www.nasa.gov/centers/johnson/news/releases/2012/J12-020.html |title=Ochoa Named Johnson Space Center Director: Coats to Retire |date=16 November 2012|accessdate=27 November 2017|work=NASA}}</ref> She was the first Hispanic director and the second female director of Johnson Space Center.\n\n== Early life and education ==\nOchoa was born on May 10, 1958 in [[Los Angeles]], [[California]] to Joseph and Rosanne (n\u00e9e Deardorff) Ochoa. Her paternal grandparents immigrated from [[Sonora]] to [[Arizona]] and later to California where her father was born.<ref>{{Cite book|title=Ellen Ochoa|last=Hasday|first=Judy L.|publisher=|year=|isbn=978-1-4381-4611-9|location=New York, NY|pages=|oclc=913784636}}</ref> She grew up in [[La Mesa, California]].<ref name=\"nasa bio\" /> \n\nOchoa graduated from [[Grossmont High School]] in El Cajon in 1975. Her parents divorced when she was in high school and she lived with her mother and her brothers.\n\nOchoa received a bachelor of science degree in physics from [[San Diego State University]] and graduated [[Phi Beta Kappa]] in 1980, before earning a master of science degree and a doctorate from [[Stanford Department of Electrical Engineering]] in 1981 and 1985, respectively.<ref name=\"sdsu_Ochoa\">{{cite web |url=http://www.calstate.edu/alumni/madeinthecsu/aerospace-aviation/ochoa.shtml |title=CSU Alumni - Aerospace & Aviation - Ellen Ochoa |publisher=calstate.edu |accessdate=November 12, 2018}}</ref>\n\n== Career ==\n=== Research ===\nAs a doctoral student at Stanford, and later as a researcher at [[Sandia National Laboratories]] and the [[NASA Ames Research Center]], Ochoa investigated optical systems for performing information processing.<ref name=\"nasa bio\" /> At the NASA Ames Research Center, she led a research group working primarily on optical systems for automated space exploration.<ref name=\"nasa bio\" /> She patented an optical system to detect defects in a repeating pattern and is a co-inventor on three patents for an optical inspection system, an optical object recognition method and a method for noise removal in images.<ref>{{Cite journal|date=1985-06-14|others=Joseph W. Goodman, Lambertus Hesselink, Ellen Ochoa, Leland Stanford Junior University, Leland Stanford Junior University|title=System for enhancement of optical features|url=https://patents.google.com/patent/US4674824A/en?inventor=ellen+ochoa}}</ref><ref>{{Cite journal|date=1987-09-15|others=Ellen Ochoa, George F. Schils, Donald W. Sweeney, US Department of Energy, US Department of Energy|title=Position, rotation, and intensity invariant recognizing method|url=https://patents.google.com/patent/US4838644A/en?inventor=ellen+ochoa}}</ref><ref>{{Cite journal|date=1987-10-09|others=Jan P. Allebach, Ellen Ochoa, Donald W. Sweeney, US Department of Energy, US Department of Energy|title=Optical ranked-order filtering using threshold decomposition|url=https://patents.google.com/patent/US4949389A/en?inventor=ellen+ochoa}}</ref> As Chief of the Intelligent Systems Technology Branch at Ames, she supervised 35 engineers and scientists in the research and development of computational systems for aerospace missions. Ochoa has presented numerous papers at technical conferences and in scientific journals.\n\n=== NASA ===\n[[File:Ellen Ochoa with Robonaut2.jpg|right|upright|thumb|Ochoa next to [[Robonaut|Robonaut 2]] during a JSC media day on August 4, 2010.]]\nOchoa was selected by NASA in January 1991 and became an astronaut in July 1991.<ref name=\"nasa bio\"/> Her technical assignments in the Astronaut Office included serving as the crew representative for flight software, computer hardware and robotics, Assistant for Space Station to the Chief of the Astronaut Office, lead spacecraft communicator (CAPCOM) in Mission Control and as acting as Deputy Chief of the Astronaut Office.<ref name=\"nasa bio\"/>\n\nOchoa became the first [[Hispanic]] woman to go to space<ref name=\"britannica.com\">{{cite web|url=http://www.britannica.com/hispanic_heritage/browse?browseId=251042|title=Guide to Hispanic Heritage<!-- Bot generated title -->|website=britannica.com}}</ref><ref name=\"spacetoday.org\">{{cite web|url=http://www.spacetoday.org/History/ManInSpaceFirsts/ManyPeoples.html|title=Space Today Online -- Man In Space Firsts -- table of contents|last=Curtis|first=Anthony R.|website=www.spacetoday.org}}</ref> when she served on a nine-day mission aboard the [[Space Shuttle Discovery|Space Shuttle ''Discovery'']] in 1993. The purpose of the Shuttle mission was to study the Earth's ozone layer. A veteran of four space flights, Ochoa has logged nearly 1000 hours in space.<ref>{{Cite web|url=https://www.nbcnews.com/know-your-value/feature/ellen-ochoa-first-latina-go-space-how-get-more-women-ncna1100761|title=Ellen Ochoa, the first Latina to go to space: How to get more women into STEM|last=Delmore|first=Erin|date=2019-12-12|website=NBC News|language=en|url-status=live|archive-url=|archive-date=|access-date=2020-02-13}}</ref> She was a mission specialist on [[STS-56]] (1993), was payload commander on [[STS-66]], and was mission specialist and flight engineer on [[STS-96]] and [[STS-110]] in 2002.<ref name=\"nasa bio\">{{cite web\n  | title = Astronaut Bio: Ellen Ochoa\n  | publisher = [[NASA]]\n  | date = October 3, 2006\n  | url=http://www.jsc.nasa.gov/Bios/htmlbios/ochoa.html\n  | accessdate = 2007-01-25 }}</ref><ref>{{cite web|url=http://www.spacefacts.de/bios/astronauts/english/ochoa_ellen.htm|title=Spacefacts biography of Ellen Ochoa}}</ref> Ochoa was in Mission Control during the [[Space Shuttle Columbia disaster|Space Shuttle ''Columbia'' disaster]] and was one of the first personnel informed of television coverage showing ''Columbia''{{'}}s disintegration.<ref>{{cite web|title=STS-107 Entry Timeline|url=http://spaceflightnow.com/shuttle/sts107/timeline/|publisher=spaceflightnow.com|accessdate=2 February 2012}}</ref>\n\nFrom 2007, after retiring from spacecraft operations, Ochoa served as Deputy Director of the Johnson Space Center, helping to manage and direct the Astronaut Office and Aircraft Operations. On January 1, 2013, Ochoa became the first Hispanic and second female director of NASA's Johnson Space Center.<ref>{{cite web|title=Ochoa Named Johnson Space Center Director|url=http://www.nasa.gov/centers/johnson/news/releases/2012/J12-020.html|publisher=nasa.gov|accessdate=10 January 2013}}</ref>\n\n== National Service ==\nOchoa was named Vice Chair of the [[National Science Board]] for the 2018-2020 term. She currently chairs the committee evaluating nominations for the [[National Medal for Technology and Innovation]].<ref name=\":0\">{{Cite web|url=https://www.nsf.gov/nsb/news/news_summ.jsp?cntn_id=245368|title=National Science Board|website=National Science Board|access-date=2018-12-01}}</ref>\n\n== Personal life ==\nOchoa's husband is Coe Miles, an [[intellectual property]] attorney.<ref name=\"nasa_J17-001\" /> They have two sons.<ref name=\"nasa_J17-001\">{{cite web |url=https://www.nasa.gov/press-release/nasa-johnson-space-center-director-ellen-ochoa-to-be-inducted-into-us-astronaut-hall |title=NASA Johnson Space Center Director Ellen Ochoa to Be Inducted Into U.S. Astronaut Hall of Fame. Release J17-001 |first=Christina |last=Canales |date=February 14, 2017 |accessdate=November 12, 2018}}</ref> Ochoa is a classical flutist and played with the Stanford Symphony Orchestra, once receiving the Student Soloist Award.<ref>{{cite web |url=https://www.aps.org/careers/physicists/profiles/ochoa.cfm|title=Ellen Ochoa|website=American Physical Society|access-date=2016-01-31}}</ref>\n\n==Recognition==\n[[File:Ellen Ochoa, official portrait.jpg|right|upright|thumb|Ochoa in 2014]]\nOchoa was recognized during Hispanic Heritage Month activities in [[Cleveland, Ohio]] on September 14, 2011.\n<ref>http://www.clevelandairport.com/Airport-Guide/News---Media-Relations/Top-Stories/CLE_Bio_PDF.aspx{{dead link|date=December 2016 |bot=InternetArchiveBot |fix-attempted=yes }}</ref> The Ochoa Middle School located in [[Pasco, Washington]], the Ellen Ochoa Elementary School in [[Cudahy, CA]] and the \u00c1nimo Ellen Ochoa Charter Middle School in [[East Los Angeles, California|East Los Angeles]] are named in her honor. In addition, Grand Prairie, Texas has the Ellen Ochoa STEM Academy at Ben Milam Elementary School and Pico Rivera, California has the Ellen Ochoa Prep Academy.<ref>{{Cite web|url=http://ochoaprep.erusd.org/|title=Ellen Ochoa Prep Academy|website=ochoaprep.erusd.org|language=en|access-date=2017-10-10}}</ref> Union Public Schools in Tulsa, named a new elementary school after her as well. A flag with the rocket logo of the Ochoa Middle School in Pasco, Washington flew with Ochoa in April 2002 aboard the Shuttle ''[[Space Shuttle Atlantis|Atlantis]]'' for an 11-day mission to the International Space Station. Ochoa returned the flag to the school when she visited as a special guest at the 2002 dedication and it remains on permanent display.\n\nOchoa has received many awards among which are NASA's Distinguished Service Medal (2015),<ref>{{Cite web|url=https://www.history.com/this-day-in-history/astronaut-ellen-ochoa-becomes-first-hispanic-woman-in-space|title=Astronaut Ellen Ochoa becomes the first Hispanic woman in space|date=|website=HISTORY|language=en|url-status=live|archive-url=|archive-date=|access-date=2020-02-13}}</ref> Exceptional Service Medal (1997), Outstanding Leadership Medal (1995) and Space Flight Medals (2002, 1999, 1994, 1993).<ref name=\"nasa bio\"/> Ochoa and [[Michael Foale]] were announced as the 2017 class of the [[United States Astronaut Hall of Fame]].<ref name=\"halloffame\">{{cite web|url=http://astronautscholarship.org/programs-and-events/ahof-induction/ | title=U.S. Astronaut Hall of Fame Induction Ceremony & Gala |access-date=February 22, 2017}}</ref> Ochoa was recognized in ''Hispanic Executive'''s 2017 Best of the Boardroom<ref>{{cite web|title=Hispanic Executive's 2017 Best of the Boardroom|url=https://hispanicexecutive.com/2017/2017-best-of-the-boardroom/|website=Hispanic Executive|publisher=Guerrero Media}}</ref> issue for her work as a board director for Johnson Space Center. She was inducted into the 2018 International Air and Space Hall of Fame class.<ref>{{cite web|url=http://sandiegoairandspace.org/press/release/worlds-most-prestigious-air-space-hall-of-fame-to-enshrine-distinguished-cl|title=World's Most Prestigious Air & Space Hall of Fame to Enshrine Distinguished Class of 2018|website=San Diego Air & Space Museum|access-date=October 30, 2019}}</ref>\n\n\nOchoa is a Fellow of [[American Association for the Advancement of Science|AAAS]], the [[American Institute of Aeronautics and Astronautics]], and the [[National Academy of Inventors]].<ref name=\":0\" />\n\nAn animated version of Ochoa was featured in the episode \"Astronaut Ellen Ochoa\" of the children's television program, ''[[Ready Jet Go!]]''.\n\n==See also==\n{{Portal|Latino and Hispanic American|Biography}}\n* [[List of Hispanic astronauts]]\n* [https://www.nasa.gov/sites/default/files/atoms/files/ochoa.pdf NASA biography]\n\n==References==\n{{Reflist}}\n\n==External links==\n* [http://www.ieeeghn.org/wiki/index.php/Ellen_Ochoa Biography of Ochoa from IEEE]\n* [http://www.makers.com/ellen-ochoa Ellen Ochoa]  Video produced by ''[[Makers: Women Who Make America]]''\n* [http://www.careergirls.org/careers/astronaut-0 Interview with Ochoa aimed at young women]\n*[https://www.womenshistory.org/articles/qa-ellen-ochoa National Women's History Museum - Q&A with Ellen Ochoa (August 8, 2018)]\n\n{{NASA Astronaut Group 13}}\n\n{{Authority control}}\n\n{{DEFAULTSORT:Ochoa, Ellen}}\n[[Category:1958 births]]\n[[Category:Living people]]\n[[Category:American astronauts]]\n[[Category:American academics of Mexican descent]]\n[[Category:San Diego State University alumni]]\n[[Category:Sandia National Laboratories people]]\n[[Category:Stanford University School of Engineering alumni]]\n[[Category:Stanford University trustees]]\n[[Category:United States Astronaut Hall of Fame inductees]]\n[[Category:Women astronauts]]\n[[Category:NASA astronauts]]\n[[Category:American electrical engineers]]\n[[Category:American women engineers]]\n[[Category:Space Shuttle program astronauts]]\n[[Category:20th-century American engineers]]\n[[Category:20th-century women engineers]]\n[[Category:21st-century women engineers]]\n[[Category:21st-century American engineers]]\n[[Category:Engineers from California]]\n[[Category:Fellows of the American Institute of Aeronautics and Astronautics]]\n[[Category:Fellows of the American Association for the Advancement of Science]]\n", "name_user": "Majavah", "label": "safe", "comment": "clean up,typo(s) fixed: 2018-2020 \u2192 2018\u20132020", "url_page": "//en.wikipedia.org/wiki/Ellen_Ochoa"}
{"title_page": "Serbian Progressive Party", "text_new": "{{short description|Political party}}\n{{about|the contemporary Serbian Progressive Party established in 2008|the historical Serbian Progressive Party that existed in the Kingdom of Serbia|Serbian Progressive Party (historical)}}\n{{Infobox political party\n| name = Serbian Progressive Party\n| logo = Serbian Progressive Party logo.svg\n| logo_size = 290px\n| colorcode = {{Serbian Progressive Party/meta/color}}\n| foundation = {{Start date and age|2008|10|21|df=y}}\n| ideology = {{nowrap|[[National conservatism]]<ref name=\"Nordsieck\">{{cite web|url=http://www.parties-and-elections.eu/serbia.html|title=Serbia|website=Parties and Elections in Europe|first=Wolfram|last=Nordsieck|year=2016|accessdate=27 August 2018}}</ref><br>[[Right-wing populism]]<ref>{{cite web|title=Serbia: Economic and Political Overview|work=Nordea Trade|accessdate=7 October 2019|url=https://www.nordeatrade.com/fi/explore-new-market/serbia/political-context}}</ref><ref>{{cite web|url=http://www.dailymail.co.uk/wires/ap/article-3606719/After-Austria-election-look-Europe-right-wing-parties.html|title=After Austria election, a look at Europe right wing parties|accessdate=24 May 2016}}</ref><ref>{{cite web|url=https://en.portal.santandertrade.com/analyse-markets/serbia/political-outline?actualiser_id_banque=oui&id_banque=7|title=Serbian political outline|accessdate=28 April 2017}}</ref><br>[[Economic liberalism]]<ref>{{cite book|title=Party Responses to the EU in the Western Balkans|first=Marko|last=Stojic|page=138|publisher=Springer|year=2017}}</ref><br>[[Pro-Europeanism]]<ref>http://www.balkaninsight.com/en/article/who-is-who-political-parties-in-serbia</ref><br>[[Big tent]]<ref>{{cite web|url=http://orca.cf.ac.uk/115510/1/Serbian%20Compliance%20Patterns%20towards%20EU%20Integration.pdf|title=Serbian Compliance Patterns towards EU Integration under the Progressive Party: An Exercise in Statecraft|accessdate=13 December 2018}}</ref>}}\n| headquarters = Palmira Toljatija 5, [[Belgrade]]\n| international = [[International Democrat Union]]\n| website = {{URL|http://www.sns.org.rs/}}\n| country = Serbia\n| native_name = \u0421\u0440\u043f\u0441\u043a\u0430 \u043d\u0430\u043f\u0440\u0435\u0434\u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u043a\u0430<br>Srpska napredna stranka\n| abbreviation = \n| leader1_title = President\n| leader1_name = [[Aleksandar Vu\u010di\u0107]]\n| leader2_title = Vice President\n| leader2_name = [[Jorgovanka Tabakovi\u0107]]\n| leader3_title = Parliamentary leader\n| leader3_name = [[Aleksandar Martinovi\u0107]]\n| leader4_title = Founders\n| leader4_name = [[Tomislav Nikoli\u0107]] and [[Aleksandar Vu\u010di\u0107]]\n| split = [[Serbian Radical Party]]\n| position = {{nowrap|[[Centre-right politics|Centre-right]]<ref name=\"BBC\">{{Cite web |first=|last=|title=Serbia election: Pro-EU Prime Minister Vucic claims victory |work=BBC |accessdate=25 September 2016|url=https://www.bbc.co.uk/news/world-europe-36122928}}</ref> to [[Right-wing politics|right-wing]]<ref name=\"SM\">{{Cite web |first=|last=|title=Deutsche Welle: Expansion of right wing in Europe and its effects on Serbia |work= Serbian monitor |accessdate=26 May 2019|url=https://www.serbianmonitor.com/en/deutsche-welle-expansion-of-right-wing-in-europe-and-its-effects-on-serbia/}}</ref>}}\n| european = [[European People's Party]]\n| colours = {{colorbox|{{Serbian Progressive Party/meta/color}}}} [[Blue (colour)|Blue]]\n| seats1_title = [[National Assembly of Serbia|National Assembly]]\n| seats1 = {{Composition bar|98|250|{{Serbian Progressive Party/meta/color}}}}\n| seats2_title = [[Assembly of Vojvodina]]\n| seats2 = {{Composition bar|46|120|{{Serbian Progressive Party/meta/color}}}}\n| seats3_title = [[City Assembly of Belgrade]]\n| seats3 = {{Composition bar|57|110|{{Serbian Progressive Party/meta/color}}}}\n| flag = [[File:Flag of the Serbian Progressive Party.svg|200px|border|Flag of the Serbian Progressive Party]]\n| footnotes = \n}}\nThe '''Serbian Progressive Party''' ({{lang-sr|\u0421\u0440\u043f\u0441\u043a\u0430 \u043d\u0430\u043f\u0440\u0435\u0434\u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u043a\u0430|Srpska napredna stranka}}; '''\u0421\u041d\u0421''' or '''SNS''') is a [[Right-wing populism|right-wing populist]]<ref>{{Cite journal|last=Zulianello|first=Mattia|date=2019|title=Varieties of Populist Parties and Party Systems in Europe: From State-of-the-Art to the Application of a Novel Classification Scheme to 66 Parties in 33 Countries|url=https://www.cambridge.org/core/journals/government-and-opposition/article/varieties-of-populist-parties-and-party-systems-in-europe-from-stateoftheart-to-the-application-of-a-novel-classification-scheme-to-66-parties-in-33-countries/7CB95AE2CA7274D5F4716EC11708ACD8|journal=Government and Opposition|volume=|pages=5|via=}}</ref><ref>[http://www.cepolicy.org/news/post-election-serbia-good-news-eu Post election Serbia: good news for the EU? | cepolicy.org<!-- Botovski generisani naziv -->]</ref><ref name=\"BBC\"/> [[List of political parties in Serbia|political party]] in [[Serbia]].\n\nFounded in 2008 as a split from the [[Serbian Radical Party]] (SRS), the culmination of a decade-long conflict within the SRS between the party's moderate and hard-line wings, the SNS managed to retain the former's [[national conservatism|national conservative]] outlook, while adopting distinct [[Pro-Europeanism|pro-European]] policies.\n\nThis combination has transformed the SNS into the current [[ruling party]] in Serbia, being the senior party in the current government coalition, the party's leader [[Aleksandar Vu\u010di\u0107]] in turn serving as the [[President of Serbia]]. As of August 2018, the party holds 96 seats in the National Assembly.<ref>{{cite web|url=http://www.parlament.gov.rs/national-assembly/composition/political-parties/political-parties.500.html|title=National Assembly of the Republic of Serbia - Political Parties|website=www.parlament.gov.rs}}</ref>\n\nOn April 2, 2018, [[Twitter]] announced that they removed 8,558 accounts that promoted the ruling Serbian Progressive Party and [[Aleksandar Vu\u010di\u0107]] but also that they criticized the opposition.<ref name=\"twitter1\">{{cite web|url=https://twitter.com/TwitterSafety/status/1245682441865646080|title=Toward the end of last year, we identified clusters of accounts engaged in inauthentic coordinated activity which led to the removal of 8,558 accounts working to promote Serbia\u2019s ruling party and its leader.|author=[[Twitter|Twitter Safety]]|date=2018-04-02}}</ref><ref name=\"guardian1\">{{cite web|url=https://www.theguardian.com/technology/2020/apr/02/twitter-accounts-deleted-linked-saudi-arabia-serbia-egypt-governments?CMP=share_btn_tw|title=Twitter deletes 20,000 fake accounts linked to Saudi, Serbian and Egyptian governments|author=[[The Guardian]]|date=2018-04-02}}</ref>\n\n==History==\n[[File:Nikoli\u0107 & Vu\u010di\u0107.jpg|thumb|left|200px|Tomislav Nikoli\u0107 and Aleksandar Vu\u010di\u0107 at the SNS founding convention on 21 October 2008.]]\nThe Serbian Progressive Party was formed by a group of 21 former [[Serbian Radical Party]] (SRS) [[Member of Parliament|MPs]] led by [[Tomislav Nikoli\u0107]]. Disenchanted with the direction of the party, the [[Pro-Europeanism|pro-EU]] members<ref name=\"b92\">{{cite web|url=http://www.b92.net/eng/news/politics.php?yyyy=2012&mm=04&dd=18&nav_id=79833|title=Poll: Progressive Party is pro-EU, but its voters are not|publisher=B92|date=18 April 2012|accessdate=13 August 2013}}</ref> left and formed the ''Forward Serbia'' parliamentary group. The SNS was founded and held its first congress meeting on 21 October 2008.<ref name=\"foundation\">{{cite web|url=http://www.b92.net/eng/news/politics-article.php?yyyy=2008&mm=09&dd=24&nav_id=53724 |title=Nikoli\u0107 party to be called \"Serb Progressive\" |publisher=B92 |date=September 24, 2008 |url-status=dead |archiveurl=https://web.archive.org/web/20080928191726/http://www.b92.net/eng/news/politics-article.php?yyyy=2008&mm=09&dd=24&nav_id=53724 |archivedate=September 28, 2008 }}</ref>\n\nOf the Serbian Radical Party's representatives elected in the [[2008 Serbian parliamentary election|2008 parliamentary election]], 21 moved to the Serbian Progressive Party, while 57 remained in the SRS.\n\nIn 2011, the SNS formed a pre-election coalition with [[New Serbia]], the [[Strength of Serbia Movement]] and the [[Movement of Socialists]] to participate in the 2012 election.<ref>http://pressonline.rs/sr/vesti/vesti_dana/story/199240/Predsedni%C5%A1tvo+NS%3A+Nikoli%C4%87+nosilac+liste+SNS-NS-PSS-PS.html</ref>\n\nIn the [[2012 Serbian parliamentary election|2012 parliamentary election]], the party led the \"[[Let's Get Serbia Moving]]\" coalition and gained 55 seats out of 73 won by the coalition in the National Assembly. Party leader Tomislav Nikoli\u0107 defeated [[Boris Tadi\u0107]] of the [[Democratic Party (Serbia)|Democratic Party]] in the second round of the [[2012 Serbian presidential election|2012 presidential election]].<ref>{{cite web|url=http://www.b92.net/eng/news/politics-article.php?yyyy=2012&mm=05&dd=20&nav_id=80345 |title=Tomislav Nikoli\u0107 wins in presidential runoff |publisher=B92 |date=20 May 2012 |accessdate=23 May 2012 |url-status=dead |archiveurl=https://web.archive.org/web/20120523070408/http://www.b92.net/eng/news/politics-article.php?yyyy=2012&mm=05&dd=20&nav_id=80345 |archivedate=May 23, 2012 }}</ref>\n\nFollowing his election as [[President of Serbia]], Nikoli\u0107 stepped down as leader of the party on 24 May 2012, leaving deputy president [[Aleksandar Vu\u010di\u0107]] in charge until a successor was elected.<ref>{{Cite web|url=http://www.b92.net/eng/news/politics-article.php?yyyy=2012&mm=05&dd=24&nav_id=80417 |title=Serbia's new president quits as party leader |publisher=B92 |date=24 May 2012 |accessdate=24 May 2012 |url-status=dead |archiveurl=https://web.archive.org/web/20140221121000/http://www.b92.net/eng/news/politics-article.php?yyyy=2012&mm=05&dd=24&nav_id=80417 |archivedate=February 21, 2014 }}</ref> Vu\u010di\u0107 was the only candidate who ran for the party leadership, and was elected on 29 September 2012, with [[Jorgovanka Tabakovi\u0107]] as his deputy.<ref>{{Cite web|url=http://www.b92.net/eng/news/politics-article.php?yyyy=2012&mm=09&dd=29&nav_id=82410 |title=Progressives elect new leader, deputy leader |publisher=B92 |date=29 September 2012 |accessdate=29 September 2012 |url-status=dead |archiveurl=https://web.archive.org/web/20140204034947/http://www.b92.net/eng/news/politics-article.php?yyyy=2012&mm=09&dd=29&nav_id=82410 |archivedate=February 4, 2014 }}</ref>\n\nIn December 2012, the [[People's Party (Serbia, 2008)|People's Party]] led by ex-Mayor of Novi Sad [[Maja Gojkovi\u0107]], merged into the SNS.<ref>{{cite web|url=http://www.blic.rs/Vesti/Politika/356156/Maja-Gojkovic-Narodna-partija-kolektivno-presla-u-SNS|title=Maja Gojkovi\u0107: Narodna partija kolektivno pre\u0161la u SNS|publisher=Blic|language=Serbian|date=3 December 2012|accessdate=6 August 2013}}</ref>\n\nThe Serbian Progressive Party maintains cooperation with the [[Christian Democratic Union of Germany]], [[Fidesz]], [[Freedom Party of Austria]]<ref name=\"Schneider\">{{Cite web|url=http://library.fes.de/pdf-files/id/08290.pdf|title=Tomislav Nikolic positioniert sich in Europa - B\u00fcndnis mit \u00d6sterreichs Rechtspopulisten|publisher=Friedrich-Ebert-Stiftung|author=Marcus Schneider|language=German|date=July 2011}}</ref> and [[United Russia]] party.<ref>{{Cite web|url=http://www.sns.org.rs/en/novosti/vesti/agreement-cooperation-serbian-progressive-party-and-all-russian-political-party-united|title=Agreement for cooperation between SNS and United Russia|publisher=SNS website|date=September 2011}}</ref> On 24 April 2013 the SNS' representatives in the [[Parliamentary Assembly of the Council of Europe]] joined the Group of the [[European People's Party]].<ref>{{Cite web|url=http://www.b92.net/eng/news/comments.php?nav_id=85864 |title=SNS becomes member of European People's Party |publisher=B92 |date=24 April 2013 |accessdate=28 April 2013 |url-status=dead |archiveurl=https://web.archive.org/web/20131006184904/http://www.b92.net/eng/news/comments.php?nav_id=85864 |archivedate=October 6, 2013 }}</ref>\n\nSerbian Progressive Party on March 18. 2019 in Belgrade signed joint statement to improve Russia-Serbia strategic partnership in the interests of both nations and brotherhood countries with [[United Russia]] party.<ref>{{cite web|url=https://www.kurir.rs/vesti/politika/3222891/potpisana-zajednicka-izjava-produbiti-stratesko-partnerstvo-srpske-napredne-stranke-i-jedinstvene-rusije|title=POTPISANA ZAJEDNI\u010cKA IZJAVA: Produbiti strate\u0161ko partnerstvo Srpske napredne stranke i Jedinstvene Rusije|publisher=Kurir|language=Serbian|date=18 March 2019|accessdate=19 March 2019}}</ref>\n\n==Presidents of the Serbian Progressive Party (2008\u2013present)==\n{| class=\"wikitable\" style=\"text-align:center\"\n|-\n! {{Abbr|No.|Number}}\n! colspan=\"2\"| President\n! Birth\u2013Death\n! Term start\n! Term end\n|-\n! style=\"background:{{Serbian Progressive Party/meta/color}}; color:white;\" | 1\n| [[Tomislav Nikoli\u0107]] || [[File:Tomislav Nikoli\u0107 2012.jpg|80px]] || 1952\u2013 || 21 October 2008 || 24 May 2012\n|-\n! style=\"background:{{Serbian Progressive Party/meta/color}}; color:white;\" | 2\n| [[Aleksandar Vu\u010di\u0107]]<ref group=\"nb\" name=\"SNS acting leader\">Acting party leader until 29 September 2012</ref> || [[File:Aleksandar Vu\u010di\u0107 2019 (cropped).jpg|80px]] || 1970\u2013 || 24 May 2012 || Incumbent\n|}\n\n==Electoral performance==\n\n===Parliamentary elections===\n\n{| class=\"wikitable\" style=\"text-align:center\"\n|+ [[National Assembly of Serbia]]\n! Year\n!Leader\n! Popular vote\n! % of popular vote\n! # of seats\n! Seat change\n! Coalition\n! rowspan=1|Government\n|-\n! [[2008 Serbian parliamentary election|2008]]\n| rowspan=\"2\" align=\"center\" |[[Tomislav Nikoli\u0107]]\n|colspan=2 | ''Split from [[Serbian Radical Party]]''\n| {{Infobox political party/seats|21|250|hex={{Serbian Progressive Party/meta/color}}}}\n| {{increase}} 21\n| ''\u2014''\n| {{no|opposition}}\n|-\n! [[2012 Serbian parliamentary election|2012]]\n| 940,659\n| 24.05%\n| {{Composition bar|58|250|hex={{Serbian Progressive Party/meta/color}}}}\n| {{increase}} 37\n| [[Let's Get Serbia Moving|PS]]\n| {{yes|government}}\n|-\n! [[2014 Serbian parliamentary election|2014]]\n| rowspan=\"3\" align=\"center\" |[[Aleksandar Vu\u010di\u0107]]\n| 1,736,920\n| 48.35%\n| {{Composition bar|128|250|hex={{Serbian Progressive Party/meta/color}}}}\n| {{increase}} 70\n| [[2014 Serbian parliamentary election#SNS-led coalition|Big tent]]\n| {{yes|government}}\n|-\n! [[2016 Serbian parliamentary election|2016]]\n| 1,823,147\n| 48.25%\n| {{Composition bar|93|250|hex={{Serbian Progressive Party/meta/color}}}}\n| {{decrease}} 35\n| [[2016 Serbian parliamentary election#Electoral lists|Big tent]]\n| {{yes|government}}\n|-\n! [[2020 Serbian parliamentary election|2020]]\n| \n| \n| {{Composition bar|0|250|hex={{Serbian Progressive Party/meta/color}}}}\n| \n| [[Big tent]]\n| \n|}\n\n===Years in government (2012\u2013 )===\n\n<timeline>\nImageSize  = width:450 height:70\nPlotArea   = width:400  height:50 left:20 bottom:20\n\nDateFormat = dd/mm/yyyy\nPeriod     = from:01/01/2008 till:01/01/2021\nTimeAxis   = orientation:horizontal\nScaleMajor = unit:year increment:1 start:01/01/2008\nLegend    = columns:2 left:40 top:75 columnwidth:90\n\n# there is no automatic collision detection,\n# so shift texts up or down manually to avoid overlap\n\nColors=\n  id:Government  value:green  legend:Government\n  id:Opposition  value:red       legend:Opposition\n\nDefine $dx = 25 # shift text to right side of bar\nDefine $dy = -1 # adjust height\n\nPlotData=\n\n  bar:Govern. color:blue width:25 mark:(line,black) align:center\n\n  from:21/10/2008  till:27/07/2012 shift:($dx,$dy)    color:Opposition\n  from:27/07/2012  till:end        shift:($dx,$dy)    color:Government\n</timeline>\n\n<timeline>\nImageSize  = width:450 height:240\nPlotArea   = width:150 height:160 left:25 bottom:60\nAlignBars  = justify\n\nDateFormat = x.y\nPeriod     = from:0 till:100\nTimeAxis   = orientation:vertical\nAlignBars  = justify\nPeriod     = from:0 till:48.35\nScaleMajor = unit:year increment:10 start:0\n\nPlotData=\n  bar:% color:blue width:22   mark:(line,white) align:center fontsize:S\n  bar:2012 from:start till:24.05 text:24.05\n  bar:2014 from:start till:48.35 text:48.35\n  bar:2016 from:start till:48.25 text:48.25\n  </timeline>\n\n===Presidential elections===\n{| class=\"wikitable\" style=\"text-align:center\"\n|+ [[President of Serbia]]\n! Election year\n! Candidate\n! colspan=2 | 1st round votes\n! % \n!colspan=2 | 2nd round votes\n! %\n|-\n! [[2012 Serbian presidential election|2012]]\n| [[Tomislav Nikoli\u0107]]\n| {{no|2nd}}\n| 979,216\n| 25.05%\n| {{yes|1st}}\n| 1,552,063\n| 49.54%\n|-\n! [[2017 Serbian presidential election|2017]]\n| [[Aleksandar Vu\u010di\u0107]]\n| {{yes|1st}}\n| 2,012,788\n| 56.01%\n| {{n/a}}\n| ''\u2014''\n| ''\u2014'' \n|-\n|}\n\n==Positions held==\nMajor positions held by Serbian Progressive Party members:\n\n{| class=wikitable\n! [[President of Serbia]] !! Years\n|-\n|[[Tomislav Nikoli\u0107]]\n|2012\u20132017\n|-\n|[[Aleksandar Vu\u010di\u0107]]\n|2017\u2013\n|-\n! [[Prime Minister of Serbia]] !! Years\n|-\n|[[Aleksandar Vu\u010di\u0107]]\n|2014\u20132017\n|-\n|[[Ana Brnabi\u0107]]\n|2017\u2013\n|-\n! [[President of the National Assembly of Serbia]] !! Years\n|-\n|[[Neboj\u0161a Stefanovi\u0107]]\n|2012\u20132014\n|-\n|[[Maja Gojkovi\u0107]]\n|2014\u2013\n|-\n![[List of governors of national banks of Serbia and Yugoslavia|Governor of the National Bank of Serbia]] !! Years\n|-\n|[[Jorgovanka Tabakovi\u0107]]\n|2012\u2013\n|-\n! [[President of the Government of Vojvodina]] !! Years\n|-\n|[[Igor Mirovi\u0107]]\n|2016\u2013\n|-\n! [[Mayor of Belgrade]] !! Years\n|-\n|[[Sini\u0161a Mali]]\n|2014\u20132018\n|-\n|[[Zoran Radoji\u010di\u0107]]\n|2018\u2013\n|-\n|}\n\n==See also==\n{{portal|Serbia|Conservatism}}\n*[[Politics of Serbia]]\n*[[List of political parties in Serbia]]\n*[[List of Presidents of Serbia]]\n\n==Notes==\n{{Reflist|group=\"nb\"}}\n\n==References==\n{{Reflist|30em}}\n\n==External links==\n{{Commons category|Serbian Progressive Party}}\n*{{official|http://www.sns.org.rs/}}\n\n{{Serbian political parties}}\n{{European People's Party}}\n\n[[Category:Conservative parties in Serbia]]\n[[Category:Political parties established in 2008]]\n[[Category:2008 establishments in Serbia]]\n[[Category:National conservative parties]]\n[[Category:Populist parties]]\n[[Category:Pro-European political parties]]\n[[Category:Pro-European political parties in Serbia]]\n[[Category:Liberal conservative parties]]\n", "text_old": "{{short description|Political party}}\n{{About|the contemporary Serbian Progressive Party established in 2008|the historical Serbian Progressive Party that existed in the Kingdom of Serbia|Serbian Progressive Party (historical)}}\n{{Infobox political party\n| name = Serbian Progressive Party\n| logo = Serbian Progressive Party logo.svg\n| logo_size = 290px\n| colorcode = {{Serbian Progressive Party/meta/color}}\n| foundation = {{Start date and age|2008|10|21|df=y}}\n| ideology = {{nowrap|[[National conservatism]]<ref name=\"Nordsieck\">{{cite web|url=http://www.parties-and-elections.eu/serbia.html|title=Serbia|website=Parties and Elections in Europe|first=Wolfram|last=Nordsieck|year=2016|accessdate=27 August 2018}}</ref><br>[[Right-wing populism]]<ref>{{cite web|title=Serbia: Economic and Political Overview|work=Nordea Trade|accessdate=7 October 2019|url=https://www.nordeatrade.com/fi/explore-new-market/serbia/political-context}}</ref><ref>{{cite web|url=http://www.dailymail.co.uk/wires/ap/article-3606719/After-Austria-election-look-Europe-right-wing-parties.html|title=After Austria election, a look at Europe right wing parties|accessdate=24 May 2016}}</ref><ref>{{cite web|url=https://en.portal.santandertrade.com/analyse-markets/serbia/political-outline?actualiser_id_banque=oui&id_banque=7|title=Serbian political outline|accessdate=28 April 2017}}</ref><br>[[Economic liberalism]]<ref>{{cite book|title=Party Responses to the EU in the Western Balkans|first=Marko|last=Stojic|page=138|publisher=Springer|year=2017}}</ref><br>[[Pro-Europeanism]]<ref>http://www.balkaninsight.com/en/article/who-is-who-political-parties-in-serbia</ref><br>[[Big tent]]<ref>{{cite web|url=http://orca.cf.ac.uk/115510/1/Serbian%20Compliance%20Patterns%20towards%20EU%20Integration.pdf|title=Serbian Compliance Patterns towards EU Integration under the Progressive Party: An Exercise in Statecraft|accessdate=13 December 2018}}</ref>}}\n\n| headquarters = Palmira Toljatija 5, [[Belgrade]]\n| international = [[International Democrat Union]]\n| website = {{URL|http://www.sns.org.rs/}}\n| country = Serbia\n| native_name = \u0421\u0440\u043f\u0441\u043a\u0430 \u043d\u0430\u043f\u0440\u0435\u0434\u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u043a\u0430<br>Srpska napredna stranka\n| abbreviation = \n| leader1_title = President\n| leader1_name = [[Aleksandar Vu\u010di\u0107]]\n| leader2_title = Vice President\n| leader2_name = [[Jorgovanka Tabakovi\u0107]]\n| leader3_title = Parliamentary leader\n| leader3_name = [[Aleksandar Martinovi\u0107]]\n| leader4_title = Founders\n| leader4_name = [[Tomislav Nikoli\u0107]] and [[Aleksandar Vu\u010di\u0107]]\n| split = [[Serbian Radical Party]]\n| position = {{nowrap|[[Centre-right politics|Centre-right]]<ref name=\"BBC\">{{Cite web |first=|last=|title=Serbia election: Pro-EU Prime Minister Vucic claims victory |work=BBC |accessdate=25 September 2016|url=https://www.bbc.co.uk/news/world-europe-36122928}}</ref> to [[Right-wing politics|right-wing]]<ref name=\"SM\">{{Cite web |first=|last=|title=Deutsche Welle: Expansion of right wing in Europe and its effects on Serbia |work= Serbian monitor |accessdate=26 May 2019|url=https://www.serbianmonitor.com/en/deutsche-welle-expansion-of-right-wing-in-europe-and-its-effects-on-serbia/}}</ref>}}\n| european = [[European People's Party]]\n| colours = {{colorbox|{{Serbian Progressive Party/meta/color}}}} [[Blue (colour)|Blue]]\n| seats1_title = [[National Assembly of Serbia|National Assembly]]\n| seats1 = {{Composition bar|98|250|{{Serbian Progressive Party/meta/color}}}}\n| seats2_title = [[Assembly of Vojvodina]]\n| seats2 = {{Composition bar|46|120|{{Serbian Progressive Party/meta/color}}}}\n| seats3_title = [[City Assembly of Belgrade]]\n| seats3 = {{Composition bar|57|110|{{Serbian Progressive Party/meta/color}}}}\n| flag = [[File:Flag of the Serbian Progressive Party.svg|200px|border|Flag of the Serbian Progressive Party]]\n| footnotes = \n}}\n\nThe '''Serbian Progressive Party''' ({{lang-sr|\u0421\u0440\u043f\u0441\u043a\u0430 \u043d\u0430\u043f\u0440\u0435\u0434\u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u043a\u0430|Srpska napredna stranka}}; '''\u0421\u041d\u0421''' or '''SNS''') is a [[Right-wing populism|right-wing populist]]<ref>{{Cite journal|last=Zulianello|first=Mattia|date=2019|title=Varieties of Populist Parties and Party Systems in Europe: From State-of-the-Art to the Application of a Novel Classification Scheme to 66 Parties in 33 Countries|url=https://www.cambridge.org/core/journals/government-and-opposition/article/varieties-of-populist-parties-and-party-systems-in-europe-from-stateoftheart-to-the-application-of-a-novel-classification-scheme-to-66-parties-in-33-countries/7CB95AE2CA7274D5F4716EC11708ACD8|journal=Government and Opposition|volume=|pages=5|via=}}</ref><ref>[http://www.cepolicy.org/news/post-election-serbia-good-news-eu Post election Serbia: good news for the EU? | cepolicy.org<!-- Botovski generisani naziv -->]</ref><ref name=\"BBC\"/> [[List of political parties in Serbia|political party]] in [[Serbia]].\n\nFounded in 2008 as a split from the [[Serbian Radical Party]] (SRS), the culmination of a decade-long conflict within the SRS between the party's moderate and hard-line wings, the SNS managed to retain the former's [[national conservatism|national conservative]] outlook, while adopting distinct [[Pro-Europeanism|pro-European]] policies.\n\nThis combination has transformed the SNS into the current [[ruling party]] in Serbia, being the senior party in the current government coalition, the party's leader [[Aleksandar Vu\u010di\u0107]] in turn serving as the [[President of Serbia]]. As of August 2018, the party holds 96 seats in the National Assembly.<ref>{{cite web|url=http://www.parlament.gov.rs/national-assembly/composition/political-parties/political-parties.500.html|title=National Assembly of the Republic of Serbia - Political Parties|website=www.parlament.gov.rs}}</ref>\n\nOn April 2nd, [[Twitter]] announced that they removed 8,558 accounts that promoted the ruling [[Serbian Progressive Party]] and [[Aleksandar Vu\u010di\u0107|its leader]] but also that they criticized the opposition.<ref name=\"twitter1\">{{cite web|url=https://twitter.com/TwitterSafety/status/1245682441865646080|title=Toward the end of last year, we identified clusters of accounts engaged in inauthentic coordinated activity which led to the removal of 8,558 accounts working to promote Serbia\u2019s ruling party and its leader.|author=[[Twitter|Twitter Safety]]|date=2018-04-02}}</ref><ref name=\"guardian1\">{{cite web|url=https://www.theguardian.com/technology/2020/apr/02/twitter-accounts-deleted-linked-saudi-arabia-serbia-egypt-governments?CMP=share_btn_tw|title=Twitter deletes 20,000 fake accounts linked to Saudi, Serbian and Egyptian governments|author=[[The Guardian]]|date=2018-04-02}}</ref>\n==History==\n[[File:Nikoli\u0107 & Vu\u010di\u0107.jpg|thumb|left|200px|Tomislav Nikoli\u0107 and Aleksandar Vu\u010di\u0107 at the SNS founding convention on 21 October 2008.]]\nThe Serbian Progressive Party was formed by a group of 21 former [[Serbian Radical Party]] (SRS) [[Member of Parliament|MPs]] led by [[Tomislav Nikoli\u0107]]. Disenchanted with the direction of the party, the [[Pro-Europeanism|pro-EU]] members<ref name=\"b92\">{{cite web|url=http://www.b92.net/eng/news/politics.php?yyyy=2012&mm=04&dd=18&nav_id=79833|title=Poll: Progressive Party is pro-EU, but its voters are not|publisher=B92|date=18 April 2012|accessdate=13 August 2013}}</ref> left and formed the ''Forward Serbia'' parliamentary group. The SNS was founded and held its first congress meeting on 21 October 2008.<ref name=\"foundation\">{{cite web|url=http://www.b92.net/eng/news/politics-article.php?yyyy=2008&mm=09&dd=24&nav_id=53724 |title=Nikoli\u0107 party to be called \"Serb Progressive\" |publisher=B92 |date=September 24, 2008 |url-status=dead |archiveurl=https://web.archive.org/web/20080928191726/http://www.b92.net/eng/news/politics-article.php?yyyy=2008&mm=09&dd=24&nav_id=53724 |archivedate=September 28, 2008 }}</ref>\n\nOf the Serbian Radical Party's representatives elected in the [[2008 Serbian parliamentary election|2008 parliamentary election]], 21 moved to the Serbian Progressive Party, while 57 remained in the SRS.\n\nIn 2011, the SNS formed a pre-election coalition with [[New Serbia]], the [[Strength of Serbia Movement]] and the [[Movement of Socialists]] to participate in the 2012 election.<ref>http://pressonline.rs/sr/vesti/vesti_dana/story/199240/Predsedni%C5%A1tvo+NS%3A+Nikoli%C4%87+nosilac+liste+SNS-NS-PSS-PS.html</ref>\n\nIn the [[2012 Serbian parliamentary election|2012 parliamentary election]], the party led the \"[[Let's Get Serbia Moving]]\" coalition and gained 55 seats out of 73 won by the coalition in the National Assembly. Party leader Tomislav Nikoli\u0107 defeated [[Boris Tadi\u0107]] of the [[Democratic Party (Serbia)|Democratic Party]] in the second round of the [[2012 Serbian presidential election|2012 presidential election]].<ref>{{cite web|url=http://www.b92.net/eng/news/politics-article.php?yyyy=2012&mm=05&dd=20&nav_id=80345 |title=Tomislav Nikoli\u0107 wins in presidential runoff |publisher=B92 |date=20 May 2012 |accessdate=23 May 2012 |url-status=dead |archiveurl=https://web.archive.org/web/20120523070408/http://www.b92.net/eng/news/politics-article.php?yyyy=2012&mm=05&dd=20&nav_id=80345 |archivedate=May 23, 2012 }}</ref>\n\nFollowing his election as [[President of Serbia]], Nikoli\u0107 stepped down as leader of the party on 24 May 2012, leaving deputy president [[Aleksandar Vu\u010di\u0107]] in charge until a successor was elected.<ref>{{Cite web|url=http://www.b92.net/eng/news/politics-article.php?yyyy=2012&mm=05&dd=24&nav_id=80417 |title=Serbia's new president quits as party leader |publisher=B92 |date=24 May 2012 |accessdate=24 May 2012 |url-status=dead |archiveurl=https://web.archive.org/web/20140221121000/http://www.b92.net/eng/news/politics-article.php?yyyy=2012&mm=05&dd=24&nav_id=80417 |archivedate=February 21, 2014 }}</ref> Vu\u010di\u0107 was the only candidate who ran for the party leadership, and was elected on 29 September 2012, with [[Jorgovanka Tabakovi\u0107]] as his deputy.<ref>{{Cite web|url=http://www.b92.net/eng/news/politics-article.php?yyyy=2012&mm=09&dd=29&nav_id=82410 |title=Progressives elect new leader, deputy leader |publisher=B92 |date=29 September 2012 |accessdate=29 September 2012 |url-status=dead |archiveurl=https://web.archive.org/web/20140204034947/http://www.b92.net/eng/news/politics-article.php?yyyy=2012&mm=09&dd=29&nav_id=82410 |archivedate=February 4, 2014 }}</ref>\n\nIn December 2012, the [[People's Party (Serbia, 2008)|People's Party]] led by ex-Mayor of Novi Sad [[Maja Gojkovi\u0107]], merged into the SNS.<ref>{{cite web|url=http://www.blic.rs/Vesti/Politika/356156/Maja-Gojkovic-Narodna-partija-kolektivno-presla-u-SNS|title=Maja Gojkovi\u0107: Narodna partija kolektivno pre\u0161la u SNS|publisher=Blic|language=Serbian|date=3 December 2012|accessdate=6 August 2013}}</ref>\n\nThe Serbian Progressive Party maintains cooperation with the [[Christian Democratic Union of Germany]], [[Fidesz]], [[Freedom Party of Austria]]<ref name=\"Schneider\">{{Cite web|url=http://library.fes.de/pdf-files/id/08290.pdf|title=Tomislav Nikolic positioniert sich in Europa - B\u00fcndnis mit \u00d6sterreichs Rechtspopulisten|publisher=Friedrich-Ebert-Stiftung|author=Marcus Schneider|language=German|date=July 2011}}</ref> and [[United Russia]] party.<ref>{{Cite web|url=http://www.sns.org.rs/en/novosti/vesti/agreement-cooperation-serbian-progressive-party-and-all-russian-political-party-united|title=Agreement for cooperation between SNS and United Russia|publisher=SNS website|date=September 2011}}</ref> On 24 April 2013 the SNS' representatives in the [[Parliamentary Assembly of the Council of Europe]] joined the Group of the [[European People's Party]].<ref>{{Cite web|url=http://www.b92.net/eng/news/comments.php?nav_id=85864 |title=SNS becomes member of European People's Party |publisher=B92 |date=24 April 2013 |accessdate=28 April 2013 |url-status=dead |archiveurl=https://web.archive.org/web/20131006184904/http://www.b92.net/eng/news/comments.php?nav_id=85864 |archivedate=October 6, 2013 }}</ref>\n\nSerbian Progressive Party on March 18. 2019 in Belgrade signed joint statement to improve Russia-Serbia strategic partnership in the interests of both nations and brotherhood countries with [[United Russia]] party.<ref>{{cite web|url=https://www.kurir.rs/vesti/politika/3222891/potpisana-zajednicka-izjava-produbiti-stratesko-partnerstvo-srpske-napredne-stranke-i-jedinstvene-rusije|title=POTPISANA ZAJEDNI\u010cKA IZJAVA: Produbiti strate\u0161ko partnerstvo Srpske napredne stranke i Jedinstvene Rusije|publisher=Kurir|language=Serbian|date=18 March 2019|accessdate=19 March 2019}}</ref>\n\n==Presidents of the Serbian Progressive Party (2008\u2013present)==\n{| class=\"wikitable\" style=\"text-align:center\"\n|-\n! {{Abbr|No.|Number}}\n! colspan=\"2\"| President\n! Birth\u2013Death\n! Term start\n! Term end\n|-\n! style=\"background:{{Serbian Progressive Party/meta/color}}; color:white;\" | 1\n| [[Tomislav Nikoli\u0107]] || [[File:Tomislav Nikoli\u0107 2012.jpg|80px]] || 1952\u2013 || 21 October 2008 || 24 May 2012\n|-\n! style=\"background:{{Serbian Progressive Party/meta/color}}; color:white;\" | 2\n| [[Aleksandar Vu\u010di\u0107]]<ref group=\"nb\" name=\"SNS acting leader\">Acting party leader until 29 September 2012</ref> || [[File:Aleksandar Vu\u010di\u0107 2019 (cropped).jpg|80px]] || 1970\u2013 || 24 May 2012 || Incumbent\n|}\n\n==Electoral performance==\n\n===Parliamentary elections===\n\n{| class=\"wikitable\" style=\"text-align:center\"\n|+ [[National Assembly of Serbia]]\n! Year\n!Leader\n! Popular vote\n! % of popular vote\n! # of seats\n! Seat change\n! Coalition\n! rowspan=1|Government\n|-\n! [[2008 Serbian parliamentary election|2008]]\n| rowspan=\"2\" align=\"center\" |[[Tomislav Nikoli\u0107]]\n|colspan=2 | ''Split from [[Serbian Radical Party]]''\n| {{Infobox political party/seats|21|250|hex={{Serbian Progressive Party/meta/color}}}}\n| {{increase}} 21\n| ''\u2014''\n| {{no|opposition}}\n|-\n! [[2012 Serbian parliamentary election|2012]]\n| 940,659\n| 24.05%\n| {{Composition bar|58|250|hex={{Serbian Progressive Party/meta/color}}}}\n| {{increase}} 37\n| [[Let's Get Serbia Moving|PS]]\n| {{yes|government}}\n|-\n! [[2014 Serbian parliamentary election|2014]]\n| rowspan=\"3\" align=\"center\" |[[Aleksandar Vu\u010di\u0107]]\n| 1,736,920\n| 48.35%\n| {{Composition bar|128|250|hex={{Serbian Progressive Party/meta/color}}}}\n| {{increase}} 70\n| [[2014 Serbian parliamentary election#SNS-led coalition|Big tent]]\n| {{yes|government}}\n|-\n! [[2016 Serbian parliamentary election|2016]]\n| 1,823,147\n| 48.25%\n| {{Composition bar|93|250|hex={{Serbian Progressive Party/meta/color}}}}\n| {{decrease}} 35\n| [[2016 Serbian parliamentary election#Electoral lists|Big tent]]\n| {{yes|government}}\n|-\n! [[2020 Serbian parliamentary election|2020]]\n| \n| \n| {{Composition bar|0|250|hex={{Serbian Progressive Party/meta/color}}}}\n| \n| [[Big tent]]\n| \n|}\n\n===Years in government (2012\u2013 )===\n\n<timeline>\nImageSize  = width:450 height:70\nPlotArea   = width:400  height:50 left:20 bottom:20\n\nDateFormat = dd/mm/yyyy\nPeriod     = from:01/01/2008 till:01/01/2021\nTimeAxis   = orientation:horizontal\nScaleMajor = unit:year increment:1 start:01/01/2008\nLegend    = columns:2 left:40 top:75 columnwidth:90\n\n# there is no automatic collision detection,\n# so shift texts up or down manually to avoid overlap\n\nColors=\n  id:Government  value:green  legend:Government\n  id:Opposition  value:red       legend:Opposition\n\nDefine $dx = 25 # shift text to right side of bar\nDefine $dy = -1 # adjust height\n\nPlotData=\n\n  bar:Govern. color:blue width:25 mark:(line,black) align:center\n\n  from:21/10/2008  till:27/07/2012 shift:($dx,$dy)    color:Opposition\n  from:27/07/2012  till:end        shift:($dx,$dy)    color:Government\n</timeline>\n\n<timeline>\nImageSize  = width:450 height:240\nPlotArea   = width:150 height:160 left:25 bottom:60\nAlignBars  = justify\n\nDateFormat = x.y\nPeriod     = from:0 till:100\nTimeAxis   = orientation:vertical\nAlignBars  = justify\nPeriod     = from:0 till:48.35\nScaleMajor = unit:year increment:10 start:0\n\nPlotData=\n  bar:% color:blue width:22   mark:(line,white) align:center fontsize:S\n  bar:2012 from:start till:24.05 text:24.05\n  bar:2014 from:start till:48.35 text:48.35\n  bar:2016 from:start till:48.25 text:48.25\n  </timeline>\n\n===Presidential elections===\n{| class=\"wikitable\" style=\"text-align:center\"\n|+ [[President of Serbia]]\n! Election year\n! Candidate\n! colspan=2 | 1st round votes\n! % \n!colspan=2 | 2nd round votes\n! %\n|-\n! [[2012 Serbian presidential election|2012]]\n| [[Tomislav Nikoli\u0107]]\n| {{no|2nd}}\n| 979,216\n| 25.05%\n| {{yes|1st}}\n| 1,552,063\n| 49.54%\n|-\n! [[2017 Serbian presidential election|2017]]\n| [[Aleksandar Vu\u010di\u0107]]\n| {{yes|1st}}\n| 2,012,788\n| 56.01%\n| {{n/a}}\n| ''\u2014''\n| ''\u2014'' \n|-\n|}\n\n==Positions held==\nMajor positions held by Serbian Progressive Party members:\n\n{| class=wikitable\n! [[President of Serbia]] !! Years\n|-\n|[[Tomislav Nikoli\u0107]]\n|2012\u20132017\n|-\n|[[Aleksandar Vu\u010di\u0107]]\n|2017\u2013\n|-\n! [[Prime Minister of Serbia]] !! Years\n|-\n|[[Aleksandar Vu\u010di\u0107]]\n|2014\u20132017\n|-\n|[[Ana Brnabi\u0107]]\n|2017\u2013\n|-\n! [[President of the National Assembly of Serbia]] !! Years\n|-\n|[[Neboj\u0161a Stefanovi\u0107]]\n|2012\u20132014\n|-\n|[[Maja Gojkovi\u0107]]\n|2014\u2013\n|-\n![[List of governors of national banks of Serbia and Yugoslavia|Governor of the National Bank of Serbia]] !! Years\n|-\n|[[Jorgovanka Tabakovi\u0107]]\n|2012\u2013\n|-\n! [[President of the Government of Vojvodina]] !! Years\n|-\n|[[Igor Mirovi\u0107]]\n|2016\u2013\n|-\n! [[Mayor of Belgrade]] !! Years\n|-\n|[[Sini\u0161a Mali]]\n|2014\u20132018\n|-\n|[[Zoran Radoji\u010di\u0107]]\n|2018\u2013\n|-\n|}\n\n==See also==\n{{portal|Serbia|Conservatism}}\n*[[Politics of Serbia]]\n*[[List of political parties in Serbia]]\n*[[List of Presidents of Serbia]]\n\n==Notes==\n{{Reflist|group=\"nb\"}}\n\n==References==\n{{Reflist|30em}}\n\n==External links==\n{{Commons category|Serbian Progressive Party}}\n*{{official|http://www.sns.org.rs/}}\n\n{{Serbian political parties}}\n{{European People's Party}}\n\n[[Category:Conservative parties in Serbia]]\n[[Category:Political parties established in 2008]]\n[[Category:2008 establishments in Serbia]]\n[[Category:National conservative parties]]\n[[Category:Populist parties]]\n[[Category:Pro-European political parties]]\n[[Category:Pro-European political parties in Serbia]]\n[[Category:Liberal conservative parties]]\n", "name_user": "Davide King", "label": "safe", "comment": "ce", "url_page": "//en.wikipedia.org/wiki/Serbian_Progressive_Party"}
{"title_page": "Cochin Shadhi at Chennai 03", "text_new": "\n\n{{short description|2020 Tamili and Malayalam movie}}\n{{grammar|date=April 2020}}\n{{Infobox film\n| name           = Cochin Shadhi at Chennai 03\n| image          = \n| alt            = \n| caption        = Theatrical release poster in Tamil\n| director       = Manjith Divakar\n| producer       = Arya Adhi International\n| writer         = Rijesh Bhaskar\n| starring       = [[R. K. Suresh]]<br> [[Vinoth Kishan]]<br> [[Neha Saxena (film actress)|Neha Saxena]]\n| music          = Sunny Viswanath\n| cinematography = Ayyappan N.\n| editing        = Bijilesh KB\n| distributor    = Bid Cinema\n| released       = {{film date|2020|01|24}}\n| runtime        = 127 minutes\n| country        = India\n| language       = Malayalam<br />Tamil\n| budget         = \n}}\n\n'''''Cochin Shadhi at Chennai 03''''' is a 2020 Indian [[Malayalam]]-language film directed by Manjith Divakar. The film stars [[R. K. Suresh]], Akshatha Sreedhar Shastry, [[Neha Saxena (film actress)|Neha Saxena]] and [[Vinoth Kishan]] as leading cast members.\n\nThe film is about the journey of Shadhika to Chennai where she encounters danger along the way. The film was simultaneously made in [[Tamil language|Tamil]] as '''''Vanmurai'''''.<ref>{{Cite web|url=https://timesofindia.indiatimes.com/entertainment/malayalam/movie-reviews/cochin-shadhi-at-chennai-03/movie-review/73604489.cms|title=Cochin Shadhi At Chennai 03 Movie Review {1.5/5}: Critic Review of Cochin Shadhi At Chennai 03 by Times of India|via=timesofindia.indiatimes.com}}</ref><ref>{{Cite web|url=https://www.deccanchronicle.com/entertainment/kollywood/010120/vanmurai-imparts-a-huge-message.html|title=Vanmurai imparts a huge message|first=Anupama|last=Subramanian|date=January 1, 2020|website=Deccan Chronicle}}</ref>\n\n== Cast ==\n* [[R. K. Suresh]] as ACP Sameer Yousaf\n* [[Vinoth Kishan]]\n* [[Neha Saxena (film actress)|Neha Saxena]] as Zareena Thomas\n* [[Charmila]] as Lakshmi\n* Vigil Varghese\n* [[Sonia Agarwal]]\n\n== Production ==\nThe film is based on a real-life incident that happened in [[Coimbatore]]: a teenage girl boards the wrong bus, initiating a series of interesting events. The film was originally planned to be made only in Malayalam, but was eventually also made in Tamil.<ref>{{Cite web|url=https://www.newindianexpress.com/entertainment/tamil/2020/jan/30/a-violent-turn-of-events-2096362.html|title=A violent turn of events|website=The New Indian Express}}</ref>\n\n== References ==\n{{reflist}}\n\n== External links ==\n*{{IMDb title|11675352}}\n*{{IMDb title|11497366|Vanmurai}}\n[[Category:Indian films]]\n[[Category:Indian thriller films]]\n[[Category:Indian multilingual films]]\n[[Category:2020s Tamil-language films]]\n[[Category:2020s Malayalam-language films]]\n[[Category:2020s thriller films]]\n", "text_old": "\n\n{{short description|2020 Tamili and Malayalam movie}}\n{{grammar|date=April 2020}}\n{{Infobox film\n| name           = Cochin Shadhi at Chennai 03\n| image          = \n| alt            = \n| caption        = Theatrical release poster in Tamil\n| director       = Manjith Divakar\n| producer       = Arya Adhi International\n| writer         = Rijesh Bhaskar\n| starring       = [[R. K. Suresh]]<br> [[Vinoth Kishan]]<br> [[Neha Saxena (film actress)|Neha Saxena]]\n| music          = Sunny Viswanath\n| cinematography = Ayyappan N.\n| editing        = Bijilesh KB\n| distributor    = Bid Cinema\n| released       = {{film date|2020|01|24}}\n| runtime        = 127 minutes\n| country        = India\n| language       = Malayalam<br />Tamil\n| budget         = \n}}\n\n'''''Cochin Shadhi at Chennai 03''''' is a 2020 Indian [[Malayalam]]-language film directed by Manjith Divakar. The film stars [[R. K. Suresh]], Akshatha Sreedhar Shastry, [[Neha Saxena (film actress)|Neha Saxena]] and [[Vinoth Kishan]] as leading cast members.\n\nThe film was simultaneously made in [[Tamil language|Tamil]] as '''''Vanmurai'''''.<ref>{{Cite web|url=https://timesofindia.indiatimes.com/entertainment/malayalam/movie-reviews/cochin-shadhi-at-chennai-03/movie-review/73604489.cms|title=Cochin Shadhi At Chennai 03 Movie Review {1.5/5}: Critic Review of Cochin Shadhi At Chennai 03 by Times of India|via=timesofindia.indiatimes.com}}</ref><ref>{{Cite web|url=https://www.deccanchronicle.com/entertainment/kollywood/010120/vanmurai-imparts-a-huge-message.html|title=Vanmurai imparts a huge message|first=Anupama|last=Subramanian|date=January 1, 2020|website=Deccan Chronicle}}</ref>\n\n== Cast ==\n* [[R. K. Suresh]] as ACP Sameer Yousaf\n* [[Vinoth Kishan]]\n* [[Neha Saxena (film actress)|Neha Saxena]] as Zareena Thomas\n* [[Charmila]] as Lakshmi\n* Vigil Varghese\n* [[Sonia Agarwal]]\n\n== Production ==\nThe film is based on a real-life incident that happened in [[Coimbatore]]: a teenage girl boards the wrong bus, initiating a series of interesting events. The film was originally planned to be made only in Malayalam, but was eventually also made in Tamil.<ref>{{Cite web|url=https://www.newindianexpress.com/entertainment/tamil/2020/jan/30/a-violent-turn-of-events-2096362.html|title=A violent turn of events|website=The New Indian Express}}</ref>\n\n== References ==\n{{reflist}}\n\n== External links ==\n*{{IMDb title|11675352}}\n*{{IMDb title|11497366|Vanmurai}}\n[[Category:Indian films]]\n[[Category:Indian thriller films]]\n[[Category:Indian multilingual films]]\n[[Category:2020s Tamil-language films]]\n[[Category:2020s Malayalam-language films]]\n[[Category:2020s thriller films]]\n", "name_user": "Samanthaavery", "label": "safe", "comment": "added descriptor of movie", "url_page": "//en.wikipedia.org/wiki/Cochin_Shadhi_at_Chennai_03"}
