{"title_page": "R127/R134 (New York City Subway car)", "text_new": "{{Use mdy dates|date=January 2017}}\n{{refimprove|date=February 2015}}\n{{Infobox train\n| background       = \n| name             = R127/R134\n| image            = R134 at Corona Yard.JPG\n| imagesize        = 250px\n| caption          = R134 EP011 at Corona Yard paired up with an R62A\n| interiorimage    = R127 Garbage Train in work service at Kew Gardens Union Turnpike on November 12 2014.JPG\n| interiorimagealt = \n| interiorcaption  = R127 EP006 at Kew Gardens\u2013Union Turnpike\n| service          = R127 (1991-present)<br>R134 (1994-present)\n| manufacturer =  [[Kawasaki Heavy Industries]]\n| factory = [[Kobe, Japan]]\n| family           = \n| replaced         = \n| yearconstruction = R127: 1991-1992<br>R134: 1994-1996\n| yearservice      = \n| refurbishment    = \n| yearscrapped     = \n| numberconstruction= \n| numberbuilt      = R127: 10<br>R134: 8\n| numberservice    = 18 (work service only)\n| numberpreserved  = \n| numberscrapped   = \n| formation        = \n| fleetnumbers     = R127: EP001-EP010<br>R134: EP011-EP018\n| capacity         = \n| operator         = [[New York City Subway]]\n| depots           = EP001-EP005: ([[239th Street Yard]])<br>EP006-EP010: ([[36th-38th Street Yard]])<br>EP011-EP013: ([[Corona Yard]])<br>EP014-EP018: ([[36th-38th Street Yard]])\n| lines =\n| carbody          = Stainless steel with fiberglass end bonnets\n| trainlength      = 1 car train: {{convert|51.04|ft|m}}\n| carlength        = {{convert|51.04|ft|m}}\n| width            = {{convert|8.60|ft|mm|0}}\n| height           = {{convert|11.89|ft|mm|0}}\n| floorheight      = \n| platformheight   = {{convert|3.65|ft|2|abbr=on}}\n| entrylevelorstep = \n| art-sections     = \n| doors            = 2 sets of 50 inch wide side doors per car \n| maxspeed         = {{convert|55|mi/h|km/h|abbr=on}}\n| weight           = {{convert|75550|lb|abbr=on}} \n| acceleration     = {{convert|2.5|mph/s|km/h/s|abbr=on}}\n| deceleration     = \n| traction         = General Electric SCM 17KG1924A1 propulsion with 4 GE 1257E1 motors per car \n| engine           = \n| poweroutput      = {{convert|115|hp|kW|1|abbr=on}} per axle\n| transmission     = \n| aux              = [[Saft Groupe S.A.|SAFT]] NIFE PR80F Battery <br> SAFT SMT8 Battery\n| powersupply      = \n| hvac             = \n| electricsystem = 625 [[Volt|V]] [[Direct current|DC]] [[Third rail]] \n| collectionmethod = [[Contact shoe]]\n| uicclass         = \n| aarwheels        =\n| bogies           = \n| brakes           = NYAB GSX23 Newtran \u201cCOBRA SMEE\u201d Braking System <br> NYAB Tread Brake Unit\n| safety           = \n| coupling         = [[Westinghouse H2C]]\n| multipleworking  = \n| gauge            = {{track gauge|ussg|al=on}}\n}}\nThe '''R127s''' and '''R134s'''  are [[New York City Subway]] cars purpose-built by [[Kawasaki Heavy Industries Rolling Stock Company|Kawasaki Heavy Industries]]<ref>[http://www.japantransport.com/seminar/KAWASAKI.pdf High Speed Rail Seminar in Washington D.C. Kawasaki\u2019s High Speed Train Technology and Contributions to the US Society]</ref> in [[Kobe, Japan]], for work train service. The ten R127s were built in 1990-1991 while the eight R134s were built in 1994\u20131996.<ref>{{cite web|url=https://docs.google.com/spreadsheet/pub?key=0AqJF78D8SRY4dFZMRDNFQmJiYzVYbVl2NmVWa0VlTUE&single=true&gid=23&output=html|title=Work Car Roster|work=Google Docs}}</ref>\n\nThe cars are built to the specifications of the subway's [[A Division (New York City Subway)|A Division]] (numbered routes), which are slightly narrower than those of the [[B Division (New York City Subway)|B Division]] (lettered routes), and are similar to the [[R62 (New York City Subway car)|R62]] and [[R62A (New York City Subway car)|R62A]] passenger cars used on the A Division. However, they can be found on either division and are used as garbage train motors. They are not air conditioned and instead have axiflow fans, so in the summertime these cars are frequently replaced by air-conditioned passenger cars used on garbage trains.<ref>{{Cite web|url=http://www.nycsubway.org/wiki/R-127_--_R-134_Rubbish_Motors|title=www.nycsubway.org: R-127 -- R-134 Rubbish Motors|website=www.nycsubway.org|access-date=January 3, 2017}}</ref> Sometimes, these cars operate with other cars assigned to work service. The two types are essentially identical to each other, with only a few cosmetic differences.\n\nThe ten R127s are numbered EP001 to EP010, while the eight R134s are numbered EP011 to EP018.\n\n==References==\n{{reflist}}\n{{refbegin}}\n* {{cite book| title=Evolution of New York City subways: An illustrated history of New York City's transit cars, 1867-1997| last=Sansone| first=Gene| publisher=New York Transit Museum Press| year=1997| isbn=978-0-9637492-8-4| location=New York}}\n{{refend}}\n\n==External links==\n*[http://www.thejoekorner.com/cars/rroster.htm TheJoeKorner roster]\n*[http://www.nycsubway.org/wiki/R-127_--_R-134_Rubbish_Motors NYCSubway.org]\n\n{{NYCS rolling stock}}\n\n{{DEFAULTSORT:R127 R134 (New York City Subway car)}}\n[[Category:Train-related introductions in 1991]]\n[[Category:Train-related introductions in 1996]]\n[[Category:New York City Subway rolling stock]]\n[[Category:Kawasaki multiple units]]\n", "text_old": "{{Use mdy dates|date=January 2017}}\n{{refimprove|date=February 2015}}\n{{Infobox train\n| background       = \n| name             = R127/R134\n| image            = R134 at Corona Yard.JPG\n| imagesize        = 250px\n| caption          = R134 EP011 at Corona Yard paired up with an R62A\n| interiorimage    = R127 Garbage Train in work service at Kew Gardens Union Turnpike on November 12 2014.JPG\n| interiorimagealt = \n| interiorcaption  = R127 EP006 at Kew Gardens\u2013Union Turnpike\n| service          = R127 (1991-present)<br>R134 (1994-present)\n| manufacturer =  [[Kawasaki Heavy Industries]]\n| factory = [[Kobe, Japan]]\n| family           = \n| replaced         = \n| yearconstruction = R127: 1991-1992<br>R134: 1994-1996\n| yearservice      = \n| refurbishment    = \n| yearscrapped     = \n| numberconstruction= \n| numberbuilt      = R127: 10<br>R134: 8\n| numberservice    = 18 (work service only)\n| numberpreserved  = \n| numberscrapped   = \n| formation        = \n| fleetnumbers     = R127: EP001-EP010<br>R134: EP011-EP018\n| capacity         = \n| operator         = [[New York City Subway]]\n| depots           = EP001-EP005: ([[239th Street Yard]])<br>EP006-EP010: ([[36th-38th Street Yard]])<br>EP011-EP013: ([[Corona Yard]])<br>EP014-EP018: ([[36th-38th Street Yard]])\n| lines =\n| carbody          = Stainless steel with fiberglass end bonnets\n| trainlength      = 1 car train: {{convert|51.04|ft|m}}\n| carlength        = {{convert|51.04|ft|m}}\n| width            = {{convert|8.60|ft|mm|0}}\n| height           = {{convert|11.89|ft|mm|0}}\n| floorheight      = \n| platformheight   = {{convert|3.65|ft|2|abbr=on}}\n| entrylevelorstep = \n| art-sections     = \n| doors            = 2 sets of 50 inch wide side doors per car \n| maxspeed         = {{convert|55|mi/h|km/h|abbr=on}}\n| weight           = {{convert|75550|lb|abbr=on}} \n| acceleration     = {{convert|2.5|mph/s|km/h/s|abbr=on}}\n| deceleration     = \n| traction         = General Electric SCM 17KG1924A1 propulsion with 4 GE 1257E1 motors per car \n| engine           = \n| poweroutput      = {{convert|115|hp|kW|1|abbr=on}} per axle\n| transmission     = \n| aux              = [[Saft Groupe S.A.|SAFT]] NIFE PR80F Battery <br> SAFT SMT8 Battery\n| powersupply      = \n| hvac             = \n| electricsystem = 625 [[Volt|V]] [[Direct current|DC]] [[Third rail]] \n| collectionmethod = [[Contact shoe]]\n| uicclass         = \n| aarwheels        =\n| bogies           = \n| brakes           = NYAB GSX23 Newtran \u201cCOBRA SMEE\u201d Braking System <br> NYAB Tread Brake Unit\n| safety           = \n| coupling         = [[Westinghouse H2C]]\n| multipleworking  = \n| gauge            = {{track gauge|ussg|al=on}}\n}}\nThe '''R127s''' and '''R134s'''  are [[New York City Subway]] cars purpose-built by [[Kawasaki Heavy Industries Rolling Stock Company|Kawasaki Heavy Industries]]<ref>[http://www.japantransport.com/seminar/KAWASAKI.pdf High Speed Rail Seminar in Washington D.C. Kawasaki\u2019s High Speed Train Technology and Contributions to the US Society]</ref> in [[Kobe, Japan]], for work train service. The ten R127s were built in 1990-1991 while the eight R134s were built in 1994-1996.<ref>{{cite web|url=https://docs.google.com/spreadsheet/pub?key=0AqJF78D8SRY4dFZMRDNFQmJiYzVYbVl2NmVWa0VlTUE&single=true&gid=23&output=html|title=Work Car Roster|work=Google Docs}}</ref>\n\nThe cars are built to the specifications of the subway's [[A Division (New York City Subway)|A Division]] (numbered routes), which are slightly narrower than those of the [[B Division (New York City Subway)|B Division]] (lettered routes), and are similar to the [[R62 (New York City Subway car)|R62]] and [[R62A (New York City Subway car)|R62A]] passenger cars used on the A Division. However, they can be found on either division and are used as garbage train motors. They are not air conditioned and instead have axiflow fans, so in the summertime these cars are frequently replaced by air-conditioned passenger cars used on garbage trains.<ref>{{Cite web|url=http://www.nycsubway.org/wiki/R-127_--_R-134_Rubbish_Motors|title=www.nycsubway.org: R-127 -- R-134 Rubbish Motors|website=www.nycsubway.org|access-date=January 3, 2017}}</ref> Sometimes, these cars operate with other cars assigned to work service. The two types are essentially identical to each other, with only a few cosmetic differences.\n\nThe ten R127s are numbered EP001 to EP010, while the eight R134s are numbered EP011 to EP018.\n\n==References==\n{{reflist}}\n{{refbegin}}\n* {{cite book| title=Evolution of New York City subways: An illustrated history of New York City's transit cars, 1867-1997| last=Sansone| first=Gene| publisher=New York Transit Museum Press| year=1997| isbn=978-0-9637492-8-4| location=New York}}\n{{refend}}\n\n==External links==\n*[http://www.thejoekorner.com/cars/rroster.htm TheJoeKorner roster]\n*[http://www.nycsubway.org/wiki/R-127_--_R-134_Rubbish_Motors NYCSubway.org]\n\n{{NYCS rolling stock}}\n\n{{DEFAULTSORT:R127 R134 (New York City Subway car)}}\n[[Category:Train-related introductions in 1991]]\n[[Category:Train-related introductions in 1996]]\n[[Category:New York City Subway rolling stock]]\n[[Category:Kawasaki multiple units]]\n", "name_user": "Iridescent", "label": "safe", "comment": "\u2192\u200etop:Cleanup andtypo fixing,typo(s) fixed: 1994-1996 \u2192 1994\u20131996", "url_page": "//en.wikipedia.org/wiki/R127/R134_(New_York_City_Subway_car)"}
{"title_page": "The Graduate", "text_new": "{{Other uses}}\n{{short description|1967 romantic comedy-drama movie directed by Mike Nichols}}\n{{Use mdy dates|date=September 2013}}\n{{Infobox film\n| name           = The Graduate\n| image          = Graduateposter67.jpg\n| image_size     = 225px\n| alt            = \n| caption        = Theatrical release poster\n| director       = [[Mike Nichols]]\n| producer       = [[Lawrence Turman]]\n| screenplay     = {{unbulleted list|[[Calder Willingham]]|[[Buck Henry]]}}\n| based on       = {{Based on|''[[The Graduate (novel)|The Graduate]]''|[[Charles Webb (author)|Charles Webb]]}}\n| starring       = {{Plainlist|\n* [[Anne Bancroft]]\n* [[Dustin Hoffman]]\n* [[Katharine Ross]]}}\n| music          = {{unbulleted list|[[Paul Simon]] {{small|(songs)}}|[[Dave Grusin]] {{small|(score)}}}}\n| cinematography = [[Robert Surtees (cinematographer)|Robert Surtees]]\n| editing        = [[Sam O'Steen]]\n| studio         = Mike Nichols/Lawrence Turman Productions\n| distributor    = {{unbulleted list|[[Embassy Pictures]] {{small|(US)}}|[[United Artists]] {{small|(International)}}}}\n| released       = {{Film date|1967|12|22}}\n| runtime        = 106 minutes<!--Theatrical runtime: 105:19--><ref name=bbfc>{{cite web| title=The Graduate|url=http://www.bbfc.co.uk/releases/graduate-1970-1| work=[[United Artists]]| publisher=[[British Board of Film Classification]]| date=July 1, 1970|accessdate=2013-09-20}}</ref>\n| country        = United States\n| language       = English\n| budget         = $3 million\n| gross          = $104.9 million {{small|(North America)}}<ref name=mojo>{{cite web| url=http://boxofficemojo.com/movies/?id=graduate.htm| website=[[Box Office Mojo]]| title=The Graduate, Box Office Information| accessdate=2012-03-08}}</ref><br />$85 million {{small|(worldwide rentals)}}<ref>{{cite book |first1=R. Serge |last1=Denisoff |first2=William D. |last2=Romanowski |title=Risky Business: Rock in Film |year=1991 |publisher=Transaction Publishers |isbn=9780887388439}}\n* ''The Graduate'': p. [https://books.google.co.uk/books?id=kT0fKUCTUC4C&pg=PA167 167]. \"World net rental was estimated at more than $85 million by January 1971.\"</ref>\n}}\n\n'''''The Graduate''''' is a 1967 American [[romance film|romantic]] [[comedy-drama|comedy-drama film]] directed by [[Mike Nichols]]<ref name=\"WVrev\">{{cite book| title=Variety's Film Reviews| date=December 20, 1967| page=6| isbn=978-0-8240-5210-2}}</ref> and written by [[Buck Henry]] and [[Calder Willingham]],<ref>{{cite news | first=Bosley | last=Crowther | author-link=Bosley Crowther | title=Graduating With Honors; 'The Graduate' | website=[[The New York Times]] | date=December 31, 1967 | url=https://www.nytimes.com/1967/12/31/archives/graduating-with-honors-the-graduate.html | access-date=September 14, 2019}}</ref> based on the [[The Graduate (novel)|1963 novel of the same name]] by [[Charles Webb (author)|Charles Webb]], who wrote it shortly after graduating from [[Williams College]]. The film tells the story of 21-year-old Benjamin Braddock ([[Dustin Hoffman]]), a recent college graduate with no well-defined aim in life, who is seduced by an older woman, Mrs. Robinson ([[Anne Bancroft]]), and then falls in love with her daughter Elaine ([[Katharine Ross]]).\n\nThe film was released on December 22, 1967, received positive reviews and grossed $104.9{{nbsp}}million in the U.S. and Canada. With the figures adjusted for inflation, the film's gross is ${{Format price|{{Inflation|US|104,945,305|1967}}}}, making it the 23rd [[list of highest-grossing films in the United States and Canada|highest-ever grossing film in the U.S. and Canada]].<ref name=\"all-time\">{{cite web| url=https://www.boxofficemojo.com/chart/top_lifetime_gross_adjusted/| website=[[Box Office Mojo]]| title=Domestic Grosses, Adjusted for Ticket Price Inflation| accessdate=2012-03-08}}</ref> It won the [[Academy Award for Best Director]] and was nominated in six other categories. In 1996, ''The Graduate'' was selected for preservation in the U.S. [[National Film Registry]] as being \"culturally, historically, or aesthetically significant.\" Initially, the film was placed at No.7 on [[AFI's 100 Years... 100 Movies]] list in 1998. When [[American Film Institute|AFI]] [[AFI's 100 Years...100 Movies (10th Anniversary Edition)|revised the list in 2007]], the film was moved to No.17.\n\n==Plot==\nIn 1967, Benjamin Braddock, aged 20, has earned his [[bachelor's degree]] from a college on the [[East Coast of the United States|East Coast]] and has returned home to a party celebrating his [[graduation]] at his parents' house in [[Pasadena, California]]. Benjamin has no idea of what to do with his life and is visibly unhappy as his parents deliver accolades and neighborhood friends ask him about his future plans. He hides from those who try to congratulate him. Mrs. Robinson, the wife of his father's law partner, insists that he drive her home. Benjamin is persuaded inside to have a drink and Mrs. Robinson attempts to seduce him. She invites him up to her daughter Elaine's room to see Elaine's portrait and then enters the room naked, making it clear that she is available to him. Benjamin rejects her but a few days later, he awkwardly organizes a meeting at the Taft Hotel, where he registers under the pseudonym Gladstone.\n\nBenjamin spends the rest of the summer relaxing around the pool by day, refusing to select a graduate school, and seeing Mrs. Robinson at the hotel by night. He discovers that he and Mrs. Robinson have nothing to talk about. However, after Benjamin pesters her one evening, Mrs. Robinson reveals that she entered into a loveless marriage when she accidentally became pregnant with Elaine. Both Mr. Robinson and Benjamin's parents encourage him to call Elaine, but, in private, Mrs. Robinson forbids him.\n\nBenjamin decides to take Elaine on a date in order to  ruin it: he ignores her, drives dangerously, and takes her to a strip club. After she runs out of the club in tears, he changes his mind, apologizes for his behavior, and discovers that Elaine is someone he is happy to be around. In search of a late-night drink they visit the Taft Hotel, but when the staff greet Benjamin as \"Mr. Gladstone\", Elaine deduces that he has been having an affair with a married woman. She accepts his acknowledgement that the affair is over, but an angry Mrs. Robinson threatens to tell Elaine her version of their affair. To prevent this, Benjamin tells Elaine that the married woman was her mother.\n\nElaine is disgusted and returns to school at [[University of California, Berkeley|Berkeley]]. Benjamin follows her there and tries to charm her. She reveals that her mother's story is that he [[rape]]d her while she was [[Alcohol intoxication|drunk]], and she refuses to believe that her mother actually seduced Benjamin.\n\nAfter [[stalking]] her for several days and continuously proposing to her, Benjamin begins to make amends with Elaine. However, Mr. Robinson arrives at Berkeley after learning about the affair, confronts Benjamin at his rooming house, and threatens to put him behind bars if Benjamin sees his daughter again. Mr. Robinson then forces Elaine to drop out of college and takes her away to marry Carl, a classmate with whom she briefly had a relationship.\n\nReturning to Pasadena in search of Elaine, Benjamin breaks into the Robinson home but encounters Mrs. Robinson. She tells him he will not be able to stop the wedding with Carl and then calls the police, claiming that her house is being burglarized.\n\nBenjamin visits Carl's fraternity brothers who tell him that the wedding is in [[Santa Barbara, California|Santa Barbara]] that morning. He rushes to the church and arrives just as Elaine is married, witnessing the kiss. He bangs on the glass at the back of the church and screams \"Elaine!\" frantically. After hesitating, Elaine screams \"Ben!\" and looks at him pitifully. He rushes toward her, and a fight ensues as guests try to stop the two from leaving together. Elaine manages to break free from her mother, who then slaps her. Benjamin manages to keep the guests at bay by picking up a large cross and wielding it, then jamming the church doors shut with it. Both he and Elaine then run into the street to flag down a passing bus and take the back seat, [[Elopement|eloping]].\n\nHowever, as they settle into their seats, their faces change from happiness to uncertainty as \"[[The Sound of Silence]]\" plays.\n\n==Cast==\n{{div col}}\n* [[Anne Bancroft]] as Mrs. Robinson\n* [[Dustin Hoffman]] as Benjamin Braddock\n* [[Katharine Ross]] as Elaine Robinson\n* [[William Daniels]] as Mr. Braddock\n* [[Murray Hamilton]] as Mr. Robinson\n* [[Elizabeth Wilson]] as Mrs. Braddock\n* [[Buck Henry]] as Room clerk\n* Brian Avery as Carl Smith\n* [[Walter Brooke]] as Mr. McGuire\n* [[Norman Fell]] as Mr. McCleery\n* [[Alice Ghostley]] as Mrs. Singleman\n* [[Marion Lorne]] as Miss DeWitte\n{{div col end}}\n\n==Production==\n\n===Casting===\nNichols' first choice for Mrs. Robinson was French actress [[Jeanne Moreau]].<ref>The audio commentary by Mike Nichols and Steven Soderbergh in Criterion Collection BD and DVD.</ref> The idea behind this was that in the French culture, the \"older\" women tended to \"train\" the younger men in sexual matters (it is a cliche). There were numerous actors considered or tested for, or who wanted, roles in the film. [[Doris Day]] turned down an offer because the nudity required by the role offended her.<ref name=mcgee>{{cite book| title=Doris Day: Sentimental Journey| url=https://books.google.com/books?id=cfbcA3zFlNgC&pg=PT326&dq=doris+day+graduate&hl=en&sa=X&ei=y-8UU9-RNOfN0wHi5IHQAg&ved=0CEYQ6AEwAw#v=onepage&q=graduate&f=false| last=McGee| first=Garry| date=November 22, 2011| page=160| publisher=McFarland| isbn=978-0-7864-6107-3| accessdate=2014-03-03}}</ref> [[Joan Crawford]] inquired as to play the part, while [[Lauren Bacall]] and [[Audrey Hepburn]] both wanted the role. [[Patricia Neal]] turned down the film as she had recently recovered from a stroke and did not feel ready to accept such a major role. [[Geraldine Page]] also turned it down. Other actors considered for the part included [[Claire Bloom]], [[Angie Dickinson]], [[Sophia Loren]], [[Judy Garland]], [[Rita Hayworth]], [[Susan Hayward]], [[Anouk Aim\u00e9e]], [[Jennifer Jones]], [[Deborah Kerr]], [[Eva Marie Saint]], [[Rosalind Russell]], [[Simone Signoret]], [[Jean Simmons]], [[Lana Turner]], [[Eleanor Parker]], [[Anne Baxter]] and [[Shelley Winters]]. [[Angela Lansbury]] also asked about playing the part. [[Ava Gardner]] sought the role of Mrs. Robinson, and reportedly called Nichols saying,\"I want to see you! I want to talk about this ''Graduate'' thing!\" Nichols did not seriously consider her for the role (he wanted a younger woman as Bancroft was 35 and Gardner was 45), but did end up visiting her hotel. He later recounted that \"she sat at a little French desk with a telephone, she went through every movie star clich\u00e9. She said, 'All right, let's talk about your movie. First of all, I strip for nobody.'\" Meanwhile, [[Natalie Wood]] turned down not only the role of Mrs. Robinson, but also that of Elaine.\n\nFor the character of Elaine, casting was also an issue. [[Patty Duke]] turned down the part as she did not want to work at the time. [[Faye Dunaway]] was also considered for Elaine, but had to turn it down, in favor of ''[[Bonnie and Clyde (film)|Bonnie and Clyde]]''. [[Sally Field]] and [[Shirley MacLaine]] refused the role as well. [[Raquel Welch]] and [[Joan Collins]] both wanted the role, but did not succeed in getting it. [[Carroll Baker]] tested, but was said to have been too old to portray Anne Bancroft's daughter. [[Candice Bergen]] screen-tested as well, as did [[Goldie Hawn]] and [[Jane Fonda]]. Additionally, [[Ann-Margret]], [[Elizabeth Ashley]], [[Carol Lynley]], [[Sue Lyon]], [[Yvette Mimieux]], [[Suzanne Pleshette]], [[Lee Remick]], [[Pamela Tiffin]], [[Julie Christie]], and [[Tuesday Weld]] were all on the director's shortlist before [[Katharine Ross]] was cast.\n\nWhen [[Dustin Hoffman]] auditioned for the role of Benjamin, he was just short of his 30th birthday at the time of filming. He was asked to perform a love scene with Ross, having previously never done one during his acting classes and believed that, as he said later, \"a girl like [Ross] would never go for a guy like me in a million years.\" Ross agreed, believing that Hoffman \"look[ed] about 3 feet tall ... so unkempt. This is going to be a disaster.\" Producer [[Joseph E. Levine]] later admitted that he at first believed that Hoffman \"was one of the messenger boys.\" Despite&mdash;or perhaps because of\u2014Hoffman's awkwardness, Nichols chose him for the film.<ref name=\"life19671124\">{{cite news| url=https://books.google.com/books?id=eEkEAAAAMBAJ&lpg=PA71&pg=PA111#v=onepage&f=true| title=The Graduate| work=[[Life (magazine)|Life]]| date=24 November 1967| accessdate=2014-03-03| last=Zeitlin| first=David| page=111}}</ref> \"As far as I'm concerned, Mike Nichols did a very courageous thing casting me in a part that I was not right for, meaning I was Jewish,\" said Hoffman. \"In fact, many of the reviews were very negative. It was kind of veiled anti-Semitism.... I was called 'big-nosed' in the reviews, 'a nasal voice'.\"<ref>{{cite web | url=https://www.680news.com/2015/03/25/dustin-hoffman-says-he-understands-the-worries-of-young-singers-in-boychoir/ | title=Dustin Hoffman says he understands the worries of young singers in 'Boychoir' | first=Victoria | last=Ahearn | date=March 25, 2015 | work=680 NEWS | accessdate=2018-11-27}}</ref> Before Hoffman was cast, [[Robert Redford]] and [[Warren Beatty]] were among the top choices. Beatty turned the film down as he was occupied with ''[[Bonnie and Clyde (film)|Bonnie and Clyde]]''. Redford tested for the part of Benjamin (with [[Candice Bergen]] as Elaine), but Nichols thought Redford did not possess the underdog quality Benjamin needed.<ref name=kashner>{{cite magazine | title=Here's to You, Mr. Nichols: The Making of ''The Graduate'' | url=https://www.vanityfair.com/news/2008/03/graduate200803 | last=Kashner| first=Sam | work=[[Vanity Fair (magazine)|Vanity Fair]] | date=March 2008 | accessdate=2018-11-27}}</ref>\n\nIn the role of Mr. Robinson, [[Gene Hackman]] was originally cast, but just before filming began, the director decided he was too young and decided to replace him. [[Marlon Brando]], [[Howard Duff]], [[Brian Keith]], [[George Peppard]], [[Jack Palance]], [[Frank Sinatra]], [[Walter Matthau]] and [[Gregory Peck]] were all other choices for the role that [[Murray Hamilton]] eventually played. [[Susan Hayward]] was the first choice for Benjamin's mother, Mrs. Braddock, but the role was given to [[Elizabeth Wilson]]. And to play Mr. Braddock, [[Yul Brynner]], [[Kirk Douglas]], [[Jack Lemmon]], [[Robert Mitchum]], [[Karl Malden]], [[Christopher Plummer]] and [[Ronald Reagan]] (who had been [[Governor of California]] for nearly a year when the film was released) all came close to getting the role that ended up going to [[William Daniels]].<ref name=kashner />\n\n===Filming locations===\nMany of the exterior university campus shots of Berkeley were actually filmed on the brick campus of [[University of Southern California|USC]] in [[Los Angeles]].<ref name=USCfilming>{{cite web |title=USC's Lists & Urban Legends: Just a Few of the Feature Films Shot on the University Park Campus |url=http://www.usc.edu/dept/pubrel/trojan_family/spring06/Lists.html |last=Moore |first=Annette |work=USC Trojan Family Magazine |date=Spring 2006 |accessdate=2014-03-03 |url-status=dead |archiveurl=https://web.archive.org/web/20130527071350/http://www.usc.edu/dept/pubrel/trojan_family/spring06/Lists.html |archivedate=May 27, 2013 |df=mdy-all }}</ref>\n\nThe church used for the wedding scene is actually the [[United Methodist Church]] in [[La Verne, California|La Verne]]. In a commentary audio released with the 40th anniversary DVD, Hoffman revealed that he was uneasy about the scene in which he pounds on the church window, as the minister of the [[Church (building)|church]] had been watching the filming disapprovingly. The wedding scene was highly influenced by the ending of the 1924 comedy film ''[[Girl Shy]]'' starring [[Harold Lloyd]], who also served as an advisor for the scene in ''The Graduate''.<ref>{{cite web|url=http://www.brownpapertickets.com/event/1443795|title=Silent Salon 2015 // Girl Shy|publisher=brownpapertickets.com}}</ref><ref>{{cite web|url=http://www.doctormacro.com/Movie%20Summaries/G/Girl%20Shy.htm|title=Girl Shy|publisher=doctormacro.com}}</ref>\n\n===Music===\n{{See also|The Graduate (soundtrack)}}\nThe film boosted the profile of [[folk-rock]] duo [[Simon & Garfunkel]]. Originally, Nichols and O'Steen used their existing songs like \"[[The Sound of Silence]]\" merely as a pacing device for the editing until Nichols decided that substituting original music would not be effective and decided to include them on the soundtrack, an unusual move at that time.<ref name=harris>{{cite book |last=Harris |first=Mark |title=Pictures at a Revolution |url=https://archive.org/details/picturesatrevolu00harr_0/page/360 |date=February 14, 2008 |publisher=The Penguin Press |pages=[https://archive.org/details/picturesatrevolu00harr_0/page/360 360\u20131] |isbn=978-1-5942-0152-3 |url-access=registration }}</ref>\n\nAccording to a ''[[Variety (magazine)|Variety]]'' article by [[Peter Bart]] in the May 15, 2005, issue, [[Lawrence Turman]], his producer, then made a deal for Simon to write three new songs for the movie. By the time they had nearly finished editing the film, Simon had only written one new song. Nichols begged him for more, but Simon, who was touring constantly, told him he did not have the time. He did play him a few notes of a new song he had been working on; \"It's not for the movie... it's a song about times past\u2014about [[Eleanor Roosevelt|Mrs. Roosevelt]] and [[Joe DiMaggio]] and stuff.\" Nichols advised Simon, \"It's now about [[Mrs. Robinson]], not Mrs. Roosevelt.\"<ref name=bart>{{cite news |url=https://variety.com/2005/film/columns/the-perfect-pic-alignment-1117922805/ |work=[[Variety (magazine)|Variety]] |first=Peter |last=Bart |author-link=Peter Bart |title=The perfect pic alignment |date=May 15, 2005}}</ref>\n\n==Reception==\n\n===Critical response===\n''The Graduate'' was met with generally positive reviews from critics upon its release. A.D. Murphy of ''[[Variety (magazine)|Variety]]'' and [[Roger Ebert]] of the ''[[Chicago Sun-Times]]'' praised the film, with Murphy describing it as a \"delightful satirical comedy-drama\" <ref name=\"variety\">{{cite news |title=Film Reviews\u2014The Graduate |url=https://variety.com/1967/film/reviews/the-graduate-1117791319/ |first=A.D. |last=Murphy |work=Variety |date=December 18, 1967 |accessdate=March 15, 2018}}</ref> and Ebert claiming it was the \"funniest American comedy of the year\".<ref name=\"ebert\">{{cite news |url=http://rogerebert.suntimes.com/apps/pbcs.dll/article?AID=/19671226/REVIEWS/712260301/1023 |title=The Graduate |first=Roger |last=Ebert |author-link=Roger Ebert |work=[[Chicago Sun-Times]] |date=December 26, 1967 |accessdate=2011-04-13}}</ref> However, ''[[Life (magazine)|Life]]'' critic [[Richard Schickel]] felt the film \"starts out to satirize the alienated spirit of modern youth, does so with uncommon brilliance for its first half, but ends up selling out to the very spirit its creators intended to make fun of... It's a shame-- they were halfway to something wonderful when they skidded on a patch of [[Brylcreem|greasy kid stuff]].\" [[Pauline Kael]] wondered, \"How could you convince them [younger viewers] that a movie that sells innocence is a very commercial piece of work when they're so clearly in the market to buy innocence?\"<ref>Gray, Beverly, Seduced by Mrs. Robinson, Algonquin Books of Chapel Hill, 2017, pg. 166-167</ref>\n\nModern{{when?|date=September 2019}} critics continue to praise the film, if not always with the same ardor. For the film's thirtieth anniversary reissue, Ebert retracted some of his previous praise for the film, noting that he felt its time had passed and that he now had more sympathy for Mrs. Robinson than Benjamin (whom he considered \"an insufferable creep\"), viewing one's sympathy for Mrs. Robinson and disdainful attitude toward Ben as a function of aging and wisdom.<ref name=\"ebert30\">{{cite news |title=The Graduate |url=http://rogerebert.suntimes.com/apps/pbcs.dll/article?AID=/19970328/REVIEWS/703280304/1023 |first=Roger |last=Ebert |author-link=Roger Ebert |work=Chicago Sun-Times |date=March 28, 1997 |accessdate=2011-04-13}}</ref> He, along with [[Gene Siskel]], gave the film a positive if unenthusiastic review on the television program ''[[At the Movies with Ebert & Roeper|Siskel & Ebert]]''.<ref name=siskel>{{cite episode |series=Siskel & Ebert at the Movies |url=http://siskelandebert.org/video/2XNKBRRX1HXR/LiarLiar--Crash--Selena--The-Graduate-1997 |airdate=March 22, 1997 |season=11 |number=28 |publisher=Siskel&Ebert.org |title=LiarLiar / Crash / Selena / The Graduate (1997) |minutes=3:40 |transcript=TV.com: Siskel & Ebert at the Movies Season 11 Episode 28 |transcripturl=http://www.tv.com/shows/siskel-and-ebert-at-the-movies/week-of-march-22-1997-1226197/ |accessdate=2014-03-03}}</ref> Furthermore, the film's rating in the AFI list of the greatest American films fell from seventh in 1997 to seventeenth in the 2007 update. Lang Thompson, however, argued that \"it really hasn't dated much\".<ref>{{cite web|url=http://www.tcm.com/this-month/article/121604%7C88172/The-Graduate.html|title=The Graduate|last=Thompson|first=Lang|publisher=Turner Classic Movies, Inc.|accessdate=February 16, 2017}}</ref>\n\n[[Review aggregator]] [[Rotten Tomatoes]] gives the film an approval rating of 86% based on 80 reviews, with an average rating of 8.85/10. The site's consensus reads, \"The music, the performances, the precision in capturing the post-college malaise\u2014''The Graduate''{{'}}s coming-of-age story is indeed one for the ages.\"<ref>{{cite web|url=http://www.rottentomatoes.com/m/graduate/|title=The Graduate|date=April 16, 2019|website=Rotten Tomatoes}}</ref> On the similar website [[Metacritic]], the film holds a score of 83 out of 100, based on 19 critics, indicating \"universal acclaim\".<ref>{{cite web|url=http://www.metacritic.com/movie/the-graduate|title=The Graduate|website=Metacritic}}</ref>\n\n===Awards and honors===\nThe film received [[Academy Awards|Academy Award]] nominations for [[Academy Award for Best Picture|Best Picture]] (producer Lawrence Turman), [[Academy Award for Best Actor|Best Actor]] (Dustin Hoffman), [[Academy Award for Best Actress|Best Actress]] (Anne Bancroft), [[Academy Award for Best Supporting Actress|Best Supporting Actress]] (Katharine Ross), [[Academy Award for Best Adapted Screenplay|Best Adapted Screenplay]] (Buck Henry and Calder Willingham), and [[Academy Award for Best Cinematography|Best Cinematography]] (Robert L. Surtees). Mike Nichols won the [[Academy Award for Best Director]].\n\nThe film also received [[Golden Globe Award]] nominations for [[Golden Globe Award for Best Actor \u2013 Motion Picture Musical or Comedy|Best Actor \u2013 Motion Picture Musical or Comedy]] (Hoffman), and [[Golden Globe Award for Best Screenplay|Best Screenplay]] (Henry and Willingham). Bancroft won the [[Golden Globe Award for Best Actress \u2013 Motion Picture Musical or Comedy]], Nichols won the [[Golden Globe Award for Best Director]], producers Turman and [[Joseph E. Levine]] won the [[Golden Globe Award for Best Motion Picture \u2013 Musical or Comedy]], Hoffman won the [[Golden Globe Award for New Star of the Year \u2013 Actor]], and Ross won the [[Golden Globe Award for New Star of the Year \u2013 Actress]].\n\nIn addition, the film won the [[BAFTA Award for Best Film]], [[BAFTA Award for Best Direction]] (Nichols), [[BAFTA Award for Most Promising Newcomer to Leading Film Roles]] (Hoffman), the [[BAFTA Award for Best Editing]] ([[Sam O'Steen]]). Bancroft was nominated for the [[BAFTA Award for Best Actress in a Leading Role]].\n\nIn 1996, ''The Graduate'' was selected for preservation in the U.S. [[National Film Registry]] by the [[Library of Congress]] as being \"culturally, historically, or aesthetically significant\", and placed #23 on the [[list of highest-grossing films in the United States and Canada]], adjusted for inflation.<ref name=\"all-time\"/>\n\nYears later in interviews, Bancroft stated that Mrs. Robinson was the role with which she was most identified, and added, \"Men still come up to me and tell me 'You were my first sexual fantasy.'\"{{citation needed|date=February 2020}}\n\nThe film is listed in ''[[1001 Movies You Must See Before You Die]]''.<ref name=\"1001before\">{{cite book| title=1001 Movies You Muse See Before You Die| publisher=Quintessence Editions Ltd.| editor-first=Steven Jay| editor-last=Schneider| isbn=978-0-7641-6151-3| url=http://1001beforeyoudie.com/| place=London| date=September 2003| url-status=dead| archiveurl=https://web.archive.org/web/20140110124836/http://1001beforeyoudie.com/| archivedate=January 10, 2014| df=mdy-all}}</ref>\n\nThe film is recognized by [[American Film Institute]] in these lists:\n* 1998: [[AFI's 100 Years...100 Movies]] \u2013 #7<ref>{{cite web|last= |first= |title=AFI's 100 Years...100 Movies |url=http://www.afi.com/Docs/100Years/movies100.pdf |publisher=[[American Film Institute]] |date= |accessdate=2016-07-17}}</ref>\n* 2000: [[AFI's 100 Years...100 Laughs]] \u2013 #9<ref>{{cite web|last= |first= |title=AFI's 100 Years...100 Laughs |url=http://www.afi.com/Docs/100Years/laughs100.pdf |publisher=[[American Film Institute]] |date= |accessdate=2016-07-17}}</ref>\n* 2002: [[AFI's 100 Years...100 Passions]] \u2013 #52<ref>{{cite web|last= |first= |title=AFI's 100 Years...100 Passions |url=http://www.afi.com/Docs/100Years/passions100.pdf |publisher=[[American Film Institute]] |date= |accessdate=2016-07-17}}</ref>\n* 2004: [[AFI's 100 Years...100 Songs]]:\n** \"[[Mrs. Robinson]]\" \u2013 #6<ref>{{cite web|last= |first= |title=AFI's 100 Years...100 Songs |url=http://www.afi.com/Docs/100Years/songs100.pdf |publisher=[[American Film Institute]] |date= |accessdate=2016-07-17}}</ref>\n* 2005: [[AFI's 100 Years...100 Movie Quotes]]:\n** Mr. McGuire: \"Plastics.\" \u2013 #42<ref name=\"AFI Quotes\">{{cite web|last= |first= |title=AFI's 100 Years...100 Movie Quotes |url=http://www.afi.com/Docs/100Years/quotes100.pdf |publisher=[[American Film Institute]] |date= |accessdate=2016-07-17}}</ref>\n** Benjamin Braddock: \"Mrs. Robinson, you're trying to seduce me. Aren't you?\" \u2013 #63<ref name=\"AFI Quotes\" />\n* 2007: [[AFI's 100 Years...100 Movies (10th Anniversary Edition)]] \u2013 #17<ref>{{cite web|last= |first= |title=AFI's 100 Years...100 Movies (10th Anniversary Edition) |url=http://www.afi.com/Docs/100Years/100Movies.pdf |publisher=[[American Film Institute]] |date= |accessdate=2016-07-17}}</ref>\n\n[[National Film Registry]] \u2014 Inducted in 1996.<ref>{{Cite web|url=https://www.loc.gov/programs/national-film-preservation-board/film-registry/complete-national-film-registry-listing/|title=Complete National Film Registry Listing {{!}} Film Registry {{!}} National Film Preservation Board {{!}} Programs at the Library of Congress {{!}} Library of Congress|website=Library of Congress, Washington, D.C. 20540 USA|access-date=2020-02-27}}</ref>\n\n===Release===\n''The Graduate'' was released in theatres on December 22, 1967. The film was released on [[Blu-ray]] by [[Embassy Pictures|Embassy Home Entertainment]] on January 25, 2011.<ref>{{cite AV media|url=https://www.amazon.com/Graduate-The-Blu-ray/dp/B004GDB76S/ref=tmm_blu_title_1?_encoding=UTF8&qid=&sr=|title=The Graduate|medium=[[Blu-ray]]|publisher=[[Embassy Pictures|Embassy Home Entertainment]]|people=[[Mike Nichols|Nichols, Mike]]|location=[[Los Angeles]]|date=January 25, 2011|accessdate=August 10, 2019|asin=B004GDB76S}}</ref> ''The Graduate'' was released on [[DVD]] by Embassy Home Entertainment on January 21, 2014.<ref>{{cite AV media|url=https://www.amazon.com/Graduate-Dustin-Hoffman/dp/B00079Z9VO|title=The Graduate|medium=[[DVD]]|publisher=[[Embassy Pictures|Embassy Home Entertainment]]|people=[[Mike Nichols|Nichols, Mike]]|location=[[Los Angeles]]|date=January 21, 2014|accessdate=August 10, 2019|asin=B00079Z9VO}}</ref>\n\n==Stage adaptation==\n[[Terry Johnson (dramatist)|Terry Johnson]]'s adaptation of the original novel and the film ran both on London's [[West End theatre|West End]] and on [[Broadway theatre|Broadway]], and has toured the United States. There is a [[Brazil]]ian version adapted by [[Miguel Falabella]]. Several actresses have starred as Mrs. Robinson, including [[Kathleen Turner]], [[Lorraine Bracco]], [[Jerry Hall]], [[Amanda Donohoe]], [[Morgan Fairchild]], [[Anne Archer]], [[Vera Fischer (actress)|Vera Fischer]], [[Patricia Richardson]] and [[Linda Gray]].\n\nThe stage production adds several scenes that are not in the novel or the film, as well as using material from both film and novel.<ref>{{cite web | last=Murray | first=Matthew | title=The Graduate | website=Talkin'Broadway | date=April 4, 2002 | url=https://www.talkinbroadway.com/world/Graduate.html | access-date=September 14, 2019}}</ref> It also uses songs by [[Simon & Garfunkel]] not used in the film, such as \"[[Bridge Over Troubled Water]]\" as well as music from other popular musicians from the era such as [[The Byrds]] and [[The Beach Boys]].<ref name=theatre>{{cite web | first=Barbara | last=Siegel | first2=Scott | last2=Siegel | title=The Graduate | website=TheaterMania | url=https://www.theatermania.com/new-york-city-theater/reviews/the-graduate_2064.html | date=April 5, 2002 | access-date=September 15, 2019}}</ref> The West End production opened at the [[Gielgud Theatre]] on April 5, 2000, after previews from March 24, with Kathleen Turner starring as Mrs. Robinson.<ref>{{cite web | last=Shenton | first=Mark | title=Kathleen Turner to Graduate to West End as Mrs. Robinson | website=[[Playbill]] | date=December 20, 1999 | url=http://www.playbill.com/article/kathleen-turner-to-graduate-to-west-end-as-mrs-robinson-com-86082 | access-date=September 14, 2019}}</ref><ref>{{cite web | last=Wolf | first=Matt | title=The Graduate \u2013 Turner's Mrs. Robinson Turns Heads in London's West End | website=Variety | date=April 10, 2000 | url=https://variety.com/2000/film/reviews/the-graduate-turner-s-mrs-robinson-turns-heads-in-london-s-west-end-1200461825/ | access-date=September 14, 2019}}</ref> The production closed in January 2002. Jerry Hall replaced Turner on July 31, 2000, followed by [[Amanda Donohoe]] from February 2001, Anne Archer from June 2001, and Linda Gray from October 2001.<ref>[http://news.bbc.co.uk/2/hi/entertainment/1768900.stm \" The Graduate's London term ends\"], bbc.co.uk, 18 January 2002</ref><ref>Davies, Hugh. [https://www.telegraph.co.uk/news/uknews/1308832/Curtain-rises-on-the-new-Mrs-Robinson.html \"Curtain rises on the new Mrs Robinson\"], telegraph.co.uk, 12 Jun 2001.</ref> The 2003 UK touring production starred [[Glynis Barber]] as Mrs. Robinson.<ref>{{cite web|url=https://www.telegraph.co.uk/culture/theatre/3601911/Glynis-keeps-her-kit-on-and-pulls-it-off.html|work=the Telegraph|title=Glynis keeps her kit on and pulls it off|date=5 September 2003|accessdate=18 May 2016}}</ref>\n\nThe Broadway production opened at the [[Plymouth Theatre]] on April 4, 2002, and closed on March 2, 2003, after 380 performances. Directed by Terry Johnson, the play featured the cast of [[Jason Biggs]] as Benjamin Braddock, [[Alicia Silverstone]] as Elaine Robinson, and [[Kathleen Turner]] as Mrs. Robinson. The play received no award nominations.<ref>[http://www.ibdb.com/production.php?id=13279 \" ''The Graduate'' on Broadway\"], ibdb.com, accessed May 12, 2015</ref> Linda Gray briefly filled in for Turner in September 2002. Lorraine Bracco replaced Turner from November 19, 2002.<ref>{{cite web | last=Gans | first=Andrew | last2=Simonson | first2=Robert | author-link2=Robert Simonson | title=Lorraine Bracco Officially Opens in Broadway Graduate Dec. 15 | website=Playbill | date=December 15, 2002 | url=http://www.playbill.com/article/lorraine-bracco-officially-opens-in-broadway-graduate-dec-15-com-109863 | access-date=September 14, 2019}}</ref>\n\n''The Graduate'' ran at the Cape Playhouse ([[Dennis, Massachusetts]]) in July 2011, and starred Patricia Richardson.<ref>{{cite web | last=Hetrick | first=Adam | title=Cape Playhouse Casts Patricia Richardson, Joel Higgins, Dee Hoty, Josh Grisetti and Bradley Dean for Summer | website=Playbill | date=June 3, 2011 | url=http://www.playbill.com/article/cape-playhouse-casts-patricia-richardson-joel-higgins-dee-hoty-josh-grisetti-and-bradley-dean-for-summer-com-179766 | access-date=September 14, 2019}}</ref>\n\n==Possible sequel==\nCharles Webb has written a [[sequel]] to his original novel titled ''[[Home School (novel)|Home School]]'', but initially refused to publish it in its entirety because of a contract he signed in the 1960s. When he sold [[film rights]] to ''The Graduate'', he surrendered the rights to any sequels. If he were to publish ''Home School'', [[Canal+]], the French media company that owns the rights to ''The Graduate'', would be able to adapt it for the screen without his permission.<ref name=\"guardian\">{{cite news| url=https://www.theguardian.com/uk/2005/mar/27/books.world| date=25 March 2005| accessdate=2007-10-12| first=David | last=Smith| work=[[The Guardian]]| title=What happened next? (the author will let you know after he dies)}}</ref> Extracts of ''Home School'' were printed in ''[[The Times]]'' on May 2, 2006.<ref name=\"webb\">{{cite news| title=Mrs Robinson Returns| url=http://www.timesonline.co.uk/tol/life_and_style/article711893.ece| date=2 May 2006| accessdate=2007-10-12| publisher=timesonline.co.uk| first=Charles| last=Webb| work=The Times}}</ref> Webb also told the newspaper that there was a possibility he would find a publisher for the full text, provided he could retrieve the film rights using French copyright law.<ref name=malvern1>{{cite news| url=http://www.thetimes.co.uk/tto/news/uk/article1947306.ece| title=The Graduate's not-so-happy sequel| last=Malvern| first=Jack| date=18 April 2006| work=The Times| publisher=timesonline.co.uk| accessdate=2014-03-03}}</ref> On May 30, 2006, ''The Times'' reported that Webb had signed a publishing deal for ''Home School'' with [[Random House]] which he hoped would enable him to instruct French lawyers to attempt to retrieve his rights. The novel was published in Britain in 2007.<ref name=malvern2>{{cite news| first=Jack| last=Malvern| title=At last, Mrs Robinson is getting her groove back| work=The Times| publisher=timesonline.co.uk| date=30 May 2006| accessdate=2011-04-13| url=http://entertainment.timesonline.co.uk/tol/arts_and_entertainment/article669582.ece}}</ref>\n\nIn [[Robert Altman]]'s black comedy about Hollywood titled ''[[The Player (1992 film)|The Player]]'', Buck Henry pitches a sequel to ''The Graduate'' to producer Griffin Mill (played by [[Tim Robbins]]) during the opening sequence of the film.\n\n== In popular culture ==\n\nBancroft's line \"I am not trying to seduce you\" was sampled in two [[1990s in music|1990s]] songs; ''[[Too Funky]]'' by [[George Michael]], and ''[[Macarena]]'' by [[Los del R\u00edo]].<ref name=\"WhoSampled\">[https://www.whosampled.com/movie/The-Graduate/ \"The Graduate\"] on ''Whosampled''. Retrieved February 26 2020.</ref>\n\n==See also==\n* [[1967 in film]]\n* [[List of American films of 1967]]\n\n==References==\n{{Reflist}}\n\n===Bibliography===\n* {{cite web | last=Kashner | first=Sam | title=Here's to You, Mr. Nichols: The Making of The Graduate | website=[[Vanity Fair (magazine)|Vanity Fair]] | url=https://www.vanityfair.com/news/2008/03/graduate200803 | date=February 25, 2008 }}\n* Whitehead, J. W. (2011). ''Appraising ''The Graduate'': The Mike Nichols Classic and Its Impact in Hollywood''. McFarland. {{ISBN|978-0-7864-6306-0}}.\n\n==Further reading==\n* {{Cite book |last=Gray |first=Beverly |year=2017 |title=Seduced by Mrs. Robinson: How ''The Graduate'' Became the Touchstone of a Generation |url=https://books.google.com/books?id=yZbfDQAAQBAJ&printsec=frontcover#v=twopage&q&f=false |location=Chapel Hill, N.C. |publisher=Algonquin Books of Chapel Hill |isbn=9781616207663 |oclc=990141379}}\n\n==External links==\n{{wikiquote}}\n{{commons category|The Graduate}}\n* {{Official website|http://www.mgm.com/#/our-titles/772/The-Graduate/}}\n* {{AFI film|23387}}\n* {{IMDb title|0061722}}\n* {{TCMDb title|18530}}\n* {{AllMovie title|20431}}\n* {{Rotten Tomatoes|graduate}}\n* {{Mojo title|graduate}}\n*[https://www.criterion.com/current/posts/3909-the-graduate-intimations-of-a-revolution ''The Graduate: Intimations of a Revolution''] an essay by [[Frank Rich]] at [[The Criterion Collection]]\n\n{{The Graduate (novel)}}\n{{Navboxes\n|title = Awards for ''The Graduate''\n|list =\n{{BAFTA Best Film}}\n{{GoldenGlobeBestMotionPictureMusicalComedy 1961-1980}}\n}}\n{{Mike Nichols}}\n{{Buck Henry}}\n{{Portal bar|Film|United States|Comedy|1960s}}\n\n{{DEFAULTSORT:Graduate}}\n[[Category:1960s comedy-drama films]]\n[[Category:1960s coming-of-age films]]\n[[Category:1960s independent films]]\n[[Category:1960s satirical films]]\n[[Category:1960s sex comedy films]]\n[[Category:1967 films]]\n[[Category:Adultery in films]]\n[[Category:American comedy-drama films]]\n[[Category:American coming-of-age films]]\n[[Category:American films]]\n[[Category:American independent films]]\n[[Category:American satirical films]]\n[[Category:American sex comedy films]]\n[[Category:Best Film BAFTA Award winners]]\n[[Category:Best Musical or Comedy Picture Golden Globe winners]]\n[[Category:Embassy Pictures films]]\n[[Category:English-language films]]\n[[Category:Films about suburbia]]\n[[Category:Films about virginity]]\n[[Category:Films about weddings]]\n[[Category:Films based on American novels]]\n[[Category:Films based on romance novels]]\n[[Category:Films directed by Mike Nichols]]\n[[Category:Films featuring a Best Musical or Comedy Actress Golden Globe winning performance]]\n[[Category:Films scored by Dave Grusin]]\n[[Category:Films set in 1967]]\n[[Category:Films set in Los Angeles]]\n[[Category:Films set in San Francisco]]\n[[Category:Films set in Santa Barbara, California]]\n[[Category:Films set in the San Francisco Bay Area]]\n[[Category:Films set in universities and colleges]]\n[[Category:Films shot in San Francisco]]\n[[Category:Films whose director won the Best Directing Academy Award]]\n[[Category:Films whose director won the Best Direction BAFTA Award]]\n[[Category:Films whose director won the Best Director Golden Globe]]\n[[Category:Films whose writer won the Best Screenplay BAFTA Award]]\n[[Category:Films with screenplays by Buck Henry]]\n[[Category:Sexuality and age in fiction]]\n[[Category:United States National Film Registry films]]\n", "text_old": "{{Other uses}}\n{{short description|1967 romantic comedy-drama movie directed by Mike Nichols}}\n{{Use mdy dates|date=September 2013}}\n{{Infobox film\n| name           = The Graduate\n| image          = Graduateposter67.jpg\n| image_size     = 225px\n| alt            = \n| caption        = Theatrical release poster\n| director       = [[Mike Nichols]]\n| producer       = [[Lawrence Turman]]\n| screenplay     = {{unbulleted list|[[Calder Willingham]]|[[Buck Henry]]}}\n| based on       = {{Based on|''[[The Graduate (novel)|The Graduate]]''|[[Charles Webb (author)|Charles Webb]]}}\n| starring       = {{Plainlist|\n* [[Anne Bancroft]]\n* [[Dustin Hoffman]]\n* [[Katharine Ross]]}}\n| music          = {{unbulleted list|[[Paul Simon]] {{small|(songs)}}|[[Dave Grusin]] {{small|(score)}}}}\n| cinematography = [[Robert Surtees (cinematographer)|Robert Surtees]]\n| editing        = [[Sam O'Steen]]\n| studio         = Mike Nichols/Lawrence Turman Productions\n| distributor    = {{unbulleted list|[[Embassy Pictures]] {{small|(US)}}|[[United Artists]] {{small|(International)}}}}\n| released       = {{Film date|1967|12|22}}\n| runtime        = 106 minutes<!--Theatrical runtime: 105:19--><ref name=bbfc>{{cite web| title=The Graduate|url=http://www.bbfc.co.uk/releases/graduate-1970-1| work=[[United Artists]]| publisher=[[British Board of Film Classification]]| date=July 1, 1970|accessdate=2013-09-20}}</ref>\n| country        = United States\n| language       = English\n| budget         = $3 million\n| gross          = $104.9 million {{small|(North America)}}<ref name=mojo>{{cite web| url=http://boxofficemojo.com/movies/?id=graduate.htm| website=[[Box Office Mojo]]| title=The Graduate, Box Office Information| accessdate=2012-03-08}}</ref><br />$85 million {{small|(worldwide rentals)}}<ref>{{cite book |first1=R. Serge |last1=Denisoff |first2=William D. |last2=Romanowski |title=Risky Business: Rock in Film |year=1991 |publisher=Transaction Publishers |isbn=9780887388439}}\n* ''The Graduate'': p. [https://books.google.co.uk/books?id=kT0fKUCTUC4C&pg=PA167 167]. \"World net rental was estimated at more than $85 million by January 1971.\"</ref>\n}}\n\n'''''The Graduate''''' is a 1967 American [[romance film|romantic]] [[comedy-drama|comedy-drama film]] directed by [[Mike Nichols]]<ref name=\"WVrev\">{{cite book| title=Variety's Film Reviews| date=December 20, 1967| page=6| isbn=978-0-8240-5210-2}}</ref> and written by [[Buck Henry]] and [[Calder Willingham]],<ref>{{cite news | first=Bosley | last=Crowther | author-link=Bosley Crowther | title=Graduating With Honors; 'The Graduate' | website=[[The New York Times]] | date=December 31, 1967 | url=https://www.nytimes.com/1967/12/31/archives/graduating-with-honors-the-graduate.html | access-date=September 14, 2019}}</ref> based on the [[The Graduate (novel)|1963 novel of the same name]] by [[Charles Webb (author)|Charles Webb]], who wrote it shortly after graduating from [[Williams College]]. The film tells the story of 21-year-old Benjamin Braddock ([[Dustin Hoffman]]), a recent college graduate with no well-defined aim in life, who is seduced by an older woman, Mrs. Robinson ([[Anne Bancroft]]), and then falls in love with her daughter Elaine ([[Katharine Ross]]).\n\nThe film was released on December 22, 1967, received positive reviews and grossed $104.9{{nbsp}}million in the U.S. and Canada. With the figures adjusted for inflation, the film's gross is ${{Format price|{{Inflation|US|104,945,305|1967}}}}, making it the 23rd [[list of highest-grossing films in the United States and Canada|highest-ever grossing film in the U.S. and Canada]].<ref name=\"all-time\">{{cite web| url=https://www.boxofficemojo.com/chart/top_lifetime_gross_adjusted/| website=[[Box Office Mojo]]| title=Domestic Grosses, Adjusted for Ticket Price Inflation| accessdate=2012-03-08}}</ref> It won the [[Academy Award for Best Director]] and was nominated in six other categories. In 1996, ''The Graduate'' was selected for preservation in the U.S. [[National Film Registry]] as being \"culturally, historically, or aesthetically significant.\" Initially, the film was placed at No.7 on [[AFI's 100 Years... 100 Movies]] list in 1998. When [[American Film Institute|AFI]] [[AFI's 100 Years...100 Movies (10th Anniversary Edition)|revised the list in 2007]], the film was moved to No.17.\n\n==Plot==\nIn 1967, Benjamin Braddock, aged 20, has earned his [[bachelor's degree]] from a college on the [[East Coast of the United States|East Coast]] and has returned home to a party celebrating his [[graduation]] at his parents' house in [[Pasadena, California]]. Benjamin has no idea of what to do with his life and is visibly unhappy as his parents deliver accolades and neighborhood friends ask him about his future plans. He hides from those who try to congratulate him. Mrs. Robinson, the wife of his father's law partner, insists that he drive her home. Benjamin is persuaded inside to have a drink and Mrs. Robinson attempts to seduce him. She invites him up to her daughter Elaine's room to see Elaine's portrait and then enters the room naked, making it clear that she is available to him. Benjamin rejects her but a few days later, he awkwardly organizes a meeting at the Taft Hotel, where he registers under the pseudonym Gladstone.\n\nBenjamin spends the rest of the summer relaxing around the pool by day, refusing to select a graduate school, and seeing Mrs. Robinson at the hotel by night. He discovers that he and Mrs. Robinson have nothing to talk about. However, after Benjamin pesters her one evening, Mrs. Robinson reveals that she entered into a loveless marriage when she accidentally became pregnant with Elaine. Both Mr. Robinson and Benjamin's parents encourage him to call Elaine, but, in private, Mrs. Robinson forbids him.\n\nBenjamin decides to take Elaine on a date in order to  ruin it: he ignores her, drives dangerously, and takes her to a strip club. After she runs out of the club in tears, he changes his mind, apologizes for his behavior, and discovers that Elaine is someone he is happy to be around. In search of a late-night drink they visit the Taft Hotel, but when the staff greet Benjamin as \"Mr. Gladstone\", Elaine deduces that he has been having an affair with a married woman. She accepts his acknowledgement that the affair is over, but an angry Mrs. Robinson threatens to tell Elaine her version of their affair. To prevent this, Benjamin tells Elaine that the married woman was her mother.\n\nElaine is disgusted and returns to school at [[University of California, Berkeley|Berkeley]]. Benjamin follows her there and tries to charm her. She reveals that her mother's story is that he [[rape]]d her while she was [[Alcohol intoxication|drunk]], and she refuses to believe that her mother actually seduced Benjamin.\n\nAfter [[stalking]] her for several days and continuously proposing to her, Benjamin begins to make amends with Elaine. However, Mr. Robinson arrives at Berkeley after learning about the affair, confronts Benjamin at his rooming house, and threatens to put him behind bars if Benjamin sees his daughter again. Mr. Robinson then forces Elaine to drop out of college and takes her away to marry Carl, a classmate with whom she briefly had a relationship.\n\nReturning to Pasadena in search of Elaine, Benjamin breaks into the Robinson home but encounters Mrs. Robinson. She tells him he will not be able to stop the wedding with Carl and then calls the police, claiming that her house is being burglarized.\n\nBenjamin visits Carl's fraternity brothers who tell him that the wedding is in [[Santa Barbara, California|Santa Barbara]] that morning. He rushes to the church and arrives just as Elaine is married, witnessing the kiss. He bangs on the glass at the back of the church and screams \"Elaine!\" frantically. After hesitating, Elaine screams \"Ben!\" and looks at him pitifully. He rushes toward her, and a fight ensues as guests try to stop the two from leaving together. Elaine manages to break free from her mother, who then slaps her. Benjamin manages to keep the guests at bay by picking up a large cross and wielding it, then jamming the church doors shut with it. Both he and Elaine then run into the street to flag down a passing bus and take the back seat, [[Elopement|eloping]].\n\nHowever, as they settle into their seats, their faces change from happiness to uncertainty as \"[[The Sound of Silence]]\" plays.\n\n==Cast==\n{{div col}}\n* [[Anne Bancroft]] as Mrs. Robinson\n* [[Dustin Hoffman]] as Benjamin Braddock\n* [[Katharine Ross]] as Elaine Robinson\n* [[William Daniels]] as Mr. Braddock\n* [[Murray Hamilton]] as Mr. Robinson\n* [[Elizabeth Wilson]] as Mrs. Braddock\n* [[Buck Henry]] as Room clerk\n* Brian Avery as Carl Smith\n* [[Walter Brooke]] as Mr. McGuire\n* [[Norman Fell]] as Mr. McCleery\n* [[Alice Ghostley]] as Mrs. Singleman\n* [[Marion Lorne]] as Miss DeWitte\n{{div col end}}\n\n==Production==\n\n===Casting===\nNichols' first choice for Mrs. Robinson was French actress [[Jeanne Moreau]].<ref>The audio commentary by Mike Nichols and Steven Soderbergh in Criterion Collection BD and DVD.</ref> The idea behind this was that in the French culture, the \"older\" women tended to \"train\" the younger men in sexual matters (it is a cliche). There were numerous actors considered or tested for, or who wanted, roles in the film. [[Doris Day]] turned down an offer because the nudity required by the role offended her.<ref name=mcgee>{{cite book| title=Doris Day: Sentimental Journey| url=https://books.google.com/books?id=cfbcA3zFlNgC&pg=PT326&dq=doris+day+graduate&hl=en&sa=X&ei=y-8UU9-RNOfN0wHi5IHQAg&ved=0CEYQ6AEwAw#v=onepage&q=graduate&f=false| last=McGee| first=Garry| date=November 22, 2011| page=160| publisher=McFarland| isbn=978-0-7864-6107-3| accessdate=2014-03-03}}</ref> [[Joan Crawford]] inquired as to play the part, while [[Lauren Bacall]] and [[Audrey Hepburn]] both wanted the role. [[Patricia Neal]] turned down the film as she had recently recovered from a stroke and did not feel ready to accept such a major role. [[Geraldine Page]] also turned it down. Other actors considered for the part included [[Claire Bloom]], [[Angie Dickinson]], [[Sophia Loren]], [[Judy Garland]], [[Rita Hayworth]], [[Susan Hayward]], [[Anouk Aim\u00e9e]], [[Jennifer Jones]], [[Deborah Kerr]], [[Eva Marie Saint]], [[Rosalind Russell]], [[Simone Signoret]], [[Jean Simmons]], [[Lana Turner]], [[Eleanor Parker]], [[Anne Baxter]] and [[Shelley Winters]]. [[Angela Lansbury]] also asked about playing the part. [[Ava Gardner]] sought the role of Mrs. Robinson, and reportedly called Nichols saying,\"I want to see you! I want to talk about this ''Graduate'' thing!\" Nichols did not seriously consider her for the role (he wanted a younger woman as Bancroft was 35 and Gardner was 45), but did end up visiting her hotel. He later recounted that \"she sat at a little French desk with a telephone, she went through every movie star clich\u00e9. She said, 'All right, let's talk about your movie. First of all, I strip for nobody.'\" Meanwhile, [[Natalie Wood]] turned down not only the role of Mrs. Robinson, but also that of Elaine.\n\nFor the character of Elaine, casting was also an issue. [[Patty Duke]] turned down the part as she did not want to work at the time. [[Faye Dunaway]] was also considered for Elaine, but had to turn it down, in favor of ''[[Bonnie and Clyde (film)|Bonnie and Clyde]]''. [[Sally Field]] and [[Shirley MacLaine]] refused the role as well. [[Raquel Welch]] and [[Joan Collins]] both wanted the role, but did not succeed in getting it. [[Carroll Baker]] tested, but was said to have been too old to portray Anne Bancroft's daughter. [[Candice Bergen]] screen-tested as well, as did [[Goldie Hawn]] and [[Jane Fonda]]. Additionally, [[Ann-Margret]], [[Elizabeth Ashley]], [[Carol Lynley]], [[Sue Lyon]], [[Yvette Mimieux]], [[Suzanne Pleshette]], [[Lee Remick]], [[Pamela Tiffin]], [[Julie Christie]], and [[Tuesday Weld]] were all on the director's shortlist before [[Katharine Ross]] was cast.\n\nWhen [[Dustin Hoffman]] auditioned for the role of Benjamin, he was just short of his 30th birthday at the time of filming. He was asked to perform a love scene with Ross, having previously never done one during his acting classes and believed that, as he said later, \"a girl like [Ross] would never go for a guy like me in a million years.\" Ross agreed, believing that Hoffman \"look[ed] about 3 feet tall ... so unkempt. This is going to be a disaster.\" Producer [[Joseph E. Levine]] later admitted that he at first believed that Hoffman \"was one of the messenger boys.\" Despite&mdash;or perhaps because of\u2014Hoffman's awkwardness, Nichols chose him for the film.<ref name=\"life19671124\">{{cite news| url=https://books.google.com/books?id=eEkEAAAAMBAJ&lpg=PA71&pg=PA111#v=onepage&f=true| title=The Graduate| work=[[Life (magazine)|Life]]| date=24 November 1967| accessdate=2014-03-03| last=Zeitlin| first=David| page=111}}</ref> \"As far as I'm concerned, Mike Nichols did a very courageous thing casting me in a part that I was not right for, meaning I was Jewish,\" said Hoffman. \"In fact, many of the reviews were very negative. It was kind of veiled anti-Semitism.... I was called 'big-nosed' in the reviews, 'a nasal voice'.\"<ref>{{cite web | url=https://www.680news.com/2015/03/25/dustin-hoffman-says-he-understands-the-worries-of-young-singers-in-boychoir/ | title=Dustin Hoffman says he understands the worries of young singers in 'Boychoir' | first=Victoria | last=Ahearn | date=March 25, 2015 | work=680 NEWS | accessdate=2018-11-27}}</ref> Before Hoffman was cast, [[Robert Redford]] and [[Warren Beatty]] were among the top choices. Beatty turned the film down as he was occupied with ''[[Bonnie and Clyde (film)|Bonnie and Clyde]]''. Redford tested for the part of Benjamin (with [[Candice Bergen]] as Elaine), but Nichols thought Redford did not possess the underdog quality Benjamin needed.<ref name=kashner>{{cite magazine | title=Here's to You, Mr. Nichols: The Making of ''The Graduate'' | url=https://www.vanityfair.com/news/2008/03/graduate200803 | last=Kashner| first=Sam | work=[[Vanity Fair (magazine)|Vanity Fair]] | date=March 2008 | accessdate=2018-11-27}}</ref>\n\nIn the role of Mr. Robinson, [[Gene Hackman]] was originally cast, but just before filming began, the director decided he was too young and decided to replace him. [[Marlon Brando]], [[Howard Duff]], [[Brian Keith]], [[George Peppard]], [[Jack Palance]], [[Frank Sinatra]], [[Walter Matthau]] and [[Gregory Peck]] were all other choices for the role that [[Murray Hamilton]] eventually played. [[Susan Hayward]] was the first choice for Benjamin's mother, Mrs. Braddock, but the role was given to [[Elizabeth Wilson]]. And to play Mr. Braddock, [[Yul Brynner]], [[Kirk Douglas]], [[Jack Lemmon]], [[Robert Mitchum]], [[Karl Malden]], [[Christopher Plummer]] and [[Ronald Reagan]] (who had been [[Governor of California]] for nearly a year when the film was released) all came close to getting the role that ended up going to [[William Daniels]].<ref name=kashner />\n\n===Filming locations===\nMany of the exterior university campus shots of Berkeley were actually filmed on the brick campus of [[University of Southern California|USC]] in [[Los Angeles]].<ref name=USCfilming>{{cite web |title=USC's Lists & Urban Legends: Just a Few of the Feature Films Shot on the University Park Campus |url=http://www.usc.edu/dept/pubrel/trojan_family/spring06/Lists.html |last=Moore |first=Annette |work=USC Trojan Family Magazine |date=Spring 2006 |accessdate=2014-03-03 |url-status=dead |archiveurl=https://web.archive.org/web/20130527071350/http://www.usc.edu/dept/pubrel/trojan_family/spring06/Lists.html |archivedate=May 27, 2013 |df=mdy-all }}</ref>\n\nThe church used for the wedding scene is actually the [[United Methodist Church]] in [[La Verne, California|La Verne]]. In a commentary audio released with the 40th anniversary DVD, Hoffman revealed that he was uneasy about the scene in which he pounds on the church window, as the minister of the [[Church (building)|church]] had been watching the filming disapprovingly. The wedding scene was highly influenced by the ending of the 1924 comedy film ''[[Girl Shy]]'' starring [[Harold Lloyd]], who also served as an advisor for the scene in ''The Graduate''.<ref>{{cite web|url=http://www.brownpapertickets.com/event/1443795|title=Silent Salon 2015 // Girl Shy|publisher=brownpapertickets.com}}</ref><ref>{{cite web|url=http://www.doctormacro.com/Movie%20Summaries/G/Girl%20Shy.htm|title=Girl Shy|publisher=doctormacro.com}}</ref>\n\n===Music===\n{{See also|The Graduate (soundtrack)}}\nThe film boosted the profile of [[folk-rock]] duo [[Simon & Garfunkel]]. Originally, Nichols and O'Steen used their existing songs like \"[[The Sound of Silence]]\" merely as a pacing device for the editing until Nichols decided that substituting original music would not be effective and decided to include them on the soundtrack, an unusual move at that time.<ref name=harris>{{cite book |last=Harris |first=Mark |title=Pictures at a Revolution |url=https://archive.org/details/picturesatrevolu00harr_0/page/360 |date=February 14, 2008 |publisher=The Penguin Press |pages=[https://archive.org/details/picturesatrevolu00harr_0/page/360 360\u20131] |isbn=978-1-5942-0152-3 |url-access=registration }}</ref>\n\nAccording to a ''[[Variety (magazine)|Variety]]'' article by [[Peter Bart]] in the May 15, 2005, issue, [[Lawrence Turman]], his producer, then made a deal for Simon to write three new songs for the movie. By the time they had nearly finished editing the film, Simon had only written one new song. Nichols begged him for more, but Simon, who was touring constantly, told him he did not have the time. He did play him a few notes of a new song he had been working on; \"It's not for the movie... it's a song about times past\u2014about [[Eleanor Roosevelt|Mrs. Roosevelt]] and [[Joe DiMaggio]] and stuff.\" Nichols advised Simon, \"It's now about [[Mrs. Robinson]], not Mrs. Roosevelt.\"<ref name=bart>{{cite news |url=https://variety.com/2005/film/columns/the-perfect-pic-alignment-1117922805/ |work=[[Variety (magazine)|Variety]] |first=Peter |last=Bart |author-link=Peter Bart |title=The perfect pic alignment |date=May 15, 2005}}</ref>\n\n==Reception==\n\n===Critical response===\n''The Graduate'' was met with generally positive reviews from critics upon its release. A.D. Murphy of ''[[Variety (magazine)|Variety]]'' and [[Roger Ebert]] of the ''[[Chicago Sun-Times]]'' praised the film, with Murphy describing it as a \"delightful satirical comedy-drama\" <ref name=\"variety\">{{cite news |title=Film Reviews\u2014The Graduate |url=https://variety.com/1967/film/reviews/the-graduate-1117791319/ |first=A.D. |last=Murphy |work=Variety |date=December 18, 1967 |accessdate=March 15, 2018}}</ref> and Ebert claiming it was the \"funniest American comedy of the year\".<ref name=\"ebert\">{{cite news |url=http://rogerebert.suntimes.com/apps/pbcs.dll/article?AID=/19671226/REVIEWS/712260301/1023 |title=The Graduate |first=Roger |last=Ebert |author-link=Roger Ebert |work=[[Chicago Sun-Times]] |date=December 26, 1967 |accessdate=2011-04-13}}</ref> However, ''[[Life (magazine)|Life]]'' critic [[Richard Schickel]] felt the film \"starts out to satirize the alienated spirit of modern youth, does so with uncommon brilliance for its first half, but ends up selling out to the very spirit its creators intended to make fun of... It's a shame-- they were halfway to something wonderful when they skidded on a patch of [[Brylcreem|greasy kid stuff]].\" [[Pauline Kael]] wondered, \"How could you convince them [younger viewers] that a movie that sells innocence is a very commercial piece of work when they're so clearly in the market to buy innocence?\"<ref>Gray, Beverly, Seduced by Mrs. Robinson, Algonquin Books of Chapel Hill, 2017, pg. 166-167</ref>\n\nModern{{when?|date=September 2019}} critics continue to praise the film, if not always with the same ardor. For the film's thirtieth anniversary reissue, Ebert retracted some of his previous praise for the film, noting that he felt its time had passed and that he now had more sympathy for Mrs. Robinson than Benjamin (whom he considered \"an insufferable creep\"), viewing one's sympathy for Mrs. Robinson and disdainful attitude toward Ben as a function of aging and wisdom.<ref name=\"ebert30\">{{cite news |title=The Graduate |url=http://rogerebert.suntimes.com/apps/pbcs.dll/article?AID=/19970328/REVIEWS/703280304/1023 |first=Roger |last=Ebert |author-link=Roger Ebert |work=Chicago Sun-Times |date=March 28, 1997 |accessdate=2011-04-13}}</ref> He, along with [[Gene Siskel]], gave the film a positive if unenthusiastic review on the television program ''[[At the Movies with Ebert & Roeper|Siskel & Ebert]]''.<ref name=siskel>{{cite episode |series=Siskel & Ebert at the Movies |url=http://siskelandebert.org/video/2XNKBRRX1HXR/LiarLiar--Crash--Selena--The-Graduate-1997 |airdate=March 22, 1997 |season=11 |number=28 |publisher=Siskel&Ebert.org |title=LiarLiar / Crash / Selena / The Graduate (1997) |minutes=3:40 |transcript=TV.com: Siskel & Ebert at the Movies Season 11 Episode 28 |transcripturl=http://www.tv.com/shows/siskel-and-ebert-at-the-movies/week-of-march-22-1997-1226197/ |accessdate=2014-03-03}}</ref> Furthermore, the film's rating in the AFI list of the greatest American films fell from seventh in 1997 to seventeenth in the 2007 update. Lang Thompson, however, argued that \"it really hasn't dated much\".<ref>{{cite web|url=http://www.tcm.com/this-month/article/121604%7C88172/The-Graduate.html|title=The Graduate|last=Thompson|first=Lang|publisher=Turner Classic Movies, Inc.|accessdate=February 16, 2017}}</ref>\n\n[[Review aggregator]] [[Rotten Tomatoes]] gives the film an approval rating of 86% based on 80 reviews, with an average rating of 8.85/10. The site's consensus reads, \"The music, the performances, the precision in capturing the post-college malaise\u2014''The Graduate''{{'}}s coming-of-age story is indeed one for the ages.\"<ref>{{cite web|url=http://www.rottentomatoes.com/m/graduate/|title=The Graduate|date=April 16, 2019|website=Rotten Tomatoes}}</ref> On the similar website [[Metacritic]], the film holds a score of 83 out of 100, based on 19 critics, indicating \"universal acclaim\".<ref>{{cite web|url=http://www.metacritic.com/movie/the-graduate|title=The Graduate|website=Metacritic}}</ref>\n\n===Awards and honors===\nThe film received [[Academy Awards|Academy Award]] nominations for [[Academy Award for Best Picture|Best Picture]] (producer Lawrence Turman), [[Academy Award for Best Actor|Best Actor]] (Dustin Hoffman), [[Academy Award for Best Actress|Best Actress]] (Anne Bancroft), [[Academy Award for Best Supporting Actress|Best Supporting Actress]] (Katharine Ross), [[Academy Award for Best Adapted Screenplay|Best Adapted Screenplay]] (Buck Henry and Calder Willingham), and [[Academy Award for Best Cinematography|Best Cinematography]] (Robert L. Surtees). Mike Nichols won the [[Academy Award for Best Director]].\n\nThe film also received [[Golden Globe Award]] nominations for [[Golden Globe Award for Best Actor \u2013 Motion Picture Musical or Comedy|Best Actor \u2013 Motion Picture Musical or Comedy]] (Hoffman), and [[Golden Globe Award for Best Screenplay|Best Screenplay]] (Henry and Willingham). Bancroft won the [[Golden Globe Award for Best Actress \u2013 Motion Picture Musical or Comedy]], Nichols won the [[Golden Globe Award for Best Director]], producers Turman and [[Joseph E. Levine]] won the [[Golden Globe Award for Best Motion Picture \u2013 Musical or Comedy]], Hoffman won the [[Golden Globe Award for New Star of the Year \u2013 Actor]], and Ross won the [[Golden Globe Award for New Star of the Year \u2013 Actress]].\n\nIn addition, the film won the [[BAFTA Award for Best Film]], [[BAFTA Award for Best Direction]] (Nichols), [[BAFTA Award for Most Promising Newcomer to Leading Film Roles]] (Hoffman), the [[BAFTA Award for Best Editing]] ([[Sam O'Steen]]). Bancroft was nominated for the [[BAFTA Award for Best Actress in a Leading Role]].\n\nIn 1996, ''The Graduate'' was selected for preservation in the U.S. [[National Film Registry]] by the [[Library of Congress]] as being \"culturally, historically, or aesthetically significant\", and placed #23 on the [[list of highest-grossing films in the United States and Canada]], adjusted for inflation.<ref name=\"all-time\"/>\n\nYears later in interviews, Bancroft stated that Mrs. Robinson was the role with which she was most identified, and added, \"Men still come up to me and tell me 'You were my first sexual fantasy.'\"{{citation needed|date=February 2020}}\n\nThe film is listed in ''[[1001 Movies You Must See Before You Die]]''.<ref name=\"1001before\">{{cite book| title=1001 Movies You Muse See Before You Die| publisher=Quintessence Editions Ltd.| editor-first=Steven Jay| editor-last=Schneider| isbn=978-0-7641-6151-3| url=http://1001beforeyoudie.com/| place=London| date=September 2003| url-status=dead| archiveurl=https://web.archive.org/web/20140110124836/http://1001beforeyoudie.com/| archivedate=January 10, 2014| df=mdy-all}}</ref>\n\nThe film is recognized by [[American Film Institute]] in these lists:\n* 1998: [[AFI's 100 Years...100 Movies]] \u2013 #7<ref>{{cite web|last= |first= |title=AFI's 100 Years...100 Movies |url=http://www.afi.com/Docs/100Years/movies100.pdf |publisher=[[American Film Institute]] |date= |accessdate=2016-07-17}}</ref>\n* 2000: [[AFI's 100 Years...100 Laughs]] \u2013 #9<ref>{{cite web|last= |first= |title=AFI's 100 Years...100 Laughs |url=http://www.afi.com/Docs/100Years/laughs100.pdf |publisher=[[American Film Institute]] |date= |accessdate=2016-07-17}}</ref>\n* 2002: [[AFI's 100 Years...100 Passions]] \u2013 #52<ref>{{cite web|last= |first= |title=AFI's 100 Years...100 Passions |url=http://www.afi.com/Docs/100Years/passions100.pdf |publisher=[[American Film Institute]] |date= |accessdate=2016-07-17}}</ref>\n* 2004: [[AFI's 100 Years...100 Songs]]:\n** \"[[Mrs. Robinson]]\" \u2013 #6<ref>{{cite web|last= |first= |title=AFI's 100 Years...100 Songs |url=http://www.afi.com/Docs/100Years/songs100.pdf |publisher=[[American Film Institute]] |date= |accessdate=2016-07-17}}</ref>\n* 2005: [[AFI's 100 Years...100 Movie Quotes]]:\n** Mr. McGuire: \"Plastics.\" \u2013 #42<ref name=\"AFI Quotes\">{{cite web|last= |first= |title=AFI's 100 Years...100 Movie Quotes |url=http://www.afi.com/Docs/100Years/quotes100.pdf |publisher=[[American Film Institute]] |date= |accessdate=2016-07-17}}</ref>\n** Benjamin Braddock: \"Mrs. Robinson, you're trying to seduce me. Aren't you?\" \u2013 #63<ref name=\"AFI Quotes\" />\n* 2007: [[AFI's 100 Years...100 Movies (10th Anniversary Edition)]] \u2013 #17<ref>{{cite web|last= |first= |title=AFI's 100 Years...100 Movies (10th Anniversary Edition) |url=http://www.afi.com/Docs/100Years/100Movies.pdf |publisher=[[American Film Institute]] |date= |accessdate=2016-07-17}}</ref>\n\n[[National Film Registry]] \u2014 Inducted in 1996.<ref>{{Cite web|url=https://www.loc.gov/programs/national-film-preservation-board/film-registry/complete-national-film-registry-listing/|title=Complete National Film Registry Listing {{!}} Film Registry {{!}} National Film Preservation Board {{!}} Programs at the Library of Congress {{!}} Library of Congress|website=Library of Congress, Washington, D.C. 20540 USA|access-date=2020-02-27}}</ref>\n\n===Release===\n''The Graduate'' was released in theatres on December 22, 1967. The film was released on [[Blu-ray]] by [[Embassy Pictures|Embassy Home Entertainment]] on January 25, 2011.<ref>{{cite AV media|url=https://www.amazon.com/Graduate-The-Blu-ray/dp/B004GDB76S/ref=tmm_blu_title_1?_encoding=UTF8&qid=&sr=|title=The Graduate|medium=[[Blu-ray]]|publisher=[[Embassy Pictures|Embassy Home Entertainment]]|people=[[Mike Nichols|Nichols, Mike]]|location=[[Los Angeles]]|date=January 25, 2011|accessdate=August 10, 2019|asin=B004GDB76S}}</ref> ''The Graduate'' was released on [[DVD]] by Embassy Home Entertainment on January 21, 2014.<ref>{{cite AV media|url=https://www.amazon.com/Graduate-Dustin-Hoffman/dp/B00079Z9VO|title=The Graduate|medium=[[DVD]]|publisher=[[Embassy Pictures|Embassy Home Entertainment]]|people=[[Mike Nichols|Nichols, Mike]]|location=[[Los Angeles]]|date=January 21, 2014|accessdate=August 10, 2019|asin=B00079Z9VO}}</ref>\n\n==Stage adaptation==\n[[Terry Johnson (dramatist)|Terry Johnson]]'s adaptation of the original novel and the film ran both on London's [[West End theatre|West End]] and on [[Broadway theatre|Broadway]], and has toured the United States. There is a [[Brazil]]ian version adapted by [[Miguel Falabella]]. Several actresses have starred as Mrs. Robinson, including [[Kathleen Turner]], [[Lorraine Bracco]], [[Jerry Hall]], [[Amanda Donohoe]], [[Morgan Fairchild]], [[Anne Archer]], [[Vera Fischer (actress)|Vera Fischer]], [[Patricia Richardson]] and [[Linda Gray]].\n\nThe stage production adds several scenes that are not in the novel or the film, as well as using material from both film and novel.<ref>{{cite web | last=Murray | first=Matthew | title=The Graduate | website=Talkin'Broadway | date=April 4, 2002 | url=https://www.talkinbroadway.com/world/Graduate.html | access-date=September 14, 2019}}</ref> It also uses songs by [[Simon & Garfunkel]] not used in the film, such as \"[[Bridge Over Troubled Water]]\" as well as music from other popular musicians from the era such as [[The Byrds]] and [[The Beach Boys]].<ref name=theatre>{{cite web | first=Barbara | last=Siegel | first2=Scott | last2=Siegel | title=The Graduate | website=TheaterMania | url=https://www.theatermania.com/new-york-city-theater/reviews/the-graduate_2064.html | date=April 5, 2002 | access-date=September 15, 2019}}</ref> The West End production opened at the [[Gielgud Theatre]] on April 5, 2000, after previews from March 24, with Kathleen Turner starring as Mrs. Robinson.<ref>{{cite web | last=Shenton | first=Mark | title=Kathleen Turner to Graduate to West End as Mrs. Robinson | website=[[Playbill]] | date=December 20, 1999 | url=http://www.playbill.com/article/kathleen-turner-to-graduate-to-west-end-as-mrs-robinson-com-86082 | access-date=September 14, 2019}}</ref><ref>{{cite web | last=Wolf | first=Matt | title=The Graduate \u2013 Turner's Mrs. Robinson Turns Heads in London's West End | website=Variety | date=April 10, 2000 | url=https://variety.com/2000/film/reviews/the-graduate-turner-s-mrs-robinson-turns-heads-in-london-s-west-end-1200461825/ | access-date=September 14, 2019}}</ref> The production closed in January 2002. Jerry Hall replaced Turner on July 31, 2000, followed by [[Amanda Donohoe]] from February 2001, Anne Archer from June 2001, and Linda Gray from October 2001.<ref>[http://news.bbc.co.uk/2/hi/entertainment/1768900.stm \" The Graduate's London term ends\"], bbc.co.uk, 18 January 2002</ref><ref>Davies, Hugh. [https://www.telegraph.co.uk/news/uknews/1308832/Curtain-rises-on-the-new-Mrs-Robinson.html \"Curtain rises on the new Mrs Robinson\"], telegraph.co.uk, 12 Jun 2001.</ref> The 2003 UK touring production starred [[Glynis Barber]] as Mrs. Robinson.<ref>{{cite web|url=https://www.telegraph.co.uk/culture/theatre/3601911/Glynis-keeps-her-kit-on-and-pulls-it-off.html|work=the Telegraph|title=Glynis keeps her kit on and pulls it off|date=5 September 2003|accessdate=18 May 2016}}</ref>\n\nThe Broadway production opened at the [[Plymouth Theatre]] on April 4, 2002, and closed on March 2, 2003, after 380 performances. Directed by Terry Johnson, the play featured the cast of [[Jason Biggs]] as Benjamin Braddock, [[Alicia Silverstone]] as Elaine Robinson, and [[Kathleen Turner]] as Mrs. Robinson. The play received no award nominations.<ref>[http://www.ibdb.com/production.php?id=13279 \" ''The Graduate'' on Broadway\"], ibdb.com, accessed May 12, 2015</ref> Linda Gray briefly filled in for Turner in September 2002. Lorraine Bracco replaced Turner from November 19, 2002.<ref>{{cite web | last=Gans | first=Andrew | last2=Simonson | first2=Robert | author-link2=Robert Simonson | title=Lorraine Bracco Officially Opens in Broadway Graduate Dec. 15 | website=Playbill | date=December 15, 2002 | url=http://www.playbill.com/article/lorraine-bracco-officially-opens-in-broadway-graduate-dec-15-com-109863 | access-date=September 14, 2019}}</ref>\n\n''The Graduate'' ran at the Cape Playhouse ([[Dennis, Massachusetts]]) in July 2011, and starred Patricia Richardson.<ref>{{cite web | last=Hetrick | first=Adam | title=Cape Playhouse Casts Patricia Richardson, Joel Higgins, Dee Hoty, Josh Grisetti and Bradley Dean for Summer | website=Playbill | date=June 3, 2011 | url=http://www.playbill.com/article/cape-playhouse-casts-patricia-richardson-joel-higgins-dee-hoty-josh-grisetti-and-bradley-dean-for-summer-com-179766 | access-date=September 14, 2019}}</ref>\n\n==Possible sequel==\nCharles Webb has written a [[sequel]] to his original novel titled ''[[Home School (novel)|Home School]]'', but initially refused to publish it in its entirety because of a contract he signed in the 1960s. When he sold [[film rights]] to ''The Graduate'', he surrendered the rights to any sequels. If he were to publish ''Home School'', [[Canal+]], the French media company that owns the rights to ''The Graduate'', would be able to adapt it for the screen without his permission.<ref name=\"guardian\">{{cite news| url=https://www.theguardian.com/uk/2005/mar/27/books.world| date=25 March 2005| accessdate=2007-10-12| first=David | last=Smith| work=[[The Guardian]]| title=What happened next? (the author will let you know after he dies)}}</ref> Extracts of ''Home School'' were printed in ''[[The Times]]'' on May 2, 2006.<ref name=\"webb\">{{cite news| title=Mrs Robinson Returns| url=http://www.timesonline.co.uk/tol/life_and_style/article711893.ece| date=2 May 2006| accessdate=2007-10-12| publisher=timesonline.co.uk| first=Charles| last=Webb| work=The Times}}</ref> Webb also told the newspaper that there was a possibility he would find a publisher for the full text, provided he could retrieve the film rights using French copyright law.<ref name=malvern1>{{cite news| url=http://www.thetimes.co.uk/tto/news/uk/article1947306.ece| title=The Graduate's not-so-happy sequel| last=Malvern| first=Jack| date=18 April 2006| work=The Times| publisher=timesonline.co.uk| accessdate=2014-03-03}}</ref> On May 30, 2006, ''The Times'' reported that Webb had signed a publishing deal for ''Home School'' with [[Random House]] which he hoped would enable him to instruct French lawyers to attempt to retrieve his rights. The novel was published in Britain in 2007.<ref name=malvern2>{{cite news| first=Jack| last=Malvern| title=At last, Mrs Robinson is getting her groove back| work=The Times| publisher=timesonline.co.uk| date=30 May 2006| accessdate=2011-04-13| url=http://entertainment.timesonline.co.uk/tol/arts_and_entertainment/article669582.ece}}</ref>\n\nIn [[Robert Altman]]'s black comedy about Hollywood titled ''[[The Player (1992 film)|The Player]]'', Buck Henry pitches a sequel to ''The Graduate'' to producer Griffin Mill (played by [[Tim Robbins]]) during the opening sequence of the film.\n\n== In popular culture ==\n\nBancroft's line \"I am not trying to seduce you\" was sampled in two [[1990s in music|1990s]] songs; ''[[Too Funky]]'' by [[George Michael]], and ''[[Macarena]]'' by [[Los del R\u00edo]].<ref name=\"WhoSampled\">[https://www.whosampled.com/movie/The-Graduate/ \"The Graduate\"] on ''Whosampled''. Retrieved February 26 2020.</ref>\n\n==See also==\n* [[1967 in film]]\n* [[List of American films of 1967]]\n\n==References==\n{{Reflist}}\n\n===Bibliography===\n* {{cite web | last=Kashner | first=Sam | title=Here's to You, Mr. Nichols: The Making of The Graduate | website=[[Vanity Fair (magazine)|Vanity Fair]] | url=https://www.vanityfair.com/news/2008/03/graduate200803 | date=February 25, 2008 }}\n* Whitehead, J. W. (2011). ''Appraising ''The Graduate'': The Mike Nichols Classic and Its Impact in Hollywood''. McFarland. {{ISBN|978-0-7864-6306-0}}.\n\n==Further reading==\n* {{Cite book |last=Gray |first=Beverly |year=2017 |title=Seduced by Mrs. Robinson: How ''The Graduate'' Became the Touchstone of a Generation |url=https://books.google.com/books?id=yZbfDQAAQBAJ&printsec=frontcover#v=twopage&q&f=false |location=Chapel Hill, N.C. |publisher=Algonquin Books of Chapel Hill |isbn=9781616207663 |oclc=990141379}}\n\n==External links==\n{{wikiquote}}\n{{commons category|The Graduate}}\n* {{Official website|http://www.mgm.com/#/our-titles/772/The-Graduate/}}\n* {{AFI film|23387}}\n* {{IMDb title|0061722}}\n* {{TCMDb title|18530}}\n* {{AllMovie title|20431}}\n* {{Rotten Tomatoes|graduate}}\n* {{Mojo title|graduate}}\n*[https://www.criterion.com/current/posts/3909-the-graduate-intimations-of-a-revolution ''The Graduate: Intimations of a Revolution''] an essay by [[Frank Rich]] at [[The Criterion Collection]]\n\n{{The Graduate (novel)}}\n{{Navboxes\n|title = Awards for ''The Graduate''\n|list =\n{{BAFTA Best Film}}\n{{GoldenGlobeBestMotionPictureMusicalComedy 1961-1980}}\n}}\n{{Mike Nichols}}\n{{Buck Henry}}\n{{Portal bar|Film|United States|Comedy|1960s}}\n\n{{DEFAULTSORT:Graduate}}\n[[Category:1960s comedy-drama films]]\n[[Category:1960s coming-of-age films]]\n[[Category:1960s independent films]]\n[[Category:1960s satirical films]]\n[[Category:1960s sex comedy films]]\n[[Category:1967 films]]\n[[Category:Adultery in films]]\n[[Category:American comedy-drama films]]\n[[Category:American coming-of-age films]]\n[[Category:American films]]\n[[Category:American independent films]]\n[[Category:American satirical films]]\n[[Category:American sex comedy films]]\n[[Category:Best Film BAFTA Award winners]]\n[[Category:Best Musical or Comedy Picture Golden Globe winners]]\n[[Category:Embassy Pictures films]]\n[[Category:English-language films]]\n[[Category:Films about suburbia]]\n[[Category:Films about virginity]]\n[[Category:Films about weddings]]\n[[Category:Films based on American novels]]\n[[Category:Films based on romance novels]]\n[[Category:Films directed by Mike Nichols]]\n[[Category:Films featuring a Best Musical or Comedy Actress Golden Globe winning performance]]\n[[Category:Films scored by Dave Grusin]]\n[[Category:Films set in 1967]]\n[[Category:Films set in Los Angeles]]\n[[Category:Films set in San Francisco]]\n[[Category:Films set in Santa Barbara, California]]\n[[Category:Films set in the San Francisco Bay Area]]\n[[Category:Films set in universities and colleges]]\n[[Category:Films shot in San Francisco]]\n[[Category:Films whose director won the Best Directing Academy Award]]\n[[Category:Films whose director won the Best Direction BAFTA Award]]\n[[Category:Films whose director won the Best Director Golden Globe]]\n[[Category:Films whose writer won the Best Screenplay BAFTA Award]]\n[[Category:Films with screenplays by Buck Henry]]\n[[Category:Sexuality and age in fiction]]\n[[Category:United States National Film Registry films]]\n[[Category:StudioCanal films]]\n", "name_user": "Skywatcher68", "label": "unsafe", "comment": "(Distributor of the DVD/Blu-ray only.)", "url_page": "//en.wikipedia.org/wiki/The_Graduate"}
{"title_page": "Message Passing Interface", "text_new": "'''Message Passing Interface''' ('''MPI''') is a standardized and portable [[message-passing]] standard designed by a group of researchers from academia and industry to function on a wide variety of [[parallel computing]] architectures.  The standard defines the syntax and semantics of a core of library routines useful to a wide range of users writing portable message-passing programs in [[C (programming language)|C]], [[C++]], and [[Fortran]].  There are several well-tested and efficient implementations of MPI, many of which are open-source or in the public domain.  These fostered the development of a parallel software industry, and encouraged development of portable and scalable large-scale parallel applications.\n\n==History==\n{{Unreferenced section|date=August 2015}}\nThe message passing interface effort began in the summer of 1991 when a small group of researchers started discussions at a mountain retreat in Austria. Out of that discussion came a Workshop on Standards for Message Passing in a Distributed Memory Environment held on April 29\u201330, 1992 in [[Williamsburg, Virginia]].<ref>{{cite report |id= ORNL/TM-12147 |osti= 10170156 |author= Walker DW |date= August 1992 |title= Standards for message-passing in a distributed memory environment |url= https://technicalreports.ornl.gov/1992/3445603661204.pdf |institution= Oak Ridge National Lab., TN (United States), Center for Research on Parallel Computing (CRPC) |format= pdf |pages= 25 |access-date= 2019-08-18 }}</ref> Attendees at Williamsburg discussed the basic features essential to a standard message-passing interface and established a working group to continue the standardization process. [[Jack Dongarra]], [[Tony Hey]], and David W. Walker put forward a preliminary draft proposal, \"MPI1\", in November 1992. In November 1992 a meeting of the MPI working group took place in Minneapolis and decided to place the standardization process on a more formal footing.  The MPI working group met every 6 weeks throughout the first 9 months of 1993.  The draft MPI standard was presented at the Supercomputing '93 conference in November 1993.<ref>{{cite conference |title= MPI: A Message Passing Interface |author= The MPI Forum, CORPORATE |date= November 15\u201319, 1993 |conference= Supercomputing '93 |conference-url= http://supercomputing.org/ |book-title= Proceedings of the 1993 ACM/IEEE conference on Supercomputing |publisher= ACM |location= Portland, Oregon, USA |pages= 878\u2013883 |isbn= 0-8186-4340-4 |doi= 10.1145/169627.169855 }}</ref> After a period of public comments, which resulted in some changes in MPI, version 1.0 of MPI was released in June 1994. These meetings and the email discussion together constituted the MPI Forum, membership of which has been open to all members of the [[High-performance computing | high-performance-computing]] community.\n\nThe MPI effort involved about 80 people from 40 organizations, mainly in the United States and Europe. Most of the major vendors of [[concurrent computer]]s were involved in MPI - along with researchers from universities, government laboratories, and [[industry]].\n\nMPI provides parallel hardware vendors with a clearly defined base set of routines that can be efficiently implemented. As a result, hardware vendors can build upon this collection of standard low-level routines to create higher-level routines for the distributed-memory communication environment supplied with their [[parallel machine]]s. MPI provides a simple-to-use portable interface for the basic user, yet one powerful enough to allow programmers to use the high-performance message passing operations available on advanced machines.\n\nIn an effort to create a universal standard for message passing, researchers incorporated the most useful features of several systems into MPI, rather than choosing one system to adopt as a standard. They adopted features from systems by IBM, [[Intel]], nCUBE, PVM, Express, P4 and PARMACS. The message-passing paradigm is attractive because of wide portability and can be used in communication for distributed-memory and shared-memory multiprocessors, networks of workstations, and a combination of these elements. The paradigm can apply in multiple settings, independent of network speed or of memory architecture.\n\nSupport for MPI meetings came in part from [[DARPA]] and from the US [[National Science Foundation]] under grant ASC-9310330, NSF Science and Technology Center Cooperative agreement number CCR-8809615, and from the Commission of the European Community through Esprit Project P6643.  The [[University of Tennessee]] also made financial contributions to the MPI Forum.\n\n== Overview ==\nMPI is a [[communication protocol]] for programming [[parallel computers]].  Both point-to-point and collective communication are supported.  MPI \"is a message-passing application programmer interface, together with protocol and semantic specifications for how its features must behave in any implementation.\"<ref>{{harvnb |Gropp |Lusk |Skjellum |1996 |p=3 }}</ref> MPI's goals are high performance, scalability, and portability. MPI remains the dominant model used in [[high-performance computing]] today.<ref>{{cite book|title=High-performance and Scalable MPI over InfiniBand with Reduced Memory Usage: An In-depth Performance Analysis|pages = 105|first1=Sayantan|last1=Sur|first2=Matthew J.|last2=Koop|first3=Dhabaleswar K.|last3=Panda|date=4 August 2017|publisher=ACM|doi=10.1145/1188455.1188565|chapter = MPI and communication---High-performance and scalable MPI over Infini ''Band'' with reduced memory usage|isbn = 978-0769527000}}</ref>\n\nMPI is not sanctioned by any major standards body; nevertheless, it has become a [[de facto standard|''de facto'' standard]] for [[communication]] among processes that model a [[parallel programming|parallel program]] running on a [[distributed memory]] system. Actual distributed memory supercomputers such as computer clusters often run such programs.\n\nThe principal MPI-1 model has no shared memory concept, and MPI-2 has only a limited [[distributed shared memory]] concept.  Nonetheless, MPI programs are regularly run on shared memory computers, and both [[MPICH]] and [[Open MPI]] can use shared memory for message transfer if it is available.<ref>[http://knem.gforge.inria.fr/ KNEM: High-Performance Intra-Node MPI Communication] \"MPICH2 (since release 1.1.1) uses KNEM in the DMA LMT to improve large message performance within a single node. Open MPI also includes KNEM support in its SM BTL component since release 1.5. Additionally, NetPIPE includes a KNEM backend since version 3.7.2.\"</ref><ref>{{cite web|url=https://www.open-mpi.org/faq/?category=sm|title=FAQ: Tuning the run-time characteristics of MPI sm communications|website=www.open-mpi.org}}</ref> Designing programs around the MPI model (contrary to explicit [[Shared memory (interprocess communication)|shared memory]] models) has advantages over [[Non-Uniform Memory Access|NUMA]] architectures since MPI encourages [[locality of reference|memory locality]]. Explicit shared memory programming was introduced in MPI-3.<ref>https://software.intel.com/en-us/articles/an-introduction-to-mpi-3-shared-memory-programming?language=en \"The MPI-3 standard introduces another approach to hybrid programming that uses the new MPI Shared Memory (SHM) model\"</ref><ref>[http://insidehpc.com/2016/01/shared-memory-mpi-3-0/ Shared Memory and MPI 3.0] \"Various benchmarks can be run to determine which method is best for a particular application, whether using MPI + OpenMP or the MPI SHM extensions.  On a fairly simple test case,  speedups over a base version that used point to point communication were up to 5X, depending on the message.\"</ref><ref>[http://www.caam.rice.edu/~mk51/presentations/SIAMPP2016_4.pdf Using MPI-3 Shared Memory As a Multicore Programming System] (PDF presentation slides)</ref>\n\nAlthough MPI belongs in layers 5 and higher of the [[OSI Reference Model]], implementations may cover most layers, with [[Internet socket|sockets]] and [[Transmission Control Protocol]] (TCP) used in the transport layer.\n\nMost MPI implementations consist of a specific set of routines directly callable from [[C (programming language)|C]], [[C++]], [[Fortran]] (i.e., an API) and any language able to interface with such libraries, including [[C Sharp (programming language)|C#]], [[Java (programming language)|Java]] or [[Python (programming language)|Python]]. The advantages of MPI over older message passing libraries are portability (because MPI has been implemented for almost every distributed memory architecture) and speed (because each [[implementation]] is in principle optimized for the hardware on which it runs).\n\nMPI uses [[Language Independent Specification]]s (LIS) for calls and language bindings. The first MPI standard specified [[ANSI C]] and Fortran-77 bindings together with the LIS. The draft was presented at Supercomputing 1994 (November 1994)<ref name=\"SC94\">[http://hpc.sagepub.com/content/8/3-4.toc Table of Contents \u2014 September 1994, 8 (3-4)]. Hpc.sagepub.com. Retrieved on 2014-03-24.</ref> <!-- (Obs: TO FIX: a reference must be included, because at sc94 site it is not possible to find references to support this statement: http://sc94.ameslab.gov/, http://sc94.ameslab.gov/AP/contents.html, http://www.pubzone.org/pages/publications/showVenue.do?venueId=13270) --> and finalized soon thereafter. About 128 functions constitute the MPI-1.3 standard which was released as the final end of the MPI-1 series in 2008.<ref name=\"MPI_Docs\">[http://www.mpi-forum.org/docs/ MPI Documents]. Mpi-forum.org. Retrieved on 2014-03-24.</ref>\n\n{{Anchor|VERSIONS}}\nAt present, the standard has several versions: version 1.3 (commonly abbreviated ''MPI-1''), which emphasizes message passing and has a static runtime environment, MPI-2.2 (MPI-2), which includes new features such as parallel I/O, dynamic process management and remote memory operations,<ref name=\"Gropp99adv-pp4-5\">{{harvnb|Gropp|Lusk|Skjellum|1999b|pp=4\u20135}}</ref> and MPI-3.1 (MPI-3), which includes extensions to the collective operations with non-blocking versions and extensions to the one-sided operations.<ref name=\"MPI_3.1\">[http://www.mpi-forum.org/docs/mpi-3.1/mpi31-report.pdf MPI: A Message-Passing Interface Standard<br/>Version 3.1, Message Passing Interface Forum, June 4, 2015]. http://www.mpi-forum.org. Retrieved on 2015-06-16.</ref>\nMPI-2's LIS specifies over 500 functions and provides language bindings for ISO [[C (programming language)|C]], ISO [[C++]], and [[Fortran 90]]. Object interoperability was also added to allow easier mixed-language message passing programming. A side-effect of standardizing MPI-2, completed in 1996, was clarifying the MPI-1 standard, creating the MPI-1.2.\n\n''MPI-2'' is mostly a superset of MPI-1, although some functions have been deprecated. MPI-1.3 programs still work under MPI implementations compliant with the MPI-2 standard.\n\n''MPI-3'' includes new Fortran 2008 bindings, while it removes deprecated C++ bindings as well as many deprecated routines and MPI objects.\n\nMPI is often compared with [[Parallel Virtual Machine]] (PVM), which is a popular distributed environment and message passing system developed in 1989, and which was one of the systems that motivated the need for standard parallel message passing. Threaded shared memory programming models (such as [[Pthreads]] and [[OpenMP]]) and message passing programming (MPI/PVM) can be considered as complementary programming approaches, and can occasionally be seen together in applications, e.g. in servers with multiple large shared-memory nodes.\n\n==Functionality==\nThe MPI interface is meant to provide essential virtual topology, [[synchronization]], and communication functionality between a set of processes (that have been mapped to nodes/servers/computer instances) in a language-independent way, with language-specific syntax (bindings), plus a few language-specific features. MPI programs always work with processes, but programmers commonly refer to the processes as processors. Typically, for maximum performance, each [[CPU]] (or [[multi-core (computing)|core]] in a multi-core machine) will be assigned just a single process. This assignment happens at runtime through the agent that starts the MPI program, normally called mpirun or mpiexec.\n\nMPI library functions include, but are not limited to, point-to-point rendezvous-type send/receive operations, choosing between a [[Cartesian tree|Cartesian]] or [[Graph (data structure)|graph]]-like logical process topology, exchanging data between process pairs (send/receive operations), combining partial results of computations (gather and reduce operations), synchronizing nodes (barrier operation) as well as obtaining network-related information such as the number of processes in the computing session, current processor identity that a process is mapped to, neighboring processes accessible in a logical topology, and so on. Point-to-point operations come in [[synchronization (computer science)|synchronous]], [[asynchronous i/o|asynchronous]], buffered, and ''ready'' forms, to allow both relatively stronger and weaker [[semantics]] for the synchronization aspects of a rendezvous-send. Many outstanding{{clarify|reason=What is an \"outstanding\" operation?|date=April 2015}} operations are possible in asynchronous mode, in most implementations.\n\nMPI-1 and MPI-2 both enable implementations that overlap communication and computation, but practice and theory differ. MPI also specifies ''[[thread safe]]'' interfaces, which have [[cohesion (computer science)|cohesion]] and [[coupling (computer science)|coupling]] strategies that help avoid hidden state within the interface. It is relatively easy to write multithreaded point-to-point MPI code, and some implementations support such code. [[Multithreading (computer architecture)|Multithreaded]] collective communication is best accomplished with multiple copies of Communicators, as described below.\n\n==Concepts==\nMPI provides a rich range of abilities. The following concepts help in understanding and providing context for all of those abilities and help the programmer to decide what functionality to use in their application programs. Four of MPI's eight basic concepts are unique to MPI-2.\n\n===Communicator===\nCommunicator objects connect groups of processes in the MPI session. Each communicator gives each contained process an independent identifier and arranges its contained processes in an ordered [[topology (disambiguation)|topology]]. MPI also has explicit groups, but these are mainly good for organizing and reorganizing groups of processes before another communicator is made. MPI understands single group intracommunicator operations, and bilateral intercommunicator communication. In MPI-1, single group operations are most prevalent. [[Bilateral synchronization|Bilateral]] operations mostly appear in MPI-2 where they include collective communication and dynamic in-process management.\n\nCommunicators can be partitioned using several MPI commands. These commands include <code>MPI_COMM_SPLIT</code>, where each process joins one of several colored sub-communicators by declaring itself to have that color.\n\n===Point-to-point basics===\nA number of important MPI functions involve communication between two specific processes. A popular example is <code>MPI_Send</code>, which allows one specified process to send a message to a second specified process. Point-to-point operations, as these are called, are particularly useful in patterned or irregular communication, for example, a [[data parallelism|data-parallel]] architecture in which each processor routinely swaps regions of data with specific other processors between calculation steps, or a [[master-slave (technology)|master-slave]] architecture in which the master sends new task data to a slave whenever the prior task is completed.\n\nMPI-1 specifies mechanisms for both [[blocking (computing)|blocking]] and non-blocking point-to-point communication mechanisms, as well as the so-called 'ready-send' mechanism whereby a send request can be made only when the matching receive request has already been made.\n\n===Collective basics===\n[[Collective operation|Collective functions]] involve communication among all processes in a process group (which can mean the entire process pool or a program-defined subset). A typical function is the <code>MPI_Bcast</code> call (short for \"[[broadcasting (computing)|broadcast]]\"). This function takes data from one node and sends it to all processes in the process group. A reverse operation is the <code>MPI_Reduce</code> call, which takes data from all processes in a group, performs an operation (such as summing), and stores the results on one node. <code>MPI_Reduce</code> is often useful at the start or end of a large distributed calculation, where each processor operates on a part of the data and then combines it into a result.\n\nOther operations perform more sophisticated tasks, such as <code>MPI_Alltoall</code> which rearranges ''n'' items of data such that the ''n''th node gets the ''n''th item of data from each.\n\n===Derived datatypes===\nMany MPI functions require that you specify the type of data which is sent between processes. This is because MPI aims to support heterogeneous environments where types might be represented differently on the different nodes<ref name=\"node37\">{{cite web|url=http://mpi-forum.org/docs/mpi-1.1/mpi-11-html/node37.html|title=Type matching rules|website=mpi-forum.org}}</ref> (for example they might be running different CPU architectures that have different [[endianness]]), in which case MPI implementations can perform ''data conversion''.<ref name=\"node37\" /> Since the C language does not allow a type itself to be passed as a parameter, MPI predefines the constants <code>MPI_INT</code>, <code>MPI_CHAR</code>, <code>MPI_DOUBLE</code> to correspond with <code>int</code>, <code>char</code>, <code>double</code>, etc.\n\nHere is an example in C that passes arrays of <code>int</code>s from all processes to one.  The one receiving process is called the \"root\" process, and it can be any designated process but normally it will be process 0.  All the processes ask to send their arrays to the root with <code>MPI_Gather</code>, which is equivalent to having each process (including the root itself) call <code>MPI_Send</code> and the root make the corresponding number of ordered <code>MPI_Recv</code> calls to assemble all of these arrays into a larger one:<ref>{{cite web|url=https://www.open-mpi.org/doc/v1.8/man3/MPI_Gather.3.php|title=MPI_Gather(3) man page (version 1.8.8)|website=www.open-mpi.org}}</ref>\n<source lang=\"c\">\nint send_array[100];\nint root = 0; /* or whatever */\nint num_procs, *recv_array;\nMPI_Comm_size(comm, &num_procs);\nrecv_array = malloc(num_procs * sizeof(send_array));\nMPI_Gather(send_array, sizeof(send_array) / sizeof(*send_array), MPI_INT,\n           recv_array, sizeof(send_array) / sizeof(*send_array), MPI_INT,\n           root, comm);\n</source>\n\nHowever, you may instead wish to send data as one block as opposed to 100 <code>int</code>s.  To do this define a \"contiguous block\" derived data type:\n<source lang=\"c\">\nMPI_Datatype newtype;\nMPI_Type_contiguous(100, MPI_INT, &newtype);\nMPI_Type_commit(&newtype);\nMPI_Gather(array, 1, newtype, receive_array, 1, newtype, root, comm);\n</source>\n\nFor passing a class or a data structure, <code>MPI_Type_create_struct</code> creates an MPI derived data type from <code>MPI_predefined</code> data types, as follows:\n<source lang=\"c\">\nint MPI_Type_create_struct(int count,\n                           int *blocklen,\n                           MPI_Aint *disp,\n                           MPI_Datatype *type,\n                           MPI_Datatype *newtype)\n</source>\nwhere:\n* <code>count</code> is a number of blocks, and specifies the length (in elements) of the arrays <code>blocklen</code>, <code>disp</code>, and <code>type</code>.\n* <code>blocklen</code> contains numbers of elements in each block,\n* <code>disp</code> contains byte displacements of each block,\n* <code>type</code> contains types of element in each block.\n* <code>newtype</code> (an output) contains the new derived type created by this function \n\nThe <code>disp</code> (displacements) array is needed for [[data structure alignment]], since the compiler may pad the variables in a class or data structure.  The safest way to find the distance between different fields is by obtaining their addresses in memory.  This is done with <code>MPI_Get_address</code>, which is normally the same as C's <code>&</code> operator but that might not be true when dealing with [[memory segmentation]].<ref>{{cite web|url=http://www.mpich.org/static/docs/v3.1/www3/MPI_Get_address.html|title=MPI_Get_address|website=www.mpich.org}}</ref>\n\nPassing a data structure as one block is significantly faster than passing one item at a time, especially if the operation is to be repeated. This is because fixed-size blocks do not require [[serialization]] during transfer.<ref>[http://www.boost.org/doc/libs/1_55_0/doc/html/mpi/python.html#mpi.python_skeleton_content Boost.MPI Skeleton/Content Mechanism rationale] (performance comparison graphs were produced using [[NetPIPE]])</ref>\n\nGiven the following data structures:\n<source lang=\"c\">\nstruct A {\n    int f;\n    short p;\n};\n\nstruct B {\n    struct A a;\n    int pp, vp;\n};\n</source>\n\nHere's the C code for building an MPI-derived data type:\n<source lang=\"c\">\nstatic const int blocklen[] = {1, 1, 1, 1};\nstatic const MPI_Aint disp[] = {\n    offsetof(struct B, a) + offsetof(struct A, f),\n    offsetof(struct B, a) + offsetof(struct A, p),\n    offsetof(struct B, pp),\n    offsetof(struct B, vp)\n};\nstatic MPI_Datatype type[] = {MPI_INT, MPI_SHORT, MPI_INT, MPI_INT};\nMPI_Datatype newtype;\nMPI_Type_create_struct(sizeof(type) / sizeof(*type), blocklen, disp, type, &newtype);\nMPI_Type_commit(&newtype);\n</source>\n\n==MPI-2 concepts==\n\n===One-sided communication===\nMPI-2 defines three one-sided communications operations, <code>MPI_Put</code>, <code>MPI_Get</code>, and <code>MPI_Accumulate</code>, being a write to remote memory, a read from remote memory, and a reduction operation on the same memory across a number of tasks, respectively. Also defined are three different methods to synchronize this communication (global, pairwise, and remote locks) as the specification does not guarantee that these operations have taken place until a synchronization point.\n\nThese types of call can often be useful for algorithms in which synchronization would be inconvenient (e.g. distributed [[matrix multiplication]]), or where it is desirable for tasks to be able to balance their load while other processors are operating on data.\n\n===Dynamic process management===\n{{Expand section|date=June 2008}}\n\nThe key aspect is \"the ability of an MPI process to participate in the creation of new MPI processes or to establish communication with MPI processes that have been started separately.\" The MPI-2 specification describes three main interfaces by which MPI processes can dynamically establish communications, <code>MPI_Comm_spawn</code>, <code>MPI_Comm_accept</code>/<code>MPI_Comm_connect</code> and <code>MPI_Comm_join</code>. The <code>MPI_Comm_spawn</code> interface allows an MPI process to spawn a number of instances of the named MPI process. The newly spawned set of MPI processes form a new <code>MPI_COMM_WORLD</code> intracommunicator but can communicate with the parent and the intercommunicator the function returns. <code>MPI_Comm_spawn_multiple</code> is an alternate interface that allows the different instances spawned to be different binaries with different arguments.<ref name=\"Gropp99adv-p7\">{{harvnb |Gropp |Lusk |Skjelling |1999b |p=7 }}</ref>\n\n===I/O===\n{{Expand section|date=June 2008}}\n\nThe parallel I/O feature is sometimes called MPI-IO,<ref name=\"Gropp99adv-pp5-6\">{{harvnb |Gropp |Lusk |Skjelling |1999b |pp=5\u20136 }}</ref> and refers to a set of functions designed to abstract I/O management on distributed systems to MPI, and allow files to be easily accessed in a patterned way using the existing derived datatype functionality.\n\nThe little research that has been done on this feature indicates that it may not be trivial to get high performance gains by using MPI-IO. For example, an implementation of sparse matrix-vector multiplications using the MPI I/O library shows a general behavior of negligible performance gain, but these results are inconclusive.<ref>{{cite web|url=http://marcovan.hulten.org/report.pdf|title=Sparse matrix-vector multiplications using the MPI I/O library}}</ref> It was not \nuntil the idea of collective I/O<ref>{{cite web|title=Data Sieving and Collective I/O in ROMIO|url=http://www.mcs.anl.gov/~thakur/papers/romio-coll.pdf|publisher=IEEE|date=Feb 1999}}</ref> implemented into MPI-IO that MPI-IO started to reach widespread adoption. Collective I/O substantially boosts applications' I/O bandwidth by having processes collectively transform the small and noncontiguous I/O operations into large and contiguous ones, thereby reducing the locking and disk seek overhead. Due to its vast performance benefits, MPI-IO also became the underlying I/O layer for many state-of-the-art I/O libraries, such as [[HDF5]] and [[NetCDF|Parallel NetCDF]]. Its popularity also triggered a series of research efforts on collective I/O optimizations, such as layout-aware I/O<ref>{{cite book|chapter=LACIO: A New Collective I/O Strategy for Parallel I/O Systems|publisher=IEEE|date=Sep 2011|doi=10.1109/IPDPS.2011.79|isbn=978-1-61284-372-8|citeseerx=10.1.1.699.8972|title=2011 IEEE International Parallel & Distributed Processing Symposium|last1=Chen|first1=Yong|last2=Sun|first2=Xian-He|last3=Thakur|first3=Rajeev|last4=Roth|first4=Philip C.|last5=Gropp|first5=William D.|pages=794\u2013804}}</ref> and cross-file aggregation<ref>{{cite journal|author1=Teng Wang|author2=Kevin Vasko|author3=Zhuo Liu|author4=Hui Chen|author5=Weikuan Yu|title=Enhance parallel input/output with cross-bundle aggregation|journal=The International Journal of High Performance Computing Applications|volume=30|issue=2|pages=241\u2013256|date=2016|doi=10.1177/1094342015618017}}</ref><ref>{{cite book|chapter=BPAR: A Bundle-Based Parallel Aggregation Framework for Decoupled I/O Execution|publisher=IEEE|date=Nov 2014|doi=10.1109/DISCS.2014.6|isbn=978-1-4673-6750-9|title=2014 International Workshop on Data Intensive Scalable Computing Systems|last1=Wang|first1=Teng|last2=Vasko|first2=Kevin|last3=Liu|first3=Zhuo|last4=Chen|first4=Hui|last5=Yu|first5=Weikuan|pages=25\u201332}}</ref>.\n\n==Official implementations==\n\n* The initial implementation of the MPI 1.x standard was [[MPICH]], from [[Argonne National Laboratory]] (ANL) and [[Mississippi State University]]. [[IBM]] also was an early implementor, and most early 90s [[supercomputer]] companies either commercialized MPICH, or built their own implementation. [[LAM/MPI]] from [[Ohio Supercomputer Center]] was another early open implementation.  ANL has continued developing MPICH for over a decade, and now offers MPICH-3.2, implementing the MPI-3.1 standard.\n* [[Open MPI]] (not to be confused with [[OpenMP]]) was formed by the merging FT-MPI, LA-MPI, [[LAM/MPI]], and PACX-MPI, and is found in many [[TOP-500]] [[supercomputer]]s.\n\nMany other efforts are derivatives of MPICH, LAM, and other works, including, but not limited to, commercial implementations from [[Hewlett-Packard|HP]], [[Intel]], [[Microsoft]], and [[NEC]].\n\nWhile the specifications mandate a C and Fortran interface, the language used to implement MPI is not constrained to match the language or languages it seeks to support at runtime. Most implementations combine C, C++ and assembly language, and target C, C++, and Fortran programmers. Bindings are available for many other languages, including Perl, Python, R, Ruby, Java, and [[IBM i Control Language|CL]] (see [[#Language bindings]]).\n\n===Hardware implementations===\nMPI hardware research focuses on implementing MPI directly in hardware, for example via [[processor-in-memory]], building MPI operations into the microcircuitry of the [[Random-access memory|RAM]] chips in each node. By implication, this approach is independent of the language, OS or CPU, but cannot be readily updated or removed.\n\nAnother approach has been to add hardware acceleration to one or more parts of the operation, including hardware processing of MPI queues and using [[Remote direct memory access|RDMA]] to directly transfer data between memory and the network interface without CPU or OS kernel intervention.\n\n===Compiler wrappers===\n'''mpicc''' (and similarly '''mpic++''', '''mpif90''', etc.) is a program that wraps over an existing compiler to set the necessary command-line flags when compiling code that uses MPI.  Typically, it adds a few flags that enable the code to be the compiled and linked against the MPI library.<ref>[http://www.mpich.org/static/docs/latest/www1/mpicc.html mpicc]. Mpich.org. Retrieved on 2014-03-24.</ref>\n\n==Language bindings==\nBindings are libraries that extend MPI support to other languages by wrapping an existing MPI implementation such as MPICH or Open MPI. \n\n\n===Common Language Infrastructure===\nThe two managed [[Common Language Infrastructure]] [[.NET Framework|.NET]] implementations are Pure Mpi.NET<ref>\n[http://www.purempi.net Pure Mpi.NET]</ref> and MPI.NET,<ref>{{cite web|url=http://www.osl.iu.edu/research/mpi.net/|title=MPI.NET: High-Performance C# Library for Message Passing|website=www.osl.iu.edu}}</ref> a research effort at [[Indiana University]] licensed under a [[BSD]]-style license. It is compatible with [[Mono (software)|Mono]], and can make full use of underlying low-latency MPI network fabrics.\n\n===Java===\nAlthough Java does not have an official MPI binding, several groups attempt to bridge the two, with different degrees of success and compatibility. One of the first attempts was Bryan Carpenter's mpiJava,<ref>{{cite web|url=http://www.hpjava.org/mpiJava.html|title=mpiJava Home Page|website=www.hpjava.org}}</ref> essentially a set of [[Java Native Interface]] (JNI) wrappers to a local C MPI library, resulting in a hybrid implementation with limited portability, which also has to be compiled against the specific MPI library being used.\n\nHowever, this original project also defined the mpiJava API<ref>{{cite web|url=http://www.hpjava.org/theses/shko/thesis_paper/node33.html|title=Introduction to the mpiJava API|website=www.hpjava.org}}</ref> (a [[de facto]] MPI [[API]] for Java that closely followed the equivalent C++ bindings) which other subsequent Java MPI projects adopted. An alternative, less-used API is MPJ API,<ref>{{cite web|url=http://www.hpjava.org/papers/MPJ-CPE/cpempi/node6.html|title=The MPJ API Specification|website=www.hpjava.org}}</ref> designed to be more object-oriented and closer to [[Sun Microsystems]]' coding conventions. Beyond the API, Java MPI libraries can be either dependent on a local MPI library, or implement the message passing functions in Java, while some like [[P2P-MPI]] also provide [[peer-to-peer]] functionality and allow mixed platform operation.\n\nSome of the most challenging parts of Java/MPI arise from Java characteristics such as the lack of explicit [[data pointer|pointers]] and the linear memory address space for its objects, which make transferring multidimensional arrays and complex objects inefficient. Workarounds usually involve transferring one line at a time and/or performing explicit de-[[serialization]] and [[Cast (computer science)|casting]] at both sending and receiving ends, simulating C or Fortran-like arrays by the use of a one-dimensional array, and pointers to primitive types by the use of single-element arrays, thus resulting in programming styles quite far from Java conventions.\n\nAnother Java message passing system is MPJ Express.<ref>{{cite web|url=http://mpj-express.org/|title=MPJ Express Project|website=mpj-express.org}}</ref> Recent versions can be executed in cluster and multicore configurations. In the cluster configuration, it can execute parallel Java applications on clusters and clouds. Here Java sockets or specialized I/O interconnects like [[Myrinet]] can support messaging between MPJ Express processes. It can also utilize native C implementation of MPI using its native device. In the multicore configuration, a parallel Java application is executed on multicore processors. In this mode, MPJ Express processes are represented by Java threads.\n\n===Julia language===\nThe [[Julia (programming language)|Julia]] language wrapper for MPI,<ref>{{Citation|title=JuliaParallel/MPI.jl|date=2019-10-03|url=https://github.com/JuliaParallel/MPI.jl|publisher=Parallel Julia|access-date=2019-10-08}}</ref> has been used and found to be faster than for C or Fortran.<ref>{{Cite web|url=http://www.claudiobellei.com/2018/09/30/julia-mpi/index.html|title=Parallel programming with Julia using MPI|website=Marginalia|quote=I was very impressed when I tested the performance of the Julia implementation against Fortran and C: I found the Julia implementation to be the fastest one!|date=2018-09-30|access-date=2019-10-08}}</ref>\n\n===MATLAB===\nThere are a few academic implementations of MPI using MATLAB. MATLAB has its own parallel extension library implemented using MPI and PVM.\n\n===OCaml===\nThe OCamlMPI Module<ref>{{cite web|url=http://cristal.inria.fr/~xleroy/software.html#ocamlmpi|title=Xavier Leroy - Software|website=cristal.inria.fr}}</ref> implements a large subset of MPI functions and is in active use in scientific computing. An eleven-thousand-line OCaml program was \"MPI-ified\" using the module, with an additional 500 lines of code and slight restructuring and ran with excellent results on up to 170 nodes in a supercomputer.<ref>[http://caml.inria.fr/pub/ml-archives/caml-list/2003/07/155910c4eeb09e684f02ea4ae342873b.en.html Archives of the Caml mailing list > Message from Yaron M. Minsky]. Caml.inria.fr (2003-07-15). Retrieved on 2014-03-24.</ref>\n\n===Python===\nMPI Python implementations include: [[pyMPI]], mpi4py,<ref>{{cite web|url=https://code.google.com/p/mpi4py/|title=Google Code Archive - Long-term storage for Google Code Project Hosting.|website=code.google.com}}</ref> pypar,<ref>{{cite web|url=https://code.google.com/p/pypar/|title=Google Code Archive - Long-term storage for Google Code Project Hosting.|website=code.google.com}}</ref> MYMPI,<ref>\nNow part of [http://sourceforge.net/projects/pydusa/ Pydusa]</ref> and the MPI submodule in [[ScientificPython]]. pyMPI is notable because it is a variant python interpreter, while pypar, MYMPI, and ScientificPython's module are import modules. They make it the coder's job to decide where the call to MPI_Init belongs.\n\nRecently{{when|date=October 2016}} the [[Boost C++ Libraries]] acquired Boost:MPI which included the MPI Python Bindings.<ref>{{cite web|url=http://www.boost.org/doc/libs/1_35_0/doc/html/mpi/python.html|title=Python Bindings - 1.35.0|website=www.boost.org}}</ref> This is of particular help for mixing C++ and Python. {{As of|2016|10}} Boost:MPI's Python bindings still have unfixed packaging bugs in [[CentOS]].<ref>{{cite web|url=https://bugs.centos.org/view.php?id=6498|title=0006498: Package boost-*mpi-python is missing python module - CentOS Bug Tracker|website=bugs.centos.org}}</ref>\n\n===R===\n[[R (programming language)|R]] bindings of MPI include [[Rmpi]]<ref>{{cite journal |last=Yu |first=Hao |title=Rmpi: Parallel Statistical Computing in R |year=2002 |url=https://cran.r-project.org/package=Rmpi |journal=R News }}</ref> and [[Programming with Big Data in R|pbdMPI]],<ref>{{cite web |last1=Chen |first1=Wei-Chen |last2=Ostrouchov |first2=George |last3=Schmidt |first3=Drew |last4=Patel |first4=Pragneshkumar |last5=Yu |first5=Hao |title=pbdMPI: Programming with Big Data -- Interface to MPI |year=2012 |url=https://cran.r-project.org/package=pbdMPI }}</ref> where Rmpi focuses on [[Master/slave (technology)|manager-workers]] parallelism while pbdMPI focuses on [[SPMD]] parallelism. Both implementations fully support [[Open MPI]] or [[MPICH2]].\n\n==Example program==\nHere is a \"Hello World\" program in MPI written in C. In this example, we send a \"hello\" message to each processor, manipulate it trivially, return the results to the main process, and print the messages.\n\n<source lang=\"c\">\n/*\n  \"Hello World\" MPI Test Program\n*/\n#include <assert.h>\n#include <stdio.h>\n#include <string.h>\n#include <mpi.h>\n\nint main(int argc, char **argv)\n{\n    char buf[256];\n    int my_rank, num_procs;\n\n    /* Initialize the infrastructure necessary for communication */\n    MPI_Init(&argc, &argv);\n\n    /* Identify this process */\n    MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);\n\n    /* Find out how many total processes are active */\n    MPI_Comm_size(MPI_COMM_WORLD, &num_procs);\n\n    /* Until this point, all programs have been doing exactly the same.\n       Here, we check the rank to distinguish the roles of the programs */\n    if (my_rank == 0) {\n        int other_rank;\n        printf(\"We have %i processes.\\n\", num_procs);\n\n        /* Send messages to all other processes */\n        for (other_rank = 1; other_rank < num_procs; other_rank++)\n        {\n            sprintf(buf, \"Hello %i!\", other_rank);\n            MPI_Send(buf, sizeof(buf), MPI_CHAR, other_rank,\n                     0, MPI_COMM_WORLD);\n        }\n\n        /* Receive messages from all other process */\n        for (other_rank = 1; other_rank < num_procs; other_rank++)\n        {\n            MPI_Recv(buf, sizeof(buf), MPI_CHAR, other_rank,\n                     0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);\n            printf(\"%s\\n\", buf);\n        }\n\n    } else {\n\n        /* Receive message from process #0 */\n        MPI_Recv(buf, sizeof(buf), MPI_CHAR, 0,\n                 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);\n        assert(memcmp(buf, \"Hello \", 6) == 0),\n\n        /* Send message to process #0 */\n        sprintf(buf, \"Process %i reporting for duty.\", my_rank);\n        MPI_Send(buf, sizeof(buf), MPI_CHAR, 0,\n                 0, MPI_COMM_WORLD);\n\n    }\n\n    /* Tear down the communication infrastructure */\n    MPI_Finalize();\n    return 0;\n}\n</source>\n\nWhen run with 4 processes, it should produce the following output:<ref>The output snippet was produced on an ordinary Linux desktop system with Open MPI installed. [[Linux distribution|Distro]]s usually place the mpicc command into an openmpi-devel or libopenmpi-dev package, and sometimes make it necessary to run \"module add mpi/openmpi-x86_64\" or similar before mpicc and mpiexec are available.</ref>\n<pre>\n$ mpicc example.c && mpiexec -n 4 ./a.out\nWe have 4 processes.\nProcess 1 reporting for duty.\nProcess 2 reporting for duty.\nProcess 3 reporting for duty.\n</pre>\nHere, <code>mpiexec</code> is a command used to execute the example program with 4 [[process (computing)|processes]], each of which is an independent instance of the program at run time and assigned ranks (i.e. numeric IDs) 0, 1, 2, and 3. The name <code>mpiexec</code> is recommended by the MPI standard, although some implementations provide a similar command under the name <code>mpirun</code>.  The <code>MPI_COMM_WORLD</code> is the communicator that consists of all the processes.\n\nA single program, multiple data ([[SPMD]]) programming model is thereby facilitated, but not required; many MPI implementations allow multiple, different, executables to be started in the same MPI job. Each process has its own rank, the total number of processes in the world, and the ability to communicate between them either with point-to-point (send/receive) communication, or by collective communication among the group. It is enough for MPI to provide an SPMD-style program with <code>MPI_COMM_WORLD</code>, its own rank, and the size of the world to allow algorithms to decide what to do. In more realistic situations, I/O is more carefully managed than in this example. MPI does not stipulate how standard I/O (stdin, stdout, stderr) should work on a given system.  It generally works as expected on the rank-0 process, and some implementations also capture and funnel the output from other processes.\n\nMPI uses the notion of process rather than processor. Program copies are ''mapped'' to processors by the MPI runtime. In that sense, the parallel machine can map to 1 physical processor, or N where N is the total number of processors available, or something in between. For maximum parallel speedup, more physical processors are used. This example adjusts its behavior to the size of the world N, so it also seeks to scale to the runtime configuration without compilation for each size variation, although runtime decisions might vary depending on that absolute amount of concurrency available.\n\n==MPI-2 adoption==\nAdoption of MPI-1.2 has been universal, particularly in cluster computing, but acceptance of MPI-2.1 has been more limited. Issues include:\n\n# MPI-2 implementations include I/O and dynamic process management, and the size of the middleware is substantially larger. Most sites that use batch scheduling systems cannot support dynamic process management. MPI-2's parallel I/O is well accepted.{{Citation needed|date=January 2011}}\n# Many MPI-1.2 programs were developed before MPI-2. Portability concerns initially slowed, although wider support has lessened this.\n# Many MPI-1.2 applications use only a subset of that standard (16-25 functions) with no real need for MPI-2 functionality.\n\n==Future==\nSome aspects of the MPI's future appear solid; others less so. The [[MPI Forum]] reconvened in 2007, to clarify some MPI-2 issues and explore developments for a possible MPI-3, which resulted in versions MPI-3.0 (September 2012) and MPI-3.1 (June 2015).\n\nArchitectures are changing, with greater internal concurrency ([[Multi-core processor|multi-core]]), better fine-grain concurrency control (threading, affinity), and more levels of memory hierarchy. [[Multithreading (computer architecture)|Multithreaded]] programs can take advantage of these developments more easily than single-threaded applications. This has already yielded separate, complementary standards for [[symmetric multiprocessing]], namely [[OpenMP]]. MPI-2 defines how standard-conforming implementations should deal with multithreaded issues, but does not require that implementations be multithreaded, or even thread-safe. MPI-3 adds the ability to use shared-memory parallelism within a node. Implementations of MPI such as Adaptive MPI, Hybrid MPI, Fine-Grained MPI, MPC and others offer extensions to the MPI standard that address different challenges in MPI.\n\nAstrophysicist Jonathan Dursi wrote an opinion piece that MPI is obsolescent, pointing to newer technologies like [[Chapel (programming language)|Chapel]], [[Unified Parallel C]], [[Apache Hadoop|Hadoop]], [[Apache Spark|Spark]] and [[Apache Flink|Flink]].<ref>{{cite web|url=http://www.dursi.ca/hpc-is-dying-and-mpi-is-killing-it/|title=HPC is dying, and MPI is killing it|website=www.dursi.ca}}</ref>\n\n==See also==\n{{Div col|colwidth=25em}}\n* [[Actor model]]\n* [[Bulk synchronous parallel|Bulk synchronous parallel programming]]\n* [[Calculus of Broadcasting Systems]]\n* [[Calculus of communicating systems]]\n* [[Caltech Cosmic Cube]]\n* [[Chapel (programming language)]]\n* [[Charm++]]\n* [[Co-array Fortran]]\n* [[Global Arrays]]\n* [[Linda (coordination language)]]\n* [[Microsoft Messaging Passing Interface]]\n* [[MPICH]]\n* [[MVAPICH]]\n* [[occam (programming language)]]\n* [[Open MPI]]\n* [[OpenHMPP]]\n* [[OpenMP]]\n* [[Parallel Virtual Machine]]\n* [[Partitioned global address space]]\n* [[Unified Parallel C]]\n* [[X10 (programming language)]]\n{{div col end}}\n\n==References==\n{{Reflist}}\n\n==Further reading==\n{{Div col|colwidth=30em}}\n* {{FOLDOC}}\n* Aoyama, Yukiya; Nakano, Jun (1999) ''[https://web.archive.org/web/20080119023608/http://www.redbooks.ibm.com/abstracts/sg245380.html RS/6000 SP: Practical MPI Programming]'', ITSO\n* Foster, Ian (1995) ''Designing and Building Parallel Programs (Online)'' Addison-Wesley {{ISBN|0-201-57594-9}}, chapter 8 ''[http://www-unix.mcs.anl.gov/dbpp/text/node94.html#SECTION03500000000000000000 Message Passing Interface]''\n* Wijesuriya, Viraj Brian (2010-12-29) ''[http://www.daniweb.com/forums/post1428830.html#post1428830 Daniweb: Sample Code for Matrix Multiplication using MPI Parallel Programming Approach'']\n* ''Using MPI'' series:\n** {{cite book |last1=Gropp |first1=William |last2=Lusk |first2=Ewing |last3=Skjellum |first3=Anthony |year=1994 |url=https://archive.org/details/usingmpiportable00grop |title=Using MPI: portable parallel programming with the message-passing interface |publisher=[[MIT Press]] Scientific And Engineering Computation Series |location=Cambridge, MA, USA |isbn=978-0-262-57104-3 |ref=harv }}\n** {{cite book\n|last1=Gropp |first1=William |last2=Lusk |first2=Ewing |last3=Skjellum |first3=Anthony\n|year=1999a\n|url=http://mitpress.mit.edu/books/using-mpi-second-edition\n|title=Using MPI, 2nd Edition: Portable Parallel Programming with the Message Passing Interface\n|publisher=[[MIT Press]] Scientific And Engineering Computation Series |location=Cambridge, MA, USA |isbn=978-0-262-57132-6 |ref=harv}}\n** {{cite book\n|last1=Gropp |first1=William |last2=Lusk |first2=Ewing |last3=Skjellum |first3=Anthony\n|year=1999b\n|url=http://mitpress.mit.edu/books/using-mpi-2\n|title=Using MPI-2: Advanced Features of the Message Passing Interface\n|publisher=[[MIT Press]] |isbn=978-0-262-57133-3 |ref=harv}}\n** {{cite book\n|last1=Gropp |first1=William |last2=Lusk |first2=Ewing |last3=Skjellum |first3=Anthony\n|year=2014\n|url=http://mitpress.mit.edu/books/using-mpi-third-edition\n|title=Using MPI, 3rd edition: Portable Parallel Programming with the Message-Passing Interface\n|publisher=[[MIT Press]] Scientific And Engineering Computation Series |location=Cambridge, MA, USA |isbn=978-0-262-52739-2 |ref=harv}}\n* {{Cite journal\n|last1=Gropp |first1=William |last2=Lusk |first2=Ewing |last3=Skjellum |first3=Anthony\n|year=1996\n|citeseerx = 10.1.1.102.9485\n|title=A High-Performance, Portable Implementation of the MPI Message Passing Interface\n|journal=Parallel Computing |volume=22 |issue=6 |pages=789\u2013828 |ref=harv|doi=10.1016/0167-8191(96)00024-5 }}\n* Pacheco, Peter S. (1997) ''[https://books.google.com/books?&id=tCVkM1z2aOoC Parallel Programming with MPI]''.[http://www.cs.usfca.edu/mpi/] 500 pp. Morgan Kaufmann {{ISBN|1-55860-339-5}}.\n* ''MPI\u2014The Complete Reference'' series:\n** Snir, Marc; Otto, Steve W.; Huss-Lederman, Steven; Walker, David W.; Dongarra, Jack J. (1995) ''[http://www.netlib.org/utk/papers/mpi-book/mpi-book.html MPI: The Complete Reference]''. MIT Press Cambridge, MA, USA. {{ISBN|0-262-69215-5}}\n** Snir, Marc; Otto, Steve W.; Huss-Lederman, Steven; Walker, David W.; Dongarra, Jack J. (1998) ''MPI\u2014The Complete Reference: Volume 1, The MPI Core''. MIT Press, Cambridge, MA. {{ISBN|0-262-69215-5}}\n** Gropp, William; Huss-Lederman, Steven; Lumsdaine, Andrew; Lusk, Ewing; Nitzberg, Bill; Saphir, William; and Snir, Marc (1998) ''[https://web.archive.org/web/20010803093058/http://mitpress.mit.edu/book-home.tcl?isbn=0262571234 MPI\u2014The Complete Reference: Volume 2, The MPI-2 Extensions]''. MIT Press, Cambridge, MA {{ISBN|978-0-262-57123-4}}\n* Firuziaan, Mohammad; Nommensen, O. (2002) ''Parallel Processing via MPI & OpenMP'', Linux Enterprise, 10/2002\n* Vanneschi, Marco (1999) ''Parallel paradigms for scientific computing'' In Proceedings of the European School on Computational Chemistry (1999, Perugia, Italy), number 75 in ''[https://books.google.com/books?&id=zMqVdFgVnrgC Lecture Notes in Chemistry]'', pages 170\u2013183. Springer, 2000\n* Bala, Bruck, Cypher, Elustondo, A Ho, CT Ho, Kipnis, Snir (1995) \u2033[https://ieeexplore.ieee.org/abstract/document/342126/ A portable and tunable collective communication library for scalable parallel computers]\" in IEEE Transactions on Parallel and Distributed Systems,\u2033 vol. 6, no. 2, pp. 154\u2013164, Feb 1995.\n{{div col end}}\n\n==External links==\n{{Wikibooks|Message-Passing Interface}}\n\n* {{Official website|https://www.mpi-forum.org/}}\n*[https://www.mpi-forum.org/docs/mpi-3.1/mpi31-report.pdf Official MPI-3.1 standard] ([https://www.mpi-forum.org/docs/mpi-3.1/mpi31-report/mpi31-report.htm unofficial HTML version])\n* {{dmoz|Computers/Parallel_Computing/Programming/Libraries/MPI}}\n* [http://polaris.cs.uiuc.edu/~padua/cs320/mpi/tutorial.pdf Tutorial on MPI: The Message-Passing Interface]\n* [http://moss.csc.ncsu.edu/~mueller/cluster/mpi.guide.pdf A User's Guide to MPI]\n* [https://www.citutor.org/bounce.php?course=21 Tutorial: Introduction to MPI (self-paced, includes self-tests and exercises)]\n{{Parallel computing|state=collapsed}}\n\n[[Category:Application programming interfaces]]\n[[Category:Parallel computing]]\n", "text_old": "'''Message Passing Interface''' ('''MPI''') is a standardized and portable [[message-passing]] standard designed by a group of researchers from academia and industry to function on a wide variety of [[parallel computing]] architectures.  The standard defines the syntax and semantics of a core of library routines useful to a wide range of users writing portable message-passing programs in [[C (programming language)|C]], [[C++]], and [[Fortran]].  There are several well-tested and efficient implementations of MPI, many of which are open-source or in the public domain.  These fostered the development of a parallel software industry, and encouraged development of portable and scalable large-scale parallel applications.\n\n==History==\n{{Unreferenced section|date=August 2015}}\nThe message passing interface effort began in the summer of 1991 when a small group of researchers started discussions at a mountain retreat in Austria. Out of that discussion came a Workshop on Standards for Message Passing in a Distributed Memory Environment held on April 29\u201330, 1992 in [[Williamsburg, Virginia]].<ref>{{cite report |id= ORNL/TM-12147 |osti= 10170156 |author= Walker DW |date= August 1992 |title= Standards for message-passing in a distributed memory environment |url= https://technicalreports.ornl.gov/1992/3445603661204.pdf |institution= Oak Ridge National Lab., TN (United States), Center for Research on Parallel Computing (CRPC) |format= pdf |pages= 25 |access-date= 2019-08-18 }}</ref> Attendees at Williamsburg discussed the basic features essential to a standard message-passing interface and established a working group to continue the standardization process. [[Jack Dongarra]], [[Tony Hey]], and David W. Walker put forward a preliminary draft proposal, \"MPI1\", in November 1992. In November 1992 a meeting of the MPI working group took place in Minneapolis and decided to place the standardization process on a more formal footing.  The MPI working group met every 6 weeks throughout the first 9 months of 1993.  The draft MPI standard was presented at the Supercomputing '93 conference in November 1993.<ref>{{cite conference |title= MPI: A Message Passing Interface |author= The MPI Forum, CORPORATE |date= November 15\u201319, 1993 |conference= Supercomputing '93 |conference-url= http://supercomputing.org/ |book-title= Proceedings of the 1993 ACM/IEEE conference on Supercomputing |publisher= ACM |location= Portland, Oregon, USA |pages= 878\u2013883 |isbn= 0-8186-4340-4 |doi= 10.1145/169627.169855 }}</ref> After a period of public comments, which resulted in some changes in MPI, version 1.0 of MPI was released in June 1994. These meetings and the email discussion together constituted the MPI Forum, membership of which has been open to all members of the [[High-performance computing | high-performance-computing]] community.\n\nThe MPI effort involved about 80 people from 40 organizations, mainly in the United States and Europe. Most of the major vendors of [[concurrent computer]]s were involved in MPI - along with researchers from universities, government laboratories, and [[industry]].\n\nMPI provides parallel hardware vendors with a clearly defined base set of routines that can be efficiently implemented. As a result, hardware vendors can build upon this collection of standard low-level routines to create higher-level routines for the distributed-memory communication environment supplied with their [[parallel machine]]s. MPI provides a simple-to-use portable interface for the basic user, yet one powerful enough to allow programmers to use the high-performance message passing operations available on advanced machines.\n\nIn an effort to create a universal standard for message passing, researchers incorporated the most useful features of several systems into MPI, rather than choosing one system to adopt as a standard. They adopted features from systems by IBM, [[Intel]], nCUBE, PVM, Express, P4 and PARMACS. The message-passing paradigm is attractive because of wide portability and can be used in communication for distributed-memory and shared-memory multiprocessors, networks of workstations, and a combination of these elements. The paradigm can apply in multiple settings, independent of network speed or of memory architecture.\n\nSupport for MPI meetings came in part from [[DARPA]] and from the US [[National Science Foundation]] under grant ASC-9310330, NSF Science and Technology Center Cooperative agreement number CCR-8809615, and from the Commission of the European Community through Esprit Project P6643.  The [[University of Tennessee]] also made financial contributions to the MPI Forum.\n\n== Overview ==\nMPI is a [[communication protocol]] for programming [[parallel computers]].  Both point-to-point and collective communication are supported.  MPI \"is a message-passing application programmer interface, together with protocol and semantic specifications for how its features must behave in any implementation.\"<ref>{{harvnb |Gropp |Lusk |Skjellum |1996 |p=3 }}</ref> MPI's goals are high performance, scalability, and portability. MPI remains the dominant model used in [[high-performance computing]] today.<ref>{{cite book|title=High-performance and Scalable MPI over InfiniBand with Reduced Memory Usage: An In-depth Performance Analysis|pages = 105|first1=Sayantan|last1=Sur|first2=Matthew J.|last2=Koop|first3=Dhabaleswar K.|last3=Panda|date=4 August 2017|publisher=ACM|doi=10.1145/1188455.1188565|chapter = MPI and communication---High-performance and scalable MPI over Infini ''Band'' with reduced memory usage|isbn = 978-0769527000}}</ref>\n\nMPI is not sanctioned by any major standards body; nevertheless, it has become a [[de facto standard|''de facto'' standard]] for [[communication]] among processes that model a [[parallel programming|parallel program]] running on a [[distributed memory]] system. Actual distributed memory supercomputers such as computer clusters often run such programs.\n\nThe principal MPI-1 model has no shared memory concept, and MPI-2 has only a limited [[distributed shared memory]] concept.  Nonetheless, MPI programs are regularly run on shared memory computers, and both [[MPICH]] and [[Open MPI]] can use shared memory for message transfer if it is available.<ref>[http://knem.gforge.inria.fr/ KNEM: High-Performance Intra-Node MPI Communication] \"MPICH2 (since release 1.1.1) uses KNEM in the DMA LMT to improve large message performance within a single node. Open MPI also includes KNEM support in its SM BTL component since release 1.5. Additionally, NetPIPE includes a KNEM backend since version 3.7.2.\"</ref><ref>{{cite web|url=https://www.open-mpi.org/faq/?category=sm|title=FAQ: Tuning the run-time characteristics of MPI sm communications|website=www.open-mpi.org}}</ref> Designing programs around the MPI model (contrary to explicit [[Shared memory (interprocess communication)|shared memory]] models) has advantages over [[Non-Uniform Memory Access|NUMA]] architectures since MPI encourages [[locality of reference|memory locality]]. Explicit shared memory programming was introduced in MPI-3.<ref>https://software.intel.com/en-us/articles/an-introduction-to-mpi-3-shared-memory-programming?language=en \"The MPI-3 standard introduces another approach to hybrid programming that uses the new MPI Shared Memory (SHM) model\"</ref><ref>[http://insidehpc.com/2016/01/shared-memory-mpi-3-0/ Shared Memory and MPI 3.0] \"Various benchmarks can be run to determine which method is best for a particular application, whether using MPI + OpenMP or the MPI SHM extensions.  On a fairly simple test case,  speedups over a base version that used point to point communication were up to 5X, depending on the message.\"</ref><ref>[http://www.caam.rice.edu/~mk51/presentations/SIAMPP2016_4.pdf Using MPI-3 Shared Memory As a Multicore Programming System] (PDF presentation slides)</ref>\n\nAlthough MPI belongs in layers 5 and higher of the [[OSI Reference Model]], implementations may cover most layers, with [[Internet socket|sockets]] and [[Transmission Control Protocol]] (TCP) used in the transport layer.\n\nMost MPI implementations consist of a specific set of routines directly callable from [[C (programming language)|C]], [[C++]], [[Fortran]] (i.e., an API) and any language able to interface with such libraries, including [[C Sharp (programming language)|C#]], [[Java (programming language)|Java]] or [[Python (programming language)|Python]]. The advantages of MPI over older message passing libraries are portability (because MPI has been implemented for almost every distributed memory architecture) and speed (because each [[implementation]] is in principle optimized for the hardware on which it runs).\n\nMPI uses [[Language Independent Specification]]s (LIS) for calls and language bindings. The first MPI standard specified [[ANSI C]] and Fortran-77 bindings together with the LIS. The draft was presented at Supercomputing 1994 (November 1994)<ref name=\"SC94\">[http://hpc.sagepub.com/content/8/3-4.toc Table of Contents \u2014 September 1994, 8 (3-4)]. Hpc.sagepub.com. Retrieved on 2014-03-24.</ref> <!-- (Obs: TO FIX: a reference must be included, because at sc94 site it is not possible to find references to support this statement: http://sc94.ameslab.gov/, http://sc94.ameslab.gov/AP/contents.html, http://www.pubzone.org/pages/publications/showVenue.do?venueId=13270) --> and finalized soon thereafter. About 128 functions constitute the MPI-1.3 standard which was released as the final end of the MPI-1 series in 2008.<ref name=\"MPI_Docs\">[http://www.mpi-forum.org/docs/ MPI Documents]. Mpi-forum.org. Retrieved on 2014-03-24.</ref>\n\n{{Anchor|VERSIONS}}\nAt present, the standard has several versions: version 1.3 (commonly abbreviated ''MPI-1''), which emphasizes message passing and has a static runtime environment, MPI-2.2 (MPI-2), which includes new features such as parallel I/O, dynamic process management and remote memory operations,<ref name=\"Gropp99adv-pp4-5\">{{harvnb|Gropp|Lusk|Skjellum|1999b|pp=4\u20135}}</ref> and MPI-3.1 (MPI-3), which includes extensions to the collective operations with non-blocking versions and extensions to the one-sided operations.<ref name=\"MPI_3.1\">[http://www.mpi-forum.org/docs/mpi-3.1/mpi31-report.pdf MPI: A Message-Passing Interface Standard<br/>Version 3.1, Message Passing Interface Forum, June 4, 2015]. http://www.mpi-forum.org. Retrieved on 2015-06-16.</ref>\nMPI-2's LIS specifies over 500 functions and provides language bindings for ISO [[C (programming language)|C]], ISO [[C++]], and [[Fortran 90]]. Object interoperability was also added to allow easier mixed-language message passing programming. A side-effect of standardizing MPI-2, completed in 1996, was clarifying the MPI-1 standard, creating the MPI-1.2.\n\n''MPI-2'' is mostly a superset of MPI-1, although some functions have been deprecated. MPI-1.3 programs still work under MPI implementations compliant with the MPI-2 standard.\n\n''MPI-3'' includes new Fortran 2008 bindings, while it removes deprecated C++ bindings as well as many deprecated routines and MPI objects.\n\nMPI is often compared with [[Parallel Virtual Machine]] (PVM), which is a popular distributed environment and message passing system developed in 1989, and which was one of the systems that motivated the need for standard parallel message passing. Threaded shared memory programming models (such as [[Pthreads]] and [[OpenMP]]) and message passing programming (MPI/PVM) can be considered as complementary programming approaches, and can occasionally be seen together in applications, e.g. in servers with multiple large shared-memory nodes.\n\n==Functionality==\nThe MPI interface is meant to provide essential virtual topology, [[synchronization]], and communication functionality between a set of processes (that have been mapped to nodes/servers/computer instances) in a language-independent way, with language-specific syntax (bindings), plus a few language-specific features. MPI programs always work with processes, but programmers commonly refer to the processes as processors. Typically, for maximum performance, each [[CPU]] (or [[multi-core (computing)|core]] in a multi-core machine) will be assigned just a single process. This assignment happens at runtime through the agent that starts the MPI program, normally called mpirun or mpiexec.\n\nMPI library functions include, but are not limited to, point-to-point rendezvous-type send/receive operations, choosing between a [[Cartesian tree|Cartesian]] or [[Graph (data structure)|graph]]-like logical process topology, exchanging data between process pairs (send/receive operations), combining partial results of computations (gather and reduce operations), synchronizing nodes (barrier operation) as well as obtaining network-related information such as the number of processes in the computing session, current processor identity that a process is mapped to, neighboring processes accessible in a logical topology, and so on. Point-to-point operations come in [[synchronization (computer science)|synchronous]], [[asynchronous i/o|asynchronous]], buffered, and ''ready'' forms, to allow both relatively stronger and weaker [[semantics]] for the synchronization aspects of a rendezvous-send. Many outstanding{{clarify|reason=What is an \"outstanding\" operation?|date=April 2015}} operations are possible in asynchronous mode, in most implementations.\n\nMPI-1 and MPI-2 both enable implementations that overlap communication and computation, but practice and theory differ. MPI also specifies ''[[thread safe]]'' interfaces, which have [[cohesion (computer science)|cohesion]] and [[coupling (computer science)|coupling]] strategies that help avoid hidden state within the interface. It is relatively easy to write multithreaded point-to-point MPI code, and some implementations support such code. [[Multithreading (computer architecture)|Multithreaded]] collective communication is best accomplished with multiple copies of Communicators, as described below.\n\n==Concepts==\nMPI provides a rich range of abilities. The following concepts help in understanding and providing context for all of those abilities and help the programmer to decide what functionality to use in their application programs. Four of MPI's eight basic concepts are unique to MPI-2.\n\n===Communicator===\nCommunicator objects connect groups of processes in the MPI session. Each communicator gives each contained process an independent identifier and arranges its contained processes in an ordered [[topology (disambiguation)|topology]]. MPI also has explicit groups, but these are mainly good for organizing and reorganizing groups of processes before another communicator is made. MPI understands single group intracommunicator operations, and bilateral intercommunicator communication. In MPI-1, single group operations are most prevalent. [[Bilateral synchronization|Bilateral]] operations mostly appear in MPI-2 where they include collective communication and dynamic in-process management.\n\nCommunicators can be partitioned using several MPI commands. These commands include <code>MPI_COMM_SPLIT</code>, where each process joins one of several colored sub-communicators by declaring itself to have that color.\n\n===Point-to-point basics===\nA number of important MPI functions involve communication between two specific processes. A popular example is <code>MPI_Send</code>, which allows one specified process to send a message to a second specified process. Point-to-point operations, as these are called, are particularly useful in patterned or irregular communication, for example, a [[data parallelism|data-parallel]] architecture in which each processor routinely swaps regions of data with specific other processors between calculation steps, or a [[master-slave (technology)|master-slave]] architecture in which the master sends new task data to a slave whenever the prior task is completed.\n\nMPI-1 specifies mechanisms for both [[blocking (computing)|blocking]] and non-blocking point-to-point communication mechanisms, as well as the so-called 'ready-send' mechanism whereby a send request can be made only when the matching receive request has already been made.\n\n===Collective basics===\n[[Collective operation|Collective functions]] involve communication among all processes in a process group (which can mean the entire process pool or a program-defined subset). A typical function is the <code>MPI_Bcast</code> call (short for \"[[broadcasting (computing)|broadcast]]\"). This function takes data from one node and sends it to all processes in the process group. A reverse operation is the <code>MPI_Reduce</code> call, which takes data from all processes in a group, performs an operation (such as summing), and stores the results on one node. <code>MPI_Reduce</code> is often useful at the start or end of a large distributed calculation, where each processor operates on a part of the data and then combines it into a result.\n\nOther operations perform more sophisticated tasks, such as <code>MPI_Alltoall</code> which rearranges ''n'' items of data such that the ''n''th node gets the ''n''th item of data from each.\n\n===Derived datatypes===\nMany MPI functions require that you specify the type of data which is sent between processes. This is because MPI aims to support heterogeneous environments where types might be represented differently on the different nodes<ref name=\"node37\">{{cite web|url=http://mpi-forum.org/docs/mpi-1.1/mpi-11-html/node37.html|title=Type matching rules|website=mpi-forum.org}}</ref> (for example they might be running different CPU architectures that have different [[endianness]]), in which case MPI implementations can perform ''data conversion''.<ref name=\"node37\" /> Since the C language does not allow a type itself to be passed as a parameter, MPI predefines the constants <code>MPI_INT</code>, <code>MPI_CHAR</code>, <code>MPI_DOUBLE</code> to correspond with <code>int</code>, <code>char</code>, <code>double</code>, etc.\n\nHere is an example in C that passes arrays of <code>int</code>s from all processes to one.  The one receiving process is called the \"root\" process, and it can be any designated process but normally it will be process 0.  All the processes ask to send their arrays to the root with <code>MPI_Gather</code>, which is equivalent to having each process (including the root itself) call <code>MPI_Send</code> and the root make the corresponding number of ordered <code>MPI_Recv</code> calls to assemble all of these arrays into a larger one:<ref>{{cite web|url=https://www.open-mpi.org/doc/v1.8/man3/MPI_Gather.3.php|title=MPI_Gather(3) man page (version 1.8.8)|website=www.open-mpi.org}}</ref>\n<source lang=\"c\">\nint send_array[100];\nint root = 0; /* or whatever */\nint num_procs, *recv_array;\nMPI_Comm_size(comm, &num_procs);\nrecv_array = malloc(num_procs * sizeof(send_array));\nMPI_Gather(send_array, sizeof(send_array) / sizeof(*send_array), MPI_INT,\n           recv_array, sizeof(send_array) / sizeof(*send_array), MPI_INT,\n           root, comm);\n</source>\n\nHowever, you may instead wish to send data as one block as opposed to 100 <code>int</code>s.  To do this define a \"contiguous block\" derived data type:\n<source lang=\"c\">\nMPI_Datatype newtype;\nMPI_Type_contiguous(100, MPI_INT, &newtype);\nMPI_Type_commit(&newtype);\nMPI_Gather(array, 1, newtype, receive_array, 1, newtype, root, comm);\n</source>\n\nFor passing a class or a data structure, <code>MPI_Type_create_struct</code> creates an MPI derived data type from <code>MPI_predefined</code> data types, as follows:\n<source lang=\"c\">\nint MPI_Type_create_struct(int count,\n                           int *blocklen,\n                           MPI_Aint *disp,\n                           MPI_Datatype *type,\n                           MPI_Datatype *newtype)\n</source>\nwhere:\n* <code>count</code> is a number of blocks, and specifies the length (in elements) of the arrays <code>blocklen</code>, <code>disp</code>, and <code>type</code>.\n* <code>blocklen</code> contains numbers of elements in each block,\n* <code>disp</code> contains byte displacements of each block,\n* <code>type</code> contains types of element in each block.\n* <code>newtype</code> (an output) contains the new derived type created by this function \n\nThe <code>disp</code> (displacements) array is needed for [[data structure alignment]], since the compiler may pad the variables in a class or data structure.  The safest way to find the distance between different fields is by obtaining their addresses in memory.  This is done with <code>MPI_Get_address</code>, which is normally the same as C's <code>&</code> operator but that might not be true when dealing with [[memory segmentation]].<ref>{{cite web|url=http://www.mpich.org/static/docs/v3.1/www3/MPI_Get_address.html|title=MPI_Get_address|website=www.mpich.org}}</ref>\n\nPassing a data structure as one block is significantly faster than passing one item at a time, especially if the operation is to be repeated. This is because fixed-size blocks do not require [[serialization]] during transfer.<ref>[http://www.boost.org/doc/libs/1_55_0/doc/html/mpi/python.html#mpi.python_skeleton_content Boost.MPI Skeleton/Content Mechanism rationale] (performance comparison graphs were produced using [[NetPIPE]])</ref>\n\nGiven the following data structures:\n<source lang=\"c\">\nstruct A {\n    int f;\n    short p;\n};\n\nstruct B {\n    struct A a;\n    int pp, vp;\n};\n</source>\n\nHere's the C code for building an MPI-derived data type:\n<source lang=\"c\">\nstatic const int blocklen[] = {1, 1, 1, 1};\nstatic const MPI_Aint disp[] = {\n    offsetof(struct B, a) + offsetof(struct A, f),\n    offsetof(struct B, a) + offsetof(struct A, p),\n    offsetof(struct B, pp),\n    offsetof(struct B, vp)\n};\nstatic MPI_Datatype type[] = {MPI_INT, MPI_SHORT, MPI_INT, MPI_INT};\nMPI_Datatype newtype;\nMPI_Type_create_struct(sizeof(type) / sizeof(*type), blocklen, disp, type, &newtype);\nMPI_Type_commit(&newtype);\n</source>\n\n==MPI-2 concepts==\n\n===One-sided communication===\nMPI-2 defines three one-sided communications operations, <code>MPI_Put</code>, <code>MPI_Get</code>, and <code>MPI_Accumulate</code>, being a write to remote memory, a read from remote memory, and a reduction operation on the same memory across a number of tasks, respectively. Also defined are three different methods to synchronize this communication (global, pairwise, and remote locks) as the specification does not guarantee that these operations have taken place until a synchronization point.\n\nThese types of call can often be useful for algorithms in which synchronization would be inconvenient (e.g. distributed [[matrix multiplication]]), or where it is desirable for tasks to be able to balance their load while other processors are operating on data.\n\n===Dynamic process management===\n{{Expand section|date=June 2008}}\n\nThe key aspect is \"the ability of an MPI process to participate in the creation of new MPI processes or to establish communication with MPI processes that have been started separately.\" The MPI-2 specification describes three main interfaces by which MPI processes can dynamically establish communications, <code>MPI_Comm_spawn</code>, <code>MPI_Comm_accept</code>/<code>MPI_Comm_connect</code> and <code>MPI_Comm_join</code>. The <code>MPI_Comm_spawn</code> interface allows an MPI process to spawn a number of instances of the named MPI process. The newly spawned set of MPI processes form a new <code>MPI_COMM_WORLD</code> intracommunicator but can communicate with the parent and the intercommunicator the function returns. <code>MPI_Comm_spawn_multiple</code> is an alternate interface that allows the different instances spawned to be different binaries with different arguments.<ref name=\"Gropp99adv-p7\">{{harvnb |Gropp |Lusk |Skjelling |1999b |p=7 }}</ref>\n\n===I/O===\n{{Expand section|date=June 2008}}\n\nThe parallel I/O feature is sometimes called MPI-IO,<ref name=\"Gropp99adv-pp5-6\">{{harvnb |Gropp |Lusk |Skjelling |1999b |pp=5\u20136 }}</ref> and refers to a set of functions designed to abstract I/O management on distributed systems to MPI, and allow files to be easily accessed in a patterned way using the existing derived datatype functionality.\n\nThe little research that has been done on this feature indicates that it may not be trivial to get high performance gains by using MPI-IO. For example, an implementation of sparse matrix-vector multiplications using the MPI I/O library shows a general behavior of negligible performance gain, but these results are inconclusive.<ref>{{cite web|url=http://marcovan.hulten.org/report.pdf|title=Sparse matrix-vector multiplications using the MPI I/O library}}</ref> It was not \nuntil the idea of collective I/O<ref>{{cite web|title=Data Sieving and Collective I/O in ROMIO|url=http://www.mcs.anl.gov/~thakur/papers/romio-coll.pdf|publisher=IEEE|date=Feb 1999}}</ref> implemented into MPI-IO that MPI-IO started to reach widespread adoption. Collective I/O substantially boosts applications' I/O bandwidth by having processes collectively transform the small and noncontiguous I/O operations into large and contiguous ones, thereby reducing the locking and disk seek overhead. Due to its vast performance benefits, MPI-IO also became the underlying I/O layer for many state-of-the-art I/O libraries, such as [[HDF5]] and [[NetCDF|Parallel NetCDF]]. Its popularity also triggered a series of research efforts on collective I/O optimizations, such as layout-aware I/O<ref>{{cite book|chapter=LACIO: A New Collective I/O Strategy for Parallel I/O Systems|publisher=IEEE|date=Sep 2011|doi=10.1109/IPDPS.2011.79|isbn=978-1-61284-372-8|citeseerx=10.1.1.699.8972|title=2011 IEEE International Parallel & Distributed Processing Symposium|last1=Chen|first1=Yong|last2=Sun|first2=Xian-He|last3=Thakur|first3=Rajeev|last4=Roth|first4=Philip C.|last5=Gropp|first5=William D.|pages=794\u2013804}}</ref> and cross-file aggregation<ref>{{cite journal|author1=Teng Wang|author2=Kevin Vasko|author3=Zhuo Liu|author4=Hui Chen|author5=Weikuan Yu|title=Enhance parallel input/output with cross-bundle aggregation|journal=The International Journal of High Performance Computing Applications|volume=30|issue=2|pages=241\u2013256|date=2016|doi=10.1177/1094342015618017}}</ref><ref>{{cite book|chapter=BPAR: A Bundle-Based Parallel Aggregation Framework for Decoupled I/O Execution|publisher=IEEE|date=Nov 2014|doi=10.1109/DISCS.2014.6|isbn=978-1-4673-6750-9|title=2014 International Workshop on Data Intensive Scalable Computing Systems|last1=Wang|first1=Teng|last2=Vasko|first2=Kevin|last3=Liu|first3=Zhuo|last4=Chen|first4=Hui|last5=Yu|first5=Weikuan|pages=25\u201332}}</ref>.\n\n==Official implementations==\n\n* The initial implementation of the MPI 1.x standard was [[MPICH]], from [[Argonne National Laboratory]] (ANL) and [[Mississippi State University]]. [[IBM]] also was an early implementor, and most early 90s [[supercomputer]] companies either commercialized MPICH, or built their own implementation. [[LAM/MPI]] from [[Ohio Supercomputer Center]] was another early open implementation.  ANL has continued developing MPICH for over a decade, and now offers MPICH-3.2, implementing the MPI-3.1 standard.\n* [[Open MPI]] (not to be confused with [[OpenMP]]) was formed by the merging FT-MPI, LA-MPI, [[LAM/MPI]], and PACX-MPI, and is found in many [[TOP-500]] [[supercomputer]]s.\n\nMany other efforts are derivatives of MPICH, LAM, and other works, including, but not limited to, commercial implementations from [[Hewlett-Packard|HP]], [[Intel]], [[Microsoft]], and [[NEC]].\n\nWhile the specifications mandate a C and Fortran interface, the language used to implement MPI is not constrained to match the language or languages it seeks to support at runtime. Most implementations combine C, C++ and assembly language, and target C, C++, and Fortran programmers. Bindings are available for many other languages, including Perl, Python, R, Ruby, Java, and [[IBM i Control Language|CL]] (see [[#Language bindings]]).\n\n===Hardware implementations===\nMPI hardware research focuses on implementing MPI directly in hardware, for example via [[processor-in-memory]], building MPI operations into the microcircuitry of the [[Random-access memory|RAM]] chips in each node. By implication, this approach is independent of the language, OS or CPU, but cannot be readily updated or removed.\n\nAnother approach has been to add hardware acceleration to one or more parts of the operation, including hardware processing of MPI queues and using [[Remote direct memory access|RDMA]] to directly transfer data between memory and the network interface without CPU or OS kernel intervention.\n\n===Compiler wrappers===\n'''mpicc''' (and similarly '''mpic++''', '''mpif90''', etc.) is a program that wraps over an existing compiler to set the necessary command-line flags when compiling code that uses MPI.  Typically, it adds a few flags that enable the code to be the compiled and linked against the MPI library.<ref>[http://www.mpich.org/static/docs/latest/www1/mpicc.html mpicc]. Mpich.org. Retrieved on 2014-03-24.</ref>\n\n==Language bindings==\nBindings are libraries that extend MPI support to other languages by wrapping an existing MPI implementation such as MPICH or Open MPI. \n\n\n===Common Language Infrastructure===\nThe two managed [[Common Language Infrastructure]] [[.NET Framework|.NET]] implementations are Pure Mpi.NET<ref>\n[http://www.purempi.net Pure Mpi.NET]</ref> and MPI.NET,<ref>{{cite web|url=http://www.osl.iu.edu/research/mpi.net/|title=MPI.NET: High-Performance C# Library for Message Passing|website=www.osl.iu.edu}}</ref> a research effort at [[Indiana University]] licensed under a [[BSD]]-style license. It is compatible with [[Mono (software)|Mono]], and can make full use of underlying low-latency MPI network fabrics.\n\n===Java===\nAlthough Java does not have an official MPI binding, several groups attempt to bridge the two, with different degrees of success and compatibility. One of the first attempts was Bryan Carpenter's mpiJava,<ref>{{cite web|url=http://www.hpjava.org/mpiJava.html|title=mpiJava Home Page|website=www.hpjava.org}}</ref> essentially a set of [[Java Native Interface]] (JNI) wrappers to a local C MPI library, resulting in a hybrid implementation with limited portability, which also has to be compiled against the specific MPI library being used.\n\nHowever, this original project also defined the mpiJava API<ref>{{cite web|url=http://www.hpjava.org/theses/shko/thesis_paper/node33.html|title=Introduction to the mpiJava API|website=www.hpjava.org}}</ref> (a [[de facto]] MPI [[API]] for Java that closely followed the equivalent C++ bindings) which other subsequent Java MPI projects adopted. An alternative, less-used API is MPJ API,<ref>{{cite web|url=http://www.hpjava.org/papers/MPJ-CPE/cpempi/node6.html|title=The MPJ API Specification|website=www.hpjava.org}}</ref> designed to be more object-oriented and closer to [[Sun Microsystems]]' coding conventions. Beyond the API, Java MPI libraries can be either dependent on a local MPI library, or implement the message passing functions in Java, while some like [[P2P-MPI]] also provide [[peer-to-peer]] functionality and allow mixed platform operation.\n\nSome of the most challenging parts of Java/MPI arise from Java characteristics such as the lack of explicit [[data pointer|pointers]] and the linear memory address space for its objects, which make transferring multidimensional arrays and complex objects inefficient. Workarounds usually involve transferring one line at a time and/or performing explicit de-[[serialization]] and [[Cast (computer science)|casting]] at both sending and receiving ends, simulating C or Fortran-like arrays by the use of a one-dimensional array, and pointers to primitive types by the use of single-element arrays, thus resulting in programming styles quite far from Java conventions.\n\nAnother Java message passing system is MPJ Express.<ref>{{cite web|url=http://mpj-express.org/|title=MPJ Express Project|website=mpj-express.org}}</ref> Recent versions can be executed in cluster and multicore configurations. In the cluster configuration, it can execute parallel Java applications on clusters and clouds. Here Java sockets or specialized I/O interconnects like [[Myrinet]] can support messaging between MPJ Express processes. It can also utilize native C implementation of MPI using its native device. In the multicore configuration, a parallel Java application is executed on multicore processors. In this mode, MPJ Express processes are represented by Java threads.\n\n===Julia language===\nThe [[Julia (programming language)|Julia]] language wrapper for MPI,<ref>{{Citation|title=JuliaParallel/MPI.jl|date=2019-10-03|url=https://github.com/JuliaParallel/MPI.jl|publisher=Parallel Julia|access-date=2019-10-08}}</ref> has been used and found to be faster than for C or Fortran.<ref>{{Cite web|url=http://www.claudiobellei.com/2018/09/30/julia-mpi/index.html|title=Parallel programming with Julia using MPI|website=Marginalia|quote=I was very impressed when I tested the performance of the Julia implementation against Fortran and C: I found the Julia implementation to be the fastest one!|date=2018-09-30|access-date=2019-10-08}}</ref>\n\n===MATLAB===\nThere are a few academic implementations of MPI using MATLAB. MATLAB has its own parallel extension library implemented using MPI and PVM.\n\n===OCaml===\nThe OCamlMPI Module<ref>{{cite web|url=http://cristal.inria.fr/~xleroy/software.html#ocamlmpi|title=Xavier Leroy - Software|website=cristal.inria.fr}}</ref> implements a large subset of MPI functions and is in active use in scientific computing. An eleven-thousand-line OCaml program was \"MPI-ified\" using the module, with an additional 500 lines of code and slight restructuring and ran with excellent results on up to 170 nodes in a supercomputer.<ref>[http://caml.inria.fr/pub/ml-archives/caml-list/2003/07/155910c4eeb09e684f02ea4ae342873b.en.html Archives of the Caml mailing list > Message from Yaron M. Minsky]. Caml.inria.fr (2003-07-15). Retrieved on 2014-03-24.</ref>\n\n===Python===\nMPI Python implementations include: [[pyMPI]], mpi4py,<ref>{{cite web|url=https://code.google.com/p/mpi4py/|title=Google Code Archive - Long-term storage for Google Code Project Hosting.|website=code.google.com}}</ref> pypar,<ref>{{cite web|url=https://code.google.com/p/pypar/|title=Google Code Archive - Long-term storage for Google Code Project Hosting.|website=code.google.com}}</ref> MYMPI,<ref>\nNow part of [http://sourceforge.net/projects/pydusa/ Pydusa]</ref> and the MPI submodule in [[ScientificPython]]. pyMPI is notable because it is a variant python interpreter, while pypar, MYMPI, and ScientificPython's module are import modules. They make it the coder's job to decide where the call to MPI_Init belongs.\n\nRecently{{when|date=October 2016}} the [[Boost C++ Libraries]] acquired Boost:MPI which included the MPI Python Bindings.<ref>{{cite web|url=http://www.boost.org/doc/libs/1_35_0/doc/html/mpi/python.html|title=Python Bindings - 1.35.0|website=www.boost.org}}</ref> This is of particular help for mixing C++ and Python. {{As of|2016|10}} Boost:MPI's Python bindings still have unfixed packaging bugs in [[CentOS]].<ref>{{cite web|url=https://bugs.centos.org/view.php?id=6498|title=0006498: Package boost-*mpi-python is missing python module - CentOS Bug Tracker|website=bugs.centos.org}}</ref>\n\n===R===\n[[R (programming language)|R]] bindings of MPI include [[Rmpi]]<ref>{{cite journal |last=Yu |first=Hao |title=Rmpi: Parallel Statistical Computing in R |year=2002 |url=https://cran.r-project.org/package=Rmpi |journal=R News }}</ref> and [[Programming with Big Data in R|pbdMPI]],<ref>{{cite web |last1=Chen |first1=Wei-Chen |last2=Ostrouchov |first2=George |last3=Schmidt |first3=Drew |last4=Patel |first4=Pragneshkumar |last5=Yu |first5=Hao |title=pbdMPI: Programming with Big Data -- Interface to MPI |year=2012 |url=https://cran.r-project.org/package=pbdMPI }}</ref> where Rmpi focuses on [[Master/slave (technology)|manager-workers]] parallelism while pbdMPI focuses on [[SPMD]] parallelism. Both implementations fully support [[Open MPI]] or [[MPICH2]].\n\n==Example program==\nHere is a \"Hello World\" program in MPI written in C. In this example, we send a \"hello\" message to each processor, manipulate it trivially, return the results to the main process, and print the messages.\n\n<source lang=\"c\">\n/*\n  \"Hello World\" MPI Test Program\n*/\n#include <assert.h>\n#include <stdio.h>\n#include <string.h>\n#include <mpi.h>\n\nint main(int argc, char **argv)\n{\n    char buf[256];\n    int my_rank, num_procs;\n\n    /* Initialize the infrastructure necessary for communication */\n    MPI_Init(&argc, &argv);\n\n    /* Identify this process */\n    MPI_Comm_rank(MPI_COMM_WORLD, &my_rank);\n\n    /* Find out how many total processes are active */\n    MPI_Comm_size(MPI_COMM_WORLD, &num_procs);\n\n    /* Until this point, all programs have been doing exactly the same.\n       Here, we check the rank to distinguish the roles of the programs */\n    if (my_rank == 0) {\n        int other_rank;\n        printf(\"We have %i processes.\\n\", num_procs);\n\n        /* Send messages to all other processes */\n        for (other_rank = 1; other_rank < num_procs; other_rank++)\n        {\n            sprintf(buf, \"Hello %i!\", other_rank);\n            MPI_Send(buf, sizeof(buf), MPI_CHAR, other_rank,\n                     0, MPI_COMM_WORLD);\n        }\n\n        /* Receive messages from all other process */\n        for (other_rank = 1; other_rank < num_procs; other_rank++)\n        {\n            MPI_Recv(buf, sizeof(buf), MPI_CHAR, other_rank,\n                     0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);\n            printf(\"%s\\n\", buf);\n        }\n\n    } else {\n\n        /* Receive message from process #0 */\n        MPI_Recv(buf, sizeof(buf), MPI_CHAR, 0,\n                 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);\n        assert(memcmp(buf, \"Hello \", 6) == 0),\n\n        /* Send message to process #0 */\n        sprintf(buf, \"Process %i reporting for duty.\", my_rank);\n        MPI_Send(buf, sizeof(buf), MPI_CHAR, 0,\n                 0, MPI_COMM_WORLD);\n\n    }\n\n    /* Tear down the communication infrastructure */\n    MPI_Finalize();\n    return 0;\n}\n</source>\n\nWhen run with 4 processes, it should produce the following output:<ref>The output snippet was produced on an ordinary Linux desktop system with Open MPI installed. [[Linux distribution|Distro]]s usually place the mpicc command into an openmpi-devel or libopenmpi-dev package, and sometimes make it necessary to run \"module add mpi/openmpi-x86_64\" or similar before mpicc and mpiexec are available.</ref>\n<pre>\n$ mpicc example.c && mpiexec -n 4 ./a.out\nWe have 4 processes.\nProcess 1 reporting for duty.\nProcess 2 reporting for duty.\nProcess 3 reporting for duty.\n</pre>\nHere, <code>mpiexec</code> is a command used to execute the example program with 4 [[process (computing)|processes]], each of which is an independent instance of the program at run time and assigned ranks (i.e. numeric IDs) 0, 1, 2, and 3. The name <code>mpiexec</code> is recommended by the MPI standard, although some implementations provide a similar command under the name <code>mpirun</code>.  The <code>MPI_COMM_WORLD</code> is the communicator that consists of all the processes.\n\nA single program, multiple data ([[SPMD]]) programming model is thereby facilitated, but not required; many MPI implementations allow multiple, different, executables to be started in the same MPI job. Each process has its own rank, the total number of processes in the world, and the ability to communicate between them either with point-to-point (send/receive) communication, or by collective communication among the group. It is enough for MPI to provide an SPMD-style program with <code>MPI_COMM_WORLD</code>, its own rank, and the size of the world to allow algorithms to decide what to do. In more realistic situations, I/O is more carefully managed than in this example. MPI does not stipulate how standard I/O (stdin, stdout, stderr) should work on a given system.  It generally works as expected on the rank-0 process, and some implementations also capture and funnel the output from other processes.\n\nMPI uses the notion of process rather than processor. Program copies are ''mapped'' to processors by the MPI runtime. In that sense, the parallel machine can map to 1 physical processor, or N where N is the total number of processors available, or something in between. For maximum parallel speedup, more physical processors are used. This example adjusts its behavior to the size of the world N, so it also seeks to scale to the runtime configuration without compilation for each size variation, although runtime decisions might vary depending on that absolute amount of concurrency available.\n\n==MPI-2 adoption==\nAdoption of MPI-1.2 has been universal, particularly in cluster computing, but acceptance of MPI-2.1 has been more limited. Issues include:\n\n# MPI-2 implementations include I/O and dynamic process management, and the size of the middleware is substantially larger. Most sites that use batch scheduling systems cannot support dynamic process management. MPI-2's parallel I/O is well accepted.{{Citation needed|date=January 2011}}\n# Many MPI-1.2 programs were developed before MPI-2. Portability concerns initially slowed, although wider support has lessened this.\n# Many MPI-1.2 applications use only a subset of that standard (16-25 functions) with no real need for MPI-2 functionality.\n\n==Future==\nSome aspects of the MPI's future appear solid; others less so. The [[MPI Forum]] reconvened in 2007, to clarify some MPI-2 issues and explore developments for a possible MPI-3, which resulted in versions MPI-3.0 (September 2012) and MPI-3.1 (June 2015).\n\nArchitectures are changing, with greater internal concurrency ([[Multi-core processor|multi-core]]), better fine-grain concurrency control (threading, affinity), and more levels of memory hierarchy. [[Multithreading (computer architecture)|Multithreaded]] programs can take advantage of these developments more easily than single-threaded applications. This has already yielded separate, complementary standards for [[symmetric multiprocessing]], namely [[OpenMP]]. MPI-2 defines how standard-conforming implementations should deal with multithreaded issues, but does not require that implementations be multithreaded, or even thread-safe. MPI-3 adds the ability to use shared-memory parallelism within a node. Implementations of MPI such as Adaptive MPI, Hybrid MPI, Fine-Grained MPI, MPC and others offer extensions to the MPI standard that address different challenges in MPI.\n\nAstrophysicist Jonathan Dursi wrote an opinion piece that MPI is obsolescent, pointing to newer technologies like [[Chapel (programming language)|Chapel]], [[Unified Parallel C]], [[Apache Hadoop|Hadoop]], [[Apache Spark|Spark]] and [[Apache Flink|Flink]].<ref>{{cite web|url=http://www.dursi.ca/hpc-is-dying-and-mpi-is-killing-it/|title=HPC is dying, and MPI is killing it|website=www.dursi.ca}}</ref>\n\n==See also==\n{{Div col|colwidth=25em}}\n* [[Actor model]]\n* [[Bulk synchronous parallel|Bulk synchronous parallel programming]]\n* [[Calculus of Broadcasting Systems]]\n* [[Calculus of communicating systems]]\n* [[Caltech Cosmic Cube]]\n* [[Chapel (programming language)]]\n* [[Charm++]]\n* [[Co-array Fortran]]\n* [[Global Arrays]]\n* [[Linda (coordination language)]]\n* [[Microsoft Messaging Passing Interface]]\n* [[MPICH]]\n* [[MVAPICH]]\n* [[occam (programming language)]]\n* [[Open MPI]]\n* [[OpenHMPP]]\n* [[OpenMP]]\n* [[Parallel Virtual Machine]]\n* [[Partitioned global address space]]\n* [[Unified Parallel C]]\n* [[X10 (programming language)]]\n{{div col end}}\n\n==References==\n{{Reflist}}\n\n==Further reading==\n{{Div col|colwidth=30em}}\n* {{FOLDOC}}\n* Aoyama, Yukiya; Nakano, Jun (1999) ''[https://web.archive.org/web/20080119023608/http://www.redbooks.ibm.com/abstracts/sg245380.html RS/6000 SP: Practical MPI Programming]'', ITSO\n* Foster, Ian (1995) ''Designing and Building Parallel Programs (Online)'' Addison-Wesley {{ISBN|0-201-57594-9}}, chapter 8 ''[http://www-unix.mcs.anl.gov/dbpp/text/node94.html#SECTION03500000000000000000 Message Passing Interface]''\n* Wijesuriya, Viraj Brian (2010-12-29) ''[http://www.daniweb.com/forums/post1428830.html#post1428830 Daniweb: Sample Code for Matrix Multiplication using MPI Parallel Programming Approach'']\n* ''Using MPI'' series:\n** {{cite book |last1=Gropp |first1=William |last2=Lusk |first2=Ewing |last3=Skjellum |first3=Anthony |year=1994 |url=https://archive.org/details/usingmpiportable00grop |title=Using MPI: portable parallel programming with the message-passing interface |publisher=[[MIT Press]] Scientific And Engineering Computation Series |location=Cambridge, MA, USA |isbn=978-0-262-57104-3 |ref=harv }}\n** {{cite book\n|last1=Gropp |first1=William |last2=Lusk |first2=Ewing |last3=Skjellum |first3=Anthony\n|year=1999a\n|url=http://mitpress.mit.edu/books/using-mpi-second-edition\n|title=Using MPI, 2nd Edition: Portable Parallel Programming with the Message Passing Interface\n|publisher=[[MIT Press]] Scientific And Engineering Computation Series |location=Cambridge, MA, USA |isbn=978-0-262-57132-6 |ref=harv}}\n** {{cite book\n|last1=Gropp |first1=William |last2=Lusk |first2=Ewing |last3=Skjellum |first3=Anthony\n|year=1999b\n|url=http://mitpress.mit.edu/books/using-mpi-2\n|title=Using MPI-2: Advanced Features of the Message Passing Interface\n|publisher=[[MIT Press]] |isbn=978-0-262-57133-3 |ref=harv}}\n** {{cite book\n|last1=Gropp |first1=William |last2=Lusk |first2=Ewing |last3=Skjellum |first3=Anthony\n|year=2014\n|url=http://mitpress.mit.edu/books/using-mpi-third-edition\n|title=Using MPI, 3rd edition: Portable Parallel Programming with the Message-Passing Interface\n|publisher=[[MIT Press]] Scientific And Engineering Computation Series |location=Cambridge, MA, USA |isbn=978-0-262-52739-2 |ref=harv}}\n* {{Cite journal\n|last1=Gropp |first1=William |last2=Lusk |first2=Ewing |last3=Skjellum |first3=Anthony\n|year=1996\n|citeseerx = 10.1.1.102.9485\n|title=A High-Performance, Portable Implementation of the MPI Message Passing Interface\n|journal=Parallel Computing |volume=22 |issue=6 |pages=789\u2013828 |ref=harv|doi=10.1016/0167-8191(96)00024-5 }}\n* Pacheco, Peter S. (1997) ''[https://books.google.com/books?&id=tCVkM1z2aOoC Parallel Programming with MPI]''.[http://www.cs.usfca.edu/mpi/] 500 pp. Morgan Kaufmann {{ISBN|1-55860-339-5}}.\n* ''MPI\u2014The Complete Reference'' series:\n** Snir, Marc; Otto, Steve W.; Huss-Lederman, Steven; Walker, David W.; Dongarra, Jack J. (1995) ''[http://www.netlib.org/utk/papers/mpi-book/mpi-book.html MPI: The Complete Reference]''. MIT Press Cambridge, MA, USA. {{ISBN|0-262-69215-5}}\n** Snir, Marc; Otto, Steve W.; Huss-Lederman, Steven; Walker, David W.; Dongarra, Jack J. (1998) ''MPI\u2014The Complete Reference: Volume 1, The MPI Core''. MIT Press, Cambridge, MA. {{ISBN|0-262-69215-5}}\n** Gropp, William; Huss-Lederman, Steven; Lumsdaine, Andrew; Lusk, Ewing; Nitzberg, Bill; Saphir, William; and Snir, Marc (1998) ''[https://web.archive.org/web/20010803093058/http://mitpress.mit.edu/book-home.tcl?isbn=0262571234 MPI\u2014The Complete Reference: Volume 2, The MPI-2 Extensions]''. MIT Press, Cambridge, MA {{ISBN|978-0-262-57123-4}}\n* Firuziaan, Mohammad; Nommensen, O. (2002) ''Parallel Processing via MPI & OpenMP'', Linux Enterprise, 10/2002\n* Vanneschi, Marco (1999) ''Parallel paradigms for scientific computing'' In Proceedings of the European School on Computational Chemistry (1999, Perugia, Italy), number 75 in ''[https://books.google.com/books?&id=zMqVdFgVnrgC Lecture Notes in Chemistry]'', pages 170\u2013183. Springer, 2000\n* Bala, Bruck, Cypher, Elustondo, A Ho, CT Ho, Kipnis, Snir (1995) \u2033[https://ieeexplore.ieee.org/abstract/document/342126/ A portable and tunable collective communication library for scalable parallel computers]\" in IEEE Transactions on Parallel and Distributed Systems,\u2033 vol. 6, no. 2, pp. 154-164, Feb 1995.\n{{div col end}}\n\n==External links==\n{{Wikibooks|Message-Passing Interface}}\n\n* {{Official website|https://www.mpi-forum.org/}}\n*[https://www.mpi-forum.org/docs/mpi-3.1/mpi31-report.pdf Official MPI-3.1 standard] ([https://www.mpi-forum.org/docs/mpi-3.1/mpi31-report/mpi31-report.htm unofficial HTML version])\n* {{dmoz|Computers/Parallel_Computing/Programming/Libraries/MPI}}\n* [http://polaris.cs.uiuc.edu/~padua/cs320/mpi/tutorial.pdf Tutorial on MPI: The Message-Passing Interface]\n* [http://moss.csc.ncsu.edu/~mueller/cluster/mpi.guide.pdf A User's Guide to MPI]\n* [https://www.citutor.org/bounce.php?course=21 Tutorial: Introduction to MPI (self-paced, includes self-tests and exercises)]\n{{Parallel computing|state=collapsed}}\n\n[[Category:Application programming interfaces]]\n[[Category:Parallel computing]]\n", "name_user": "Iridescent", "label": "safe", "comment": "\u2192\u200eFurther reading:Cleanup andtypo fixing,typo(s) fixed: 154-164 \u2192 154\u2013164", "url_page": "//en.wikipedia.org/wiki/Message_Passing_Interface"}
{"title_page": "Christopher Atkins", "text_new": "{{short description|American actor|bot=PearBOT 5}}\n{{other people|Chris Atkins}}\n{{Use mdy dates|date=July 2013}}\n{{Infobox person\n| name        = Christopher Atkins\n| image       = Christopher_Atkins_2009.jpg\n| caption     = Atkins attending the [[Bench Warmer International|Bench Warmer]] Holiday Party at Empire, Hollywood, California on December 5, 2009\n| birth_name  = Christopher Atkins Bomann\n| birth_date  = {{Birth date and age|1961|2|21|mf=yes}}\n| birth_place = [[Rye, New York]], [[United States|U.S.]]\n| occupation  = Actor\n| years_active = 1977&ndash;present\n| spouse      = {{marriage|Lyn Barron|1985|2007|end=div.}}\n| children    = Grant Bomann<br />Brittney Bomann\n}}\n\n'''Christopher Atkins''' (born '''Christopher Atkins Bomann''',<ref>{{Cite web|url=https://www.encyclopedia.com/education/news-wires-white-papers-and-books/atkins-christopher-1961|title=Atkins, Christopher 1961\u2013 &#124; Encyclopedia.com|website=www.encyclopedia.com}}</ref> February 21, 1961)<ref name=\"dailyvoice.com\">{{cite web|url=https://dailyvoice.com/new-york/rye/neighbors/happy-birthday-to-ryes-christopher-atkins/434296/|title=Happy Birthday To Rye's Christopher Atkins|date=February 21, 2014|website=Rye Daily Voice}}</ref> is an American actor who became famous following his debut film role in the 1980 film ''[[The Blue Lagoon (1980 film)|The Blue Lagoon]]''.\n\n==Early life==\nChristopher Atkins Bomann was born<ref name=\"dailyvoice.com\"/> and raised<ref name=\"people.com\">{{cite web|url=https://people.com/archive/from-the-depths-vol-54-no-15/|title=From the Depths|website=People.com|last=Tauber|first=Michelle|date=October 9, 2000}}</ref> in [[Rye, New York]]. He is the son of Donald Bomann and Bitsy Nebauer, who divorced during his childhood.<ref name=\"people.com1\">{{cite web|url=https://people.com/archive/look-out-j-r-chris-atkins-is-muscling-in-on-the-action-as-dallas-beefs-up-its-cast-vol-20-no-2/|title=Look Out, J.R.\u2014Chris Atkins Is Muscling in on the Action as Dallas Beefs Up Its Cast|last=Wallace|first=\nDavid|website=People.com|date=July 11, 1983}}</ref> Atkins was an aspiring baseball player; when his baseball aspirations were derailed by knee problems, he started a modeling career. When he began acting, Atkins dropped the last name Bomann and used his middle name, Atkins, as his last name.<ref name=\"people.com\"/>\n\n==Career==\nA friend suggested that Atkins audition for ''The Blue Lagoon''.<ref name=\"dailyvoice.com\"/> Atkins won the role over thousands of other actors; the film's director, [[Randal Kleiser]], has said that Atkins was a sailing instructor with no acting experience when he was cast in the film.<ref name=\"people.com\"/> In the film, he and co-star [[Brooke Shields]] played two teenaged cousins who find love while living in an isolated tropical paradise after being marooned as children.<ref name=\"Much\"/> Released in 1980, the film grossed over $58 million with a production cost of $4.5 million<ref>{{Cite web | url=https://www.the-numbers.com/movie/Blue-Lagoon-The#tab=summary | title=The Blue Lagoon (1980) - Financial Information |work=The-Numbers.com|access-date=January 4, 2020}}</ref><ref>{{Cite web|url=http://catalog.afi.com/Catalog/MovieDetails/56372|website=AFI.com|title=AFI Catalog of Feature Films: The First 100 Years 1893\u20131993|access-date=January 4, 2020}}</ref><ref>{{Cite web|url=http://www.tcm.com/this-month/article/21857%7C0/The-Blue-Lagoon.html|title=The Blue Lagoon|website=Turner Classic Movies|access-date=January 4, 2020}}</ref> but received a negative critical response.<ref>{{cite web|url=http://www.rottentomatoes.com/m/blue_lagoon/|title=The Blue Lagoon|publisher=[[Rotten Tomatoes]]|accessdate=7 January 2018}}</ref> Atkins appeared nude<ref name=\"Much\">{{cite web|url=https://people.com/archive/cover-story-too-much-too-young-vol-14-no-6/|title=Too Much, Too Young?|work=People|last=McMurrin|first=Kristin|date=August 11, 1980|access-date=August 23, 2018}}</ref><ref>{{cite web|url=https://www.advocate.com/arts-entertainment/entertainment-news/2009/01/29/christopher-atkins-poster-child-gay-rights-movement|title=Christopher Atkins: Poster Child for Gay Rights Movement?|work=Advocate.com|date=January 9, 2009|access-date=August 23, 2018}}</ref> (including frontal nudity<ref name=\"Chris Atkins\">{{cite web|url=http://hollywoodshow.com/starDetail.php?id=3|title=Chris Atkins|work=HollywoodShow.com|access-date=August 23, 2018}}</ref>) in the film, and spent much of the film wearing a loincloth.<ref name=\"people.com1\"/> While ''Blue Lagoon'' was controversial due to its nude scenes and sexual content,<ref>{{cite web|url=https://www.rogerebert.com/chazs-blog/sexualized-innocence-revisiting-the-blue-lagoon|title=Sexualized Innocence: Revisiting The Blue Lagoon| first=Abbey|last=Bender|website=www.RogerEbert.com|date=March 4, 2019}}</ref> it nevertheless became a \"pop culture phenomenon\".<ref>{{cite web|url=https://people.com/movies/the-blue-lagoon-turns-35-trivia-for-brooke-shields-and-christopher-atkins-film/|title=Celebrate The Blue Lagoon's 35th Anniversary with 10 Movie Facts You Should Know|website=People.com|last=Mackie |first=Drew |date=July 1, 2015}}</ref> Atkins was nominated for a [[Golden Globe Award for New Star of the Year \u2013 Actor|Golden Globe Award for New Star of the Year in a Motion Picture \u2013 Male]] for ''The Blue Lagoon''.<ref>{{cite web|url=https://deadline.com/2012/03/denise-richards-blue-lagoon-remake-christopher-atkins-cameo-241315/|title=Denise Richards To Co-Star In 'Blue Lagoon' Reboot, Christopher Atkins To Make Cameo|first1=Nellie|last1=Andreeva|work=Deadline.com|date=March 8, 2012}}</ref> \n[[File:Chris Atkins 1981.jpg|thumb|left|Atkins in 1981]] \nAtkins posed nude for ''[[Playgirl]]''<ref name=\"people.com1\"/> in 1982.<ref name=\"Chris Atkins\"/> He went on to star with [[Kristy McNichol]] in ''[[The Pirate Movie]]'' (1982), an update of [[Gilbert and Sullivan]]'s operetta ''[[The Pirates of Penzance]]''.<ref name=\"dailyvoice.com\"/> His song \"How Can I Live Without Her\", which peaked at #71 on the [[Billboard Hot 100|''Billboard'' Hot 100]], was played in the film.<ref name=\"dailyvoice.com\"/> Atkins portrayed Rick Monroe, a college student working as an exotic dancer, in ''[[A Night in Heaven]]'' (1983);<ref name=\"dailyvoice.com\"/> he won the 1983 [[Golden Raspberry Award for Worst Actor]] for his performance.<ref>{{cite web|url=http://www.vancourier.com/opinion/reliving-reckless-by-bryan-adams-1.2179670|title=Reliving Reckless by Bryan Adams|last=Fleming|first=Andrew|website=Vancouver Courier|date=November 27, 2014}}</ref> For one season (1983\u20131984), Atkins had a recurring role as camp counselor Peter Richards on ''[[Dallas (1978 TV series)|Dallas]]''.<ref name=\"dailyvoice.com\"/>\n\nAtkins appeared in the television sitcom ''[[Suddenly Susan]]'', which starred Shields, in 1999.<ref name=\"people.com\"/> In 2009, Atkins appeared on [[VH1]]'s ''[[Confessions of a Teen Idol]]'', a reality show featuring former teen idols.<ref name=\"ew.com\">{{cite web|url=https://ew.com/article/2009/01/02/christopher-atk/|title=Christopher Atkins: PopWatch 'Teen Idol' Q&A (Part 4 of 4)|website=EW.com|last=Bierly |first=Mandy| date=January 2, 2009}}</ref><ref>{{Cite web|url=http://archive.boston.com/ae/tv/articles/2009/01/06/idol_hopes_underlie_these_confessions/|title=Idol hopes underlie these 'Confessions'|first=Mary|last=McNamara|date=January 6, 2009|via=The Boston Globe}}</ref> He has been ranked no. 76 on VH1's list of 100 Greatest Teen Stars.<ref name=\"dailyvoice.com\"/>\n\nAtkins became a luxury pool builder.<ref name=\"ew.com\"/> He also developed the Christopher Atkins Strike Jacket E.F.L. (Extreme Fishing Lure)--\"a rubbery slipcovering for traditional baits\"--with the assistance of special-effects expert Mark Viniello.<ref name=\"people.com\"/>\n\n==Personal life==\n[[File:Brittney Bomann and Christopher Atkins.JPG|right|thumb|Atkins and his daughter on the red carpet at the 62nd&nbsp;Annual Mother Goose Parade in San Diego County, 2008]]\nAtkins married Lynne Barron Weber of [[Sydney, Australia]], on May 25, 1985. The couple have two children: Son Grant Bomann and daughter Brittney Bomann.<ref>{{cite news |url=http://www.gettyimages.co.uk/detail/news-photo/actor-christopher-atkins-wife-lyn-barron-daughter-brittney-news-photo/142000266 |series=Ron Galella archive |year=2012 |title=Actor Christopher Atkins, wife Lyn Barron, daughter Brittney Bomann and son Grant Bomann |access-date=31 July 2015}}</ref><ref>{{cite web |url=http://www.nndb.com/people/819/000025744/ |title=Christopher Atkins |website=nndb.com |access-date=31 July 2015}}</ref> The couple divorced in 2007.<ref name=People200902>{{cite web |url=https://people.com/archive/christopher-atkins-second-act-vol-71-no-6/ |title=Christopher Atkins second act |magazine=People |volume=71 |issue=6 |last=Rizzo |first=Monica |date=16 February 2009 |access-date=23 August 2018}}</ref>\n\nIn a 2009 interview, Atkins acknowledged his past struggle with alcoholism and stated that he had been sober for 22&nbsp;years.<ref name=People200902/>\n\n==Filmography==\n=== Film ===\n{| class=\"wikitable sortable\"\n|-\n! Year\n! Title\n! Role\n! Notes\n|-\n| 1980 || ''[[The Blue Lagoon (1980 film)|The Blue Lagoon]]'' || Richard Lestrange ||\n|-\n| 1981 || ''[[Swan Lake (1981 film)|Swan Lake]]'' || Prince Siegfried || Voice\n|-\n| 1982 || ''[[Aladdin and the Wonderful Lamp (1982 film)|Aladdin and the Magic Lamp]]'' || Aladdin || Voice\n|-\n| 1982 || ''[[The Pirate Movie]]'' || Frederic ||\n|-\n| 1983 || ''[[A Night in Heaven]]'' || Rick Monroe ||\n|-\n| 1987 || ''[[Beaks: The Movie]]'' || Peter || \n|-\n| 1988 || ''[[Mortuary Academy]]'' || Max Grimm ||\n|-\n| 1989 || ''[[Listen to Me (film)|Listen to Me]]'' || Bruce Arlington ||\n|-\n| 1990 || ''[[Fatal Charm (1990 film)|Fatal Charm]]'' || Adam || \n|-\n| 1990 || ''[[Shakma]]'' || Sam ||\n|-\n| 1992 || ''[[Exchange Lifeguards|Wet and Wild Summer!]]'' || Bobby McCain || Alternate title: ''Exchange Lifeguards''\n|-\n| 1993 || ''Dracula Rising'' || Vlad ||\n|-\n| 1993 || ''[[Die Watching]]'' || Michael Terrence || Direct-to-video\n|-\n| 1993 || ''[[\u00a1Dispara!]]'' || Spence || Alternate title: ''Outrage!''\n|-\n| 1993 || ''King's Ransom'' || Spence || Direct-to-video\n|-\n| 1994 || ''Trigger Fast'' || Dusty Fog ||\n|-\n| 1994 || ''[[Signal One]]'' || Martin Bullet || Alternate title: ''Bullet Down Under''\n|-\n| 1995 || ''[[Project Shadowchaser III]]'' || Snake ||\n|-\n| 1995 || ''Smoke n Lightnin'' || Lightnin ||\n|-\n| 1996 || ''[[It's My Party (film)|It's My Party]]'' || Jack Allen ||\n|-\n| 1997 || ''[[Mutual Needs]]'' || Andrew ||\n|-\n| 1999 || ''[[Lima: Breaking the Silence]]'' || Jeff ||\n|-\n| 1999 || ''Deadly Delusions'' || Sam Gitlin ||\n|-\n| 2000 || ''Civility'' || Alfred Russo || Alternate title: ''Malicious Intent''\n|-\n| 2000 || ''Stage Ghost'' || Matthew Bronson ||\n|-\n| 2001 || ''[[Title to Murder]]'' || Paul Shaughnessy ||\n|-\n| 2001 || ''[[The Little Unicorn]]'' || PC Sid Edwards ||\n|-\n| 2001 || ''True Legends of the West'' || Theodore Sutherland ||\n|-\n| 2002 || ''[[13th Child]]'' || Ron || Direct-to-video\n|-\n| 2002 || ''Under the Gun'' || Bill || Alternate title: ''The Employee of the Month''\n|-\n| 2002 || ''The Stoneman'' || Kip Hollings || \n|-\n| 2002 || ''The Color of Water'' || Clay || Alternate title: ''Love Don't Come Easy''\n|-\n| 2002 || ''Tequila Express'' || David Manning ||\n|-\n| 2003 || ''[[Quigley (film)|Quigley]]'' || Woodward Channing || Alternate title: ''Daddy Dog Day''\n|-\n| 2003 || ''[[The Librarians (film)|The Librarians]]'' || Ringo || Alternate title: ''Strike Force''\n|-\n| 2007 || ''Payback'' || Sean Walker ||\n|-\n| 2007 || ''Spiritual Warriors'' || King of Sparta ||\n|-\n| 2008 || ''[[Blind Ambition (film)|Blind Ambition]]'' || Wild Bill ||\n|-\n| 2008 || ''[[100 Million BC]]'' || Erik Reno || Direct-to-video\n|-\n| 2008 || ''Chinaman's Chance: America's Yellow Slaves'' || Jacob ||\n|-\n| 2009 || ''[[Forget Me Not (2009 film)|Forget Me Not]]'' || Mr. Channing || \n|-\n| 2010 || ''Melissa'' || Ellis || Short film\n|-\n| 2010 || ''Stained Glass Windows'' || Detective Marshall ||\n|-\n| 2011 || ''[[Sedona (film)|Sedona]]'' || Pierce ||\n|-\n| 2011 || ''Family 2.0'' || Michael || Short film\n|-\n| 2011 || ''[[Exodus Fall]]'' || Wayne Minor ||\n|-\n| 2011 || ''Assassins' Code'' || Daniel Dodd ||\n|-\n| 2011 || ''Hidden'' || Dian's Husband ||\n|-\n| 2011 || ''Harley's Hill'' || Mr. Miller || Direct-to-video\n|-\n| 2013 || ''[[Crazy Kind of Love]]'' || Mr. Jeffries ||\n|-\n| 2013 || ''Amy'' || Chris ||\n|-\n| 2014 || ''Waiting in the Wings: The Musical'' || Priest ||\n|-\n| 2014 || ''Guardian Angel'' || John Robertson ||\n|-\n| 2015 || ''A Horse for Summer'' || Pastor Bob ||\n|-\n| 2015 || ''The Sparrows: Nesting'' || Mike Sparrow ||\n|-\n| 2015 || ''[[Kids vs Monsters]]'' || Charles ||\n|-\n| 2015 || ''A Tennis Shoe in the Street'' || Lucky / Brandon ||\n|-\n| 2016 || ''The Unlikely's'' || Daniel Jacobsen ||\n|-\n| 2018 || ''[[Gathering of Heroes: Legend of the Seven Swords]]'' || Garrik Grayraven ||\n|-\n| 2018 || ''Railroad to Hell: A Chinaman's Chance'' || Jacob ||\n|-\n| 2018 || ''The City of Gold'' || Richard Davenport ||\n|-\n| 2019 || ''One Remains'' || Samuel Mahoney ||\n|-\n|}\n\n=== Television ===\n{| class=\"wikitable sortable\"\n|-\n! Year\n! Title\n! Role\n! Notes\n|-\n| 1981 || ''[[Child Bride of Short Creek]]'' || Isaac King || TV movie\n|-\n| 1983\u201384 || ''[[Dallas (1978 TV series)|Dallas]]'' || Peter Richards || 27 episodes\n|-\n| 1985 || ''Secret Weapons'' || Allan Collier || TV movie\n|-\n| 1985 || ''[[Hotel (American TV series)|Hotel]]'' || Jason Fielding || Episode: \"Echoes\"\n|-\n| 1987 || ''Night Rose: Akhbar's Daughter'' || Bitterman || TV pilot\n|-\n| 1991 || ''Extralarge: Miami Killer'' || Blake || TV movie\n|-\n| 1993 || ''[[The Adventures of the Black Stallion]]'' || Drag Racer || Episode: \"Racing in the Streets\"\n|-\n| 1994 || ''[[Bandit (film series)|Bandit Goes Country]]'' || Johnny Bruce || TV movie\n|-\n| 1994 || ''Guns of Honor'' || Dusty Fog || TV movie\n|-\n| 1994 || ''[[Red Shoe Diaries]]'' || Husband || Episode: \"Four on the Floor\"\n|-\n| 1996 || ''[[Dead Man's Island]]'' || Roger Prescott || TV movie\n|-\n| 1996 || ''Angel Flight Down'' || Jack Bahr || TV movie\n|-\n| 1996 || ''[[Silk Stalkings]]'' || Chance Reynolds || Episode: \"Compulsion\"\n|-\n| 1997 || ''[[High Tide (TV series)|High Tide]]'' || Raider || Episode: \"A Rock and a Hard Place\"\n|-\n| 1999 || ''[[Suddenly Susan]]'' || Tony || Episode: \"Sometimes You Feel Like a Nut\"\n|-\n| 2001 || ''[[Dark Realm]]'' || Jack Anderson || Episode: \"Emma's Boy\"\n|-\n| 2006 || ''[[Caved In: Prehistoric Terror]]'' || John Palmer || TV movie\n|-\n| 2009 || ''[[Confessions of a Teen Idol]]'' || Himself || 8 episodes\n|-\n| 2012 || ''[[Blue Lagoon: The Awakening]]'' || Mr. Christiansen || TV movie\n|-\n| 2014 || ''The Sparrows'' || Mike Sparrow || Episode: \"Trailer\"\n|-\n| 2014 || ''[[CSI: Crime Scene Investigation]]'' || Jimmy Turelli || Episode: \"Dead Rails\"\n|-\n| 2016 || ''The Eleventh'' || Neil || 5 episodes\n|-\n| 2019 || ''Defrost: The Virtual Series'' || George Michael Garrison || TV movie\n|-\n|}\n\n==References==\n\n{{Reflist}}\n\n==External links==\n* {{Facebook|christopher.atkins.509}}\n{{commons category}}\n* {{IMDb name|803}}\n* {{AllMovie name|2694}}\n\n{{Authority control}}\n\n{{DEFAULTSORT:Atkins, Christopher}}\n[[Category:1961 births]]\n[[Category:Living people]]\n[[Category:Male actors from New York (state)]]\n[[Category:American male film actors]]\n[[Category:American male television actors]]\n[[Category:American male singers]]\n[[Category:American pop singers]]\n[[Category:People from Rye, New York]]\n[[Category:American male voice actors]]\n", "text_old": "{{short description|American actor|bot=PearBOT 5}}\n{{other people|Chris Atkins}}\n{{Use mdy dates|date=July 2013}}\n{{Infobox person\n| name        = Christopher Atkins\n| image       = Christopher_Atkins_2009.jpg\n| caption     = Atkins attending the [[Bench Warmer International|Bench Warmer]] Holiday Party at Empire, Hollywood, California on December 5, 2009\n| birth_name  = Christopher Atkins Bomann\n| birth_date  = {{Birth date and age|1961|2|21|mf=yes}}\n| birth_place = [[Rye, New York]], [[United States|U.S.]]\n| occupation  = Actor\n| years_active = 1977&ndash;present\n| spouse      = {{marriage|Lyn Barron|1985|2007|end=div.}}\n| children    = Grant Bomann<br />Brittney Bomann\n}}\n\n'''Christopher Atkins''' (born '''Christopher Atkins Bomann''',<ref>{{Cite web|url=https://www.encyclopedia.com/education/news-wires-white-papers-and-books/atkins-christopher-1961|title=Atkins, Christopher 1961\u2013 &#124; Encyclopedia.com|website=www.encyclopedia.com}}</ref> February 21, 1961)<ref name=\"dailyvoice.com\">{{cite web|url=https://dailyvoice.com/new-york/rye/neighbors/happy-birthday-to-ryes-christopher-atkins/434296/|title=Happy Birthday To Rye's Christopher Atkins|date=February 21, 2014|website=Rye Daily Voice}}</ref> is an American actor who became famous following his debut film role in the 1980 film ''[[The Blue Lagoon (1980 film)|The Blue Lagoon]]''.\n\n==Early life==\nChristopher Atkins Bomann was born<ref name=\"dailyvoice.com\"/> and raised<ref name=\"people.com\">{{cite web|url=https://people.com/archive/from-the-depths-vol-54-no-15/|title=From the Depths|website=People.com|last=Tauber|first=Michelle|date=October 9, 2000}}</ref> in [[Rye, New York]]. He is the son of Donald Bomann and Bitsy Nebauer, who divorced during his childhood.<ref name=\"people.com1\">{{cite web|url=https://people.com/archive/look-out-j-r-chris-atkins-is-muscling-in-on-the-action-as-dallas-beefs-up-its-cast-vol-20-no-2/|title=Look Out, J.R.\u2014Chris Atkins Is Muscling in on the Action as Dallas Beefs Up Its Cast|last=Wallace|first=\nDavid|website=People.com|date=July 11, 1983}}</ref> Atkins was an aspiring baseball player; when his baseball aspirations were derailed by knee problems, he started a modeling career. When he began acting, Atkins dropped the last name Bomann and used his middle name, Atkins, as his last name.<ref name=\"people.com\"/>\n\n==Career==\nA friend suggested that Atkins audition for ''The Blue Lagoon''.<ref name=\"dailyvoice.com\"/> Atkins won the role over thousands of other actors; the film's director, [[Randal Kleiser]], has said that Atkins was a sailing instructor with no acting experience when he was cast in the film.<ref name=\"people.com\"/> In the film, he and co-star [[Brooke Shields]] played two teenaged cousins who find love while living in an isolated tropical paradise after being marooned as children.<ref name=\"Much\"/> Released in 1980, the film grossed over $58 million with a production cost of $4.5 million<ref>{{Cite web | url=https://www.the-numbers.com/movie/Blue-Lagoon-The#tab=summary | title=The Blue Lagoon (1980) - Financial Information |work=The-Numbers.com|access-date=January 4, 2020}}</ref><ref>{{Cite web|url=http://catalog.afi.com/Catalog/MovieDetails/56372|website=AFI.com|title=AFI Catalog of Feature Films: The First 100 Years 1893\u20131993|access-date=January 4, 2020}}</ref><ref>{{Cite web|url=http://www.tcm.com/this-month/article/21857%7C0/The-Blue-Lagoon.html|title=The Blue Lagoon|website=Turner Classic Movies|access-date=January 4, 2020}}</ref> but received a negative critical response.<ref>{{cite web|url=http://www.rottentomatoes.com/m/blue_lagoon/|title=The Blue Lagoon|publisher=[[Rotten Tomatoes]]|accessdate=7 January 2018}}</ref> Atkins appeared nude<ref name=\"Much\">{{cite web|url=https://people.com/archive/cover-story-too-much-too-young-vol-14-no-6/|title=Too Much, Too Young?|work=People|last=McMurrin|first=Kristin|date=August 11, 1980|access-date=August 23, 2018}}</ref><ref>{{cite web|url=https://www.advocate.com/arts-entertainment/entertainment-news/2009/01/29/christopher-atkins-poster-child-gay-rights-movement|title=Christopher Atkins: Poster Child for Gay Rights Movement?|work=Advocate.com|date=January 9, 2009|access-date=August 23, 2018}}</ref> (including frontal nudity<ref name=\"Chris Atkins\">{{cite web|url=http://hollywoodshow.com/starDetail.php?id=3|title=Chris Atkins|work=HollywoodShow.com|access-date=August 23, 2018}}</ref>) in the film, and spent much of the film wearing a loincloth.<ref name=\"people.com1\"/> While ''Blue Lagoon'' was controversial due to its nude scenes and sexual content,<ref>{{cite web|url=https://www.rogerebert.com/chazs-blog/sexualized-innocence-revisiting-the-blue-lagoon|title=Sexualized Innocence: Revisiting The Blue Lagoon| first=Abbey|last=Bender|website=www.RogerEbert.com|date=March 4, 2019}}</ref> it nevertheless became a \"pop culture phenomenon\".<ref>{{cite web|url=https://people.com/movies/the-blue-lagoon-turns-35-trivia-for-brooke-shields-and-christopher-atkins-film/|title=Celebrate The Blue Lagoon's 35th Anniversary with 10 Movie Facts You Should Know|website=People.com|last=Mackie |first=Drew |date=July 1, 2015}}</ref> Atkins was nominated for a [[Golden Globe Award for New Star of the Year \u2013 Actor|Golden Globe Award for New Star of the Year in a Motion Picture \u2013 Male]] for ''The Blue Lagoon''.<ref>{{cite web|url=https://deadline.com/2012/03/denise-richards-blue-lagoon-remake-christopher-atkins-cameo-241315/|title=Denise Richards To Co-Star In 'Blue Lagoon' Reboot, Christopher Atkins To Make Cameo|first1=Nellie|last1=Andreeva|work=Deadline.com|date=March 8, 2012}}</ref> \n[[File:Chris Atkins 1981.jpg|thumb|left|Atkins in 1981]] \nAtkins posed nude for ''[[Playgirl]]''<ref name=\"people.com1\"/> in 1982.<ref name=\"Chris Atkins\"/> He went on to star with [[Kristy McNichol]] in ''[[The Pirate Movie]]'' (1982), an update of [[Gilbert and Sullivan]]'s operetta ''[[The Pirates of Penzance]]''.<ref name=\"dailyvoice.com\"/> His song \"How Can I Live Without Her\", which peaked at #71 on the [[Billboard Hot 100|''Billboard'' Hot 100]], was played in the film.<ref name=\"dailyvoice.com\"/> Atkins portrayed Rick Monroe, a college student working as an exotic dancer, in ''[[A Night in Heaven]]'' (1983);<ref name=\"dailyvoice.com\"/> he won the 1983 [[Golden Raspberry Award for Worst Actor]] for his performance.<ref>{{cite web|url=http://www.vancourier.com/opinion/reliving-reckless-by-bryan-adams-1.2179670|title=Reliving Reckless by Bryan Adams|last=Fleming|first=Andrew|website=Vancouver Courier|date=November 27, 2014}}</ref> For one season (1983\u20131984), Atkins had a recurring role as camp counselor Peter Richards on ''[[Dallas (1978 TV series)|Dallas]]''.<ref name=\"dailyvoice.com\"/>\n\nAtkins appeared in the television sitcom ''[[Suddenly Susan]]'', which starred Shields, in 1999.<ref name=\"people.com\"/> In 2009, Atkins appeared on [[VH1]]'s ''[[Confessions of a Teen Idol]]'', a reality show featuring former teen idols.<ref name=\"ew.com\">{{cite web|url=https://ew.com/article/2009/01/02/christopher-atk/|title=Christopher Atkins: PopWatch 'Teen Idol' Q&A (Part 4 of 4)|website=EW.com|last=Bierly |first=Mandy| date=January 2, 2009}}</ref><ref>{{Cite web|url=http://archive.boston.com/ae/tv/articles/2009/01/06/idol_hopes_underlie_these_confessions/|title=Idol hopes underlie these 'Confessions'|first=Mary|last=McNamara|date=January 6, 2009|via=The Boston Globe}}</ref> He has been ranked no. 76 on VH1's list of 100 Greatest Teen Stars.<ref name=\"dailyvoice.com\"/>\n\nAtkins became a luxury pool builder.<ref name=\"ew.com\"/> He also developed the Christopher Atkins Strike Jacket E.F.L. (Extreme Fishing Lure)--\"a rubbery slipcovering for traditional baits\"--with the assistance of special-effects expert Mark Viniello.<ref name=\"people.com\"/>\n\n==Personal life==\n[[File:Brittney Bomann and Christopher Atkins.JPG|right|thumb|Atkins and his daughter on the red carpet at the 62nd&nbsp;Annual Mother Goose Parade in San Diego County, 2008]]\nAtkins married Lynne Barron Weber of [[Sydney, Australia]], on May 25, 1985. The couple have two children: Son Grant Bomann and daughter Brittney Bomann.<ref>{{cite news |url=http://www.gettyimages.co.uk/detail/news-photo/actor-christopher-atkins-wife-lyn-barron-daughter-brittney-news-photo/142000266 |series=Ron Galella archive |year=2012 |title=Actor Christopher Atkins, wife Lyn Barron, daughter Brittney Bomann and son Grant Bomann |access-date=31 July 2015}}</ref><ref>{{cite web |url=http://www.nndb.com/people/819/000025744/ |title=Christopher Atkins |website=nndb.com |access-date=31 July 2015}}</ref> The couple divorced in 2007.<ref name=People200902>{{cite web |url=https://people.com/archive/christopher-atkins-second-act-vol-71-no-6/ |title=Christopher Atkins second act |magazine=People |volume=71 |issue=6 |last=Rizzo |first=Monica |date=16 February 2009 |access-date=23 August 2018}}</ref>\n\nIn a 2009 interview, Atkins acknowledged his past struggle with alcoholism and stated that he had been sober for 22&nbsp;years.<ref name=People200902/>\n\n==Filmography==\n=== Film ===\n{| class=\"wikitable sortable\"\n|-\n! Year\n! Title\n! Role\n! Notes\n|-\n| 1980 || ''[[The Blue Lagoon (1980 film)|The Blue Lagoon]]'' || Richard Lestrange ||\n|-\n| 1981 || ''[[Swan Lake (1981 film)|Swan Lake]]'' || Prince Siegfried || Voice\n|-\n| 1982 || ''[[Aladdin and the Wonderful Lamp (1982 film)|Aladdin and the Magic Lamp]]'' || Aladdin || Voice\n|-\n| 1982 || ''[[The Pirate Movie]]'' || Frederic ||\n|-\n| 1983 || ''[[A Night in Heaven]]'' || Rick Monroe ||\n|-\n| 1987 || ''[[Beaks: The Movie]]'' || Peter || \n|-\n| 1988 || ''[[Mortuary Academy]]'' || Max Grimm ||\n|-\n| 1989 || ''[[Listen to Me (film)|Listen to Me]]'' || Bruce Arlington ||\n|-\n| 1990 || ''[[Fatal Charm (1990 film)|Fatal Charm]]'' || Adam || \n|-\n| 1990 || ''[[Shakma]]'' || Sam ||\n|-\n| 1992 || ''[[Exchange Lifeguards|Wet and Wild Summer!]]'' || Bobby McCain || Alternate title: ''Exchange Lifeguards''\n|-\n| 1993 || ''Dracula Rising'' || Vlad ||\n|-\n| 1993 || ''[[Die Watching]]'' || Michael Terrence || Direct-to-video\n|-\n| 1993 || ''[[\u00a1Dispara!]]'' || Spence || Alternate title: ''Outrage!''\n|-\n| 1993 || ''King's Ransom'' || Spence || Direct-to-video\n|-\n| 1994 || ''Trigger Fast'' || Dusty Fog ||\n|-\n| 1994 || ''[[Signal One]]'' || Martin Bullet || Alternate title: ''Bullet Down Under''\n|-\n| 1995 || ''[[Project Shadowchaser III]]'' || Snake ||\n|-\n| 1995 || ''Smoke n Lightnin'' || Lightnin ||\n|-\n| 1996 || ''[[It's My Party (film)|It's My Party]]'' || Jack Allen ||\n|-\n| 1997 || ''[[Mutual Needs]]'' || Andrew ||\n|-\n| 1999 || ''[[Lima: Breaking the Silence]]'' || Jeff ||\n|-\n| 1999 || ''Deadly Delusions'' || Sam Gitlin ||\n|-\n| 2000 || ''Civility'' || Alfred Russo || Alternate title: ''Malicious Intent''\n|-\n| 2000 || ''Stage Ghost'' || Matthew Bronson ||\n|-\n| 2001 || ''[[Title to Murder]]'' || Paul Shaughnessy ||\n|-\n| 2001 || ''[[The Little Unicorn]]'' || PC Sid Edwards ||\n|-\n| 2001 || ''True Legends of the West'' || Theodore Sutherland ||\n|-\n| 2002 || ''[[13th Child]]'' || Ron || Direct-to-video\n|-\n| 2002 || ''Under the Gun'' || Bill || Alternate title: ''The Employee of the Month''\n|-\n| 2002 || ''The Stoneman'' || Kip Hollings || \n|-\n| 2002 || ''The Color of Water'' || Clay || Alternate title: ''Love Don't Come Easy''\n|-\n| 2002 || ''Tequila Express'' || David Manning ||\n|-\n| 2003 || ''[[Quigley (film)|Quigley]]'' || Woodward Channing || Alternate title: ''Daddy Dog Day''\n|-\n| 2003 || ''[[The Librarians (film)|The Librarians]]'' || Ringo || Alternate title: ''Strike Force''\n|-\n| 2007 || ''Payback'' || Sean Walker ||\n|-\n| 2007 || ''Spiritual Warriors'' || King of Sparta ||\n|-\n| 2008 || ''[[Blind Ambition (film)|Blind Ambition]]'' || Wild Bill ||\n|-\n| 2008 || ''[[100 Million BC]]'' || Erik Reno || Direct-to-video\n|-\n| 2008 || ''Chinaman's Chance: America's Yellow Slaves'' || Jacob ||\n|-\n| 2009 || ''[[Forget Me Not (2009 film)|Forget Me Not]]'' || Mr. Channing || \n|-\n| 2010 || ''Melissa'' || Ellis || Short film\n|-\n| 2010 || ''Stained Glass Windows'' || Detective Marshall ||\n|-\n| 2011 || ''[[Sedona (film)|Sedona]]'' || Pierce ||\n|-\n| 2011 || ''Family 2.0'' || Michael || Short film\n|-\n| 2011 || ''[[Exodus Fall]]'' || Wayne Minor ||\n|-\n| 2011 || ''Assassins' Code'' || Daniel Dodd ||\n|-\n| 2011 || ''Hidden'' || Dian's Husband ||\n|-\n| 2011 || ''Harley's Hill'' || Mr. Miller || Direct-to-video\n|-\n| 2013 || ''[[Crazy Kind of Love]]'' || Mr. Jeffries ||\n|-\n| 2013 || ''Amy'' || Chris ||\n|-\n| 2014 || ''Waiting in the Wings: The Musical'' || Priest ||\n|-\n| 2014 || ''Guardian Angel'' || John Robertson ||\n|-\n| 2015 || ''A Horse for Summer'' || Pastor Bob ||\n|-\n| 2015 || ''The Sparrows: Nesting'' || Mike Sparrow ||\n|-\n| 2015 || ''[[Kids vs Monsters]]'' || Charles ||\n|-\n| 2015 || ''A Tennis Shoe in the Street'' || Lucky / Brandon ||\n|-\n| 2016 || ''The Unlikely's'' || Daniel Jacobsen ||\n|-\n| 2018 || ''[[Gathering of Heroes: Legend of the Seven Swords]]'' || Garrik Grayraven ||\n|-\n| 2018 || ''Railroad to Hell: A Chinaman's Chance'' || Jacob ||\n|-\n| 2018 || ''The City of Gold'' || Richard Davenport ||\n|-\n| 2019 || ''One Remains'' || Samuel Mahoney ||\n|-\n|}\n\n=== Television ===\n{| class=\"wikitable sortable\"\n|-\n! Year\n! Title\n! Role\n! Notes\n|-\n| 1981 || ''[[Child Bride of Short Creek]]'' || Isaac King || TV movie\n|-\n| 1983\u201384 || ''[[Dallas (1978 TV series)|Dallas]]'' || Peter Richards || 27 episodes\n|-\n| 1985 || ''Secret Weapons'' || Allan Collier || TV movie\n|-\n| 1985 || ''[[Hotel (American TV series)|Hotel]]'' || Jason Fielding || Episode: \"Echoes\"\n|-\n| 1987 || ''[[The Visitor (short story)|Night Rose: Akhbar's Daughter]]'' || Bitterman || TV pilot\n|-\n| 1991 || ''Extralarge: Miami Killer'' || Blake || TV movie\n|-\n| 1993 || ''[[The Adventures of the Black Stallion]]'' || Drag Racer || Episode: \"Racing in the Streets\"\n|-\n| 1994 || ''[[Bandit (film series)|Bandit Goes Country]]'' || Johnny Bruce || TV movie\n|-\n| 1994 || ''Guns of Honor'' || Dusty Fog || TV movie\n|-\n| 1994 || ''[[Red Shoe Diaries]]'' || Husband || Episode: \"Four on the Floor\"\n|-\n| 1996 || ''[[Dead Man's Island]]'' || Roger Prescott || TV movie\n|-\n| 1996 || ''Angel Flight Down'' || Jack Bahr || TV movie\n|-\n| 1996 || ''[[Silk Stalkings]]'' || Chance Reynolds || Episode: \"Compulsion\"\n|-\n| 1997 || ''[[High Tide (TV series)|High Tide]]'' || Raider || Episode: \"A Rock and a Hard Place\"\n|-\n| 1999 || ''[[Suddenly Susan]]'' || Tony || Episode: \"Sometimes You Feel Like a Nut\"\n|-\n| 2001 || ''[[Dark Realm]]'' || Jack Anderson || Episode: \"Emma's Boy\"\n|-\n| 2006 || ''[[Caved In: Prehistoric Terror]]'' || John Palmer || TV movie\n|-\n| 2009 || ''[[Confessions of a Teen Idol]]'' || Himself || 8 episodes\n|-\n| 2012 || ''[[Blue Lagoon: The Awakening]]'' || Mr. Christiansen || TV movie\n|-\n| 2014 || ''The Sparrows'' || Mike Sparrow || Episode: \"Trailer\"\n|-\n| 2014 || ''[[CSI: Crime Scene Investigation]]'' || Jimmy Turelli || Episode: \"Dead Rails\"\n|-\n| 2016 || ''The Eleventh'' || Neil || 5 episodes\n|-\n| 2019 || ''Defrost: The Virtual Series'' || George Michael Garrison || TV movie\n|-\n|}\n\n==References==\n\n{{Reflist}}\n\n==External links==\n* {{Facebook|christopher.atkins.509}}\n{{commons category}}\n* {{IMDb name|803}}\n* {{AllMovie name|2694}}\n\n{{Authority control}}\n\n{{DEFAULTSORT:Atkins, Christopher}}\n[[Category:1961 births]]\n[[Category:Living people]]\n[[Category:Male actors from New York (state)]]\n[[Category:American male film actors]]\n[[Category:American male television actors]]\n[[Category:American male singers]]\n[[Category:American pop singers]]\n[[Category:People from Rye, New York]]\n[[Category:American male voice actors]]\n", "name_user": "Moe1810", "label": "safe", "comment": "\u2192\u200eTelevision", "url_page": "//en.wikipedia.org/wiki/Christopher_Atkins"}
