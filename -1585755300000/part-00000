{"title_page": "Warrior (comics)", "text_new": "{{for|the DC Comics character|Guy Gardner (comics)#Guy Gardner: Warrior}}\n{{Infobox comic book title   <!--Wikipedia:WikiProject Comics--> \n|title               = Warrior\n|image               = Warrior No 1.png\n|caption             = ''Warrior'' #1 (March 1982), featuring an image of [[Axel Pressbutton]] by [[Steve Dillon]].\n|schedule            = Monthly\n|ongoing             = y\n|Fantasy             = y\n|SciFi               = y\n|multigenre          = \n|publisher           = [[Quality Communications]]\n|startmo             = March \n|startyr             = 1982 \n|endmo               = January \n|endyr               = 1985\n|issues              = 26\n|main_char_team      = [[Marvelman]]<br />[[V (comics)|V]]<br />[[Axel Pressbutton]]\n|writers             = [[Alan Moore]]<br />[[Steve Moore (comics)|Steve Moore]]\n|artists             = [[Steve Dillon]]<br />[[Garry Leach]]\n|pencillers          = \n|inkers              = \n|letterers           = \n|colorists           = \n|editors             = \n|creative_team_month = \n|creative_team_year  = \n|creators            = [[Dez Skinn]]\n|TPB                 = \n|ISBN                = \n|TPB#                = \n|ISBN#               = \n|subcat              = British comics\n|altcat              = \n|sort                = Warrior (comics)\n|addpubcat#          = \n|nonUS               = \n}}\n'''''Warrior''''' was a [[United Kingdom|British]] [[comics anthology]] that ran for 26 issues between March 1982 and January 1985.  It was edited by [[Dez Skinn]] and published by his company [[Quality Communications]]. It featured early work by comics writer [[Alan Moore]], including ''[[V for Vendetta]]'' and ''[[Marvelman]]''.\n\nThis series of 26 issues in the 1980s was essentially a Volume #2; Skinn had edited/published #s 1-6 of a black-and-white [[fanzine]] version of ''Warrior'' (full title: ''Warrior: Heroic Tales Of Swords and Sorcery'') in 1974-75, with reprint and new strips, art and writing from [[Steve Parkhouse]], [[Dave Gibbons]] [designed logo], [[Michael Moorcock]], [[Frank Bellamy]], [[Don Lawrence]], [[Barry Windsor-Smith]], et al.<ref>Skinn, Dez. [http://dezskinn.com/fanzines-2/ \"WARRIOR: TAKE ONE,\"] DezSkinn.com. Accessed Jan. 25, 2020.</ref>\n\nRivalling ''[[2000 AD (comics)|2000 AD]]'', ''Warrior'' won 17 [[Eagle Award (comics)|Eagle Awards]] during its short run (including nine Eagles in 1983 alone).<ref>Green, Steve. [http://www.fanac.org/fanzines/Birmingham_Science_Fiction_Group_Newsletter/Birmingham_Science_Fiction_Group_Newsletter147.pdf \"This Month,\"] ''The Birmingham Science Fiction Group'' #147 (Nov. 1983), p. 2.</ref> Because of traditional distribution and its format, it was one of the [[comic book]]s in the British market that didn't just rely upon distribution through then format-driven specialist shops and expensive subscriptions for its sales base.\n\n==History==\nSkinn, former editorial director of [[Marvel UK]], launched ''Warrior'' in an effort to create a similar mix of stories to the one he had previously put together for Marvel's ''[[Hulk Weekly]]'', but with greater creative freedom and a measure of creator ownership. The title was recycled from a short-lived reprint series Skinn had once published; he remarked that \"''Warrior'' seemed an obvious choice nobody else had picked up on\u2014both times! It fit perfectly as a newsstand logo.\"<ref name=\"Back34\">{{cite journal| last= Harvey|first= Allan|date= June 2009|title= Blood and Sapphires: The Rise and Demise of Marvelman|journal= [[Back Issue!]]| issue= 34|pages= 69\u201376|publisher= [[TwoMorrows Publishing]]}}</ref> He recruited many of the writers and artists he had previously worked with at Marvel, including [[Steve Moore (comics)|Steve Moore]], [[John Bolton (comics)|John Bolton]], [[Steve Parkhouse]] and [[David Lloyd (comic artist)|David Lloyd]], adding established creators like [[Brian Bolland]] and [[Dave Gibbons]], and emerging young talent such as [[Alan Moore]], [[Garry Leach]], [[Alan Davis]] and [[Steve Dillon]].\n\nSkinn decided to revive Marvelman, a popular British superhero from the 1950s with a massive backlog of available pages, reasoning that \"given the difference between a brand-new character who would sell no more copies, or a somewhat forgotten character who might sell about a dozen more, I opted to follow the similar relaunch I\u2019d done with Captain Britain\u2014tease at first, then, as a bonus, surprise those who actually cared. If it failed, it was only six pages out of 52\u2014the beauty of the anthology approach.\"<ref name=\"Back34\"/> Skinn offered the writing first to Parkhouse who had earlier worked for Marvel, then Steve Moore, who had worked on the pre-Marvel UK US-reprint line Power Comics. Neither were interested, and Moore suggested a friend Alan Moore (no relation)<ref name=\"Back34\"/> who had said in a [[fanzine]] that he had an ambition to revive the character. Alan Moore was offered the first script on spec and Skinn was impressed enough to give him the assignment. Artist David Lloyd had been asked to create a mystery strip in the vein of his Marvel UK hit ''[[Night Raven]]'', and independently suggested Moore, with whom he had worked on ''[[Doctor Who]]'' and ''[[Star Wars]]'' stories at Marvel UK, as the writer; their collaboration became ''[[V for Vendetta]]''.\n\n''Laser Eraser and Pressbutton'', a [[science fiction]] strip about a pair of assassins, featured [[Axel Pressbutton]], a violent cyborg who had previously appeared in underground strips written by \"Pedro Henry\" (a pseudonym for Steve Moore) and drawn by \"Curt Vile\" (Alan Moore). At Skinn's insistence, ''Laser Eraser and Pressbutton'' featured a female partner, Mysta Mystralis, and was written by Pedro Henry and drawn by Steve Dillon. Under his own name, Steve Moore also wrote the occult adventure ''Father Shandor, Demon Stalker'' (continuing the stories from Skinn's House of Hammer magazine), among others. Steve Parkhouse, who had written the [[Arthurian]]-themed superhero strip ''[[Black Knight (comics)|Black Knight]]'' for ''Hulk Weekly'', wrote and drew a [[fantasy]] adventure called ''The Spiral Path''.\n\nUsing the same magazine format Skinn had employed for his earlier ''[[House of Hammer]]'' and Starburst to reach an older audience, ''Warrior'' was distributed nationally through newsagents and was launched to strong sales.{{citation needed|date=March 2014}}\n\nAfter a few issues Garry Leach bowed out as ''Marvelman'''s artist, giving way to Alan Davis. Leach became the magazine's art director, and later drew the ''Marvelman'' spin-off ''[[Warpsmith]]'' as well as ''Zirk'', a lecherous egg-shaped alien spun off from ''Pressbutton'', some of whose stories were drawn by Brian Bolland. After the completion of ''The Spiral Path'', Parkhouse teamed with Alan Moore to create the macabre comedy ''[[The Bojeffries Saga]]'', a kind of  British working-class ''[[The Addams Family|Addams Family]]'' owing much to Henry Kuttner's Hogben Family. Dez Skinn himself wrote ''[[Big Ben (comic)|Big Ben]]'', a spin-off character from ''Marvelman'', drawn by [[Will Simpson (comics)|Will Simpson]]. [[Mick Austin]] contributed painted covers.\n\nSkinn wanted each strip to form part of a \"Warrior Universe\" and connect with each other.{{citation needed|date=March 2014}} This never really happened as Skinn intended, although there were some crossover strips, e.g. ''Big Ben'' and ''Warpsmith'' tied into ''Marvelman''. [[Grant Morrison]]'s ''[[The Liberators]]'' was also part of this universe, set in the future of Big Ben's timeline and featuring alien characters in common.\n\nDespite a strong launch and critical acclaim,{{citation needed|date=March 2014}} sales were not strong{{citation needed|date=March 2014}} and for much of its run the magazine was subsidised from the profits of Skinn's comic shop, Quality Comics. Offered to newsagents on a \"sale or return\" basis, it suffered a high rate of returns.{{citation needed|date=March 2014}} The high level of creator control also led to problems: the second series of ''Laser Eraser and Pressbutton'' was never completed because artist Steve Dillon went AWOL, and issues began to turn up late when contributors missed deadlines and fill-in artists could not be commissioned, as the originating artists owned the work. The title had also managed to appeal to a female audience unlike ''2000 AD'' thanks to the inclusion of strong women characters but as later issues became dominated by more sexist material that readership declined.{{citation needed|date=March 2014}} Though primarily a British publication, ''Warrior'' also had some distribution in the U.S. and acquired a fan following there.<ref>{{cite journal|last=Barr|first=Mike W.|authorlink=Mike W. Barr |date=October 2010 |title=Department of Corrections|journal=[[Back Issue!]] |issue=44|page=78 |publisher=[[TwoMorrows Publishing]]}}</ref>\n\n''[[Marvelman]]'' last appeared in ''Warrior'' in issue 21. This was ostensibly because, after Quality published a spin-off ''Marvelman Special'' featuring stories from the character's original run, [[Marvel Comics]] objected that this was a [[trademark infringement]] on the better known Marvel brand name. The actual reason was a series of bitter financial disagreements between Skinn and Moore.<ref name=\"Back34\"/> Other strips were affected by creative disputes, with only ''V for Vendetta'' not suffering any gaps in publication. Many of the title's top creators were being offered work from U.S. publishing companies, causing problems in finding new talent.\n\n''Warrior'' ended its run with issue 26 in 1985. Through [[Mike Friedrich]]'s Star*Reach agency, Skinn signed all the Warrior work (except V for Vendetta) to [[Pacific Comics]]. Pacific folded within months, and another American independent publisher, [[Eclipse Comics]], picked them up.\n\nA final \"Spring Special\" [[flip book]] issue was published in #67 of Skinn's ''[[Comics International]]'' in 1996.\n\n\"It did its job. Despite the inevitable disagreements such leads to, it showed what could be done with comics when creators are given ownership of properties,\" Skinn commented when interviewed about the title.{{citation needed|date=March 2014}}\n\nUncompleted stories such as ''Marvelman'' and ''V for Vendetta'' were completed elsewhere.\n\n==Stories==\n\nStories that featured in ''Warrior'' include:\n\n*''[[Axel Pressbutton]]'' (\"[[Steve Moore (comics)|Pedro Henry]]\" and [[Steve Dillon]])\n*''[[Big Ben (comic)|Big Ben]]'' ([[Dez Skinn]] and [[Will Simpson (comics)|Will Simpson]])\n*''[[Bogey (comics)|Bogey]]'' ([[Antonio Segura]], Dez Skinn and [[Leopoldo Sanchez]])\n*''[[The Bojeffries Saga]]'' ([[Alan Moore]] and [[Steve Parkhouse]])\n*''[[Thrud the Barbarian#The Black Currant|The Black Currant]]'' ([[Carl Critchlow]])\n*''Ektryn'' (\"Pedro Henry\" and [[Cam Kennedy]])\n*''[[Father Shandor]]'' ([[Steve Moore (comics)|Steve Moore]], [[John Bolton (comics)|John Bolton]], [[David Jackson (comics)|David Jackson]] and [[John Stokes (artist)|John Stokes]])\n*''The Legend of Prester John'' (Steve Parkhouse and [[John Ridgway (comic artist)|John Ridgway]])\n*''[[The Liberators]]'' ([[Grant Morrison]] and John Ridgway)\n*''[[Madman (Warrior)|Madman]]'' ([[Paul Neary]] and [[Mick Austin]])\n*''[[Marvelman]]'' (Alan Moore, [[Garry Leach]] and [[Alan Davis]])\n*''[[The Spiral Path]]'' (Steve Parkhouse, John Ridgway, David Jackson and John Bolton)\n*''Twilight World'' (Steve Moore and [[Jim Baikie]])\n*''[[V for Vendetta]]'' (Alan Moore and [[David Lloyd (comic artist)|David Lloyd]])\n*''[[Warpsmith]]'' (Alan Moore and Garry Leach)\n*''[[Zirk (comics)|Zirk]]'' ([[Brian Bolland]], \"Pedro Henry\" and Garry Leach)\n\n== See also ==\n* ''[[Revolver (comics)|Revolver]]''\n\n==References==\n{{Reflist}}\n\n==Further reading==\n{{Refbegin}}\n* [[George Khoury (author)|Khoury, George]] (2001), ''Kimota! The Miracleman Companion'', [[TwoMorrows Publishing]], {{ISBN|978-1-893905-11-5}}\n* Khoury, George (2003), ''The Extraordinary Works of Alan Moore'', TwoMorrows Publishing {{ISBN|1-893905-24-1}}\n* {{gcdb series|id=2706|title=''Warrior''}}\n* {{comicbookdb|type=title|id=4026|title=''Warrior''}}\n{{Refend}}\n\n==External links==\n* [http://dezskinn.com/quality-comms/#warrior1 ''Warrior'' background] on Dez Skinn's site\n* [http://enjolrasworld.com/Richard%20Arndt/Warrior.htm ''Warrior'' bibliography and interview with Dez Skinn] by Richard J. Arndt at Enjolrasworld.com\n\n[[Category:Defunct British comics]]\n[[Category:Warrior| ]]\n[[Category:Comics anthologies]]\n[[Category:War comics]]\n[[Category:Science fiction comics]]\n", "text_old": "{{for|the DC Comics character|Guy Gardner (comics)#Guy Gardner: Warrior}}\n{{Infobox comic book title   <!--Wikipedia:WikiProject Comics--> \n|title               = Warrior\n|image               = Warrior No 1.png\n|caption             = ''Warrior'' #1 (March 1982), featuring an image of [[Axel Pressbutton]] by [[Steve Dillon]].\n|schedule            = Monthly\n|ongoing             = y\n|Fantasy             = y\n|SciFi               = y\n|multigenre          = \n|publisher           = [[Quality Communications]]\n|startmo             = March \n|startyr             = 1982 \n|endmo               = January \n|endyr               = 1985\n|issues              = 26\n|main_char_team      = [[Marvelman]]<br />[[V (comics)|V]]<br />[[Axel Pressbutton]]\n|writers             = [[Alan Moore]]<br />[[Steve Moore (comics)|Steve Moore]]\n|artists             = [[Steve Dillon]]<br />[[Garry Leach]]\n|pencillers          = \n|inkers              = \n|letterers           = \n|colorists           = \n|editors             = \n|creative_team_month = \n|creative_team_year  = \n|creators            = [[Dez Skinn]]\n|TPB                 = \n|ISBN                = \n|TPB#                = \n|ISBN#               = \n|subcat              = British comics\n|altcat              = \n|sort                = Warrior (comics)\n|addpubcat#          = \n|nonUS               = \n}}\n'''''Warrior''''' was a [[United Kingdom|British]] [[comics anthology]] that ran for 26 issues between March 1982 and January 1985.  It was edited by [[Dez Skinn]] and published by his company [[Quality Communications]]. It featured early work by comics writer [[Alan Moore]], including ''[[V for Vendetta]]'' and ''[[Marvelman]]''.\n\nThis series of 26 issues in the 1980s was essentially a Volume #2; Skinn had edited/published #s 1-6 of a black-and-white [[fanzine]] version of ''Warrior'' (full title: ''Warrior: Heroic Tales Of Swords and Sorcery'') in 1974-75, with reprint and new strips, art and writing from [[Steve Parkhouse]], [[Dave Gibbons]] [designed logo], [[Michael Moorcock]], [[Frank Bellamy]], [[Don Lawrence]], [[Barry Windsor-Smith]], et al.<ref>Skinn, Dez. [http://dezskinn.com/fanzines-2/ \"WARRIOR: TAKE ONE,\"] DezSkinn.com. Accessed Jan. 25, 2020.</ref>\n\nRivalling ''[[2000 AD (comics)|2000 AD]]'', ''Warrior'' won 17 [[Eagle Award (comics)|Eagle Awards]] during its short run (including nine Eagles in 1983 alone).<ref>Green, Steve. [http://www.fanac.org/fanzines/Birmingham_Science_Fiction_Group_Newsletter/Birmingham_Science_Fiction_Group_Newsletter147.pdf \"This Month,\"] ''The Birmingham Science Fiction Group'' #147 (Nov. 1983), p. 2.</ref> Because of traditional distribution and its format, it was one of the [[comic book]]s in the British market that didn't just rely upon distribution through then format-driven specialist shops and expensive subscriptions for its sales base.\n\n==History==\nSkinn, former editorial director of [[Marvel UK]], launched ''Warrior'' in an effort to create a similar mix of stories to the one he had previously put together for Marvel's ''[[Hulk Weekly]]'', but with greater creative freedom and a measure of creator ownership. The title was recycled from a short-lived reprint series Skinn had once published; he remarked that \"''Warrior'' seemed an obvious choice nobody else had picked up on\u2014both times! It fit perfectly as a newsstand logo.\"<ref name=\"Back34\">{{cite journal| last= Harvey|first= Allan|date= June 2009|title= Blood and Sapphires: The Rise and Demise of Marvelman|journal= [[Back Issue!]]| issue= 34|pages= 69\u201376|publisher= [[TwoMorrows Publishing]]}}</ref> He recruited many of the writers and artists he had previously worked with at Marvel, including [[Steve Moore (comics)|Steve Moore]], [[John Bolton (comics)|John Bolton]], [[Steve Parkhouse]] and [[David Lloyd (comic artist)|David Lloyd]], adding established creators like [[Brian Bolland]] and [[Dave Gibbons]], and emerging young talent such as [[Alan Moore]], [[Garry Leach]], [[Alan Davis]] and [[Steve Dillon]].\n\nSkinn decided to revive Marvelman, a popular British superhero from the 1950s with a massive backlog of available pages, reasoning that \"given the difference between a brand-new character who would sell no more copies, or a somewhat forgotten character who might sell about a dozen more, I opted to follow the similar relaunch I\u2019d done with Captain Britain\u2014tease at first, then, as a bonus, surprise those who actually cared. If it failed, it was only six pages out of 52\u2014the beauty of the anthology approach.\"<ref name=\"Back34\"/> Skinn offered the writing first to Parkhouse who had earlier worked for Marvel, then Steve Moore, who had worked on the pre-Marvel UK US-reprint line Power Comics. Neither were interested, and Moore suggested a friend Alan Moore (no relation)<ref name=\"Back34\"/> who had said in a [[fanzine]] that he had an ambition to revive the character. Alan Moore was offered the first script on spec and Skinn was impressed enough to give him the assignment. Artist David Lloyd had been asked to create a mystery strip in the vein of his Marvel UK hit ''[[Night Raven]]'', and independently suggested Moore, with whom he had worked on ''[[Doctor Who]]'' and ''[[Star Wars]]'' stories at Marvel UK, as the writer; their collaboration became ''[[V for Vendetta]]''.\n\n''Laser Eraser and Pressbutton'', a [[science fiction]] strip about a pair of assassins, featured [[Axel Pressbutton]], a violent cyborg who had previously appeared in underground strips written by \"Pedro Henry\" (a pseudonym for Steve Moore) and drawn by \"Curt Vile\" (Alan Moore). At Skinn's insistence, ''Laser Eraser and Pressbutton'' featured a female partner, Mysta Mystralis, and was written by Pedro Henry and drawn by Steve Dillon. Under his own name, Steve Moore also wrote the occult adventure ''Father Shandor, Demon Stalker'' (continuing the stories from Skinn's House of Hammer magazine), among others. Steve Parkhouse, who had written the [[Arthurian]]-themed superhero strip ''[[Black Knight (comics)|Black Knight]]'' for ''Hulk Weekly'', wrote and drew a [[fantasy]] adventure called ''The Spiral Path''.\n\nUsing the same magazine format Skinn had employed for his earlier ''[[House of Hammer]]'' and Starburst to reach an older audience, ''Warrior'' was distributed nationally through newsagents and was launched to strong sales.{{citation needed|date=March 2014}}\n\nAfter a few issues Garry Leach bowed out as ''Marvelman'''s artist, giving way to Alan Davis. Leach became the magazine's art director, and later drew the ''Marvelman'' spin-off ''[[Warpsmith]]'' as well as ''Zirk'', a lecherous egg-shaped alien spun off from ''Pressbutton'', some of whose stories were drawn by Brian Bolland. After the completion of ''The Spiral Path'', Parkhouse teamed with Alan Moore to create the macabre comedy ''[[The Bojeffries Saga]]'', a kind of  British working-class ''[[The Addams Family|Addams Family]]'' owing much to Henry Kuttner's Hogben Family. Dez Skinn himself wrote ''[[Big Ben (comic)|Big Ben]]'', a spin-off character from ''Marvelman'', drawn by [[Will Simpson (comics)|Will Simpson]]. [[Mick Austin]] contributed painted covers.\n\nSkinn wanted each strip to form part of a \"Warrior Universe\" and connect with each other.{{citation needed|date=March 2014}} This never really happened as Skinn intended, although there were some crossover strips, e.g. ''Big Ben'' and ''Warpsmith'' tied into ''Marvelman''. [[Grant Morrison]]'s ''[[The Liberators]]'' was also part of this universe, set in the future of Big Ben's timeline and featuring alien characters in common.\n\nDespite a strong launch and critical acclaim,{{citation needed|date=March 2014}} sales were not strong{{citation needed|date=March 2014}} and for much of its run the magazine was subsidised from the profits of Skinn's comic shop, Quality Comics. Offered to newsagents on a \"sale or return\" basis, it suffered a high rate of returns.{{citation needed|date=March 2014}} The high level of creator control also led to problems: the second series of ''Laser Eraser and Pressbutton'' was never completed because artist Steve Dillon went AWOL, and issues began to turn up late when contributors missed deadlines and fill-in artists could not be commissioned, as the originating artists owned the work. The title had also managed to appeal to a female audience unlike ''2000 AD'' thanks to the inclusion of strong women characters but as later issues became dominated by more sexist material that readership declined.{{citation needed|date=March 2014}} Though primarily a British publication, ''Warrior'' also had some distribution in the U.S. and acquired a fan following there.<ref>{{cite journal|last=Barr|first=Mike W.|authorlink=Mike W. Barr |date=October 2010 |title=Department of Corrections|journal=[[Back Issue!]] |issue=44|page=78 |publisher=[[TwoMorrows Publishing]]}}</ref>\n\n''[[Marvelman]]'' last appeared in ''Warrior'' in issue 21. This was ostensibly because, after Quality published a spin-off ''Marvelman Special'' featuring stories from the character's original run, [[Marvel Comics]] objected that this was a [[trademark infringement]] on the better known Marvel brand name. The actual reason was a series of bitter financial disagreements between Skinn and Moore.<ref name=\"Back34\"/> Other strips were affected by creative disputes, with only ''V for Vendetta'' not suffering any gaps in publication. Many of the title's top creators were being offered work from U.S. publishing companies, causing problems in finding new talent.\n\n''Warrior'' ended its run with issue 26 in 1985. Through [[Mike Friedrich]]'s Star*Reach agency, Skinn signed all the Warrior work (except V for Vendetta) to [[Pacific Comics]]. Pacific folded within months, and another American independent publisher, [[Eclipse Comics]], picked them up.\n\nA final \"Spring Special\" [[flip book]] issue was published in #67 of Skinn's ''[[Comics International]]'' in 1996.\n\n\"It did its job. Despite the inevitable disagreements such leads to, it showed what could be done with comics when creators are given ownership of properties,\" Skinn commented when interviewed about the title.{{citation needed|date=March 2014}}\n\nUncompleted stories such as ''Marvelman'' and ''V for Vendetta'' were completed elsewhere.\n\n==Stories==\n\nStories that featured in ''Warrior'' include:\n\n*''[[Axel Pressbutton]]'' (\"[[Steve Moore (comics)|Pedro Henry]]\" and [[Steve Dillon]])\n*''[[Big Ben (comic)|Big Ben]]'' ([[Dez Skinn]] and [[Will Simpson (comics)|Will Simpson]])\n*''[[Bogey (comics)|Bogey]]'' ([[Antonio Segura]], Dez Skinn and [[Leopoldo Sanchez]])\n*''[[The Bojeffries Saga]]'' ([[Alan Moore]] and [[Steve Parkhouse]])\n*''[[Thrud the Barbarian#The Black Currant|The Black Currant]]'' ([[Carl Critchlow]])\n*''Ektryn'' (\"Pedro Henry\" and [[Cam Kennedy]])\n*''[[Father Shandor]]'' ([[Steve Moore (comics)|Steve Moore]], [[John Bolton (comics)|John Bolton]], [[David Jackson (comics)|David Jackson]] and [[John Stokes (artist)|John Stokes]])\n*''The Legend of Prester John'' (Steve Parkhouse and [[John Ridgway (comic artist)|John Ridgway]])\n*''[[The Liberators]]'' ([[Grant Morrison]] and John Ridgway)\n*''[[Madman (Warrior)|Madman]]'' ([[Paul Neary]] and [[Mick Austin]])\n*''[[Marvelman]]'' (Alan Moore, [[Garry Leach]] and [[Alan Davis]])\n*''[[The Spiral Path]]'' (Steve Parkhouse, John Ridgway, David Jackson and John Bolton)\n*''Twilight World'' (Steve Moore and [[Jim Baikie]])\n*''[[V for Vendetta]]'' (Alan Moore and [[David Lloyd (comic artist)|David Lloyd]])\n*''[[Warpsmith]]'' (Alan Moore and Garry Leach)\n*''[[Zirk (comics)|Zirk]]'' ([[Brian Bolland]], \"Pedro Henry\" and Garry Leach)\n\n==References==\n{{Reflist}}\n\n==Further reading==\n{{Refbegin}}\n* [[George Khoury (author)|Khoury, George]] (2001), ''Kimota! The Miracleman Companion'', [[TwoMorrows Publishing]], {{ISBN|978-1-893905-11-5}}\n* Khoury, George (2003), ''The Extraordinary Works of Alan Moore'', TwoMorrows Publishing {{ISBN|1-893905-24-1}}\n* {{gcdb series|id=2706|title=''Warrior''}}\n* {{comicbookdb|type=title|id=4026|title=''Warrior''}}\n{{Refend}}\n\n==External links==\n* [http://dezskinn.com/quality-comms/#warrior1 ''Warrior'' background] on Dez Skinn's site\n* [http://enjolrasworld.com/Richard%20Arndt/Warrior.htm ''Warrior'' bibliography and interview with Dez Skinn] by Richard J. Arndt at Enjolrasworld.com\n\n[[Category:Defunct British comics]]\n[[Category:Warrior| ]]\n[[Category:Comics anthologies]]\n[[Category:War comics]]\n[[Category:Science fiction comics]]\n", "name_user": "Stoshmaster", "label": "safe", "comment": "\u2192\u200eReferences", "url_page": "//en.wikipedia.org/wiki/Warrior_(comics)"}
{"title_page": "Martin Khor", "text_new": "{{short description|Malaysian journalist and economist}}\n[[File:Martin Khor (cropped).jpg|thumb|Martin Khor (2013)]]\n[[File:Special event-Panel Discussion on Rise of South The World Turned Upside Down (co-hosted with South Centre) (6960361382).jpg|thumb|Martin Khor (2012)]]\n'''Martin Khor''' (1951 in [[Penang]], [[Malaysia]] \u2013 April 1, 2020)<ref>https://www.nst.com.my/news/nation/2020/04/580237/condolences-pour-late-martin-khor</ref> was the Executive Director of the [[South Centre (organization)|South Centre]] (an intergovernmental organisation of developing countries based in Geneva, Switzerland) since 1 March 2009. He replaced [[Yash Tandon|Dr. Yash Tandon]] who was the Executive Director of the South Centre from 2005 to 2009. Mr. Khor was also a journalist, economist and the former Director of the [[Third World Network]] which is based in [[Penang]], [[Malaysia]].\n\nHe was active in the [[civil society|civil society movement]].\nHe attended the [[World Social Forum]] (WSF 2003, 2002), [[European Social Forum#Third ESF|European social forum (2004)]]<ref>{{cite web|url=http://www.eurosur.org/wide/Globalisation/ESF_AB.htm|archiveurl=https://web.archive.org/web/20050228041917/http://www.eurosur.org/wide/Globalisation/ESF_AB.htm|title=The third European Social Forum, 14-17 October 2004, London|archivedate=February 28, 2005|publisher=|author=\nBach, Amandine}}</ref> and in 1999 and 2000, the [[World Economic Forum]] (WEF) in [[Davos]]. \n\nHe was also a member of the [[UN Secretary-General]]'s Task Force on Environment and Human Settlements since 1997,  and a member of the [[Ministry of International Trade and Industry (Malaysia)|Ministry of International Trade and Industry]]'s National Committee on Multilateral Trade Issues in Malaysia.<ref>[http://www.helsinkiprocess.fi/HelsinkiGroup/members.asp Helsinki Process  on Globalisation and Democracy Members] {{webarchive|url=https://web.archive.org/web/20070706030626/http://www.helsinkiprocess.fi/HelsinkiGroup/members.asp |date=2007-07-06 }}</ref> He was a Vice-Chair of  the Working Group of Experts on the [[Right to Development]] under the UN  [[Commission on Human Rights]].<ref>{{cite web|url=http://www.inwent.org/ef/events/financial_crisis/07825/index.en.shtml#Bio%20Sketch%20Khor|title=How can Financial Crises be Prevented? In Focus: Financial Market Regulations|publisher=|access-date=2007-06-27|archive-url=https://web.archive.org/web/20071211172528/http://www.inwent.org/ef/events/financial_crisis/07825/index.en.shtml#Bio%20Sketch%20Khor|archive-date=2007-12-11|url-status=dead}}</ref>\n\nHe took part in the [[Helsinki Process on Globalisation and Democracy]].<ref>{{cite web|url=http://www.helsinkiprocess.fi/|title=Mobilising political will - Report from the Helsinki Process on Globalisation and Democracy|url-status=dead|archiveurl=https://web.archive.org/web/20070622104642/http://www.helsinkiprocess.fi/|archivedate=2007-06-22}}</ref>\n\nKhor sat on the board of directors of the [[International Forum on Globalization]].<ref>{{cite web|url=http://ifg.org/about/ifg-board-of-directors/|title=Staff & Board of Directors|work=ifg.org|accessdate=October 14, 2017}}</ref>\n\nKhor was a columnist for ''[[The Star (Malaysia)|The Star]]'' since 1978.<ref>{{cite web | url=http://biz.thestar.com.my/news/story.asp?file=/2010/1/30/business/5512568&sec=business | title=Up close & personal with Martin Khor | publisher=Star Publications | date=January 30, 2010 | accessdate=April 26, 2012 | author=Jin, Soo EwE}}</ref>\n\n== Quotes ==\n*about the WSF \"That is a new global relationship between countries that promote the weak rather than the strong\"\n[https://web.archive.org/web/20060524064705/http://ipsnews.net/fsm2003/28.01.2003/nota17.shtml WSF 2003]\n*about the patent system and intellectual property in general \"One of the solutions is finding ways to promote innovation and to reward good work without necessarily using the intellectual property system, because it may not be the right system to provide rewards all the time.\"\n[https://web.archive.org/web/20080531183307/http://www.epo.org/about-us/office/annual-reports/2006/Scenarios.html Scenarios for the future]\n\n==References==\n{{Reflist}}\n\n==External links==\n* [https://web.archive.org/web/20060523212921/http://www.ipsnews.net/fsm2003/26.01.2003/nota12.shtml interview]\n\n{{Authority control}}\n\n{{DEFAULTSORT:Khor, Martin}}\n[[Category:1951 births]]\n[[Category:Malaysian people of Chinese descent]]\n[[Category:Malaysian economists]]\n[[Category:Malaysian journalists]]\n[[Category:People from Penang]]\n[[Category:2020 deaths]]\n\n{{economist-stub}}\n{{Malaysia-academic-bio-stub}}\n", "text_old": "{{short description|Malaysian journalist and economist}}\n[[File:Martin Khor (cropped).jpg|thumb|Martin Khor (2013)]]\n[[File:Special event-Panel Discussion on Rise of South The World Turned Upside Down (co-hosted with South Centre) (6960361382).jpg|thumb|Martin Khor (2012)]]\n'''Martin Khor''' (1951 in [[Penang]], [[Malaysia]] - April 1, 2020)<ref>https://www.nst.com.my/news/nation/2020/04/580237/condolences-pour-late-martin-khor</ref> was the Executive Director of the [[South Centre (organization)|South Centre]] (an intergovernmental organisation of developing countries based in Geneva, Switzerland) since 1 March 2009. He replaced [[Yash Tandon|Dr. Yash Tandon]] who was the Executive Director of the South Centre from 2005 to 2009. Mr. Khor was also a journalist, economist and the former Director of the [[Third World Network]] which is based in [[Penang]], [[Malaysia]].\n\nHe was active in the [[civil society|civil society movement]].\nHe attended the [[World Social Forum]] (WSF 2003, 2002), [[European Social Forum#Third ESF|European social forum (2004)]]<ref>{{cite web|url=http://www.eurosur.org/wide/Globalisation/ESF_AB.htm|archiveurl=https://web.archive.org/web/20050228041917/http://www.eurosur.org/wide/Globalisation/ESF_AB.htm|title=The third European Social Forum, 14-17 October 2004, London|archivedate=February 28, 2005|publisher=|author=\nBach, Amandine}}</ref> and in 1999 and 2000, the [[World Economic Forum]] (WEF) in [[Davos]]. \n\nHe was also a member of the [[UN Secretary-General]]'s Task Force on Environment and Human Settlements since 1997,  and a member of the [[Ministry of International Trade and Industry (Malaysia)|Ministry of International Trade and Industry]]'s National Committee on Multilateral Trade Issues in Malaysia.<ref>[http://www.helsinkiprocess.fi/HelsinkiGroup/members.asp Helsinki Process  on Globalisation and Democracy Members] {{webarchive|url=https://web.archive.org/web/20070706030626/http://www.helsinkiprocess.fi/HelsinkiGroup/members.asp |date=2007-07-06 }}</ref> He was a Vice-Chair of  the Working Group of Experts on the [[Right to Development]] under the UN  [[Commission on Human Rights]].<ref>{{cite web|url=http://www.inwent.org/ef/events/financial_crisis/07825/index.en.shtml#Bio%20Sketch%20Khor|title=How can Financial Crises be Prevented? In Focus: Financial Market Regulations|publisher=|access-date=2007-06-27|archive-url=https://web.archive.org/web/20071211172528/http://www.inwent.org/ef/events/financial_crisis/07825/index.en.shtml#Bio%20Sketch%20Khor|archive-date=2007-12-11|url-status=dead}}</ref>\n\nHe took part in the [[Helsinki Process on Globalisation and Democracy]].<ref>{{cite web|url=http://www.helsinkiprocess.fi/|title=Mobilising political will - Report from the Helsinki Process on Globalisation and Democracy|url-status=dead|archiveurl=https://web.archive.org/web/20070622104642/http://www.helsinkiprocess.fi/|archivedate=2007-06-22}}</ref>\n\nKhor sat on the board of directors of the [[International Forum on Globalization]].<ref>{{cite web|url=http://ifg.org/about/ifg-board-of-directors/|title=Staff & Board of Directors|work=ifg.org|accessdate=October 14, 2017}}</ref>\n\nKhor was a columnist for ''[[The Star (Malaysia)|The Star]]'' since 1978.<ref>{{cite web | url=http://biz.thestar.com.my/news/story.asp?file=/2010/1/30/business/5512568&sec=business | title=Up close & personal with Martin Khor | publisher=Star Publications | date=January 30, 2010 | accessdate=April 26, 2012 | author=Jin, Soo EwE}}</ref>\n\n== Quotes ==\n*about the WSF \"That is a new global relationship between countries that promote the weak rather than the strong\"\n[https://web.archive.org/web/20060524064705/http://ipsnews.net/fsm2003/28.01.2003/nota17.shtml WSF 2003]\n*about the patent system and intellectual property in general \"One of the solutions is finding ways to promote innovation and to reward good work without necessarily using the intellectual property system, because it may not be the right system to provide rewards all the time.\"\n[https://web.archive.org/web/20080531183307/http://www.epo.org/about-us/office/annual-reports/2006/Scenarios.html Scenarios for the future]\n\n==References==\n{{Reflist}}\n\n==External links==\n* [https://web.archive.org/web/20060523212921/http://www.ipsnews.net/fsm2003/26.01.2003/nota12.shtml interview]\n\n{{Authority control}}\n\n{{DEFAULTSORT:Khor, Martin}}\n[[Category:1951 births]]\n[[Category:Malaysian people of Chinese descent]]\n[[Category:Malaysian economists]]\n[[Category:Malaysian journalists]]\n[[Category:People from Penang]]\n[[Category:2020 deaths]]\n\n{{economist-stub}}\n{{Malaysia-academic-bio-stub}}\n", "name_user": "AngryHarpy", "label": "safe", "comment": "", "url_page": "//en.wikipedia.org/wiki/Martin_Khor"}
{"title_page": "Arte", "text_new": "{{other uses|ARTE (disambiguation)}} {{Use dmy dates|date=June 2014}}\n{{Use British English|date=October 2017}}\n{{More citations needed|date=July 2008}}\n{{Infobox TV channel\n| name              = COMO CONSEGUIR EL AMOR DE ELLA AUNQUE NO LO TENGO :) \n| logosize          = 30px\n| logofile          = Diaz es una salchicha ranchera.\n\n| launch            = {{Start date and age|1992|5|30|df=y}}\n| closed date       =\n| picture format    = [[1080i]] [[HDTV]]<br />{{small|(downscaled to [[16:9]] [[576i]] for the [[SDTV]] feed)}}\n| network           = \n| owner             = ARTE France <br /> ARTE Deutschland TV GmbH\n| country           = France <br> Germany\n| language          = French <br> German\n| broadcast area    = Europe\n| headquarters      = [[Strasbourg]], [[France]]\n| former names      = \n| replaced names    = [[La Cinq]]<br> [[La Sept]]\n| replaced by names = \n| sister names      = \n| timeshift names   = \n| web               = {{url|arte.tv}}\n| terr serv 1       =  [[Digital terrestrial television]]<br />{{small|(France)}}\n| terr chan 1       = Channel 7\n| terr serv 2       = [[Digital terrestrial television]] <br />{{small|(Germany)}}\n| terr chan 2       = Varies by location\n| terr serv 3       = [[Digital terrestrial television]] <br />{{small|(Italy)}}\n| terr chan 3       = '''Trentino''':<br />Varies by city\n| sat serv 1        = [[Astra 19.2\u00b0E]] {{small|(Europe)}}\n| sat chan 1        = 11494 H 22000 2/3 (HD) {{small|German}}<br />10744 H 22000 5/6 (SD) {{small|German}}\n| sat serv 2        = [[Hot Bird]] 13\u00b0E {{small|(Europe, Middle East & North Africa)}}\n| sat chan 2        = 11681 H 27500 3/4 (HD) {{small|French}}\n| sat serv 3        = [[Atlantic Bird|AB3 (5\u00b0W)]] {{small|(Europe)}}\n| sat chan 3        = 11590 V 29500 8/9 (HD) {{small|French}}\n| sat serv 4        = [[Canalsat]] {{small|(France)}}\n| sat chan 4        = Channel 7 (SD/HD) <br /> Channel 505 (HD) <br /> Channel 705 (SD)\n| sat serv 5        = TNTSAT {{small|(France)}}\n| sat chan 5        = Channel 7\n| sat serv 6        = [[Orange SA|Orange TV]] {{small|(France)}}\n| sat chan 6        = Channel 7\n| sat serv 7        = Bis T\u00e9l\u00e9visions {{small|(France)}}\n| sat chan 7        = Channel 7\n| sat serv 8        = [[Canal Digitaal]] {{small|(Netherlands)}}\n| sat chan 8        = Channel 128 (HD) {{small|German}}<br />Channel 556 (HD) {{small|French}}\n| sat serv 9        = [[TV Vlaanderen]] {{small|(Belgium)}}\n| sat chan 9        = Channel 88 (French)<br>Channel 139 (German)\n| sat serv 10       = [[Tiv\u00f9 Sat]] {{small|(Italy)}}\n| sat chan 10       = Channel 48\n| cable serv 1      = [[Kabel Deutschland]] {{small|(Germany)}}\n| cable chan 1      = Channel 110 (SD) <br /> Channel 120 (HD)\n| cable serv 2      = [[Unitymedia]] {{small|(Germany)}}\n| cable chan 2      = Channel 110 (SD) <br /> Channel 10 (HD)\n| cable serv 3      = [[Kabel BW]] {{small|(Germany)}}\n| cable chan 3      = S2 (113 MHz\n| cable serv 4      = [[Numericable]] {{small|(France & Belgium)}}\n| cable chan 4      = '''France:'''<br />Channel 7<br />'''Belgium:'''<br />Channel 7 (French)<br />Channel 37 (Dutch)<br />'''Luxembourg:'''<br />Channel 15 (French)<br />Channel 55 (German)\n| cable serv 5      = [[MC Cable]]\n| cable chan 5      = Channel 7\n| cable serv 6      = [[UPC Austria]]\n| cable chan 6      = Channel 129\n| cable serv 7      = UPC Tirol\n| cable chan 7      = Channel 060\n| cable serv 8      = [[Naxoo]]\n| cable chan 8      = Channel 9\n| cable serv 9      = [[Ziggo]] {{small|(Netherlands)}}\n| cable chan 9      = Channel 72 (SD) {{small|German}}<br />TV Fran\u00e7aise Ziggo App Channel 2 (HD) {{small|French}}\n| cable serv 10     = [[Cablecom]] {{small|(Switzerland)}}\n| cable chan 10     = Channel 45\n| cable serv 11     = [[Hot (Israel)|Hot]] {{small|(Israel)}}\n| cable chan 11     = Channel 146\n| cable serv 12     = [[Caiway]] {{small|(Netherlands)}}\n| cable chan 12     = Channel 40 (HD) {{small|German}}\n| cable serv 13     = [[DELTA (Dutch cable operator)|DELTA]] {{small|(Netherlands)}}\n| cable chan 13     = Channel 362 (SD) {{small|German}}\n| cable serv 14     = [[Kabel Noord]] {{small|(Netherlands)}}\n| cable chan 14     = Channel 272 (HD) {{small|German}}\n| iptv serv 1       = [[Telekom Entertain]] {{small|(Germany)}}\n| iptv chan 1       = Channel 55 (SD/HD)\n| iptv serv 2       = [[Telecom Italia|Alice TV]] {{small|(Germany)}}\n| iptv chan 2       = Channel 15\n| iptv serv 3       = [[Arcor (telecommunications)|Arcor Digital TV]]\n| iptv chan 3       = Channel 14\n| iptv serv 4       = [[Darty#DartyBox|DartyBox]]\n| iptv chan 4       = Channel 7\n| iptv serv 5       = [[Neuf Cegetel|Neuf Box TV]]\n| iptv chan 5       = Channel 7\n| iptv serv 6       = [[Free (ISP)|Freebox TV]]\n| iptv chan 6       = Channel 7\n| iptv serv 7       = [[Orange SA|Orange TV]]\n| iptv chan 7       = Channel 7\n| iptv serv 8       = [[Telecom Italia|Alice TV]] {{small|(France)}}\n| iptv chan 8       = Channel 7\n| iptv serv 9       = [[Bouygues T\u00e9l\u00e9com (company)|Bbox TV]]\n| iptv chan 9       = Channel 7\n| iptv serv 10      = [[Belgacom TV]] {{small|(Wallonia & Brussels)}}\n| iptv chan 10      = Channel 13\n| iptv serv 11      = [[Belgacom TV]] {{small|(Flanders)}}\n| iptv chan 11      = Channel 60\n| iptv serv 12      = [[KPN]] {{small|(Netherlands)}}\n| iptv chan 12      = Channel 49 (SD) {{small|German}}\n| iptv serv 13      = [[Canalsat]]\n| iptv chan 13      = Channel 7 (SD/HD) <br /> Channel 505 (HD)\n| iptv serv 14      = [[du (telco)|DU]] {{small|(UAE)}}\n| iptv chan 14      = Channel 810\n| iptv serv 15      = [[A1 Telekom Austria|A1 TV]] {{small|(Austria)}}\n| iptv chan 15      = Channel 24 (SD)\n| iptv serv 16      = [[T-Mobile Netherlands|T-Mobile]] {{small|(Netherlands)}}\n| iptv chan 16      = Channel 376 (SD) {{small|German}}\n| online serv 1     = [[Ziggo#Ziggo_GO|Ziggo GO]] {{small|(Netherlands)}}\n| online chan 1     = [https://www.ziggogo.tv ZiggoGO.tv] (Europe only)\n}}\n\n'''ARTE''' ('''''Association relative \u00e0 la t\u00e9l\u00e9vision europ\u00e9enne''''') is a [[Franco-German]] [[free-to-air]] television network that promotes cultural programming. It is made up of three separate companies: the [[Strasbourg]]-based [[European Economic Interest Grouping]] ARTE GEIE, plus two member companies acting as editorial and programme production centres, ARTE France in [[Paris]] (France) and ARTE Deutschland in [[Baden-Baden]] (Germany). As an international joint venture (an EEIG), its programmes focuses to audiences in both countries. Due to this, the channel features two audio tracks and two subtitle tracks, each in French and German.\n\n80% of ARTE's programming are provided by its French and German subsidiaries, each making half of the programmes available, while the remainder is being provided by the European subsidiary and the channel's European partners.<ref>{{cite web|url=http://www.arte.tv/sites/en/corporate/qui-sommes-nous-cluster/publications/?lang=en|title=How is ARTE funded? - ARTE Entreprise|publisher=|accessdate=26 June 2016}}</ref>\n\nARTE France was formerly known as [[La Sept]]. ARTE Deutschland TV GmbH is a subsidiary of the two main public German TV networks [[ARD (broadcaster)|ARD]] and [[ZDF]].\n\nSelected programmes are available with [[English language|English]], [[Spanish language|Spanish]], [[Polish language|Polish]] and [[Italian language|Italian]] subtitles online.<ref name=\"Pressemitteilung: Der europ\u00e4ische Kultursender Arte jetzt auch auf Englisch und Spanisch\">[http://presse.arte.tv/apios/press_release/1757.pdf Pressemitteilung: Der europ\u00e4ische Kultursender Arte jetzt auch auf Englisch und Spanisch] {{webarchive|url=https://web.archive.org/web/20160216113315/http://presse.arte.tv/apios/press_release/1757.pdf |date=16 February 2016 }}</ref><ref>{{Cite news|url=http://www.arte.tv/sites/services/arte-desormais-en-cinq-langues/|title=Avec le polonais, ARTE d\u00e9sormais en cinq langues - Services|newspaper=Services|language=fr-FR|access-date=2016-12-04}}</ref><ref>{{Cite web|url=https://www.arte.tv/sites/en/corporate/what-we-do/|title=What we do|last=ARTE|website=ARTE Entreprise|language=en-US|access-date=2019-05-15}}</ref>\n\n==History==\n[[File:2011 Arte Strasbourg.JPG|thumb|left|The ARTE building in [[Strasbourg]]]]\n\nARTE began [[transmission (telecommunications)|transmission]] in 1992, filling frequencies left unused by the demise of [[La Cinq]], the first French commercial television network (created in 1986). The opening night on 30 May 1992 was broadcast live from the [[Strasbourg Opera House]].<ref>{{cite web|title=The founding of ARTE|url=http://www.arte.tv/sites/en/corporate/the-founding-of-arte-2/?lang=en|publisher=arte.tv|accessdate=6 November 2015}}</ref>\n\nARTE started out as an evening-only service. In the daytime, the frequencies were shared with other channels. A public channel called ''T\u00e9l\u00e9 emploi'' occupied the French frequencies for about a month during 1994, before the start of La Cinqui\u00e8me (''now [[France 5]]'') in December that year. For German viewers, ARTE was assigned a frequency on the [[Astra 1D]] satellite in late 1994, and it was eventually shared with [[Nickelodeon Germany]], later replaced by the new public children's channel [[Kinderkanal]].\n\nIn 1996, it started offering an afternoon schedule with reruns for viewers on digital satellite and digital cable. A \"proper\" afternoon schedule with programmes between 2 p.m. and 7 p.m. was introduced on 6 January 2001.<ref>[http://download.pro.arte.tv/archives/bulletin/2001bul02.pdf A R T E M a g a z i n e], 6 January 2001</ref> The channel eventually got its own analogue frequency on the Astra satellites.\n\nSince 2005 ARTE broadcasts 24/7. In 2007 the catch-up service ARTE+7 is launched, offering internet users free access to a broad range of programs within seven days of their original transmission.<ref>{{Cite web|url=http://www.arte.tv/sites/en/corporate/category/subjects/die-ausstrahlung/?lang=en|title=Broadcasting Archives - ARTE Entreprise|website=ARTE Entreprise|language=en-US|access-date=2016-03-14}}</ref>\n\n==Transmission and reception==\nARTE programmes are available with multi-channel audio: all programmes go out in French and in German. Furthermore the original version is screened whenever possible with subtitles in French and German and the hearing or visually impaired may get subtitles or an [[audio description]]. Since 2015 a selection of programmes are available with English and Spanish subtitles online, with Polish to follow in late 2016.<ref name=\"Arte setzt auf Themenabende\">{{cite web|url=http://www.muensterschezeitung.de/Nachrichten/Kultur/2260089-Medien-Arte-setzt-auf-Themenabende|title=Arte setzt auf Themenabende|first=M\u00fcnstersche|last=Zeitung|publisher=|accessdate=26 June 2016}}</ref>\n\nThe channel enjoys a major footprint in Europe. Both the German and the French version can be received in nearly whole Europe via the satellite [[Astra (satellite)|Astra1]] (19, 2\u00b0 East), the French version is also available via [[Hot Bird]] (13\u00b0 East). In addition ARTE is relayed not only by all cable networks in Germany and France, but by numerous cable networks in Austria, Belgium, Finland, Luxembourg, Switzerland, and in the Netherlands too.\n\nSince 2008 ARTE broadcasts in [[High-definition television|HD]] in Germany and in France. Like the national channels of its own respective countries, the German [[High-definition television|HDTV]]version of ARTE broadcasts in [[720p50]], while the French one broadcasts in [[1080i25]]. In April 2016 ARTE co-produced (with [[Astra (satellite)|Astra]] satellite owner, [[SES S.A.|SES]]) a live [[Ultra-high-definition television]] broadcast of the [[Le Corsaire]] ballet from the Vienna State Opera. The programme was transmitted free-to-air on the [[HD+|UHD1]] demonstration channel from the [[Astra 19.2\u00b0E]] satellites.<ref>[http://www.businesswire.com/news/financialpost/20160329005926/en/SES-ARTE-Broadcast-Le-Corsaire-Ballet-Live ''SES and ARTE to Broadcast Le Corsaire Ballet Live in Ultra HD via Astra 19.2''] Business Wire. 29 March 2016. Accessed 27 April 2016</ref>\n\nOnline ARTE programmes can be streamed live or watched on catch-up TV for at least 7 and up to 700 days on [http://www.arte.tv/guide/plus7/ ARTE+7] and the theme platforms [http://concert.arte.tv ARTE Concert], [https://web.archive.org/web/20101221230818/http://creative.arte.tv/ Creative], [http://info.arte.tv Info], [http://future.arte.tv Future] or [http://cinema.arte.tv Cinema].\n\n===International===\nIn Africa, ARTE is broadcast via [[Satellite television|satellite]], [[Cable television|cable]], [[MMDS]] and [[ADSL]] in many other countries, via the digital service [[CanalSat]] Horizons.\nMany French-language ARTE programs are also broadcast in Canada on the [[Ici ARTV]] cable channel, partly owned by the [[Canadian Broadcasting Corporation]] (85%) and ARTE itself (15%). The Australian [[Special Broadcasting Service]] translates many ARTE programs into English for broadcast on its own [[SBS Television|television network]] and overseas.\n\n==Market Share==\nARTE usually has more viewers in France than in Germany. In 2015, its share of overall viewing was about 2.2 % in France and about 1% in Germany.\nThe differences can be put down to the different television markets in both countries. In France, ARTE was for a long time available to almost everyone as one of six analogue terrestrial channels. Relatively few French households received cable and satellite television, and the other terrestrial channels didn't really compete with ARTE. Meanwhile, thanks to widespread roll-out of cable television, the vast majority of German households had access to about three dozen channels, including several from the public broadcasters with content similar to Arte.<ref>[http://www.kas.de/wf/doc/kas_454-544-1-30.pdf Zehn Jahre arte]</ref> After the introduction of [[digital terrestrial television in France]], ARTE's market share has fallen there, while it has been more or less flat in Germany.\n\n==Programming==\n* ''[[The Human Adventure (TV series)|Abenteuer Arte]]'' \u2013 documentary series (1997\u2013present)\n* ''Arte Journal'' \u2013 information program\n* ''Arte Reportage'' \u2013 current affairs program\n* ''Arte Themenabend'' \u2013 special topics show\n* ''[[A Very Secret Service]]'' \u2013 spy comedy\n* ''[[The Boys from Baghdad High|Bagdad, le bac sous les bombes / Die Jungs von der Bagdad-High]]'' \u2013 documentary film\n* ''Die Nacht/La Nuit'' \u2013 late-night news\n* [[Do Not Track (documentary)|''Do Not Track'']], a 2015 Arte co-produced web documentary\n* ''[[Durch die Nacht mit \u2026]]'' (2002\u2013present)\n* ''Geo 360\u00b0'' (1999\u2013present)\n* [[Karambolage (ARTE)|''Karambolage'']] \u2013 a show about French/German customs (2004\u2013present)\n* ''Kurzschluss'' (2001\u2013present)\n* ''Metropolis'' (2001\u2013present)\n* ''[[Le dessous des cartes]]'' ''(Mit offenen Karten)'' \u2013 geopolitical documentary (1992\u2013present)\n* ''Tracks'' \u2013 music program (1997\u2013present)\n* ''WunderWelten'' (2005-2009)\n* ''[[Venice New Year's Concert]]'' (2016-present)\n\n===Series===\n{{Div col|colwidth=30em}}\n* ''[[1864 (TV series)|1864]]'' (2015)\n* ''[[Apple Tree Yard]]'' ''(Nachdem ich ihm begegnet bin)'' (2018)\n* ''[[Borgen (TV series)|Borgen]]'' (2012-2015)\n* ''[[Breaking Bad]]'' \u2013 Award-winning American drama series (2010-2015)\n* ''[[Capital (BBC adaptation)|Capital]]'' ''(Wir sind alle Million\u00e4re)'' (2017)\n* ''[[Captain Alatriste]]'' ''(Mit Dolch und Degen)'' (2015, 2017)\n* ''[[DCI Banks]]'' (2012-2016)\n* '' Den fj\u00e4rde mannen '' ''(Der vierte Mann)'' (2017)\n* ''[[\u00d8yevitne|Eyewitness (\u00d8yevitne)]]'' (2015, 2017)\n* '' Fatale-Station '' ''(Unerw\u00fcnscht)'' (2017)\n* ''[[Fortitude (TV series)|Fortitude]]'' ''(Fortitude - Ein Ort wie kein anderer)'' (2017)\n* ''[[Gomorrah (TV series)|Gomorrha]]'' (2015, 2017)\n* ''[[Prisoners of War (TV series)|Hatufim]]'' (2013-2016)\n* ''[[Hierro (TV series)|Hierro]]'' (2019)\n* ''[[Hotel Beau S\u00e9jour]]'' ''(Zimmer 108)'' (2017)\n* ''[[Im Angesicht des Verbrechens]]'' (2010-2011, 2013)\n* ''[[Jekyll (TV series)|Jekyll]]'' (2009-2010)\n* ''[[Kidnap and Ransom]]'' ''(Der J\u00e4ger - Geld oder Leben)'' (2015)\n* ''[[The Killing (Danish TV series)|Kommissarin Lund]]'' ''(Forbrydelsen)'' (2010-2012, 2014-2015, 2017)\n* ''Les quatre soeurs'' ''(Vier Schwestern'') (2018)\n* ''[[Lilyhammer]]'' (2014, 2016)\n* ''Maroni'' ''(Die Geister des Flusses)'' (2018)\n* ''[[Monroe (TV series)|Monroe]]'' ''(Dr. Monroe)'' (2013-2014)\n* ''[[National Treasure (2016 TV series)|National Treasure]]'' ''(Ende einer Legende)'' (2018)\n* ''[[Okkupert|Occupied (Okkupert)]]'' (2015, 2018)\n* ''Paris'' (2015)\n* ''[[Peaky Blinders (TV series)|Peaky Blinders]]'' ''(Peaky Blinders - Gangs of Birmingham)'' (2015\u2013present)\n* '' Points de Rep\u00e8res '' ''(Im Lauf der Zeit)'' (2016-2017)\n* ''[[Rectify]]'' (2014-2015)\n* ''[[River (TV series)|River]]'' (2018)\n* ''Silex and the City'' (2012\u20132017)\n* ''[[Suburban Shootout]]'' ''(Suburban Shootout - Die Waffen der Frauen)'' (2010)\n* ''[[The Code (2014 TV series)|The Code]]'' ''(Der Code)'' (2015, 2017)\n* ''[[The Hour (2011 TV series)|The Hour]]'' (2013)\n* ''[[The Slap (TV series)|The Slap]] (2011)'' ''(The Slap - Nur eine Ohrfeige)'' (2013, 2015)\n* ''[[Spiral (TV series)|The Spiral]]'' (2012, 2017)\n* '' Transferts '' ''(Im fremden K\u00f6rper)'' (2017)\n* ''Virage Nord'' ''(Nordkurve)'' (2014-2015)\n* ''[[Wolf Hall (miniseries)|Wolf Hall]]'' ''(W\u00f6lfe)'' (2016-2017)\n{{div col end}}\n\n==Online==\n{{external links|section|date=August 2015}}\nSince May 2017, the whole of ARTE\u2019s digital offering (former known as \"Arte galaxy\" with several platforms) has been located on a single website.[http://servicepresse.arte.tv/arte-lance-une-nouvelle-offre-numerique-unifiee-et-simplifiee/] Programmes can be live streamed on the website as well as on smartphones and tablets using the ARTE application. Programmes can be viewed online before their broadcast on the channel and for a period of at least seven days afterwards (formerly known as catch-up service ''ARTE+7''), as the case may be.\n\n* ARTE Future: Platform with documentaries and fictions on environmental, technological and economic issues. Since May 2017, the platform\u2019s offering has appeared under the \u201cSciences\u201d tab on the channel\u2019s website.<ref>{{Cite web|url=http://servicepresse.arte.tv/arte-lance-une-nouvelle-offre-numerique-unifiee-et-simplifiee/|title=ARTE lance une nouvelle offre num\u00e9rique unifi\u00e9e et simplifi\u00e9e {{!}} Pressroom Arte|website=servicepresse.arte.tv|access-date=2019-05-17}}</ref>\n* ARTE Creative: Network, Magazine and laboratory for contemporary culture and creativity in all its forms. In May 2017, the ''ARTE Creative'' platform became the ''Creative'' label.<ref>{{Cite web|url=http://servicepresse.arte.tv/arte-lance-une-nouvelle-offre-numerique-unifiee-et-simplifiee/|title=ARTE lance une nouvelle offre num\u00e9rique unifi\u00e9e et simplifi\u00e9e {{!}} Pressroom Arte|website=servicepresse.arte.tv|access-date=2019-05-17}}</ref>\n* [http://concert.arte.tv ARTE Concert] (formerly Arte Live Web): All the performing arts live, exclusive interviews, behind-the-scenes and backstage tours, etc.\n* [http://www.arte.tv/sites/services/les-applications-darte-tout-un-programme/ Culture Touch] : especially developed for tablets, the magazine gives a weekly overview of the latest cultural events in Europe, it presents the best of ARTE's programme in short videos, articles, photos and exclusive interviews. The ''Culture Touch'' application was discontinued in February 2017.\n* ARTE has also a radio web site, called ''[http://arteradio.com/ Arte Radio]''.\n\n<gallery>\nARTE-LIVE-ORANGE-RVB.svg|''Arte Live'' logo\nARTE-+7-ORANGE-RVB.svg|''Arte+7'' logo\nARTE-INFO-BLEU-PANTONE.jpg|''Arte Info'' logo\nARTE-FUTURE-BLEU-RVB.svg|''Arte Future'' logo\nARTE-CREATIVE-VERT-RVB.svg|''Arte CREATIVE'' logo\nARTE-CONCERT-ROSE-RVB.jpg|''Arte Concert'' logo\nARTE-CINEMA.jpg|''Arte Cinema'' logo\n</gallery>\n\n===ARTE in English / en espa\u00f1ol / po polsku / in italiano===\n\nSince November 2015 ARTE offers selected programmes online with subtitles in [[English language|English]] and [[Spanish language|Spanish]], since November 2016 in [[Polish language|Polish]]<ref>{{cite web|url=http://info.arte.tv/de/arte-wird-multilingual|title=ARTE wird multilingual|publisher=|accessdate=26 June 2016}}</ref> and since October 2018 in [[Italian language|Italian]].<ref>{{Cite web|url=https://www.arte.tv/sites/presse/pressemitteilungen/da-oggi-la-cultura-parla-6-lingue/|title=ARTE Presse|language=de|access-date=2019-05-15}}</ref> The free offer is a project that ARTE is running with financial support from the [[European Union]].<ref name=\"Pressemitteilung: Der europ\u00e4ische Kultursender Arte jetzt auch auf Englisch und Spanisch\"/> \n\n==Logos==\n<gallery>\nFile:Arte-Logo.svg|Arte's second and current logo since January 2, 1995.\nFile:Logo-arte-schief.svg|Alternate version of the 1995 logo, used from January 3, 2004 until February 27, 2011.\nFile:Arte Logo 2011.svg|Orange version of the 1995 logo, used from February 28, 2011 until March 24, 2017.\nFile:Arte Logo HD 2011.png|HD logo, used since June 10, 2010.\nFile:Arte Logo 2017.svg|90\u00b0 rotated version of the 1995 logo, used since March 25, 2017.\n</gallery>\n\n== See also ==\n* [[European Institutions in Strasbourg]]\n\n==References==\n{{reflist|30em}}\n\n==External links==\n*[https://www.arte.tv/ ARTE Website]\n*[https://web.archive.org/web/20151108011632/http://www.arte.tv/sites/en/corporate ARTE Corporate Website] \n*[https://www.arteradio.com/ ARTE Radio]\n*[https://boutique.arte.tv/ ARTE's non free VoD service]\n\n{{ARD/ZDF}}\n{{ORF}}\n{{Video digital distribution platforms}}\n{{French television stations}}\n{{Television in Germany}}\n{{Television in Belgium}}\n{{Authority control}}\n{{Portal bar|Companies|Television|France|Germany}}\n\n{{coord|48.5938|7.7662|type:landmark_region:FR|display=title}}\n\n[[Category:ARD]]\n[[Category:ZDF]]\n[[Category:Multilingual broadcasters]]\n[[Category:French-language television stations]]\n[[Category:German-language television stations]]\n[[Category:Classical music television channels]]\n[[Category:German television networks]]\n[[Category:Television stations in France]]\n[[Category:Television stations in Germany]]\n[[Category:Television channels in the Netherlands]]\n[[Category:Television channels in Belgium]]\n[[Category:Television channels in Flanders]]\n[[Category:Companies based in Strasbourg]]\n[[Category:Television channels and stations established in 1992]]\n[[Category:Buildings and structures in Strasbourg]]\n[[Category:ORF (broadcaster)]]\n[[Category:Peabody Award winners]]\n[[Category:France\u2013Germany relations]]\n[[Category:Music organisations based in Germany]]\n[[Category:Music organizations based in France]]\n", "text_old": "{{other uses|ARTE (disambiguation)}} {{Use dmy dates|date=June 2014}}\n{{Use British English|date=October 2017}}\n{{More citations needed|date=July 2008}}\n{{Infobox TV channel\n| name              = ARTE\n| logosize          = 30px\n| logofile          = Arte Logo 2017.svg\n| launch            = {{Start date and age|1992|5|30|df=y}}\n| closed date       =\n| picture format    = [[1080i]] [[HDTV]]<br />{{small|(downscaled to [[16:9]] [[576i]] for the [[SDTV]] feed)}}\n| network           = \n| owner             = ARTE France <br /> ARTE Deutschland TV GmbH\n| country           = France <br> Germany\n| language          = French <br> German\n| broadcast area    = Europe\n| headquarters      = [[Strasbourg]], [[France]]\n| former names      = \n| replaced names    = [[La Cinq]]<br> [[La Sept]]\n| replaced by names = \n| sister names      = \n| timeshift names   = \n| web               = {{url|arte.tv}}\n| terr serv 1       =  [[Digital terrestrial television]]<br />{{small|(France)}}\n| terr chan 1       = Channel 7\n| terr serv 2       = [[Digital terrestrial television]] <br />{{small|(Germany)}}\n| terr chan 2       = Varies by location\n| terr serv 3       = [[Digital terrestrial television]] <br />{{small|(Italy)}}\n| terr chan 3       = '''Trentino''':<br />Varies by city\n| sat serv 1        = [[Astra 19.2\u00b0E]] {{small|(Europe)}}\n| sat chan 1        = 11494 H 22000 2/3 (HD) {{small|German}}<br />10744 H 22000 5/6 (SD) {{small|German}}\n| sat serv 2        = [[Hot Bird]] 13\u00b0E {{small|(Europe, Middle East & North Africa)}}\n| sat chan 2        = 11681 H 27500 3/4 (HD) {{small|French}}\n| sat serv 3        = [[Atlantic Bird|AB3 (5\u00b0W)]] {{small|(Europe)}}\n| sat chan 3        = 11590 V 29500 8/9 (HD) {{small|French}}\n| sat serv 4        = [[Canalsat]] {{small|(France)}}\n| sat chan 4        = Channel 7 (SD/HD) <br /> Channel 505 (HD) <br /> Channel 705 (SD)\n| sat serv 5        = TNTSAT {{small|(France)}}\n| sat chan 5        = Channel 7\n| sat serv 6        = [[Orange SA|Orange TV]] {{small|(France)}}\n| sat chan 6        = Channel 7\n| sat serv 7        = Bis T\u00e9l\u00e9visions {{small|(France)}}\n| sat chan 7        = Channel 7\n| sat serv 8        = [[Canal Digitaal]] {{small|(Netherlands)}}\n| sat chan 8        = Channel 128 (HD) {{small|German}}<br />Channel 556 (HD) {{small|French}}\n| sat serv 9        = [[TV Vlaanderen]] {{small|(Belgium)}}\n| sat chan 9        = Channel 88 (French)<br>Channel 139 (German)\n| sat serv 10       = [[Tiv\u00f9 Sat]] {{small|(Italy)}}\n| sat chan 10       = Channel 48\n| cable serv 1      = [[Kabel Deutschland]] {{small|(Germany)}}\n| cable chan 1      = Channel 110 (SD) <br /> Channel 120 (HD)\n| cable serv 2      = [[Unitymedia]] {{small|(Germany)}}\n| cable chan 2      = Channel 110 (SD) <br /> Channel 10 (HD)\n| cable serv 3      = [[Kabel BW]] {{small|(Germany)}}\n| cable chan 3      = S2 (113 MHz\n| cable serv 4      = [[Numericable]] {{small|(France & Belgium)}}\n| cable chan 4      = '''France:'''<br />Channel 7<br />'''Belgium:'''<br />Channel 7 (French)<br />Channel 37 (Dutch)<br />'''Luxembourg:'''<br />Channel 15 (French)<br />Channel 55 (German)\n| cable serv 5      = [[MC Cable]]\n| cable chan 5      = Channel 7\n| cable serv 6      = [[UPC Austria]]\n| cable chan 6      = Channel 129\n| cable serv 7      = UPC Tirol\n| cable chan 7      = Channel 060\n| cable serv 8      = [[Naxoo]]\n| cable chan 8      = Channel 9\n| cable serv 9      = [[Ziggo]] {{small|(Netherlands)}}\n| cable chan 9      = Channel 72 (SD) {{small|German}}<br />TV Fran\u00e7aise Ziggo App Channel 2 (HD) {{small|French}}\n| cable serv 10     = [[Cablecom]] {{small|(Switzerland)}}\n| cable chan 10     = Channel 45\n| cable serv 11     = [[Hot (Israel)|Hot]] {{small|(Israel)}}\n| cable chan 11     = Channel 146\n| cable serv 12     = [[Caiway]] {{small|(Netherlands)}}\n| cable chan 12     = Channel 40 (HD) {{small|German}}\n| cable serv 13     = [[DELTA (Dutch cable operator)|DELTA]] {{small|(Netherlands)}}\n| cable chan 13     = Channel 362 (SD) {{small|German}}\n| cable serv 14     = [[Kabel Noord]] {{small|(Netherlands)}}\n| cable chan 14     = Channel 272 (HD) {{small|German}}\n| iptv serv 1       = [[Telekom Entertain]] {{small|(Germany)}}\n| iptv chan 1       = Channel 55 (SD/HD)\n| iptv serv 2       = [[Telecom Italia|Alice TV]] {{small|(Germany)}}\n| iptv chan 2       = Channel 15\n| iptv serv 3       = [[Arcor (telecommunications)|Arcor Digital TV]]\n| iptv chan 3       = Channel 14\n| iptv serv 4       = [[Darty#DartyBox|DartyBox]]\n| iptv chan 4       = Channel 7\n| iptv serv 5       = [[Neuf Cegetel|Neuf Box TV]]\n| iptv chan 5       = Channel 7\n| iptv serv 6       = [[Free (ISP)|Freebox TV]]\n| iptv chan 6       = Channel 7\n| iptv serv 7       = [[Orange SA|Orange TV]]\n| iptv chan 7       = Channel 7\n| iptv serv 8       = [[Telecom Italia|Alice TV]] {{small|(France)}}\n| iptv chan 8       = Channel 7\n| iptv serv 9       = [[Bouygues T\u00e9l\u00e9com (company)|Bbox TV]]\n| iptv chan 9       = Channel 7\n| iptv serv 10      = [[Belgacom TV]] {{small|(Wallonia & Brussels)}}\n| iptv chan 10      = Channel 13\n| iptv serv 11      = [[Belgacom TV]] {{small|(Flanders)}}\n| iptv chan 11      = Channel 60\n| iptv serv 12      = [[KPN]] {{small|(Netherlands)}}\n| iptv chan 12      = Channel 49 (SD) {{small|German}}\n| iptv serv 13      = [[Canalsat]]\n| iptv chan 13      = Channel 7 (SD/HD) <br /> Channel 505 (HD)\n| iptv serv 14      = [[du (telco)|DU]] {{small|(UAE)}}\n| iptv chan 14      = Channel 810\n| iptv serv 15      = [[A1 Telekom Austria|A1 TV]] {{small|(Austria)}}\n| iptv chan 15      = Channel 24 (SD)\n| iptv serv 16      = [[T-Mobile Netherlands|T-Mobile]] {{small|(Netherlands)}}\n| iptv chan 16      = Channel 376 (SD) {{small|German}}\n| online serv 1     = [[Ziggo#Ziggo_GO|Ziggo GO]] {{small|(Netherlands)}}\n| online chan 1     = [https://www.ziggogo.tv ZiggoGO.tv] (Europe only)\n}}\n\n'''ARTE''' ('''''Association relative \u00e0 la t\u00e9l\u00e9vision europ\u00e9enne''''') is a [[Franco-German]] [[free-to-air]] television network that promotes cultural programming. It is made up of three separate companies: the [[Strasbourg]]-based [[European Economic Interest Grouping]] ARTE GEIE, plus two member companies acting as editorial and programme production centres, ARTE France in [[Paris]] (France) and ARTE Deutschland in [[Baden-Baden]] (Germany). As an international joint venture (an EEIG), its programmes focuses to audiences in both countries. Due to this, the channel features two audio tracks and two subtitle tracks, each in French and German.\n\n80% of ARTE's programming are provided by its French and German subsidiaries, each making half of the programmes available, while the remainder is being provided by the European subsidiary and the channel's European partners.<ref>{{cite web|url=http://www.arte.tv/sites/en/corporate/qui-sommes-nous-cluster/publications/?lang=en|title=How is ARTE funded? - ARTE Entreprise|publisher=|accessdate=26 June 2016}}</ref>\n\nARTE France was formerly known as [[La Sept]]. ARTE Deutschland TV GmbH is a subsidiary of the two main public German TV networks [[ARD (broadcaster)|ARD]] and [[ZDF]].\n\nSelected programmes are available with [[English language|English]], [[Spanish language|Spanish]], [[Polish language|Polish]] and [[Italian language|Italian]] subtitles online.<ref name=\"Pressemitteilung: Der europ\u00e4ische Kultursender Arte jetzt auch auf Englisch und Spanisch\">[http://presse.arte.tv/apios/press_release/1757.pdf Pressemitteilung: Der europ\u00e4ische Kultursender Arte jetzt auch auf Englisch und Spanisch] {{webarchive|url=https://web.archive.org/web/20160216113315/http://presse.arte.tv/apios/press_release/1757.pdf |date=16 February 2016 }}</ref><ref>{{Cite news|url=http://www.arte.tv/sites/services/arte-desormais-en-cinq-langues/|title=Avec le polonais, ARTE d\u00e9sormais en cinq langues - Services|newspaper=Services|language=fr-FR|access-date=2016-12-04}}</ref><ref>{{Cite web|url=https://www.arte.tv/sites/en/corporate/what-we-do/|title=What we do|last=ARTE|website=ARTE Entreprise|language=en-US|access-date=2019-05-15}}</ref>\n\n==History==\n[[File:2011 Arte Strasbourg.JPG|thumb|left|The ARTE building in [[Strasbourg]]]]\n\nARTE began [[transmission (telecommunications)|transmission]] in 1992, filling frequencies left unused by the demise of [[La Cinq]], the first French commercial television network (created in 1986). The opening night on 30 May 1992 was broadcast live from the [[Strasbourg Opera House]].<ref>{{cite web|title=The founding of ARTE|url=http://www.arte.tv/sites/en/corporate/the-founding-of-arte-2/?lang=en|publisher=arte.tv|accessdate=6 November 2015}}</ref>\n\nARTE started out as an evening-only service. In the daytime, the frequencies were shared with other channels. A public channel called ''T\u00e9l\u00e9 emploi'' occupied the French frequencies for about a month during 1994, before the start of La Cinqui\u00e8me (''now [[France 5]]'') in December that year. For German viewers, ARTE was assigned a frequency on the [[Astra 1D]] satellite in late 1994, and it was eventually shared with [[Nickelodeon Germany]], later replaced by the new public children's channel [[Kinderkanal]].\n\nIn 1996, it started offering an afternoon schedule with reruns for viewers on digital satellite and digital cable. A \"proper\" afternoon schedule with programmes between 2 p.m. and 7 p.m. was introduced on 6 January 2001.<ref>[http://download.pro.arte.tv/archives/bulletin/2001bul02.pdf A R T E M a g a z i n e], 6 January 2001</ref> The channel eventually got its own analogue frequency on the Astra satellites.\n\nSince 2005 ARTE broadcasts 24/7. In 2007 the catch-up service ARTE+7 is launched, offering internet users free access to a broad range of programs within seven days of their original transmission.<ref>{{Cite web|url=http://www.arte.tv/sites/en/corporate/category/subjects/die-ausstrahlung/?lang=en|title=Broadcasting Archives - ARTE Entreprise|website=ARTE Entreprise|language=en-US|access-date=2016-03-14}}</ref>\n\n==Transmission and reception==\nARTE programmes are available with multi-channel audio: all programmes go out in French and in German. Furthermore the original version is screened whenever possible with subtitles in French and German and the hearing or visually impaired may get subtitles or an [[audio description]]. Since 2015 a selection of programmes are available with English and Spanish subtitles online, with Polish to follow in late 2016.<ref name=\"Arte setzt auf Themenabende\">{{cite web|url=http://www.muensterschezeitung.de/Nachrichten/Kultur/2260089-Medien-Arte-setzt-auf-Themenabende|title=Arte setzt auf Themenabende|first=M\u00fcnstersche|last=Zeitung|publisher=|accessdate=26 June 2016}}</ref>\n\nThe channel enjoys a major footprint in Europe. Both the German and the French version can be received in nearly whole Europe via the satellite [[Astra (satellite)|Astra1]] (19, 2\u00b0 East), the French version is also available via [[Hot Bird]] (13\u00b0 East). In addition ARTE is relayed not only by all cable networks in Germany and France, but by numerous cable networks in Austria, Belgium, Finland, Luxembourg, Switzerland, and in the Netherlands too.\n\nSince 2008 ARTE broadcasts in [[High-definition television|HD]] in Germany and in France. Like the national channels of its own respective countries, the German [[High-definition television|HDTV]]version of ARTE broadcasts in [[720p50]], while the French one broadcasts in [[1080i25]]. In April 2016 ARTE co-produced (with [[Astra (satellite)|Astra]] satellite owner, [[SES S.A.|SES]]) a live [[Ultra-high-definition television]] broadcast of the [[Le Corsaire]] ballet from the Vienna State Opera. The programme was transmitted free-to-air on the [[HD+|UHD1]] demonstration channel from the [[Astra 19.2\u00b0E]] satellites.<ref>[http://www.businesswire.com/news/financialpost/20160329005926/en/SES-ARTE-Broadcast-Le-Corsaire-Ballet-Live ''SES and ARTE to Broadcast Le Corsaire Ballet Live in Ultra HD via Astra 19.2''] Business Wire. 29 March 2016. Accessed 27 April 2016</ref>\n\nOnline ARTE programmes can be streamed live or watched on catch-up TV for at least 7 and up to 700 days on [http://www.arte.tv/guide/plus7/ ARTE+7] and the theme platforms [http://concert.arte.tv ARTE Concert], [https://web.archive.org/web/20101221230818/http://creative.arte.tv/ Creative], [http://info.arte.tv Info], [http://future.arte.tv Future] or [http://cinema.arte.tv Cinema].\n\n===International===\nIn Africa, ARTE is broadcast via [[Satellite television|satellite]], [[Cable television|cable]], [[MMDS]] and [[ADSL]] in many other countries, via the digital service [[CanalSat]] Horizons.\nMany French-language ARTE programs are also broadcast in Canada on the [[Ici ARTV]] cable channel, partly owned by the [[Canadian Broadcasting Corporation]] (85%) and ARTE itself (15%). The Australian [[Special Broadcasting Service]] translates many ARTE programs into English for broadcast on its own [[SBS Television|television network]] and overseas.\n\n==Market Share==\nARTE usually has more viewers in France than in Germany. In 2015, its share of overall viewing was about 2.2 % in France and about 1% in Germany.\nThe differences can be put down to the different television markets in both countries. In France, ARTE was for a long time available to almost everyone as one of six analogue terrestrial channels. Relatively few French households received cable and satellite television, and the other terrestrial channels didn't really compete with ARTE. Meanwhile, thanks to widespread roll-out of cable television, the vast majority of German households had access to about three dozen channels, including several from the public broadcasters with content similar to Arte.<ref>[http://www.kas.de/wf/doc/kas_454-544-1-30.pdf Zehn Jahre arte]</ref> After the introduction of [[digital terrestrial television in France]], ARTE's market share has fallen there, while it has been more or less flat in Germany.\n\n==Programming==\n* ''[[The Human Adventure (TV series)|Abenteuer Arte]]'' \u2013 documentary series (1997\u2013present)\n* ''Arte Journal'' \u2013 information program\n* ''Arte Reportage'' \u2013 current affairs program\n* ''Arte Themenabend'' \u2013 special topics show\n* ''[[A Very Secret Service]]'' \u2013 spy comedy\n* ''[[The Boys from Baghdad High|Bagdad, le bac sous les bombes / Die Jungs von der Bagdad-High]]'' \u2013 documentary film\n* ''Die Nacht/La Nuit'' \u2013 late-night news\n* [[Do Not Track (documentary)|''Do Not Track'']], a 2015 Arte co-produced web documentary\n* ''[[Durch die Nacht mit \u2026]]'' (2002\u2013present)\n* ''Geo 360\u00b0'' (1999\u2013present)\n* [[Karambolage (ARTE)|''Karambolage'']] \u2013 a show about French/German customs (2004\u2013present)\n* ''Kurzschluss'' (2001\u2013present)\n* ''Metropolis'' (2001\u2013present)\n* ''[[Le dessous des cartes]]'' ''(Mit offenen Karten)'' \u2013 geopolitical documentary (1992\u2013present)\n* ''Tracks'' \u2013 music program (1997\u2013present)\n* ''WunderWelten'' (2005-2009)\n* ''[[Venice New Year's Concert]]'' (2016-present)\n\n===Series===\n{{Div col|colwidth=30em}}\n* ''[[1864 (TV series)|1864]]'' (2015)\n* ''[[Apple Tree Yard]]'' ''(Nachdem ich ihm begegnet bin)'' (2018)\n* ''[[Borgen (TV series)|Borgen]]'' (2012-2015)\n* ''[[Breaking Bad]]'' \u2013 Award-winning American drama series (2010-2015)\n* ''[[Capital (BBC adaptation)|Capital]]'' ''(Wir sind alle Million\u00e4re)'' (2017)\n* ''[[Captain Alatriste]]'' ''(Mit Dolch und Degen)'' (2015, 2017)\n* ''[[DCI Banks]]'' (2012-2016)\n* '' Den fj\u00e4rde mannen '' ''(Der vierte Mann)'' (2017)\n* ''[[\u00d8yevitne|Eyewitness (\u00d8yevitne)]]'' (2015, 2017)\n* '' Fatale-Station '' ''(Unerw\u00fcnscht)'' (2017)\n* ''[[Fortitude (TV series)|Fortitude]]'' ''(Fortitude - Ein Ort wie kein anderer)'' (2017)\n* ''[[Gomorrah (TV series)|Gomorrha]]'' (2015, 2017)\n* ''[[Prisoners of War (TV series)|Hatufim]]'' (2013-2016)\n* ''[[Hierro (TV series)|Hierro]]'' (2019)\n* ''[[Hotel Beau S\u00e9jour]]'' ''(Zimmer 108)'' (2017)\n* ''[[Im Angesicht des Verbrechens]]'' (2010-2011, 2013)\n* ''[[Jekyll (TV series)|Jekyll]]'' (2009-2010)\n* ''[[Kidnap and Ransom]]'' ''(Der J\u00e4ger - Geld oder Leben)'' (2015)\n* ''[[The Killing (Danish TV series)|Kommissarin Lund]]'' ''(Forbrydelsen)'' (2010-2012, 2014-2015, 2017)\n* ''Les quatre soeurs'' ''(Vier Schwestern'') (2018)\n* ''[[Lilyhammer]]'' (2014, 2016)\n* ''Maroni'' ''(Die Geister des Flusses)'' (2018)\n* ''[[Monroe (TV series)|Monroe]]'' ''(Dr. Monroe)'' (2013-2014)\n* ''[[National Treasure (2016 TV series)|National Treasure]]'' ''(Ende einer Legende)'' (2018)\n* ''[[Okkupert|Occupied (Okkupert)]]'' (2015, 2018)\n* ''Paris'' (2015)\n* ''[[Peaky Blinders (TV series)|Peaky Blinders]]'' ''(Peaky Blinders - Gangs of Birmingham)'' (2015\u2013present)\n* '' Points de Rep\u00e8res '' ''(Im Lauf der Zeit)'' (2016-2017)\n* ''[[Rectify]]'' (2014-2015)\n* ''[[River (TV series)|River]]'' (2018)\n* ''Silex and the City'' (2012\u20132017)\n* ''[[Suburban Shootout]]'' ''(Suburban Shootout - Die Waffen der Frauen)'' (2010)\n* ''[[The Code (2014 TV series)|The Code]]'' ''(Der Code)'' (2015, 2017)\n* ''[[The Hour (2011 TV series)|The Hour]]'' (2013)\n* ''[[The Slap (TV series)|The Slap]] (2011)'' ''(The Slap - Nur eine Ohrfeige)'' (2013, 2015)\n* ''[[Spiral (TV series)|The Spiral]]'' (2012, 2017)\n* '' Transferts '' ''(Im fremden K\u00f6rper)'' (2017)\n* ''Virage Nord'' ''(Nordkurve)'' (2014-2015)\n* ''[[Wolf Hall (miniseries)|Wolf Hall]]'' ''(W\u00f6lfe)'' (2016-2017)\n{{div col end}}\n\n==Online==\n{{external links|section|date=August 2015}}\nSince May 2017, the whole of ARTE\u2019s digital offering (former known as \"Arte galaxy\" with several platforms) has been located on a single website.[http://servicepresse.arte.tv/arte-lance-une-nouvelle-offre-numerique-unifiee-et-simplifiee/] Programmes can be live streamed on the website as well as on smartphones and tablets using the ARTE application. Programmes can be viewed online before their broadcast on the channel and for a period of at least seven days afterwards (formerly known as catch-up service ''ARTE+7''), as the case may be.\n\n* ARTE Future: Platform with documentaries and fictions on environmental, technological and economic issues. Since May 2017, the platform\u2019s offering has appeared under the \u201cSciences\u201d tab on the channel\u2019s website.<ref>{{Cite web|url=http://servicepresse.arte.tv/arte-lance-une-nouvelle-offre-numerique-unifiee-et-simplifiee/|title=ARTE lance une nouvelle offre num\u00e9rique unifi\u00e9e et simplifi\u00e9e {{!}} Pressroom Arte|website=servicepresse.arte.tv|access-date=2019-05-17}}</ref>\n* ARTE Creative: Network, Magazine and laboratory for contemporary culture and creativity in all its forms. In May 2017, the ''ARTE Creative'' platform became the ''Creative'' label.<ref>{{Cite web|url=http://servicepresse.arte.tv/arte-lance-une-nouvelle-offre-numerique-unifiee-et-simplifiee/|title=ARTE lance une nouvelle offre num\u00e9rique unifi\u00e9e et simplifi\u00e9e {{!}} Pressroom Arte|website=servicepresse.arte.tv|access-date=2019-05-17}}</ref>\n* [http://concert.arte.tv ARTE Concert] (formerly Arte Live Web): All the performing arts live, exclusive interviews, behind-the-scenes and backstage tours, etc.\n* [http://www.arte.tv/sites/services/les-applications-darte-tout-un-programme/ Culture Touch] : especially developed for tablets, the magazine gives a weekly overview of the latest cultural events in Europe, it presents the best of ARTE's programme in short videos, articles, photos and exclusive interviews. The ''Culture Touch'' application was discontinued in February 2017.\n* ARTE has also a radio web site, called ''[http://arteradio.com/ Arte Radio]''.\n\n<gallery>\nARTE-LIVE-ORANGE-RVB.svg|''Arte Live'' logo\nARTE-+7-ORANGE-RVB.svg|''Arte+7'' logo\nARTE-INFO-BLEU-PANTONE.jpg|''Arte Info'' logo\nARTE-FUTURE-BLEU-RVB.svg|''Arte Future'' logo\nARTE-CREATIVE-VERT-RVB.svg|''Arte CREATIVE'' logo\nARTE-CONCERT-ROSE-RVB.jpg|''Arte Concert'' logo\nARTE-CINEMA.jpg|''Arte Cinema'' logo\n</gallery>\n\n===ARTE in English / en espa\u00f1ol / po polsku / in italiano===\n\nSince November 2015 ARTE offers selected programmes online with subtitles in [[English language|English]] and [[Spanish language|Spanish]], since November 2016 in [[Polish language|Polish]]<ref>{{cite web|url=http://info.arte.tv/de/arte-wird-multilingual|title=ARTE wird multilingual|publisher=|accessdate=26 June 2016}}</ref> and since October 2018 in [[Italian language|Italian]].<ref>{{Cite web|url=https://www.arte.tv/sites/presse/pressemitteilungen/da-oggi-la-cultura-parla-6-lingue/|title=ARTE Presse|language=de|access-date=2019-05-15}}</ref> The free offer is a project that ARTE is running with financial support from the [[European Union]].<ref name=\"Pressemitteilung: Der europ\u00e4ische Kultursender Arte jetzt auch auf Englisch und Spanisch\"/> \n\n==Logos==\n<gallery>\nFile:Arte-Logo.svg|Arte's second and current logo since January 2, 1995.\nFile:Logo-arte-schief.svg|Alternate version of the 1995 logo, used from January 3, 2004 until February 27, 2011.\nFile:Arte Logo 2011.svg|Orange version of the 1995 logo, used from February 28, 2011 until March 24, 2017.\nFile:Arte Logo HD 2011.png|HD logo, used since June 10, 2010.\nFile:Arte Logo 2017.svg|90\u00b0 rotated version of the 1995 logo, used since March 25, 2017.\n</gallery>\n\n== See also ==\n* [[European Institutions in Strasbourg]]\n\n==References==\n{{reflist|30em}}\n\n==External links==\n*[https://www.arte.tv/ ARTE Website]\n*[https://web.archive.org/web/20151108011632/http://www.arte.tv/sites/en/corporate ARTE Corporate Website] \n*[https://www.arteradio.com/ ARTE Radio]\n*[https://boutique.arte.tv/ ARTE's non free VoD service]\n\n{{ARD/ZDF}}\n{{ORF}}\n{{Video digital distribution platforms}}\n{{French television stations}}\n{{Television in Germany}}\n{{Television in Belgium}}\n{{Authority control}}\n{{Portal bar|Companies|Television|France|Germany}}\n\n{{coord|48.5938|7.7662|type:landmark_region:FR|display=title}}\n\n[[Category:ARD]]\n[[Category:ZDF]]\n[[Category:Multilingual broadcasters]]\n[[Category:French-language television stations]]\n[[Category:German-language television stations]]\n[[Category:Classical music television channels]]\n[[Category:German television networks]]\n[[Category:Television stations in France]]\n[[Category:Television stations in Germany]]\n[[Category:Television channels in the Netherlands]]\n[[Category:Television channels in Belgium]]\n[[Category:Television channels in Flanders]]\n[[Category:Companies based in Strasbourg]]\n[[Category:Television channels and stations established in 1992]]\n[[Category:Buildings and structures in Strasbourg]]\n[[Category:ORF (broadcaster)]]\n[[Category:Peabody Award winners]]\n[[Category:France\u2013Germany relations]]\n[[Category:Music organisations based in Germany]]\n[[Category:Music organizations based in France]]\n", "name_user": "190.143.45.168", "label": "unsafe", "comment": "", "url_page": "//en.wikipedia.org/wiki/Arte"}
{"title_page": "87th Battalion (Canadian Grenadier Guards), CEF", "text_new": "[[File:John Francis Young VC.jpg|thumb|Private [[John Francis Young]] [[Victoria Cross]] recipient]]\n\nThe '''87th (Canadian Grenadier Guards) Battalion, CEF''' was a unit in the [[Canadian Expeditionary Force]] during the [[World War I|First World War]].  \n\nBased in [[Montreal]], [[Quebec]], the unit began recruiting in September 1915 in Montreal, the surrounding districts, and also in mining districts elsewhere in the province.  \n\nAfter sailing to England in April 1916, the battalion was stationed there as part of the 12th Infantry Brigade (until June) and then 11th Infantry Brigade of the 4th Canadian Infantry Division until August of the same year.  On August 11/12, the battalion crossed over to France and served the duration of the war as part of the 11th Infantry Brigade, 4th Canadian Infantry Division.  The battalion returned to Canada in June 1919.\n\n==Officers Commanding==\n*Lieut.-Col. J. P. Rexford (April 25, 1916, to July 22, 1916)\n*Lieut.-Col. R. W. Frost, [[Distinguished Service Order|DSO]] (July 27, 1916, to March 24, 1917)\n*Major H. LeR. Shaw (March 24, 1917, to May 8, 1917)\n*Lieut.-Col. J. V. P. O'Donahoe, DSO (May 8, 1917, to April 4, 1918)\n*Major J. S. Ralston, [[Military Cross|MC]] (April 5, 1918, to May 5, 1918)\n*Lieut.-Col. K. M. Perry, DSO (May 5, 1918, to October 14, 1918)\n*Lieut.-Col. F. S. Meighen, [[Order of St Michael and St George|CMG]] (October 14, 1918, to May 7, 1919)\n*Lieut.-Col. R. Bickerdike, DSO (May 7, 1919, until demobilization)\n\n==Battle honours==\n*Somme 1916\n*Ancre Heights\n*Ancre, 1916\n*Arras, 1917 & 1918\n*Vimy, 1917\n*Hill 70\n*Ypres, 1915\n*Passchendaele, 1917\n*Amiens, 1918\n*Scarpe, 1918\n*Drocourt-Queant\n*Hindenburg Line\n*Canal du Nord\n*Valenciennes\n*Sambre\n*France and Flanders, 1916\u201318\n\n==Victoria Cross Awards==\n*Private [[John Francis Young]]\n\n<br />The award of the VC was announced in the London Gazette on December 14 1918. Private Young was in Kidderminster, England at the time and received the decoration from King George V at Buckingham Palace in April 1919. That month, he married Ida May Thatcher at St. Mary\u2019s Church in Kidderminster. He took his bride back to Canada, but sadly did not enjoy a long life, dying in 1929.\n\n\n'''Commemorations / Plaques honouring John Francis Young, VC'''\n\n* Montreal, Canada\n\nA historic tribute plaque was unveiled by The Canadian Grenadier Guards and placed with Sergeant Young's Heads Stone in [[Mount Royal Cemetery]]. The [[Canadian Grenadier Guards]]' Junior Ranks mess has been renamed the \"John Francis Young Club\" in his honour and still bears his name. In Young's honour, members are required to execute a proper halt, briefly coming to attention, upon entering the Club. There is a memorial plaque to him in the Sergeants' mess. He is remembered still and honoured as one of the outstanding heroes of the Regiment's history. \n\n<br />\n\n* Kidderminster, England\n\nA paving stone in his memory was unveiled by Wyre Forest District Council chairman Stephen Williams at a ceremony in front of the Angel of Peace outside St Mary\u2019s and All Saints Church in Kidderminster on Monday, September 3, 2018. The ceremony was attended by local dignitaries and veterans\u2019 organisations as well as representatives of the Canadian High Commission and the Canadian Grenadier Guards.\n\n==Notable Members==\n\n* Lieutenant [[Samuel Lewis Honey]], VC, served with 87th Bn in 1916 prior to being transferred to 78th Bn CEF\n* Captain Henry Scott, Son of Canon [[Frederick George Scott]]\n* Private Stewart Dobbs Whiteford, Founding member of The Canadian War Amps\n* Lieutenant Colonel Hercule Barr\u00e9, LoH, CDG\n* Captain Alfred Craig Hannaford, MC and Bar\n* Major Howard Frank Fogg, Composer, creditied with writing the first original composition for a Canadian film\n* Major Gordon Lewis, No2 Coy Commander, Hockey Player, Won Stanley Cup with Montreal Victorias 1896\n* Lt. Charles Douglas Spittal, Hockey Player, won Stanley Cup with Ottawa Sevens in 1903\n*[[Art Ross]], Coach The Canadian Grenadier Guards Hockey Club (1915), Canadian professional [[ice hockey]] player\n* Lieutenant / Sgt Alexander McClintock, DCM, Author \"Best O' Luck\"\n* Lieutenant [[Jimmy Montgomerie]], Professional Football Player, Canadian Sports Hall of Fame\n* Private William Anson Olgilvie, MM and 2 Bars (One of only 38 Canadians to win 3 MMs)\n* Captain William Stanley Jenkins, DFC and Bar, Canadian Ace with 12 confirmed aerial victories \n\n<br />\n==Memorials ==\nVimy Ridge Memorial - 1919\n\n\n==References==\nMeek, John F. ''Over the Top! The Canadian Infantry in the First World War.'' Orangeville, Ont.: The Author, 1971.\n\n==See also==\n[[The Canadian Grenadier Guards]]\n\n[[Category:Battalions of the Canadian Expeditionary Force|087]]\n", "text_old": "[[File:John Francis Young VC.jpg|thumb|Private [[John Francis Young]] [[Victoria Cross]] recipient]]\n\nThe '''87th (Canadian Grenadier Guards) Battalion, CEF''' was a unit in the [[Canadian Expeditionary Force]] during the [[World War I|First World War]].  \n\nBased in [[Montreal]], [[Quebec]], the unit began recruiting in September 1915 in Montreal, the surrounding districts, and also in mining districts elsewhere in the province.  \n\nAfter sailing to England in April 1916, the battalion was stationed there as part of the 12th Infantry Brigade (until June) and then 11th Infantry Brigade of the 4th Canadian Infantry Division until August of the same year.  On August 11/12, the battalion crossed over to France and served the duration of the war as part of the 11th Infantry Brigade, 4th Canadian Infantry Division.  The battalion returned to Canada in June 1919.\n\n==Officers Commanding==\n*Lieut.-Col. J. P. Rexford (April 25, 1916, to July 22, 1916)\n*Lieut.-Col. R. W. Frost, [[Distinguished Service Order|DSO]] (July 27, 1916, to March 24, 1917)\n*Major H. LeR. Shaw (March 24, 1917, to May 8, 1917)\n*Lieut.-Col. J. V. P. O'Donahoe, DSO (May 8, 1917, to April 4, 1918)\n*Major J. S. Ralston, [[Military Cross|MC]] (April 5, 1918, to May 5, 1918)\n*Lieut.-Col. K. M. Perry, DSO (May 5, 1918, to October 14, 1918)\n*Lieut.-Col. F. S. Meighen, [[Order of St Michael and St George|CMG]] (October 14, 1918, to May 7, 1919)\n*Lieut.-Col. R. Bickerdike, DSO (May 7, 1919, until demobilization)\n\n==Battle honours==\n*Somme 1916\n*Ancre Heights\n*Ancre, 1916\n*Arras, 1917 & 1918\n*Vimy, 1917\n*Hill 70\n*Ypres, 1915\n*Passchendaele, 1917\n*Amiens, 1918\n*Scarpe, 1918\n*Drocourt-Queant\n*Hindenburg Line\n*Canal du Nord\n*Valenciennes\n*Sambre\n*France and Flanders, 1916\u201318\n\n==Victoria Cross Awards==\n*Private [[John Francis Young]]\n\n<br />The award of the VC was announced in the London Gazette on December 14 1918. Private Young was in Kidderminster, England at the time and received the decoration from King George V at Buckingham Palace in April 1919. That month, he married Ida May Thatcher at St. Mary\u2019s Church in Kidderminster. He took his bride back to Canada, but sadly did not enjoy a long life, dying in 1929.\n\n\n'''Memorials'''\n\n* Montreal, Canada\n\nA historic tribute plaque was unveiled by The Canadian Grenadier Guards and placed with Sergeant Young's Heads Stone in [[Mount Royal Cemetery]]. The [[Canadian Grenadier Guards]]' Junior Ranks mess has been renamed the \"John Francis Young Club\" in his honour and still bears his name. In Young's honour, members are required to execute a proper halt, briefly coming to attention, upon entering the Club. There is a memorial plaque to him in the Sergeants' mess. He is remembered still and honoured as one of the outstanding heroes of the Regiment's history. \n\n<br />\n\n* Kidderminster, England\n\nA paving stone in his memory was unveiled by Wyre Forest District Council chairman Stephen Williams at a ceremony in front of the Angel of Peace outside St Mary\u2019s and All Saints Church in Kidderminster on Monday, September 3, 2018. The ceremony was attended by local dignitaries and veterans\u2019 organisations as well as representatives of the Canadian High Commission and the Canadian Grenadier Guards.\n\n==Notable Members==\n\n* Lieutenant [[Samuel Lewis Honey]], VC, served with 87th Bn in 1916 prior to being transferred to 78th Bn CEF\n* Captain Henry Scott, Son of Canon [[Frederick George Scott]]\n* Private Stewart Dobbs Whiteford, Founding member of The Canadian War Amps\n* Lieutenant Colonel Hercule Barr\u00e9, LoH, CDG\n* Captain Alfred Craig Hannaford, MC and Bar\n* Major Howard Frank Fogg, Composer, creditied with writing the first original composition for a Canadian film\n* Major Gordon Lewis, No2 Coy Commander, Hockey Player, Won Stanley Cup with Montreal Victorias 1896\n* Lt. Charles Douglas Spittal, Hockey Player, won Stanley Cup with Ottawa Sevens in 1903\n*[[Art Ross]], Coach The Canadian Grenadier Guards Hockey Club (1915), Canadian professional [[ice hockey]] player\n* Lieutenant / Sgt Alexander McClintock, DCM, Author \"Best O' Luck\"\n* Lieutenant [[Jimmy Montgomerie]], Professional Football Player, Canadian Sports Hall of Fame\n* Private William Anson Olgilvie, MM and 2 Bars (One of only 38 Canadians to win 3 MMs)\n* Captain William Stanley Jenkins, DFC and Bar, Canadian Ace with 12 confirmed aerial victories \n\n<br />\n==References==\nMeek, John F. ''Over the Top! The Canadian Infantry in the First World War.'' Orangeville, Ont.: The Author, 1971.\n\n==See also==\n[[The Canadian Grenadier Guards]]\n\n[[Category:Battalions of the Canadian Expeditionary Force|087]]\n", "name_user": "Mhayesrivet", "label": "safe", "comment": "", "url_page": "//en.wikipedia.org/wiki/87th_Battalion_(Canadian_Grenadier_Guards),_CEF"}
{"title_page": "Michael Sembello", "text_new": "{{Use mdy dates|date=January 2015}}\n{{multiple issues|\n{{BLP sources|date=September 2018}}\n{{COI|date=September 2018}}\n}}\n{{Infobox musical artist <!-- See Wikipedia:WikiProject_Musicians -->\n|name            = Michael Sembello\n|image           = \n|caption         = Michael Sembello\n|background      = solo_singer\n|birth_date      = {{Birth date and age|1954|4|17}}\n|birth_place     = [[Philadelphia]], Pennsylvania, U.S.\n|birth_name      = Michael Andrew Sembello\n|instrument      = Vocals, guitar, keyboards\n|genre           = [[Hi-NRG]], [[New wave music|new wave]], [[synthpop]], [[pop rock]], [[Contemporary R&B|R&B]], [[soul music|soul]], [[pop music|pop]], [[funk music|funk]]\n|occupation      = Singer, songwriter, multi-instrumentalist, producer\n|years_active    = 1975\u2013present\n|label           = [[Warner Bros. Records|Warner Bros.]], [[EMI Records|EMI]], [[A&M Records|A&M]], [[Frontiers Records|Frontiers]]\n|associated_acts = [[Stevie Wonder]]\n}}\n\n'''Michael Andrew Sembello''' (born April 17, 1954) is an American singer, guitarist, keyboardist, songwriter, composer and producer from [[Philadelphia]], [[Pennsylvania]].\n\nSembello was nominated for an [[56th Academy Awards|Academy Award]] and a [[41st Golden Globe Awards|Golden Globe]] for his 1983 song \"[[Maniac (Michael Sembello song)|Maniac]]\", which he sang and co-wrote. The song reached number one in the United States<ref name=hot100/> and featured in the [[Flashdance (soundtrack)|''Flashdance'' movie soundtrack]].\n\nHe is the brother of the late songwriter and composer [[Danny Sembello]] and the late singer songwriter John Sembello of [[Dino & Sembello]] fame.\n\n==Early life==\nSembello was born and raised in [[Ardmore, Pennsylvania]], a western suburb of Philadelphia.<ref>{{cite web |title=Europeans Crazy About Main Line's 'Maniac' |url=https://patch.com/pennsylvania/ardmore/europeans-crazy-about-main-lines-maniac-9ad3006d |website=Ardmore-Merion-Wynnewood, PA Patch |language=en |date=27 November 2012}}</ref>\n\n==Career==\nSembello began his career in music as a [[session musician]], working as a guitarist. By age 17 he was working professionally with [[Stevie Wonder]] on electric and acoustic guitar as a studio player on Wonder's ''[[Fulfillingness' First Finale]]''.<ref name=\"Millward2018\">{{cite book|author=Steve Millward|title=Fast Forward: Music And Politics In 1974|url=https://books.google.com/books?id=TXswDAAAQBAJ&pg=PT58|date=9 April 2018|publisher=Troubador Publishing Ltd|isbn=978-1-78589-540-1|pages=58\u2013}}</ref> He continued the same year, chosen as one of the core artists who worked on ''[[Songs in the Key of Life]]'', an ambitious double album that took two years to create. He was credited as lead and rhythm guitarist on most of the tracks\u2014including the intricate [[Jazz fusion|jazz rock]] lead guitar part of the instrumental \"Contusion\"<ref>{{Citation|title=Pat Martino Documentary Michael Sembello Interview|url=https://www.youtube.com/watch?v=FJ-kBgbAwhE|language=en|access-date=2019-11-30}}</ref>\u2014and shares songwriting credit with Wonder on the song \"Saturn\", according to the album's liner notes.\n\nSembello wrote a song, \"Carousel\", which [[Michael Jackson]] recorded for his 1982 album ''[[Thriller (album)|Thriller]]'', but it was replaced on the track list by \"[[Human Nature (Michael Jackson song)|Human Nature]]\".<ref>{{cite magazine |title=Human Nature |url=https://www.rollingstone.com/music/news/human-nature-michael-jackson |first=Garin |last=Pirnia |date=May 7, 2012 |magazine=Rolling Stone}}</ref><ref>{{cite web|url=https://www.theglobeandmail.com/arts/music/the-maestro-quincy-jones-and-his-singing-montreal-protege/article18762448|title=The maestro Quincy Jones and his singing Montreal prot\u00e9g\u00e9|last=Wheeler|first=Brad|date=20 May 2014|work=[[The Globe and Mail]]|archiveurl=https://www.webcitation.org/7373w6BOh?url=https://www.theglobeandmail.com/arts/music/the-maestro-quincy-jones-and-his-singing-montreal-protege/article18762448|archivedate=October 12, 2018|access-date=October 12, 2018|url-status=live|df=mdy-all}}</ref>\nThe song was subsequently included as a bonus track on ''[[Thriller 25]]'', the 25th-anniversary edition reissue of the album; the full version was later released on iTunes in 2013 as part of The Ultimate Fan Extras Collection.<ref>{{cite web |title=Carousel |url=https://www.prnewswire.com/news-releases/nearly-270-michael-jackson-tracks-packed-into-new-anthologies-the-indispensable-collection-and-the-ultimate-fan-extras-collection-available-now-exclusively-on-itunes-213956461.html |first=Legacy |last=Recordings |date=July 2, 2013 |publisher=PR NewsWire.}}. Retrieved October 24, 2018.</ref>\n\nSembello released his first solo album, ''[[Bossa Nova Hotel]]'', in 1983. The song \"[[Maniac (Michael Sembello song)|Maniac]]\" from that album, which he co-wrote with his keyboardist Dennis Matkosky, was selected for inclusion in the film ''[[Flashdance]]''. \"Maniac\" was the second-best-charting song from the soundtrack (after the [[Flashdance... What a Feeling|title track]]) and the ninth-biggest single of 1983. That soundtrack won a [[26th Annual Grammy Awards|Grammy Award in 1984]] for [[Best Album of Original Score Written for a Motion Picture or a Television Special]].<ref>{{cite news|url=https://news.google.com/newspapers?id=H7MjAAAAIBAJ&sjid=nyQEAAAAIBAJ&pg=6742,7885903&dq=michael-sembello&hl=en|title=Jackson Claims 8 Grammys|date=February 29, 1984|work=[[Times-News (Hendersonville, North Carolina)|Times-News]]|accessdate=December 21, 2010}}</ref>\n\n{{listen\n|filename=Maniac.ogg\n|title=Michael Sembello \u2013 ''Maniac''\n|description=A sample of \"Maniac\", Sembello's biggest hit. The song was released in 1983 and reached #1 on the [[Billboard Hot 100|''Billboard'' Hot 100]].\n}}\n\nSembello produced guitarist [[Jennifer Batten]]'s first solo album, ''[[Above Below and Beyond]]'' in 1992.<ref name=\"AllMusic Bio\">{{citation | author=Prato, Greg | title=Jennifer Batten Biography | work=Allmusic.com | publisher=Rovi Corp | url=http://www.allmusic.com/artist/Jennifer-batten-p3637/biography | date=December 30, 2003 | accessdate=July 26, 2011}}</ref> In 1994, he produced [[Argentina|Argentine]] singer [[Valeria Lynch]]'s album ''Caravana de Sue\u00f1os'' (1994), and co-wrote the title song with [[Puerto Rico|Puerto Rican]] [[Wilkins V\u00e9lez]].{{citation needed|date=September 2018}}\n\nSembello's songs are featured in the films ''[[Cocoon (film)|Cocoon]]'', ''[[Independence Day (1996 film)|Independence Day]]'', ''[[Gremlins]]'', ''[[The Monster Squad]]'' and ''[[Summer Lovers]]''. His song \"Gravity\" from ''Cocoon'' was accompanied by a music video directed by the film's director [[Ron Howard]] and included an appearance by Howard in a scripted fictional foreword to the video.{{citation needed|date=September 2018}}\n\nIn 2008, Sembello worked with saxophonist Michael Lington on his album ''Heat'', which was nominated as Jazztrax Album of the Year for 2008.{{citation needed|date=September 2018}} Michael and his brother Danny Sembello penned three songs with Lington for the project.\n\nSembello has recorded his vocals in six languages.<ref name=\"Michaels2005\">{{cite book|author=Randolph Michaels|title=Flashbacks to Happiness: Eighties Music Revisited|url=https://books.google.com/books?id=fWAAm34yCpYC&pg=PA160|date=September 2005|publisher=iUniverse|isbn=978-0-595-37007-8|pages=160\u2013}}</ref> In May 2009, the album ''Moon Island'' was released on [[EMI Records|EMI Japan]]. The album consists of American pop songs given new arrangements with a strong Brazilian influence.\n\n==Discography==\n===Studio albums===\n* ''[[Bossa Nova Hotel]]'' (1983) \u2013 [[Billboard200|US]] #80<ref>{{cite magazine|url=https://www.billboard.com/music/michael-sembello/chart-history/TLP|title=Billboard > Michael Sembello Chart History > Billboard 200|magazine=Billboard|accessdate=November 4, 2019}}</ref>\n* ''Without Walls'' (1986)\n* ''Caravan of Dreams'' (1992)\n* ''Backwards in Time'' (1997)\n* ''Ancient Future'' (2002)\n\n===Compilation albums===\n* ''The Lost Years'' (2003)\n\n===Singles===\n{| class=\"wikitable plainrowheaders\" style=\"text-align:center;\"\n|-\n! scope=\"col\" rowspan=\"2\" style=\"width:15em;\"| Title\n! scope=\"col\" rowspan=\"2\" style=\"width:0.5em;\"| Release\n! colspan=\"11\" scope=\"col\" | Peak chart positions\n! scope=\"col\" rowspan=\"2\" style=\"width:15em;\"| Album\n|-\n!<small>[[Billboard Hot 100|US]]</small><br><ref name=hot100>{{cite magazine|url=https://www.billboard.com/music/michael-sembello/chart-history/HSI|title=Billboard  > Michael Sembello Chart History > Hot 100|magazine=[[Billboard (magazine)|Billboard]]|accessdate=November 4, 2019}}</ref>\n!<small>[[Adult Contemporary (chart)|US<br>Adult]]</small><br><ref>{{cite magazine|url=https://www.billboard.com/music/michael-sembello/chart-history/ASI|title=Billboard > Michael Sembello Chart History > Adult Contemporary|magazine=Billboard|accessdate=November 4, 2019}}</ref>\n!<small>[[Hot R&B/Hip-Hop Songs|US<br>R&B]]</small><br><ref>{{cite magazine|url=https://www.billboard.com/music/michael-sembello/chart-history/BSI|title=Billboard > Michael Sembello Chart History > Hot R&B/Hip-Hop Songs|magazine=Billboard|accessdate=November 4, 2019}}</ref>\n!<small>[[Kent Music Report|AUS]]</small><br><ref>Australian chart peaks:\n*{{cite book|first=David|last=Kent|authorlink=David Kent (historian)|title=Australian Chart Book 1970\u20131992|publisher=Australian Chart Book|location=St Ives, N.S.W.|year=1993|page=268|isbn=0-646-11917-6}} N.B. The Kent Report chart was licensed by [[Australian Recording Industry Association|ARIA]] between mid-1983 and June 12, 1988.\n*\"Maniac\": {{cite web|url=https://i.imgur.com/oKcz8Yu.jpg|title=The Countdown (ARIA) Chart \u2013 Week Ending 4th September, 1983|publisher=[[Australian Recording Industry Association|ARIA]], via Imgur.com|accessdate=April 1, 2017}}\n*\"Automatic Man\": {{cite web|url=https://i.imgur.com/1NNrwg7.jpg|title=Countdown (ARIA) Chart \u2013 Week Ending 4th December, 1983|publisher=ARIA, via Imgur.com|accessdate=April 1, 2017}}</ref>\n!<small>[[Ultratop|BEL<br>(FLA)]]</small><br><ref>{{cite web|url=https://www.ultratop.be/nl/showinterpret.asp?interpret=Michael+Sembello|title=Ultratop > Michael Sembello in Ultratop Vlaanderen|language=Dutch|publisher=Hung Medien|accessdate=June 13, 2019}}</ref>\n!<small>[[Media Control Charts|GER]]</small><br><ref>German singles chart peaks:\n*\"Maniac\": {{cite web|url=https://www.offiziellecharts.de/titel-details-996|title=Offizielle Deutsche Charts > Michael Sembello \u2013 Maniac (single)|language=German|publisher=GfK Entertainment|accessdate=October 1, 2016}}\n*\"Automatic Man\": {{cite web|url=https://www.offiziellecharts.de/titel-details-30403|title=Offizielle Deutsche Charts > Michael Sembello \u2013 Automatic Man (single)|language=German|publisher=GfK Entertainment|accessdate=October 1, 2016}}</ref>\n!<small>[[Irish Singles Chart|IRE]]</small><br><ref>{{cite web|url=https://i.imgur.com/fKUy1WT.jpg|title=The Irish Charts \u2013 All there is to know > Search results for 'Michael Sembello' (from irishcharts.ie)|publisher=Imgur.com (original source published by Fireball Media)|accessdate=October 1, 2016}}</ref>\n!<small>[[Single Top 100|NED]]</small><br><ref>{{cite web|url=https://dutchcharts.nl/showinterpret.asp?interpret=Michael+Sembello|title=dutchcharts.nl > Michael Sembello in Dutch Charts|language=Dutch|publisher=Hung Medien|accessdate=June 13, 2019}}</ref>\n!<small>[[Recorded Music NZ|NZ]]</small><br><ref>{{cite web|url=https://charts.nz/showinterpret.asp?interpret=Michael+Sembello|title=charts.nz > Michael Sembello in New Zealand Charts|publisher=Hung Medien|accessdate=March 14, 2019}}</ref>\n!<small>[[Swiss Hitparade|SWI]]</small><br><ref>{{cite web|url=https://hitparade.ch/showinterpret.asp?interpret=Michael+Sembello|title=hitparade.ch > Michael Sembello in der Schweizer Hitparade|language=German|publisher=Hung Medien|accessdate=June 13, 2019}}</ref>\n!<small>[[UK Singles Chart|UK]]</small><br><ref>{{cite web|url=https://www.officialcharts.com/artist/803/michael-sembello/|title=Official Charts > Michael Sembello|publisher=[[Official Charts Company]]|accessdate=October 1, 2016}}</ref>\n|-\n!scope=\"row\"| \"Summer Lovers\"\n| 1982\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| ''[[Summer Lovers#Soundtrack|Summer Lovers]]''\n|-\n!scope=\"row\"| \"[[Maniac (Michael Sembello song)|Maniac]]\" (also from ''[[Flashdance (soundtrack)|Flashdance]]'')\n| rowspan=\"2\"|1983\n| style=\"text-align:center;\"| 1\n| \u2014\n| \u2014\n| style=\"text-align:center;\"| 2\n| style=\"text-align:center;\"| 11\n| style=\"text-align:center;\"| 6\n| style=\"text-align:center;\"| 28\n| style=\"text-align:center;\"| 10\n| style=\"text-align:center;\"| 7\n| style=\"text-align:center;\"| 2\n| style=\"text-align:center;\"| 43\n| rowspan=\"3\" | ''[[Bossa Nova Hotel]]''\n|-\n!scope=\"row\"| \"Automatic Man\"\n| 34\n| \u2014\n| \u2014\n| 49\n| \u2014\n| 66\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n|-\n!scope=\"row\"| \"Talk\"\n| rowspan=\"2\"|1984\n| \u2014\n| 37\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n|-\n!scope=\"row\"| \"Gremlins...Mega Madness\"\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| ''[[Gremlins#Music|Gremlins]]''\n|-\n!scope=\"row\"| \"Gravity\" (also from ''[[Cocoon (film)#Soundtrack|Cocoon]]'')\n|1985\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| rowspan=\"3\" | ''Without Walls''\n|-\n!scope=\"row\"| \"Tear Down the Walls\"\n| rowspan=\"2\"|1986\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n|-\n!scope=\"row\"| \"Wonder Where You Are\"\n| \u2014\n| \u2014\n| 79\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n|-\n!scope=\"row\"| \"Heavy Weather\"\n| 1992\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| ''Caravan of Dreams''\n|-\n!scope=\"row\"| \"Reach for the Dream\"\n| 1995\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| {{N/A|non-album single}}\n|-\n| colspan=\"17\" style=\"font-size:90%\" | \"\u2014\" denotes a recording that did not chart or was not released in that territory.\n|}\n\n==See also==\n*[[List of artists who reached number one in the United States]]\n\n==References==\n{{Reflist}}\n\n==External links==\n*[https://web.archive.org/web/20180403103506/http://www.sembello.com/ Michael & Danny Sembello Official Website]\n*{{IMDb name|0783732}}\n\n{{Grammy Award for Best Score Soundtrack for Visual Media}}\n\n{{Authority control}}\n\n{{DEFAULTSORT:Sembello, Michael}}\n[[Category:1954 births]]\n[[Category:Living people]]\n[[Category:American people of Italian descent]]\n[[Category:20th-century American singers]]\n[[Category:20th-century American writers]]\n[[Category:20th-century American composers]]\n[[Category:21st-century American singers]]\n[[Category:21st-century American composers]]\n[[Category:American acoustic guitarists]]\n[[Category:American male guitarists]]\n[[Category:American film score composers]]\n[[Category:American Hi-NRG musicians]]\n[[Category:American male singer-songwriters]]\n[[Category:American new wave musicians]]\n[[Category:American pop guitarists]]\n[[Category:American pop rock singers]]\n[[Category:Record producers from Pennsylvania]]\n[[Category:American multi-instrumentalists]]\n[[Category:American rhythm and blues guitarists]]\n[[Category:American rhythm and blues singer-songwriters]]\n[[Category:American rock guitarists]]\n[[Category:American rock songwriters]]\n[[Category:American session musicians]]\n[[Category:American synth-pop musicians]]\n[[Category:EMI Records artists]]\n[[Category:Grammy Award winners]]\n[[Category:Lead guitarists]]\n[[Category:Male film score composers]]\n[[Category:American male composers]]\n[[Category:A&M Records artists]]\n[[Category:Songwriters from Pennsylvania]]\n[[Category:Warner Records artists]]\n[[Category:Singers from Pennsylvania]]\n[[Category:20th-century American guitarists]]\n[[Category:21st-century American guitarists]]\n[[Category:Guitarists from Philadelphia]]\n[[Category:20th-century male singers]]\n[[Category:21st-century male singers]]\n[[Category:Frontiers Records artists]]\n", "text_old": "{{Use mdy dates|date=January 2015}}\n{{multiple issues|\n{{BLP sources|date=September 2018}}\n{{COI|date=September 2018}}\n}}\n{{Infobox musical artist <!-- See Wikipedia:WikiProject_Musicians -->\n|name            = Michael Sembello\n|image           = \n|caption         = Michael Sembello\n|background      = solo_singer\n|birth_date      = {{Birth date and age|1954|4|17}}\n|birth_place     = [[Philadelphia]], Pennsylvania, U.S.\n|birth_name      = Michael Andrew Sembello\n|instrument      = Vocals, guitar, keyboards\n|genre           = [[Hi-NRG]], [[New wave music|new wave]], [[synthpop]], [[pop rock]], [[Contemporary R&B|R&B]], [[soul music|soul]], [[pop music|pop]], [[funk music|funk]]\n|occupation      = Singer, songwriter, multi-instrumentalist, producer\n|years_active    = 1975\u2013present\n|label           = [[Warner Bros. Records|Warner Bros.]], [[EMI Records|EMI]], [[A&M Records|A&M]], [[Frontiers Records|Frontiers]]\n|associated_acts = [[Stevie Wonder]]\n}}\n\n'''Michael Andrew Sembello''' (born April 17, 1954) is an American singer, guitarist, keyboardist, songwriter, composer and producer from [[Philadelphia]], [[Pennsylvania]].\n\nSembello was nominated for an [[56th Academy Awards|Academy Award]] and a [[41st Golden Globe Awards|Golden Globe]] for his 1983 song \"[[Maniac (Michael Sembello song)|Maniac]]\", which he sang and co-wrote. The song reached number one in the United States<ref name=hot100/> and featured in the [[Flashdance (soundtrack)|''Flashdance'' movie soundtrack]].\n\nHe is the brother of the late songwriter and composer [[Danny Sembello]] and the late singer songwriter John Sembello of [[Dino & Sembello]] fame.\n\n==Early life==\nSembello was born and raised in [[Ardmore, Pennsylvania]], a western suburb of Philadelphia.{{citation needed|date=September 2018}}\n\n==Career==\nSembello began his career in music as a [[session musician]], working as a guitarist. By age 17 he was working professionally with [[Stevie Wonder]] on electric and acoustic guitar as a studio player on Wonder's ''[[Fulfillingness' First Finale]]''.{{citation needed|date=September 2018}} He continued the same year, chosen as one of the core artists who worked on ''[[Songs in the Key of Life]]'', an ambitious double album that took two years to create. He was credited as lead and rhythm guitarist on most of the tracks\u2014including the intricate [[Jazz fusion|jazz rock]] lead guitar part of the instrumental \"Contusion\"<ref>{{Citation|title=Pat Martino Documentary Michael Sembello Interview|url=https://www.youtube.com/watch?v=FJ-kBgbAwhE|language=en|access-date=2019-11-30}}</ref>\u2014and shares songwriting credit with Wonder on the song \"Saturn\", according to the album's liner notes.\n\nSembello wrote a song, \"Carousel\", which [[Michael Jackson]] recorded for his 1982 album ''[[Thriller (album)|Thriller]]'', but it was replaced on the track list by \"[[Human Nature (Michael Jackson song)|Human Nature]]\".<ref>{{cite magazine |title=Human Nature |url=https://www.rollingstone.com/music/news/human-nature-michael-jackson |first=Garin |last=Pirnia |date=May 7, 2012 |magazine=Rolling Stone}}</ref><ref>{{cite web|url=https://www.theglobeandmail.com/arts/music/the-maestro-quincy-jones-and-his-singing-montreal-protege/article18762448|title=The maestro Quincy Jones and his singing Montreal prot\u00e9g\u00e9|last=Wheeler|first=Brad|date=20 May 2014|work=[[The Globe and Mail]]|archiveurl=https://www.webcitation.org/7373w6BOh?url=https://www.theglobeandmail.com/arts/music/the-maestro-quincy-jones-and-his-singing-montreal-protege/article18762448|archivedate=October 12, 2018|access-date=October 12, 2018|url-status=live|df=mdy-all}}</ref>\nThe song was subsequently included as a bonus track on ''[[Thriller 25]]'', the 25th-anniversary edition reissue of the album; the full version was later released on iTunes in 2013 as part of The Ultimate Fan Extras Collection.<ref>{{cite web |title=Carousel |url=https://www.prnewswire.com/news-releases/nearly-270-michael-jackson-tracks-packed-into-new-anthologies-the-indispensable-collection-and-the-ultimate-fan-extras-collection-available-now-exclusively-on-itunes-213956461.html |first=Legacy |last=Recordings |date=July 2, 2013 |publisher=PR NewsWire.}}. Retrieved October 24, 2018.</ref>\n\nSembello released his first solo album, ''[[Bossa Nova Hotel]]'', in 1983. The song \"[[Maniac (Michael Sembello song)|Maniac]]\" from that album, which he co-wrote with his keyboardist Dennis Matkosky, was selected for inclusion in the film ''[[Flashdance]]''. \"Maniac\" was the second-best-charting song from the soundtrack (after the [[Flashdance... What a Feeling|title track]]) and the ninth-biggest single of 1983. That soundtrack won a [[26th Annual Grammy Awards|Grammy Award in 1984]] for [[Best Album of Original Score Written for a Motion Picture or a Television Special]].<ref>{{cite news|url=https://news.google.com/newspapers?id=H7MjAAAAIBAJ&sjid=nyQEAAAAIBAJ&pg=6742,7885903&dq=michael-sembello&hl=en|title=Jackson Claims 8 Grammys|date=February 29, 1984|work=[[Times-News (Hendersonville, North Carolina)|Times-News]]|accessdate=December 21, 2010}}</ref>\n\n{{listen\n|filename=Maniac.ogg\n|title=Michael Sembello \u2013 ''Maniac''\n|description=A sample of \"Maniac\", Sembello's biggest hit. The song was released in 1983 and reached #1 on the [[Billboard Hot 100|''Billboard'' Hot 100]].\n}}\n\nSembello produced guitarist [[Jennifer Batten]]'s first solo album, ''[[Above Below and Beyond]]'' in 1992.<ref name=\"AllMusic Bio\">{{citation | author=Prato, Greg | title=Jennifer Batten Biography | work=Allmusic.com | publisher=Rovi Corp | url=http://www.allmusic.com/artist/Jennifer-batten-p3637/biography | date=December 30, 2003 | accessdate=July 26, 2011}}</ref> In 1994, he produced [[Argentina|Argentine]] singer [[Valeria Lynch]]'s album ''Caravana de Sue\u00f1os'' (1994), and co-wrote the title song with [[Puerto Rico|Puerto Rican]] [[Wilkins V\u00e9lez]].{{citation needed|date=September 2018}}\n\nSembello's songs are featured in the films ''[[Cocoon (film)|Cocoon]]'', ''[[Independence Day (1996 film)|Independence Day]]'', ''[[Gremlins]]'', ''[[The Monster Squad]]'' and ''[[Summer Lovers]]''. His song \"Gravity\" from ''Cocoon'' was accompanied by a music video directed by the film's director [[Ron Howard]] and included an appearance by Howard in a scripted fictional foreword to the video.{{citation needed|date=September 2018}}\n\nIn 2008, Sembello worked with saxophonist Michael Lington on his album ''Heat'', which was nominated as Jazztrax Album of the Year for 2008.{{citation needed|date=September 2018}} Michael and his brother Danny Sembello penned three songs with Lington for the project.\n\nSembello has recorded his vocals in six languages.{{Citation needed|date=December 2010}} In May 2009, the album ''Moon Island'' was released on [[EMI Records|EMI Japan]]. The album consists of American pop songs given new arrangements with a strong Brazilian influence.\n\n==Discography==\n===Studio albums===\n* ''[[Bossa Nova Hotel]]'' (1983) \u2013 [[Billboard200|US]] #80<ref>{{cite magazine|url=https://www.billboard.com/music/michael-sembello/chart-history/TLP|title=Billboard > Michael Sembello Chart History > Billboard 200|magazine=Billboard|accessdate=November 4, 2019}}</ref>\n* ''Without Walls'' (1986)\n* ''Caravan of Dreams'' (1992)\n* ''Backwards in Time'' (1997)\n* ''Ancient Future'' (2002)\n\n===Compilation albums===\n* ''The Lost Years'' (2003)\n\n===Singles===\n{| class=\"wikitable plainrowheaders\" style=\"text-align:center;\"\n|-\n! scope=\"col\" rowspan=\"2\" style=\"width:15em;\"| Title\n! scope=\"col\" rowspan=\"2\" style=\"width:0.5em;\"| Release\n! colspan=\"11\" scope=\"col\" | Peak chart positions\n! scope=\"col\" rowspan=\"2\" style=\"width:15em;\"| Album\n|-\n!<small>[[Billboard Hot 100|US]]</small><br><ref name=hot100>{{cite magazine|url=https://www.billboard.com/music/michael-sembello/chart-history/HSI|title=Billboard  > Michael Sembello Chart History > Hot 100|magazine=[[Billboard (magazine)|Billboard]]|accessdate=November 4, 2019}}</ref>\n!<small>[[Adult Contemporary (chart)|US<br>Adult]]</small><br><ref>{{cite magazine|url=https://www.billboard.com/music/michael-sembello/chart-history/ASI|title=Billboard > Michael Sembello Chart History > Adult Contemporary|magazine=Billboard|accessdate=November 4, 2019}}</ref>\n!<small>[[Hot R&B/Hip-Hop Songs|US<br>R&B]]</small><br><ref>{{cite magazine|url=https://www.billboard.com/music/michael-sembello/chart-history/BSI|title=Billboard > Michael Sembello Chart History > Hot R&B/Hip-Hop Songs|magazine=Billboard|accessdate=November 4, 2019}}</ref>\n!<small>[[Kent Music Report|AUS]]</small><br><ref>Australian chart peaks:\n*{{cite book|first=David|last=Kent|authorlink=David Kent (historian)|title=Australian Chart Book 1970\u20131992|publisher=Australian Chart Book|location=St Ives, N.S.W.|year=1993|page=268|isbn=0-646-11917-6}} N.B. The Kent Report chart was licensed by [[Australian Recording Industry Association|ARIA]] between mid-1983 and June 12, 1988.\n*\"Maniac\": {{cite web|url=https://i.imgur.com/oKcz8Yu.jpg|title=The Countdown (ARIA) Chart \u2013 Week Ending 4th September, 1983|publisher=[[Australian Recording Industry Association|ARIA]], via Imgur.com|accessdate=April 1, 2017}}\n*\"Automatic Man\": {{cite web|url=https://i.imgur.com/1NNrwg7.jpg|title=Countdown (ARIA) Chart \u2013 Week Ending 4th December, 1983|publisher=ARIA, via Imgur.com|accessdate=April 1, 2017}}</ref>\n!<small>[[Ultratop|BEL<br>(FLA)]]</small><br><ref>{{cite web|url=https://www.ultratop.be/nl/showinterpret.asp?interpret=Michael+Sembello|title=Ultratop > Michael Sembello in Ultratop Vlaanderen|language=Dutch|publisher=Hung Medien|accessdate=June 13, 2019}}</ref>\n!<small>[[Media Control Charts|GER]]</small><br><ref>German singles chart peaks:\n*\"Maniac\": {{cite web|url=https://www.offiziellecharts.de/titel-details-996|title=Offizielle Deutsche Charts > Michael Sembello \u2013 Maniac (single)|language=German|publisher=GfK Entertainment|accessdate=October 1, 2016}}\n*\"Automatic Man\": {{cite web|url=https://www.offiziellecharts.de/titel-details-30403|title=Offizielle Deutsche Charts > Michael Sembello \u2013 Automatic Man (single)|language=German|publisher=GfK Entertainment|accessdate=October 1, 2016}}</ref>\n!<small>[[Irish Singles Chart|IRE]]</small><br><ref>{{cite web|url=https://i.imgur.com/fKUy1WT.jpg|title=The Irish Charts \u2013 All there is to know > Search results for 'Michael Sembello' (from irishcharts.ie)|publisher=Imgur.com (original source published by Fireball Media)|accessdate=October 1, 2016}}</ref>\n!<small>[[Single Top 100|NED]]</small><br><ref>{{cite web|url=https://dutchcharts.nl/showinterpret.asp?interpret=Michael+Sembello|title=dutchcharts.nl > Michael Sembello in Dutch Charts|language=Dutch|publisher=Hung Medien|accessdate=June 13, 2019}}</ref>\n!<small>[[Recorded Music NZ|NZ]]</small><br><ref>{{cite web|url=https://charts.nz/showinterpret.asp?interpret=Michael+Sembello|title=charts.nz > Michael Sembello in New Zealand Charts|publisher=Hung Medien|accessdate=March 14, 2019}}</ref>\n!<small>[[Swiss Hitparade|SWI]]</small><br><ref>{{cite web|url=https://hitparade.ch/showinterpret.asp?interpret=Michael+Sembello|title=hitparade.ch > Michael Sembello in der Schweizer Hitparade|language=German|publisher=Hung Medien|accessdate=June 13, 2019}}</ref>\n!<small>[[UK Singles Chart|UK]]</small><br><ref>{{cite web|url=https://www.officialcharts.com/artist/803/michael-sembello/|title=Official Charts > Michael Sembello|publisher=[[Official Charts Company]]|accessdate=October 1, 2016}}</ref>\n|-\n!scope=\"row\"| \"Summer Lovers\"\n| 1982\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| ''[[Summer Lovers#Soundtrack|Summer Lovers]]''\n|-\n!scope=\"row\"| \"[[Maniac (Michael Sembello song)|Maniac]]\" (also from ''[[Flashdance (soundtrack)|Flashdance]]'')\n| rowspan=\"2\"|1983\n| style=\"text-align:center;\"| 1\n| \u2014\n| \u2014\n| style=\"text-align:center;\"| 2\n| style=\"text-align:center;\"| 11\n| style=\"text-align:center;\"| 6\n| style=\"text-align:center;\"| 28\n| style=\"text-align:center;\"| 10\n| style=\"text-align:center;\"| 7\n| style=\"text-align:center;\"| 2\n| style=\"text-align:center;\"| 43\n| rowspan=\"3\" | ''[[Bossa Nova Hotel]]''\n|-\n!scope=\"row\"| \"Automatic Man\"\n| 34\n| \u2014\n| \u2014\n| 49\n| \u2014\n| 66\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n|-\n!scope=\"row\"| \"Talk\"\n| rowspan=\"2\"|1984\n| \u2014\n| 37\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n|-\n!scope=\"row\"| \"Gremlins...Mega Madness\"\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| ''[[Gremlins#Music|Gremlins]]''\n|-\n!scope=\"row\"| \"Gravity\" (also from ''[[Cocoon (film)#Soundtrack|Cocoon]]'')\n|1985\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| rowspan=\"3\" | ''Without Walls''\n|-\n!scope=\"row\"| \"Tear Down the Walls\"\n| rowspan=\"2\"|1986\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n|-\n!scope=\"row\"| \"Wonder Where You Are\"\n| \u2014\n| \u2014\n| 79\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n|-\n!scope=\"row\"| \"Heavy Weather\"\n| 1992\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| ''Caravan of Dreams''\n|-\n!scope=\"row\"| \"Reach for the Dream\"\n| 1995\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| \u2014\n| {{N/A|non-album single}}\n|-\n| colspan=\"17\" style=\"font-size:90%\" | \"\u2014\" denotes a recording that did not chart or was not released in that territory.\n|}\n\n==See also==\n*[[List of artists who reached number one in the United States]]\n\n==References==\n{{Reflist}}\n\n==External links==\n*[https://web.archive.org/web/20180403103506/http://www.sembello.com/ Michael & Danny Sembello Official Website]\n*{{IMDb name|0783732}}\n\n{{Grammy Award for Best Score Soundtrack for Visual Media}}\n\n{{Authority control}}\n\n{{DEFAULTSORT:Sembello, Michael}}\n[[Category:1954 births]]\n[[Category:Living people]]\n[[Category:American people of Italian descent]]\n[[Category:20th-century American singers]]\n[[Category:20th-century American writers]]\n[[Category:20th-century American composers]]\n[[Category:21st-century American singers]]\n[[Category:21st-century American composers]]\n[[Category:American acoustic guitarists]]\n[[Category:American male guitarists]]\n[[Category:American film score composers]]\n[[Category:American Hi-NRG musicians]]\n[[Category:American male singer-songwriters]]\n[[Category:American new wave musicians]]\n[[Category:American pop guitarists]]\n[[Category:American pop rock singers]]\n[[Category:Record producers from Pennsylvania]]\n[[Category:American multi-instrumentalists]]\n[[Category:American rhythm and blues guitarists]]\n[[Category:American rhythm and blues singer-songwriters]]\n[[Category:American rock guitarists]]\n[[Category:American rock songwriters]]\n[[Category:American session musicians]]\n[[Category:American synth-pop musicians]]\n[[Category:EMI Records artists]]\n[[Category:Grammy Award winners]]\n[[Category:Lead guitarists]]\n[[Category:Male film score composers]]\n[[Category:American male composers]]\n[[Category:A&M Records artists]]\n[[Category:Songwriters from Pennsylvania]]\n[[Category:Warner Records artists]]\n[[Category:Singers from Pennsylvania]]\n[[Category:20th-century American guitarists]]\n[[Category:21st-century American guitarists]]\n[[Category:Guitarists from Philadelphia]]\n[[Category:20th-century male singers]]\n[[Category:21st-century male singers]]\n[[Category:Frontiers Records artists]]\n", "name_user": "Loweredtone", "label": "safe", "comment": "Added citations", "url_page": "//en.wikipedia.org/wiki/Michael_Sembello"}
{"title_page": "C Sharp (programming language)", "text_new": "{{short description|Multi-paradigm (object-oriented) programming language}}\n{{Use mdy dates|date=October 2012}}\n{{Use British English Oxford spelling|date=December 2011}}\n{{Correct title|title=C# (programming language)|reason=#}} \n<!-- Per Ecma, \"C#\" (i.e. not \"C\u266f\") is the standard spelling of the name of the language. See \"Language name\" section and talk page. -->\n{{Infobox programming language\n| name = C#\n| logo = [[File:C Sharp logo.svg|150px]]\n| paradigm = [[Structured programming|Structured]], [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]], [[Event-driven programming|event-driven]], [[The Task-based Asynchronous Pattern|task-driven]], [[Functional programming|functional]], [[Generic programming|generic]], [[Reflective programming|reflective]], [[Concurrent computing|concurrent]]\n| family = [[C (programming language)|C]]\n| year = {{start date and age|2000}}<ref>{{Cite web | url=https://www.infoq.com/minibooks/emag-c-sharp-preview |title = InfoQ eMag: A Preview of C# 7}}</ref>\n| designer = [[Microsoft]]\n| developer = Microsoft\n| latest release version = 8.0<ref>{{Cite web | url=https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8 |title = What's new in C# 8}}</ref>\n| latest release date = {{start date and age|2019|09|23}}\n| typing = [[Static typing|static]], [[Dynamic typing|dynamic]],<ref name=\"dynamic\" /> [[Type system#Strong and weak typing|strong]], [[Type system#Safely and unsafely typed systems|safe]], [[Nominative type system|nominative]], [[Type inference|partially inferred]]\n| implementations = [[Microsoft Visual C Sharp|Visual C#]], [[.NET Framework]], [[Mono (software)|Mono]], [[.NET Core]], [[DotGNU|DotGNU (discontinued)]], [[Universal Windows Platform]]\n| dialects = [[C\u03c9]], [[Spec Sharp|Spec#]], [[Polyphonic C Sharp|Polyphonic C#]], [http://ecsharp.net Enhanced C#]\n| influenced_by = [[C++]],<ref name=\"influenced by CPP\" /> [[C\u03c9]], [[Eiffel (programming language)|Eiffel]], [[F Sharp (programming language)|F#]],{{efn|for async}} [[Haskell (programming language)|Haskell]], [[Icon (programming language)|Icon]], [[J Sharp|J#]], [[Visual J++|J++]], [[Java (programming language)|Java]],<ref name=\"influenced by CPP\" /> [[ML (programming language)|ML]], [[Modula-3]], [[Object Pascal]],<ref name=\"influenced by op\" /> [[Rust (programming language)|Rust]], [[Visual Basic|VB]]\n| influenced = [[Chapel (programming language)|Chapel]],<ref name=\"chplspec\">{{cite web|title=Chapel spec (Acknowlegements)|url=http://chapel.cray.com/spec/spec-0.98.pdf|date=2015-10-01|accessdate=2016-01-14|publisher=Cray Inc}}</ref> [[Clojure]],<ref>{{cite web |url=http://www.codequarterly.com/2011/rich-hickey|archive-url=https://web.archive.org/web/20170111184835/http://www.codequarterly.com/2011/rich-hickey|url-status=dead|archive-date=2017-01-11|title=Rich Hickey Q&A by Michael Fogus|access-date=2017-01-11}}</ref> [[Crystal (programming language)|Crystal]],<ref name=\"rel_0.18.0\">\n  {{cite web\n  | url   = http://crystal-lang.org/2016/06/14/crystal-0.18.0-released.html#comment-2732771703\n  | title = Crystal 0.18.0 released!\n  | last  = Borenszweig\n  | first = Ary\n  | quote = It's heavily inspired by Ruby, and other languages (like C#, Go and Python).\n  }}\n</ref> [[D (programming language)|D]], [[J Sharp|J#]], [[Dart (programming language)|Dart]],<ref>{{cite web|title=Web Languages and VMs: Fast Code is Always in Fashion. (V8, Dart) - Google I/O 2013|url=https://www.youtube.com/watch?v=huawCRlo9H4&t=30m10s|accessdate=22 December 2013}}</ref> [[F Sharp (programming language)|F#]], [[Hack (programming language)|Hack]], [[Java (programming language)|Java]],<ref>Java 5.0 added several new language features (the [[foreach loop|enhanced for loop]], [[Object type (object-oriented programming)#Autoboxing|autoboxing]], [[variadic function|varargs]] and [[Java annotation|annotations]]), after they were introduced in the similar (and competing) C# language [http://www.barrycornelius.com/papers/java5/] [http://www.levenez.com/lang/]</ref><ref name=\"influenced\" /> [[Kotlin (programming language)|Kotlin]], [[Nemerle]], [[Oxygene (programming language)|Oxygene]], Ring,<ref name=\"Ring programming language and other languages\">{{cite web |url=http://ring-lang.sourceforge.net/doc1.6/introduction.html#ring-and-other-languages |title=Ring programming language and other languages  |author=Ring Team |date=5 December 2017 |work=ring-lang.net |publisher=[[ring-lang]]}}</ref> [[Rust (programming language)|Rust]], [[Swift (programming language)|Swift]],<ref name=\"lattner2014\">{{cite web|url=http://nondot.org/sabre/|title=Chris Lattner's Homepage|last=Lattner|first=Chris|date=2014-06-03|accessdate=2014-06-03|publisher=Chris Lattner|quote=The Swift language is the product of tireless effort from a team of language experts, documentation gurus, compiler optimization ninjas, and an incredibly important internal dogfooding group who provided feedback to help refine and battle-test ideas. Of course, it also greatly benefited from the experiences hard-won by many other languages in the field, drawing ideas from Objective-C, Rust, Haskell, Ruby, Python, CLU, and far too many others to list.}}</ref> [[Vala (programming language)|Vala]], [[TypeScript]]\n| platform = [[Common Language Infrastructure]]\n| license = [[Roslyn (compiler)|Roslyn]] compiler: [[Apache License|Apache License 2.0]]<ref name=\"auto\">{{Cite web|url=https://github.com/dotnet/roslyn|title=The Roslyn .NET compiler provides C# and Visual Basic languages with rich code analysis APIs.: dotnet/roslyn|date=November 13, 2019|via=GitHub}}</ref><br/>\n[[.NET Core|.NET Core CLR]]: [[MIT License|MIT/X11]]<ref>{{Cite web|url=https://github.com/dotnet/coreclr|title=CoreCLR is the runtime for .NET Core. It includes the garbage collector, JIT compiler, primitive data types and low-level classes.: dotnet/coreclr|date=November 13, 2019|via=GitHub}}</ref>\n\n[[Mono (software)|Mono]] compiler: dual [[GPLv3]] and MIT/X11<br/>\n[[DotGNU]]: dual [[GPL]] and [[LGPL]]\n| file_ext = <code>.cs</code>\n| website = {{URL|http://csharp.net}}\n| wikibooks = C Sharp Programming\n| versions = See [[#Versions|\u00a7 Versions]]\n}}\n\n'''C#''' (pronounced ''see sharp'', like the musical note [[C\u266f (musical note)|C\u266f]], but written with the [[number sign]]){{efn|By convention, a [[number sign]] is used for the second character in normal text; in artistic representations, sometimes a true [[\u266f|sharp sign]] is used: C\u266f. However the ECMA 334 standard states: ''\"The name C# is written as the LATIN CAPITAL LETTER C (U+0043) followed by the NUMBER SIGN # (U+0023).\"''}} is a general-purpose, [[multi-paradigm programming language]] encompassing [[strong typing]], [[lexically scoped]], [[Imperative programming|imperative]], [[Declarative programming|declarative]]<!--e.g. attributes-->, [[Functional programming|functional]], [[Generic programming|generic]], [[Object-oriented programming|object-oriented]] ([[Class (computer science)|class]]-based), and [[Component-based software engineering|component-oriented]] programming disciplines.<ref name=\"ECMA-334\" /> It was developed around 2000 by [[Microsoft]] as part of its [[.NET Framework|.NET]] initiative, and later approved as an [[international standard]] by [[Ecma International|Ecma]] (ECMA-334) and [[International Organization for Standardization|ISO]] (ISO/IEC 23270:2018). [[Mono (software)|Mono]] is the name of the free and open-source project to develop a compiler and runtime for the language. C# is one of the programming languages designed for the [[Common Language Infrastructure]] (CLI).\n\nC# was designed by [[Anders Hejlsberg]], and its development team is currently led by [[Mads Torgersen]]. The most recent version is 8.0, which was released in 2019 alongside [[Visual Studio 2019]] version 16.3.<ref name=\"new_features_in_8\">{{Cite web|url=https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes?view=vs-2019#16.3.0|title=Visual Studio 2019 version 16.3 Release Notes|last=|first=|date=|website=Microsoft Docs}}</ref>\n\n==Design goals==\nThe Ecma standard lists these design goals for C#:<ref name=\"ECMA-334\">{{cite book\n |url= https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-334.pdf\n |title= C# Language Specification\n |publisher= [[Ecma International]]\n |edition= 4th\n |date=June 2006\n |accessdate= January 26, 2012\n}}</ref>\n\n* The language is intended to be a simple, modern, general-purpose, [[object-oriented programming]] language.\n* The language, and implementations thereof, should provide support for software engineering principles such as [[strong type]] checking, array [[bounds checking]], detection of attempts to use [[uninitialized variable]]s, and automatic [[Garbage collection (computer science)|garbage collection]]. Software robustness, durability, and programmer productivity are important.\n* The language is intended for use in developing [[software components]] suitable for deployment in distributed environments.\n* Portability is very important for source code and programmers, especially those already familiar with [[C (programming language)|C]] and [[C++]].\n* Support for [[internationalization and localization|internationalization]] is very important.\n* C# is intended to be suitable for writing applications for both hosted and [[embedded system]]s, ranging from the very large that use sophisticated [[operating system]]s, down to the very small having dedicated functions.\n* Although C# applications are intended to be economical with regard to memory and [[processing power]] requirements, the language was not intended to compete directly on performance and size with C or assembly language\n\n==History==\nDuring the development of the .NET Framework, the [[Base Class Library|class libraries]] were originally written using a [[managed code]] compiler system called ''\"Simple Managed C\"'' (SMC).<ref>{{cite web\n |url= http://blogs.msdn.com/jasonz/archive/2007/11/23/couple-of-historical-facts.aspx\n |title= Couple of Historical Facts\n |first= Jason\n |last= Zander\n |date= November 24, 2008\n |accessdate= February 23, 2009\n}}</ref><ref>{{cite web\n |url= http://aspadvice.com/blogs/rbirkby/archive/2006/11/28/What-language-was-ASP.Net-originally-written-in_3F00_.aspx\n |archive-url= https://web.archive.org/web/20160624010356/http://aspadvice.com/blogs/rbirkby/archive/2006/11/28/What-language-was-ASP.Net-originally-written-in_3F00_.aspx\n |archive-date= June 24, 2016\n |title= What language was ASP.Net originally written in?\n |date= November 28, 2006\n |first= Scott\n |last= Guthrie\n |authorlink= Scott Guthrie\n |accessdate= February 21, 2008\n}}</ref> In January 1999, [[Anders Hejlsberg]] formed a team to build a new language at the time called Cool, which stood for \"[[C-like]] Object Oriented Language\".<ref name=\"computerworld2008\">{{cite magazine\n |url= http://www.computerworld.com.au/article/261958/-z_programming_languages_c\n |title= The A-Z of Programming Languages: C#\n |first= Naomi\n |last= Hamilton\n |magazine= [[Computerworld]]\n |date= October 1, 2008\n |accessdate= October 1, 2008\n}}</ref> Microsoft had considered keeping the name \"Cool\" as the final name of the language, but chose not to do so for trademark reasons. By the time the .NET project was publicly announced at the July 2000 [[Professional Developers Conference]], the language had been renamed C#, and the class libraries and [[ASP.NET]] runtime had been ported to C#.\n\nHejlsberg is C#'s principal designer and lead architect at Microsoft, and was previously involved with the design of [[Turbo Pascal]], [[Embarcadero Delphi]] (formerly CodeGear Delphi, Inprise Delphi and Borland Delphi), and [[Visual J++]]. In interviews and technical papers he has stated that flaws<ref>{{Cite web|url=http://nilsnaegele.com/techreview/Reviews/Details/1|title=Details|website=nilsnaegele.com|access-date=2019-04-07}}</ref> in most major programming languages (e.g. [[C++]], [[Java (programming language)|Java]], [[Embarcadero Delphi|Delphi]], and [[Smalltalk]]) drove the fundamentals of the [[Common Language Runtime]] (CLR), which, in turn, drove the design of the C# language itself.\n\n[[James Gosling]], who created the [[Java (programming language)|Java]] programming language in 1994, and [[Bill Joy]], a co-founder of [[Sun Microsystems]], the originator of Java, called C# an \"imitation\" of Java; Gosling further said that \"[C# is] sort of Java with reliability, productivity and security deleted.\"<ref name=\"gosling\">{{cite web\n |url=http://news.cnet.com/2100-1082-817522.html\n |title=Why Microsoft's C# isn't\n |author=Wylie Wong\n |publisher=CNET: CBS Interactive\n |year=2002\n |accessdate=May 28, 2014\n}}</ref><ref>{{cite web | url = http://news.cnet.com/2010-1071-831385.html | title = Microsoft's blind spot|author=Bill Joy | publisher = cnet.com| date = February 7, 2002| accessdate  = January 12, 2010| author-link = Bill Joy}}</ref> Klaus Kreft and Angelika Langer (authors of a C++ streams book) stated in a blog post that \"Java and C# are almost identical programming languages. Boring repetition that lacks innovation,\"<ref name=\"kreft-langer\">{{cite web\n |url=http://www.artima.com/weblogs/viewpost.jsp?thread=6543\n |title=After Java and C# - what is next?\n |author=Klaus Kreft and Angelika Langer\n |year=2003\n |accessdate=June 18, 2013\n}}</ref> \"Hardly anybody will claim that Java or C# are revolutionary programming languages that changed the way we write programs,\" and  \"C# borrowed a lot from Java - and vice versa. Now that C# supports [[Boxing (Computer Science)|boxing]] and unboxing, we'll have a very similar feature in Java.\"<ref>{{cite web\n |accessdate= January 12, 2010\n |date= July 3, 2003\n |publisher= artima.com\n |title= After Java and C# - what is next?|author= Klaus Kreft and Angelika Langer\n |url= http://www.artima.com/weblogs/viewpost.jsp?thread=6543\n}}</ref>\nIn July 2000, Hejlsberg said that C# is \"not a Java clone\" and is \"much closer to C++\" in its design.<ref name=\"JohnOsborn\">{{Cite journal\n |last= Osborn\n |first= John\n |date= August 1, 2000\n |url= http://windowsdevcenter.com/pub/a/oreilly/windows/news/hejlsberg_0800.html\n |title= Deep Inside C#: An Interview with Microsoft Chief Architect Anders Hejlsberg\n |publisher= O'Reilly Media\n |accessdate= November 14, 2009\n }}</ref>\n\nSince the release of C# 2.0 in November 2005, the C# and Java languages have evolved on increasingly divergent trajectories, becoming two quite different languages. One of the first major departures came with the addition of [[Generic programming|generics]] to both languages, with vastly different implementations. C# makes use of [[Reification (computer science)|reification]] to provide \"first-class\" generic objects that can be used like any other class, with [[code generation (compiler)|code generation]] performed at class-load time.<ref>{{cite web\n | url = http://msdn.microsoft.com/en-us/library/512aeb7t.aspx\n | title = Generics (C# Programming Guide)\n | publisher = Microsoft| accessdate  = March 21, 2011}}</ref>\nFurthermore, C# has added several major features to accommodate functional-style programming, culminating in the [[Language Integrated Query|LINQ]] extensions released with C# 3.0 and its supporting framework of [[lambda expressions]], [[extension method]]s, and [[anonymous type]]s.<ref>{{cite web\n | url = http://msdn.microsoft.com/en-us/library/bb308959.aspx\n | title = LINQ: .NET Language-Integrated Query|author=Don Box and Anders Hejlsberg\n | publisher = Microsoft\n | date = February 2007\n | accessdate  = March 21, 2011}}</ref>  These features enable C# programmers to use functional programming techniques, such as [[Closure (computer science)|closures]], when it is advantageous to their application. The LINQ extensions and the functional imports help developers reduce the amount of [[boilerplate code]] that is included in common tasks like querying a database, parsing an xml file, or searching through a data structure, shifting the emphasis onto the actual program logic to help improve readability and maintainability.<ref>{{cite web\n | url = http://blog.abodit.com/2010/04/why-functional-programming-is-better-linq-c-sharp-than-procedural-code/\n | title = Why functional programming and LINQ is often better than procedural code\n | last = Mercer\n | first = Ian\n | publisher = abodit.com\n | date = April 15, 2010\n | accessdate  = March 21, 2011}}</ref>\n\nC# used to have a [[mascot]] called Andy (named after Anders Hejlsberg). It was retired on January 29, 2004.<ref>{{cite web|url=http://blogs.msdn.com/b/danielfe/archive/2004/01/29/64429.aspx |title=Andy Retires |work=Dan Fernandez's Blog |publisher=Blogs.msdn.com |date=January 29, 2004 |accessdate=October 4, 2012}}</ref>\n\nC# was originally submitted to the ISO subcommittee JTC 1/SC 22 for review,<ref>{{cite web|url=http://www.iso.org/iso/iso_technical_committee.html?commid=45202 |title=Technical committees - JTC 1/SC 22 - Programming languages, their environments and system software interfaces |publisher=ISO |date= |accessdate=October 4, 2012}}</ref> under ISO/IEC 23270:2003,<ref>{{cite web|url=http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=36768 |title=ISO/IEC 23270:2003 - Information technology - C# Language Specification |publisher=Iso.org |date=August 23, 2006 |accessdate=October 4, 2012}}</ref> was withdrawn and was then approved under ISO/IEC 23270:2006.<ref>{{cite web|url=http://www.iso.org/iso/iso_catalogue/catalogue_ics/catalogue_detail_ics.htm?csnumber=42926 |title=ISO/IEC 23270:2006 - Information technology - Programming languages - C# |publisher=Iso.org |date=January 26, 2012 |accessdate=October 4, 2012}}</ref>\n\n===Name===\nMicrosoft first used the name C# in 1988 for a variant of the C language designed for incremental compilation.<ref>{{cite web|last1=Mariani|first1=Rico|title=My History of Visual Studio (Part 1) \u2013 Rico Mariani's Performance Tidbits|url=https://blogs.msdn.microsoft.com/ricom/2009/10/05/my-history-of-visual-studio-part-1/|website=Rico Mariani's Performance Tidbits}}</ref> That project was not completed but the name lives on.\n\n[[File:Treblecsharp5.svg|thumb|100px|right|[[C\u266f (musical note)|C-sharp musical note]]]]\nThe name \"C sharp\" was inspired by the musical notation where a [[Sharp (music)|sharp]] indicates that the written note should be made a [[semitone]] higher in [[Pitch (music)|pitch]].<ref>{{cite web\n |url= http://www.jameskovacs.com/blog/CNETHistoryLesson.aspx\n |title= C#/.NET History Lesson\n |first= James\n |last= Kovacs\n |date= September 7, 2007\n |accessdate= June 18, 2009\n}}</ref>\nThis is similar to the language name of [[C++]], where \"++\" indicates that a variable should be incremented by 1 after being evaluated. The sharp symbol also resembles a [[Typographic ligature|ligature]] of four \"+\" symbols (in a two-by-two grid), further implying that the language is an increment of C++.<ref>{{cite magazine\n|url=http://www.computerworld.com.au/article/261958/a-z_programming_languages_c_/?pp=2\n|title=The A-Z of Programming Languages: C#\n|first= Anders\n|last= Hejlsberg\n|magazine= [[Computerworld]]\n|date= October 1, 2008\n}}</ref>\n\nDue to technical limitations of display (standard fonts, browsers, etc.) and the fact that the sharp symbol ({{unichar|266F|MUSIC SHARP SIGN|html=|nlink=Sharp (music)}}) is not present on most [[keyboard layout]]s, the [[number sign]] ({{unichar|0023|NUMBER SIGN|html=}}) was chosen to approximate the sharp symbol in the written name of the programming language.<ref name=\"MS CSharp FAQ\">{{cite web\n |url=http://msdn.microsoft.com/vcsharp/previous/2002/FAQ/default.aspx \n |title=Microsoft C# FAQ \n |publisher=[[Microsoft]] \n |accessdate=March 25, 2008 \n |url-status=dead \n |archiveurl=https://web.archive.org/web/20060214002638/http://msdn.microsoft.com/vcsharp/previous/2002/FAQ/default.aspx \n |archivedate=February 14, 2006 \n |df=mdy \n}}</ref>\nThis convention is reflected in the ECMA-334 C# Language Specification.<ref name=\"ECMA-334\"/>\n\nThe \"sharp\" suffix has been used by a number of other .NET languages that are variants of existing languages, including [[J Sharp|J#]] (a .NET language also designed by Microsoft that is derived from Java 1.1), [[A Sharp (.NET)|A#]] (from [[Ada (programming language)|Ada]]), and the [[functional programming]] language [[F Sharp (programming language)|F#]].<ref name=\"MS FSharp FAQ\">{{cite web\n |url=http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/faq.aspx \n |title=F# FAQ \n |publisher=Microsoft Research \n |accessdate=June 18, 2009 \n |url-status=dead \n |archiveurl=https://web.archive.org/web/20090218222543/http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/faq.aspx \n |archivedate=February 18, 2009 \n |df=mdy \n}}</ref> The original implementation of [[EiffelStudio|Eiffel for .NET]] was called Eiffel#,<ref>{{cite web\n |url= http://msdn.microsoft.com/en-us/library/ms973898.aspx\n |title= Full Eiffel on the .NET Framework\n |date=June 2002\n |first1= Raphael\n |last1= Simon\n |first2= Emmanuel\n |last2= Stapf\n |first3= Bertrand\n |last3= Meyer\n |publisher= [[Microsoft]]\n |accessdate= June 18, 2009\n}}</ref> a name retired since the full [[Eiffel (programming language)|Eiffel]] language is now supported. The suffix has also been used for [[Library (computing)|libraries]], such as [[Gtk Sharp|Gtk#]] (a .NET [[Wrapper pattern|wrapper]] for [[GTK+]] and other [[GNOME]] libraries) and [[Cocoa Sharp|Cocoa#]] (a wrapper for [[Cocoa (API)|Cocoa]]).\n\n===Versions===\n{| class=\"wikitable\" style=\"margin:0 auto 0 auto;\"\n|-\n! rowspan=\"2\" | Version\n! colspan=\"3\" | Language specification\n! rowspan=\"2\" | Date\n! rowspan=\"2\" | [[.NET Framework|.NET Version]]\n! rowspan=\"2\" | [[Visual Studio]]\n|-\n! [[Ecma International|Ecma]]\n! [[ISO/IEC]]\n! [[Microsoft]]\n|-\n| Version C# 1.0\n| rowspan=\"2\"|[http://www.ecma-international.org/publications/files/ECMA-ST-WITHDRAWN/ECMA-334,%202nd%20edition,%20December%202002.pdf December 2002]\n| rowspan=\"2\"|[http://www.techstreet.com/cgi-bin/pdf/free/378672/ISO+IEC+23270-2003.pdf April 2003]\n| [http://download.microsoft.com/download/a/9/e/a9e229b9-fee5-4c3e-8476-917dee385062/CSharp%20Language%20Specification%20v1.0.doc January 2002]\n| January 2002\n| [[.NET Framework version history#.NET Framework 1.0|.NET Framework 1.0]]\n| [[Visual Studio .NET|Visual Studio .NET 2002]]\n|-\n| Version C# 1.1<br/>C# 1.2\n| [http://download.microsoft.com/download/5/e/5/5e58be0a-b02b-41ac-a4a3-7a22286214ff/csharp%20language%20specification%20v1.2.doc October 2003]\n| April 2003\n| [[.NET Framework 1.1]]\n| [[Visual Studio .NET 2003]]\n|-\n| [[C Sharp 2.0|Version C# 2.0]]\n| [https://web.archive.org/web/20121202194727/http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-334.pdf June 2006]\n| [http://standards.iso.org/ittf/PubliclyAvailableStandards/c042926_ISO_IEC_23270_2006(E).zip September 2006]\n| [http://download.microsoft.com/download/9/8/f/98fdf0c7-2bbd-40d3-9fd1-5a4159fa8044/csharp%202.0%20specification_sept_2005.doc September 2005]{{efn|The Microsoft C# 2.0 specification document only contains the new 2.0 features. For older features, use the 1.2 specification above.}}\n| November 2005\n| [[.NET Framework 2.0]]<br/>[[.NET Framework 3.0]]\n| [[Visual Studio 2005]]<br/>[[Visual Studio 2008]]\n|-\n| [[C Sharp 3.0|Version C# 3.0]]\n| colspan=\"2\" rowspan=\"2\" {{no|None}}\n| [http://download.microsoft.com/download/3/8/8/388e7205-bc10-4226-b2a8-75351c669b09/CSharp%20Language%20Specification.doc August 2007]\n| November 2007\n| .NET Framework 2.0 (Except LINQ)<ref name=\"danielmoth1\">{{cite web|url=http://www.danielmoth.com/Blog/using-c-30-from-net-20.aspx |title=Using C# 3.0 from .NET 2.0 |publisher=Danielmoth.com |date=May 13, 2007 |accessdate=October 4, 2012}}</ref><br/>\n.NET Framework 3.0 (Except LINQ)<ref name=\"danielmoth1\"/><br/>\n[[.NET Framework 3.5]]\n| [[Visual Studio 2008]]\n|-\n| [[C Sharp 4.0|Version C# 4.0]]\n| April 2010\n| April 2010\n| [[.NET Framework 4.0|.NET Framework 4]]\n| [[Visual Studio 2010]]\n|-\n| Version C# 5.0\n| [https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-334.pdf December 2017]\n| [https://standards.iso.org/ittf/PubliclyAvailableStandards/c075178_ISO_IEC_23270_2018.zip December 2018]\n| [https://www.microsoft.com/en-us/download/details.aspx?id=7029 June 2013]\n| August 2012\n| [[.NET Framework 4.5]]\n| [[Visual Studio 2012]]<br/>[[Visual Studio 2013]]\n|-\n| Version C# 6.0\n| colspan=\"2\" rowspan=\"6\" {{no|None}}\n| [https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/ Draft]\n| July 2015\n| [[.NET Framework 4.6]]<br/>.NET Core 1.0<br/>.NET Core 1.1\n| [[Visual Studio 2015]]\n|-\n| Version C# 7.0\n| [https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-7.0/ Specification proposal]\n| March 2017\n| [[.NET Framework 4.7]]\n| [[Visual Studio 2017]] version 15.0\n|-\n| Version C# 7.1\n| [https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-7.1/ Specification proposal]\n| August 2017\n| .NET Core 2.0\n| [[Visual Studio 2017]] version 15.3<ref>{{Cite web|url=https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2017-relnotes-v15.3|title=Visual Studio 2017 15.3 Release Notes|website=docs.microsoft.com}}</ref>\n|-\n| Version C# 7.2\n| [https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-7.2/ Specification proposal]\n| November 2017\n| \n| [[Visual Studio 2017]] version 15.5<ref name=\"visualstudio.com\">{{Cite web|url=https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2017-relnotes|title=Visual Studio 2017 15.9 Release Notes|website=docs.microsoft.com}}</ref>\n|-\n| Version C# 7.3\n| [https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-7.3/ Specification proposal]\n| May 2018\n| .NET Core 2.1<br/>.NET Core 2.2<br/>[[.NET Framework 4.8]]\n| [[Visual Studio 2017]] version 15.7<ref name=\"visualstudio.com\"/>\n|-\n| Version C# 8\n| [https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-8.0/ Specification proposal]\n| September 2019\n| .NET Core 3.0\n| [[Visual Studio 2019]] version 16.3<ref name=\"visualstudio.com\"/>\n|}\n\n===New features===\n;C# 2.0\n{{colbegin}}\n* Generics<ref name=\"csv2_msdn\">{{cite web|title=What's new in the C# 2.0 Language and Compiler|url=http://msdn.microsoft.com/en-us/library/7cz8t42e(v=vs.80).aspx|website=Microsoft Developer Network|publisher=Microsoft|accessdate=11 June 2014}}</ref>\n* Partial types<ref name=\"csv2_msdn\" />\n* [[Anonymous method]]s<ref name=\"csv2_msdn\" />\n* Iterators<ref name=\"csv2_msdn\" />\n* Nullable value types<ref name=\"csv2_msdn\" />\n* Getter/setter separate accessibility<ref name=\"csv2_msdn\" />\n* Method group conversions (delegates)<ref name=\"csv2_msdn\" />\n* Co- and Contra-variance for delegates<ref name=\"csv2_msdn\" />\n* Static classes<ref name=\"csv2_msdn\" />\n* Delegate inference<ref name=\"csv2_msdn\" />\n* [[Null coalescing operator]]<ref name=\"csv2_msdn\" />\n{{colend}}\n\n;C# 3.0\n{{colbegin}}\n* Implicitly typed local variables<ref name=\"csv3_msdn\">{{cite web|last1=Hejlsberg|first1=Anders|last2=Torgersen|first2=Mads|title=Overview of C# 3.0|url=http://msdn.microsoft.com/en-us/library/bb308966.aspx|website=Microsoft Developer Network|publisher=Microsoft|accessdate=11 June 2014}}</ref>\n* Object and collection initializers<ref name=\"csv3_msdn\" />\n* Auto-Implemented properties<ref name=\"csv3_msdn\" />\n* Anonymous types<ref name=\"csv3_msdn\" />\n* [[Extension method]]s<ref name=\"csv3_msdn\" />\n* Query expressions<ref name=\"csv3_msdn\" />\n* [[Anonymous function|Lambda expressions]]<ref name=\"csv3_msdn\" />\n* Expression trees<ref name=\"csv3_msdn\" />\n* Partial methods<ref name=csv3_partmeths>{{cite web|last1=Ghosh|first1=Wriju|title=C# 3.0 : Partial * Garbage Collection Methods|url=http://blogs.msdn.com/b/wriju/archive/2007/12/13/c-3-0-partial-methods.aspx|website=MSDN Blogs|publisher=Microsoft|accessdate=11 June 2014}}</ref>\n{{colend}}\n\n;C# 4.0\n{{colbegin}}\n* Dynamic binding<ref name=\"csv4_msdn\">{{cite web|last1=Burrows|first1=Chris|title=C# 4.0 - New C# Features in the .NET Framework 4|url=http://msdn.microsoft.com/en-us/magazine/ff796223.aspx|website=Microsoft Developer Network|publisher=Microsoft|accessdate=11 June 2014}}</ref>\n* Named and optional arguments<ref name=\"csv4_msdn\" />\n* Generic co- and contravariance<ref name=\"csv4_msdn\" />\n* Embedded interop types (\"NoPIA\")<ref name=\"csv4_msdn\" />\n{{colend}}\n\n;C# 5.0<ref>{{cite web|last=Hejlsberg|first=Anders|title=Future directions for C# and Visual Basic|url=http://channel9.msdn.com/Events/BUILD/BUILD2011/TOOL-816T|work=C# lead architect|publisher=Microsoft|accessdate=September 21, 2011}}</ref>\n{{colbegin}}\n* [[Async/await|Asynchronous methods]]<ref name=\"csv5_msdn\">{{cite web|title=An Introduction to New Features in C# 5.0|url=http://blogs.msdn.com/b/mvpawardprogram/archive/2012/03/26/introduction-of-new-features-in-c-5-0.aspx|website=MSDN Blogs|publisher=Microsoft|accessdate=11 June 2014}}</ref>\n* Caller info attributes<ref name=\"csv5_msdn\" />\n{{colend}}\n\n;C# 6.0\n{{colbegin}}\n* Compiler-as-a-service ([[Microsoft Roslyn|Roslyn]])\n* Import of static type members into namespace<ref name=\"roslyn_6\">{{cite web|title=Language feature implementation status|url=https://github.com/dotnet/roslyn/wiki/Languages-features-in-C%23-6-and-VB-14|website=github|publisher=Microsoft|accessdate=13 February 2015}}</ref>\n* Exception filters<ref name=\"roslyn_6\" />\n* Await in catch/finally blocks<ref name=\"roslyn_6\" />\n* Auto property initializers<ref name=\"roslyn_6\" />\n* Default values for getter-only properties<ref name=\"roslyn_6\" />\n* Expression-bodied members<ref name=\"roslyn_6\" />\n* Null propagator ([[Safe navigation operator|null-conditional operator]], succinct null checking)<ref name=\"roslyn_6\" />\n* String interpolation<ref name=\"roslyn_6\" />\n* nameof operator<ref name=\"roslyn_6\" />\n* Dictionary initializer<ref name=\"roslyn_6\" />\n{{colend}}\n\n;C# 7.0<ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7|title=What's new in C# 7|last=|first=|date=2016-12-21|website=Microsoft Docs|access-date=}}</ref><ref name=\"new_features_in_7\">{{Cite web|title = New Features in C# 7.0|url = https://blogs.msdn.microsoft.com/dotnet/2017/03/09/new-features-in-c-7-0/|website = .NET Blog|access-date = 2017-06-09}}</ref>\n{{colbegin}}\n* Inline out variable declaration\n* [[Pattern matching]]\n* Tuple types and tuple literals\n* Deconstruction\n* [[Local function]]s\n* Digit separators\n* Binary literals\n* Ref returns and locals\n* Generalized async return types\n* Expression bodied constructors and finalizers\n* Expression bodied getters and setters\n* Throw can also be used as expression\n{{colend}}\n\n;C# 7.1<ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7-1|title=What's new in C# 7.1|last=|first=|date=|website=Microsoft Docs|access-date=2017-10-09}}</ref>\n{{colbegin}}\n* Async main\n* Default literal expressions\n* Inferred tuple element names\n{{colend}}\n\n;C# 7.2<ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7-2|title=What's new in C# 7.2|last=|first=|date=|website=Microsoft Docs|access-date=2017-11-26}}</ref>\n{{colbegin}}\n* Reference semantics with value types\n* Non-trailing named arguments\n* Leading underscores in numeric literals\n* private protected access modifier\n{{colend}}\n\n;C# 7.3<ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7-3|title=What's new in C# 7.3|last=|first=|date=|website=Microsoft Docs|access-date=2018-06-23}}</ref>\n{{colbegin}}\n* Accessing fixed fields without pinning\n* Reassigning ref local variables\n* Using initializers on stackalloc arrays\n* Using fixed statements with any type that supports a pattern\n* Using additional generic constraints\n{{colend}}\n\n;C# 8.0<ref name=\"C#8\">{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8|title=What's new in C# 8.0|last=|first=|date=|website=Microsoft Docs}}</ref>\n{{colbegin}}\n* {{code|readonly struct}} members\n* Default interface members\n* {{code|switch}} expressions\n* Property, Tuple, and positional patterns\n* {{code|using}} declarations\n* {{code|static}} local functions\n* Disposable {{code|ref struct}}\n* Nullable reference types\n* Indices and Ranges\n* Null-coalescing assignment\n* Async Streams\n{{colend}}\n\n==Syntax==\n{{Main|C Sharp syntax}}\n{{See also|Syntax (programming languages)}}\nThe core syntax of C# language is similar to that of other C-style languages such as C, C++ and Java. In particular:\n\n* Semicolons are used to denote the end of a statement.\n* [[Curly brackets]] are used to group statements. Statements are commonly grouped into methods (functions), methods into classes, and classes into [[namespaces]].\n* Variables are assigned using an [[equals sign]], but compared using [[==|two consecutive equals signs]].\n* [[Square brackets]] are used with [[Array data structure|arrays]], both to declare them and to get a value at a given index in one of them.\n\n==Distinguishing features==\n{{See also|Comparison of C Sharp and Java}}\nSome notable features of C# that distinguish it from C, C++, and Java where noted, are:\n\n===Portability===\nBy design, C# is the programming language that most directly reflects the underlying [[Common Language Infrastructure]]&nbsp;(CLI).<ref>{{cite book|title=Visual Studio 2010 and .NET 4 Six-in-One|year=2010|publisher=Wrox Press|isbn=978-0470499481}}</ref>  Most of its intrinsic types correspond to value-types implemented by the CLI framework. However, the language specification does not state the code generation requirements of the compiler: that is, it does not state that a C# compiler must target a Common Language Runtime, or generate [[Common Intermediate Language]] (CIL), or generate any other specific format. Theoretically, a C# compiler could generate machine code like traditional compilers of C++ or [[Fortran]].\n\n===Typing===\nC# supports strongly typed implicit variable declarations with the keyword <code>var</code>, and implicitly typed arrays with the keyword <code>new[]</code> followed by a collection initializer.\n\nC# supports a strict [[Boolean data type]], <code>bool</code>. Statements that take conditions, such as <code>while</code> and <code>if</code>, require an expression of a type that implements the <code>true</code> operator, such as the Boolean type. While C++ also has a Boolean type, it can be freely converted to and from integers, and expressions such as <code>if (a)</code> require only that <code>a</code> is convertible to bool, allowing <code>a</code> to be an int, or a pointer. C# disallows this \"integer meaning true or false\" approach, on the grounds that forcing programmers to use expressions that return exactly <code>bool</code> can prevent certain types of programming mistakes such as <code>if (a = b)</code> (use of assignment <code>=</code> instead of equality <code>==</code>).\n\nC# is more [[Type safety|type safe]] than C++. The only [[implicit conversion]]s by default are those that are considered safe, such as widening of integers. This is enforced at compile-time, during [[Just-in-time compilation|JIT]], and, in some cases, at runtime. No implicit conversions occur between Booleans and integers, nor between enumeration members and integers (except for literal 0, which can be implicitly converted to any enumerated type). Any user-defined conversion must be explicitly marked as explicit or implicit, unlike C++ [[copy constructor]]s and conversion operators, which are both implicit by default.\n\nC# has explicit support for [[Covariance and contravariance (computer science)|covariance and contravariance]] in generic types, unlike C++ which has some degree of support for contravariance simply through the semantics of return types on virtual methods.\n\n[[enumerated type|Enumeration]] members are placed in their own [[Scope (programming)|scope]].\n\nThe C# language does not allow for global variables or functions. All methods and members must be declared within classes. Static members of public classes can substitute for global variables and functions.\n\nLocal variables cannot [[Variable shadowing|shadow]] variables of the enclosing block, unlike C and C++.\n<!--NOTE TO EDITORS: Classes do NOT *NEED* to go in a Namespace. Check the spec or try it out yourself before stating otherwise.-->\n\n===Metaprogramming===\n[[Metaprogramming]] via C# attributes is part of the language. Many of these attributes duplicate the functionality of GCC's and VisualC++'s platform-dependent preprocessor directives.\n\n===Methods and functions===\nA method in C# is a member of a class that can be invoked as a function (a sequence of instructions), rather than the mere value-holding capability of a class property. As in other syntactically similar languages, such as C++ and [[ANSI C]], the signature of a method is a declaration comprising in order: any optional scope modifier keywords (such as <code>private</code>), the explicit specification of its return type (such as <code>int</code>, or the keyword <code>void</code> if no value is returned), the name of the method, and finally, a parenthesized sequence of comma-separated parameter specifications, each consisting of a parameter's type, its formal name and optionally, a default value to be used whenever none is provided. Certain specific kinds of methods, such as those that simply get or set a class property by return value or assignment, do not require a full signature, but in the general case, the definition of a class includes the full signature declaration of its methods.\n\nLike C++, and unlike Java, C# programmers must use the scope modifier keyword <code>virtual</code> to allow methods to be overridden by subclasses.<ref>{{cite web|title=virtual (C# Reference)|url=https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/virtual|website=docs.microsoft.com|language=en-us}}</ref>\n\n''Extension methods'' in C# allow programmers to use static methods as if they were methods from a class's method table, allowing programmers to add methods to an object that they feel should exist on that object and its derivatives.\n\nThe type <code>dynamic</code> allows for run-time method binding, allowing for JavaScript-like method calls and run-time object composition.\n\nC# has support for strongly-typed function pointers via the keyword <code>delegate</code>. Like the Qt framework's pseudo-C++ ''signal'' and ''slot'', C# has semantics specifically surrounding publish-subscribe style events, though C# uses delegates to do so.\n\nC# offers Java-like <code>synchronized</code> method calls, via the attribute <code>[MethodImpl(MethodImplOptions.Synchronized)]</code>, and has support for [[Mutual exclusion|mutually-exclusive locks]] via the keyword <code>lock</code>.\n\n===Property===\nC# provides [[property (programming)|properties]] as [[syntactic sugar]] for a common pattern in which a pair of methods, [[Mutator method|accessor (getter) and mutator (setter)]] encapsulate operations on a single [[Attribute (computing)|attribute]] of a class. No redundant method signatures{{Definition needed|The term signature/signatures are used in several places, and without any definition or explanation it is difficult to understand the concepts explained unless you have prior detailed knowledge of how C# define the concept \"Signature\"|date=May 2019}} for the getter/setter implementations need be written, and the property may be accessed using attribute syntax rather than more verbose method calls.\n\n===Namespace===\nA C# <code>namespace</code> provides the same level of code isolation as a Java <code>package</code> or a C++ {{C++|namespace}}, with very similar rules and features to a <code>package</code>. Namespaces can be imported with the \"using\" syntax.<ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/using-directive|title=using directive - C# Reference|last=|first=|date=|website=Microsoft Docs|language=en-us|access-date=2019-04-14}}</ref>\n\n===Memory access===\nIn C#, memory address pointers can only be used within blocks specifically marked as ''unsafe'', and programs with unsafe code need appropriate permissions to run. Most object access is done through safe object references, which always either point to a \"live\" object or have the well-defined [[Nullable type|null]] value; it is impossible to obtain a reference to a \"dead\" object (one that has been garbage collected), or to a random block of memory. An unsafe pointer can point to an instance of an 'unmanaged' value type that does not contain any references to garbage-collected objects, array, string, or a block of stack-allocated memory. Code that is not marked as unsafe can still store and manipulate pointers through the <code>System.IntPtr</code> type, but it cannot dereference them.\n\nManaged memory cannot be explicitly freed; instead, it is automatically garbage collected. Garbage collection addresses the problem of [[memory leak]]s by freeing the programmer of responsibility for releasing memory that is no longer needed.\n\n===Exception===\n[[Checked exceptions]] are not present in C# (in contrast to Java). This has been a conscious decision based on the issues of scalability and versionability.<ref>{{cite web\n| url = http://www.artima.com/intv/handcuffs.html\n| title = The Trouble with Checked Exceptions\n| first1=Bill\n| last1=Venners\n| first2=Bruce\n| last2=Eckel\n| date = August 18, 2003\n| accessdate = March 30, 2010\n}}</ref>\n\n===Polymorphism===\nUnlike [[C++]], C# does not support [[multiple inheritance]], although a class can implement any number of [[Protocol (object-oriented programming)|interfaces]]. This was a design decision by the language's lead architect to avoid complication and simplify architectural requirements throughout CLI. When implementing multiple interfaces that contain a method with the same signature, i. e. two methods with the same name and taking parameters of the same type in the same order, C# allows implementing each method depending on which interface that method is being called through or, like Java, allows implementing the method once, and having that be the one invocation on a call through any of the class's interfaces.\n\nHowever, unlike [[Java (programming language)|Java]], C# supports [[operator overloading]]. Only the most commonly overloaded operators in C++ may be overloaded in C#.\n\n===Language Integrated Query (LINQ)===\nC# has the ability to utilize [[Language Integrated Query|LINQ]] through the .NET Framework. A developer can query any <code>IEnumerable&lt;T&gt;</code> object, XML documents, an ADO.NET dataset, and a SQL database.<ref>X. D. Zhang et al., \"Research of the Database Access Technology Under.NET Framework\", Applied Mechanics and Materials, Vols. 644-650, pp. 3077-3080, 2014</ref> Using LINQ in C# brings advantages like [[Intelligent code completion|Intellisense]] support, strong filtering capabilities, type safety with compile error checking ability, and consistency for querying data over a variety of sources.<ref>Otey, M. (2006, 02). LINQ to the future. SQL Server Magazine, 8, 17-21. Retrieved from https://search.proquest.com/docview/214859896</ref>  There are several different language structures that can be utilized with C# with LINQ and they are query expressions, lambda expressions, anonymous types, implicitly typed variables, extension methods, and object initializers.<ref>Sheldon, W. (2010, 11). New features in LINQ. SQL Server Magazine, 12, 37-40. Retrieved from https://search.proquest.com/docview/770609095</ref>\n\n===Functional programming===\nThough primarily an imperative language, C# 2.0 offered limited support for functional programming through [[first-class functions]] and closures in the form of anonymous delegates. C# 3.0 expanded support for functional programming with the introduction of a lightweight syntax for lambda expressions, extension methods (an affordance for modules), and a [[list comprehension]] syntax in the form of a \"query comprehension\" language. C# 7.0 adds features typically found in functional languages like tuples and pattern matching.<ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7|title=What's New in C# 7.0|last=|first=|date=|website=Microsoft Docs|language=en-us|access-date=2019-04-14}}</ref>\n\n==Common type system==\nC# has a ''unified type system''. This unified type system is called [[Common Type System]] (CTS).<ref name=\"insidecsharpp2ch4\">{{cite book| last = Archer| first = Tom| title = Inside C#| year = 2001| publisher = Microsoft Press|location=Redmond, Washington|isbn=0-7356-1288-9|chapter=Part 2, Chapter 4: The Type System}}</ref>\n\nA unified type system implies that all types, including primitives such as integers, are subclasses of the {{C sharp|System.Object}} class. For example, every type inherits a {{C sharp|ToString()}} method.\n\n===Categories of data types===\nCTS separates data types into two categories:<ref name=\"insidecsharpp2ch4\" />\n\n#  Reference types\n#  Value types\n\nInstances of value types do not have referential identity nor referential comparison semantics - equality and inequality comparisons for value types compare the actual data values within the instances, unless the corresponding operators are overloaded. Value types are derived from {{C sharp|System.ValueType}}, always have a default value, and can always be created and copied. Some other limitations on value types are that they cannot derive from each other (but can implement interfaces) and cannot have an explicit default (parameterless) constructor. Examples of value types are all primitive types, such as {{C sharp|int}} (a signed 32-bit integer), {{C sharp|float}} (a 32-bit IEEE floating-point number), {{C sharp|char}} (a 16-bit Unicode code unit), and {{C sharp|System.DateTime}} (identifies a specific point in time with nanosecond precision). Other examples are {{C sharp|enum}} (enumerations) and {{C sharp|struct}} (user defined structures).\n\nIn contrast, reference types have the notion of referential identity - each instance of a reference type is inherently distinct from every other instance, even if the data within both instances is the same. This is reflected in default equality and inequality comparisons for reference types, which test for referential rather than structural equality, unless the corresponding operators are overloaded (such as the case for {{C sharp|System.String}}). In general, it is not always possible to create an instance of a reference type, nor to copy an existing instance, or perform a value comparison on two existing instances, though specific reference types can provide such services by exposing a public constructor or implementing a corresponding interface (such as {{C sharp|ICloneable}} or {{C sharp|IComparable}}). Examples of reference types are {{C sharp|object}} (the ultimate base class for all other C# classes), {{C sharp|System.String}} (a string of Unicode characters), and {{C sharp|System.Array}} (a base class for all C# arrays).\n\nBoth type categories are extensible with user-defined types.\n\n===Boxing and unboxing===\n''Boxing'' is the operation of converting a value-type object into a value of a corresponding reference type.<ref name=\"insidecsharpp2ch4\" /> Boxing in C# is implicit.\n\n''Unboxing'' is the operation of converting a value of a reference type (previously boxed) into a value of a value type.<ref name=\"insidecsharpp2ch4\" /> Unboxing in C# requires an explicit [[Type conversion|type cast]]. A boxed object of type T can only be unboxed to a T (or a nullable T).<ref>{{cite web|last=Lippert |first=Eric |url=http://blogs.msdn.com/b/ericlippert/archive/2009/03/19/representation-and-identity.aspx |title=Representation and Identity |work=Fabulous Adventures In Coding |publisher=Blogs.msdn.com |date=March 19, 2009 |accessdate=October 4, 2012}}</ref>\n\nExample:\n<syntaxhighlight lang=CSharp>\nint foo = 42;         // Value type.\nobject bar = foo;     // foo is boxed to bar.\nint foo2 = (int)bar;  // Unboxed back to value type.\n</syntaxhighlight>\n\n==Libraries==\nThe C# specification details a minimum set of types and class libraries that the compiler expects to have available. In practice, C# is most often used with some implementation of the [[Common Language Infrastructure]] (CLI), which is standardized as ECMA-335 ''Common Language Infrastructure (CLI)''.\n\nIn addition to the standard CLI specifications, there are many commercial and community class libraries that build on top of the .NET framework libraries to provide additional functionality.<ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/standard/framework-libraries|title=Framework Libraries|website=docs.microsoft.com}}</ref>\n\n==Examples==\nThe following is a very simple C# program, a version of the classic \"[[Hello world]]\" example:\n\n<syntaxhighlight lang=\"csharp\">\nusing System;\n\nclass Program\n{\n    public static void Main(string[] args)\n    {\n        Console.WriteLine(\"Hello, world!\");\n    }\n}\n</syntaxhighlight>\n\nThis code will display this text in the console window:\n\n Hello, world!\n\nEach line has a purpose:\n\n<syntaxhighlight lang=CSharp>\nusing System;\n</syntaxhighlight>\n\nThe above line imports all types in the <code>System</code> namespace. For example, the <code>Console</code> class used later in the source code is defined in the <code>System</code> namespace, meaning it can be used without supplying the full name of the type (which includes the namespace).\n\n<syntaxhighlight lang=CSharp>\nclass Program\n</syntaxhighlight>\n\nAbove is a [[Class (computer science)|class]] definition. Everything between the following pair of braces describes {{C sharp|Program}}.\n\n<syntaxhighlight lang=CSharp>\nstatic void Main()\n</syntaxhighlight>\n\nThis declares the class member method where the program begins execution. The .NET runtime calls the {{C sharp|Main}} method. (Note: {{C sharp|Main}} may also be called from elsewhere, like any other method, e.g. from another method of {{C sharp|Program}}.) The [[Method (computer programming)#Static methods|static keyword]] makes the method accessible without an instance of {{C sharp|Program}}. Each console application's {{C sharp|Main}} entry point must be declared {{C sharp|static}}. Otherwise, the program would require an instance, but any instance would require a program. To avoid that irresolvable [[circular dependency]], C# compilers processing [[console application]]s (like that above) report an error if there is no {{C sharp|static Main}} method. The {{C sharp|void}} keyword declares that {{C sharp|Main}} has no [[return value]].\n\n<syntaxhighlight lang=CSharp>\nConsole.WriteLine(\"Hello, world!\");\n</syntaxhighlight>\n\nThis line writes the output. {{C sharp|Console}} is a static class in the {{C sharp|System}} namespace. It provides an interface to the standard input, output, and error streams for console applications. The program calls the {{C sharp|Console}} method {{C sharp|WriteLine}}, which displays on the console a line with the argument, the string {{C sharp|\"Hello, world!\"}}.\n\nA [[GUI]] example:\n\n<syntaxhighlight lang=\"CSharp\">\nusing System;\nusing System.Windows.Forms;\n\nclass Program\n{\n    static void Main()\n    {\n        MessageBox.Show(\"Hello, World!\");\n        Console.WriteLine(\"Is almost the same argument!\");\n    }\n}\n</syntaxhighlight>\n\nThis example is similar to the previous example, except that it generates a [[dialog box]] that contains the message \"Hello, World!\" instead of writing it to the console.\n\nAnother useful library is the <code>System.Drawing</code> library, which is used to programmatically draw images. For example:<syntaxhighlight lang=\"c#\">\nusing System;\nusing System.Drawing;\n\npublic class Example\n{\n    public static Image img;\n\n    public static void Main()\n    {\n        img = Image.FromFile(\"Image.png\");\n    }\n}\n</syntaxhighlight>This will create an image that is identical to that stored in \"Image.png\".\n\n==Standardization and licensing==\nIn August 2001, Microsoft Corporation, Hewlett-Packard and Intel Corporation co-sponsored the submission of specifications for C# as well as the [[Common Language Infrastructure|Common Language Infrastructure (CLI)]] to the standards organization [[Ecma International]].\nIn December 2001, ECMA released ECMA-334 ''C# Language Specification''. C# became an [[International Organization for Standardization|ISO]] standard in 2003 (ISO/IEC 23270:2003 - ''Information technology \u2014 Programming languages \u2014 C#''). ECMA had previously adopted equivalent specifications as the 2nd edition of C#, in December 2002.\n\nIn June 2005, ECMA approved edition 3 of the C# specification, and updated ECMA-334. Additions included partial classes, anonymous methods, nullable types, and [[Generic programming|generics]] (somewhat similar to C++ [[template (programming)|templates]]).\n\nIn July 2005, ECMA submitted to ISO/IEC JTC 1, via the latter's Fast-Track process, the standards and related TRs. This process usually takes 6\u20139 months.\n\nThe C# language definition and the [[Common Language Infrastructure|CLI]] are standardized under [[International Organization for Standardization|ISO]] and [[Ecma]] standards that provide [[Reasonable and Non Discriminatory Licensing|reasonable and non-discriminatory licensing]] protection from patent claims.\n\nMicrosoft has agreed not to sue open source developers for violating patents in non-profit projects for the part of the framework that is covered by the OSP.<ref>{{cite web| url = https://msdn.microsoft.com/en-us/openspecifications/dn646765| title = Patent Pledge for Open Source Developers}}</ref> Microsoft has also agreed not to enforce patents relating to [[Novell]] products against Novell's paying customers<ref>{{cite web\n |url          = http://www.microsoft.com/interop/msnovellcollab/patent_agreement.mspx\n |title        = Patent Cooperation Agreement - Microsoft & Novell Interoperability Collaboration\n |date         = November 2, 2006\n |publisher    = [[Microsoft]]\n |accessdate   = July 5, 2009\n |quote        = Microsoft, on behalf of itself and its Subsidiaries (collectively \"Microsoft\"), hereby covenants not to sue Novell's Customers and Novell's Subsidiaries' Customers for infringement under Covered Patents of Microsoft on account of such a Customer's use of specific copies of a Covered Product as distributed by Novell or its Subsidiaries (collectively \"Novell\") for which Novell has received Revenue (directly or indirectly) for such specific copies; provided the foregoing covenant is limited to use by such Customer (i) of such specific copies that are authorized by Novell in consideration for such Revenue, and (ii) within the scope authorized by Novell in consideration for such Revenue.\n |archive-url  = https://web.archive.org/web/20090517140252/http://www.microsoft.com/interop/msnovellcollab/patent_agreement.mspx\n |archive-date = May 17, 2009\n |url-status=dead\n |df           = mdy-all\n}}</ref> with the exception of a list of products that do not explicitly mention C#, .NET or Novell's implementation of .NET ([[Mono (software)|The Mono Project]]).<ref>{{cite web\n | url = http://www.microsoft.com/interop/msnovellcollab/definitions2.aspx\n | title = Definitions\n | date = November 2, 2006\n | publisher = [[Microsoft]]\n | accessdate  = July 5, 2009\n}}</ref> However, Novell maintains that Mono does not infringe any Microsoft patents.<ref>{{cite web\n | url = http://www.novell.com/linux/microsoft/faq_opensource.html\n | title = Novell Answers Questions from the Community\n | first = Justin\n | last = Steinman\n | date = November 7, 2006\n | accessdate  = July 5, 2009\n | quote = We maintain that Mono does not infringe any Microsoft patents.\n}}</ref> Microsoft has also made a specific agreement not to enforce patent rights related to the [[Moonlight (runtime)|Moonlight browser plugin]], which depends on Mono, provided it is obtained through [[Novell]].<ref name=\"MsCovenant\">{{cite web\n |url          = http://www.microsoft.com/interop/msnovellcollab/moonlight.mspx\n |title        = Covenant to Downstream Recipients of Moonlight - Microsoft & Novell Interoperability Collaboration\n |publisher    = [[Microsoft]]\n |quote        = \"Downstream Recipient\" means an entity or individual that uses for its intended purpose a Moonlight Implementation obtained directly from Novell or through an Intermediate Recipient... Microsoft reserves the right to update (including discontinue) the foregoing covenant... \"Moonlight Implementation\" means only those specific portions of Moonlight 1.0 or Moonlight 1.1 that run only as a plug-in to a browser on a Personal Computer and are not licensed under GPLv3 or a Similar License.\n |date         = September 28, 2007\n |accessdate   = March 8, 2008\n |archive-url  = https://web.archive.org/web/20100923213336/http://www.microsoft.com/interop/msnovellcollab/moonlight.mspx\n |archive-date = September 23, 2010\n |url-status=dead\n |df           = mdy-all\n}}</ref>\n\n==Implementations==\nMicrosoft is leading the development of the [[Open-source software|open-source]] reference C# compiler and set of tools, previously codenamed \"[[Microsoft Roslyn|Roslyn]]\". The compiler, which is entirely written in [[managed code]] (C#), has been opened up and functionality surfaced as APIs. It is thus enabling developers to create refactoring and diagnostics tools.<ref name=\"auto\"/><ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/|title=C# Guide|website=docs.microsoft.com}}</ref>\n\nOther C# compilers (some of which include an implementation of the [[Common Language Infrastructure]] and .NET class libraries):\n* The [[Mono (software)|Mono]] project provides an open-source C# compiler, a complete open-source implementation of the Common Language Infrastructure including the required framework libraries as they appear in the ECMA specification, and a nearly complete implementation of the Microsoft proprietary .NET class libraries up to .NET 3.5. As of Mono 2.6, no plans exist to implement [[Windows Presentation Foundation|WPF]]; [[Windows Workflow Foundation|WF]] is planned for a later release; and there are only partial implementations of [[Language Integrated Query#LINQ to SQL|LINQ to SQL]] and [[Windows Communication Foundation|WCF]].<ref>{{cite web|url=http://www.mono-project.com/Compatibility |title=Compatibility - Mono |publisher=Mono-project.com |date=December 19, 2011 |accessdate=October 4, 2012}}</ref>\n* The [[DotGNU]] project (now discontinued) also provided an open-source C# compiler, a nearly complete implementation of the Common Language Infrastructure including the required framework libraries as they appear in the ECMA specification, and subset of some of the remaining Microsoft proprietary .NET class libraries up to .NET 2.0 (those not documented or included in the ECMA specification, but included in Microsoft's standard .NET Framework distribution).\n* Microsoft's [[Shared Source Common Language Infrastructure]], codenamed \"Rotor\", provides a [[shared source]] implementation of the CLR runtime and a C# compiler licensed for educational and research use only, and a subset of the required [[Common Language Infrastructure]] framework libraries in the ECMA specification (up to C# 2.0, and supported on Windows XP only).\n* [[Xamarin]] provides tools to develop cross-platform applications for common mobile and desktop operating systems, using C# as a codebase and compiling to native code.\n\nMono is a common choice for game engines due to its cross-platform nature. The [[Unity (game engine)|Unity game engine]] uses Mono C# as its primary scripting language. The [[Godot (game engine)|Godot game engine]] has implemented an optional Mono C# module thanks to a donation of $24,000 from Microsoft.<ref>{{cite news|title=Introducing C# in Godot |work=[[Godot (game engine)|Godot Engine]] |url=https://godotengine.org/article/introducing-csharp-godot |accessdate=October 26, 2018 |url-status=live |archiveurl=https://web.archive.org/web/20181026084022/https://godotengine.org/article/introducing-csharp-godot |archivedate=October 26, 2018 |df= |date=October 21, 2017|first1=Ignacio|last1=Etcheverry}}</ref>\n\n==See also==\n{{Col-begin}}\n{{Col-break}}\n;C# topics\n* [[C Sharp syntax|C# syntax]]\n* [[Comparison of C Sharp and Java|Comparison of C# and Java]]\n* [[Comparison of C Sharp and Visual Basic .NET|Comparison of C# and Visual Basic .NET]]\n* [[Standard Libraries (CLI)|.NET standard libraries]]\n\n{{Col-break}}\n{{Portal|Computer programming}}\n;IDEs\n* [[Microsoft Visual Studio]]\n* [[Microsoft Visual Studio Express]]\n* [[Visual Studio Code]]\n* [[MonoDevelop]]\n* [[Morfik]]\n* [[SharpDevelop]]\n* [[Turbo C Sharp|Turbo C#]]\n* [[JetBrains#Rider|Rider]]\n* [[Xamarin Studio]]\n{{col-end}}\n{{Clear}}\n\n==Notes==\n{{Notelist}}\n\n==References==\n{{Reflist|30em|refs=\n\n<ref name=\"dynamic\">{{cite web |url = http://code.msdn.microsoft.com/csharpfuture/Release/ProjectReleases.aspx?ReleaseId=1686 |title = New features in C# 4.0 |first = Mads |last = Torgersen |date = October 27, 2008 |publisher = [[Microsoft]] |accessdate  = October 28, 2008 }}</ref>\n\n<ref name=\"influenced by CPP\">{{cite journal |last = Naugler |first = David |date=May 2007 |title       = C# 2.0 for C++ and Java programmer: conference workshop |journal = Journal of Computing Sciences in Colleges |volume = 22 |issue = 5 |quote = Although C# has been strongly influenced by Java it has also been strongly influenced by C++ and is best viewed as a descendant of both C++ and Java.}}</ref>\n\n<ref name=\"influenced by op\">{{cite magazine |url = http://www.computerworld.com.au/article/261958/a-z_programming_languages_c_/?pp=7 |title = The A-Z of Programming Languages: C# |date = October 1, 2008 |magazine = [[Computerworld]] |first = Naomi |last = Hamilton |accessdate  = February 12, 2010 |quote = We all stand on the shoulders of giants here and every language builds on what went before it so we owe a lot to C, C++, Java, Delphi, all of these other things that came before us. ([[Anders Hejlsberg]]) }}</ref>\n\n<ref name=\"influenced\">{{cite web |url = http://www.barrycornelius.com/papers/java5/onefile/ |title = Java 5 catches up with C# |date = December 1, 2005 |publisher  = [[University of Oxford]] Computing Services |first = Barry |last = Cornelius |accessdate = June 18, 2014 |quote = In my opinion, it is C# that has caused these radical changes to the Java language. ([[Barry Cornelius]]) }}</ref>\n}}\n\n==Further reading==\n* {{cite book | title = C# Language Pocket Reference| url = https://archive.org/details/clanguagepocketr00pete| url-access = registration| first1=Peter | last1=Drayton | first2=Ben | last2=Albahari | first3=Ted | last3=Neward| year=2002| publisher = O'Reilly| isbn=0-596-00429-X}}\n* {{cite book| title=Programming Microsoft Windows with C#| last=Petzold| first=Charles| year=2002| publisher=Microsoft Press| isbn=0-7356-1370-2| url-access=registration| url=https://archive.org/details/isbn_9780735613706}}\n\n==External links==\n{{Wikibooks|C Sharp Programming}}\n* [https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/ C# Language Specification]\n* [https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/index C# Programming Guide]\n* [https://standards.iso.org/ittf/PubliclyAvailableStandards/c075178_ISO_IEC_23270_2018.zip ISO C# Language Specification]\n* [https://github.com/dotnet/roslyn C# Compiler Platform (\"Roslyn\") source code]\n\n{{Common Language Infrastructure}}\n{{Microsoft FOSS}}\n{{Ecma International Standards}}\n{{ISO standards}}\n{{Programming languages}}\n{{List of International Electrotechnical Commission standards}}\n{{Authority control}}\n\n[[Category:American inventions]]\n[[Category:Programming languages]]\n[[Category:C Sharp programming language family| ]]\n[[Category:.NET programming languages]]\n[[Category:Class-based programming languages]]\n[[Category:Ecma standards]]\n[[Category:Functional languages]]\n[[Category:IEC standards]]\n[[Category:ISO standards]]\n[[Category:Multi-paradigm programming languages]]\n[[Category:Programming languages created in 2000]]\n[[Category:Programming languages with an ISO standard]]\n[[Category:Statically typed programming languages]]\n[[Category:2000 software]]\n", "text_old": "{{short description|Multi-paradigm (object-oriented) programming language}}\n{{Use mdy dates|date=October 2012}}\n{{Use British English Oxford spelling|date=December 2011}}\n{{Correct title|title=C# (programming language)|reason=#}} \n<!-- Per Ecma, \"C#\" (i.e. not \"C\u266f\") is the standard spelling of the name of the language. See \"Language name\" section and talk page. -->\n{{Infobox programming language\n| name = C#\n| logo = [[File:C Sharp logo.svg|150px]]\n| paradigm = [[Structured programming|Structured]], [[Imperative programming|imperative]], [[Object-oriented programming|object-oriented]], [[Event-driven programming|event-driven]], [[The Task-based Asynchronous Pattern|task-driven]], [[Functional programming|functional]], [[Generic programming|generic]], [[Reflective programming|reflective]], [[Concurrent computing|concurrent]]\n| family = [[C (programming language)|C]]\n| year = {{start date and age|2000}}<ref>{{Cite web | url=https://www.infoq.com/minibooks/emag-c-sharp-preview |title = InfoQ eMag: A Preview of C# 7}}</ref>\n| designer = [[Microsoft]]\n| developer = Microsoft\n| latest release version = 8.0<ref>{{Cite web | url=https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8 |title = What's new in C# 8}}</ref>\n| latest release date = {{start date and age|2019|09|23}}\n| typing = [[Static typing|static]], [[Dynamic typing|dynamic]],<ref name=\"dynamic\" /> [[Type system#Strong and weak typing|strong]], [[Type system#Safely and unsafely typed systems|safe]], [[Nominative type system|nominative]], [[Type inference|partially inferred]]\n| implementations = [[Microsoft Visual C Sharp|Visual C#]], [[.NET Framework]], [[Mono (software)|Mono]], [[.NET Core]], [[DotGNU|DotGNU (discontinued)]], [[Universal Windows Platform]]\n| dialects = [[C\u03c9]], [[Spec Sharp|Spec#]], [[Polyphonic C Sharp|Polyphonic C#]], [http://ecsharp.net Enhanced C#]\n| influenced_by = [[C++]],<ref name=\"influenced by CPP\" /> [[C\u03c9]], [[Eiffel (programming language)|Eiffel]], [[F Sharp (programming language)|F#]],{{efn|for async}} [[Haskell (programming language)|Haskell]], [[Icon (programming language)|Icon]], [[J Sharp|J#]], [[Visual J++|J++]], [[Java (programming language)|Java]],<ref name=\"influenced by CPP\" /> [[ML (programming language)|ML]], [[Modula-3]], [[Object Pascal]],<ref name=\"influenced by op\" /> [[Rust (programming language)|Rust]], [[Visual Basic|VB]]\n| influenced = [[Chapel (programming language)|Chapel]],<ref name=\"chplspec\">{{cite web|title=Chapel spec (Acknowlegements)|url=http://chapel.cray.com/spec/spec-0.98.pdf|date=2015-10-01|accessdate=2016-01-14|publisher=Cray Inc}}</ref> [[Clojure]],<ref>{{cite web |url=http://www.codequarterly.com/2011/rich-hickey|archive-url=https://web.archive.org/web/20170111184835/http://www.codequarterly.com/2011/rich-hickey|url-status=dead|archive-date=2017-01-11|title=Rich Hickey Q&A by Michael Fogus|access-date=2017-01-11}}</ref> [[Crystal (programming language)|Crystal]],<ref name=\"rel_0.18.0\">\n  {{cite web\n  | url   = http://crystal-lang.org/2016/06/14/crystal-0.18.0-released.html#comment-2732771703\n  | title = Crystal 0.18.0 released!\n  | last  = Borenszweig\n  | first = Ary\n  | quote = It's heavily inspired by Ruby, and other languages (like C#, Go and Python).\n  }}\n</ref> [[D (programming language)|D]], [[J Sharp|J#]], [[Dart (programming language)|Dart]],<ref>{{cite web|title=Web Languages and VMs: Fast Code is Always in Fashion. (V8, Dart) - Google I/O 2013|url=https://www.youtube.com/watch?v=huawCRlo9H4&t=30m10s|accessdate=22 December 2013}}</ref> [[F Sharp (programming language)|F#]], [[Hack (programming language)|Hack]], [[Java (programming language)|Java]],<ref>Java 5.0 added several new language features (the [[foreach loop|enhanced for loop]], [[Object type (object-oriented programming)#Autoboxing|autoboxing]], [[variadic function|varargs]] and [[Java annotation|annotations]]), after they were introduced in the similar (and competing) C# language [http://www.barrycornelius.com/papers/java5/] [http://www.levenez.com/lang/]</ref><ref name=\"influenced\" /> [[Kotlin (programming language)|Kotlin]], [[Nemerle]], [[Oxygene (programming language)|Oxygene]], Ring,<ref name=\"Ring programming language and other languages\">{{cite web |url=http://ring-lang.sourceforge.net/doc1.6/introduction.html#ring-and-other-languages |title=Ring programming language and other languages  |author=Ring Team |date=5 December 2017 |work=ring-lang.net |publisher=[[ring-lang]]}}</ref> [[Rust (programming language)|Rust]], [[Swift (programming language)|Swift]],<ref name=\"lattner2014\">{{cite web|url=http://nondot.org/sabre/|title=Chris Lattner's Homepage|last=Lattner|first=Chris|date=2014-06-03|accessdate=2014-06-03|publisher=Chris Lattner|quote=The Swift language is the product of tireless effort from a team of language experts, documentation gurus, compiler optimization ninjas, and an incredibly important internal dogfooding group who provided feedback to help refine and battle-test ideas. Of course, it also greatly benefited from the experiences hard-won by many other languages in the field, drawing ideas from Objective-C, Rust, Haskell, Ruby, Python, CLU, and far too many others to list.}}</ref> [[Vala (programming language)|Vala]], [[TypeScript]]\n| platform = [[Common Language Infrastructure]]\n| license = [[Roslyn (compiler)|Roslyn]] compiler: [[Apache License|Apache License 2.0]]<ref name=\"auto\">{{Cite web|url=https://github.com/dotnet/roslyn|title=The Roslyn .NET compiler provides C# and Visual Basic languages with rich code analysis APIs.: dotnet/roslyn|date=November 13, 2019|via=GitHub}}</ref><br/>\n[[.NET Core|.NET Core CLR]]: [[MIT License|MIT/X11]]<ref>{{Cite web|url=https://github.com/dotnet/coreclr|title=CoreCLR is the runtime for .NET Core. It includes the garbage collector, JIT compiler, primitive data types and low-level classes.: dotnet/coreclr|date=November 13, 2019|via=GitHub}}</ref>\n\n[[Mono (software)|Mono]] compiler: dual [[GPLv3]] and MIT/X11<br/>\n[[DotGNU]]: dual [[GPL]] and [[LGPL]]\n| file_ext = <code>.cs</code>\n| website = {{URL|http://csharp.net}}\n| wikibooks = C Sharp Programming\n| versions = See [[#Versions|\u00a7 Versions]]\n}}\n\n'''C#''' (pronounced ''see sharp'', like the musical note [[C\u266f (musical note)|C\u266f]], but written with the [[number sign]]){{efn|By convention, a [[number sign]] is used for the second character in normal text; in artistic representations, sometimes a true [[\u266f|sharp sign]] is used: C\u266f. However the ECMA 334 standard states: ''\"The name C# is written as the LATIN CAPITAL LETTER C (U+0043) followed by the NUMBER SIGN # (U+0023).\"''}} is a general-purpose, [[multi-paradigm programming language]] encompassing [[strong typing]], [[lexically scoped]], [[Imperative programming|imperative]], [[Declarative programming|declarative]]<!--e.g. attributes-->, [[Functional programming|functional]], [[Generic programming|generic]], [[Object-oriented programming|object-oriented]] ([[Class (computer science)|class]]-based), and [[Component-based software engineering|component-oriented]] programming disciplines.<ref name=\"ECMA-334\" /> It was developed around 2000 by [[Microsoft]] as part of its [[.NET Framework|.NET]] initiative, and later approved as an [[international standard]] by [[Ecma International|Ecma]] (ECMA-334) and [[International Organization for Standardization|ISO]] (ISO/IEC 23270:2018). [[Mono (software)|Mono]] is the name of the free and open-source project to develop a compiler and runtime for the language. C# is one of the programming languages designed for the [[Common Language Infrastructure]] (CLI).\n\nC# was designed by [[Anders Hejlsberg]], and its development team is currently led by [[Mads Torgersen]]. The most recent version is 8.0, which was released in 2019 alongside [[Visual Studio 2019]] version 16.3.<ref name=\"new_features_in_8\">{{Cite web|url=https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes?view=vs-2019#16.3.0|title=Visual Studio 2019 version 16.3 Release Notes|last=|first=|date=|website=Microsoft Docs}}</ref>\n\n==Design goals==\nThe Ecma standard lists these design goals for C#:<ref name=\"ECMA-334\">{{cite book\n |url= https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-334.pdf\n |title= C# Language Specification\n |publisher= [[Ecma International]]\n |edition= 4th\n |date=June 2006\n |accessdate= January 26, 2012\n}}</ref>\n\n* The language is intended to be a simple, modern, general-purpose, [[object-oriented programming]] language.\n* The language, and implementations there of, should provide support for software engineering principles such as [[strong type]] checking, array [[bounds checking]], detection of attempts to use [[uninitialized variable]]s, and automatic [[Garbage collection (computer science)|garbage collection]]. Software robustness, durability, and programmer productivity are important.\n* The language is intended for use in developing [[software components]] suitable for deployment in distributed environments.\n* Portability is very important for source code and programmers, especially those already familiar with [[C (programming language)|C]] and [[C++]].\n* Support for [[internationalization and localization|internationalization]] is very important.\n* C# is intended to be suitable for writing applications for both hosted and [[embedded system]]s, ranging from the very large that use sophisticated [[operating system]]s, down to the very small having dedicated functions.\n* Although C# applications are intended to be economical with regard to memory and [[processing power]] requirements, the language was not intended to compete directly on performance and size with C or assembly language\n\n==History==\nDuring the development of the .NET Framework, the [[Base Class Library|class libraries]] were originally written using a [[managed code]] compiler system called ''\"Simple Managed C\"'' (SMC).<ref>{{cite web\n |url= http://blogs.msdn.com/jasonz/archive/2007/11/23/couple-of-historical-facts.aspx\n |title= Couple of Historical Facts\n |first= Jason\n |last= Zander\n |date= November 24, 2008\n |accessdate= February 23, 2009\n}}</ref><ref>{{cite web\n |url= http://aspadvice.com/blogs/rbirkby/archive/2006/11/28/What-language-was-ASP.Net-originally-written-in_3F00_.aspx\n |archive-url= https://web.archive.org/web/20160624010356/http://aspadvice.com/blogs/rbirkby/archive/2006/11/28/What-language-was-ASP.Net-originally-written-in_3F00_.aspx\n |archive-date= June 24, 2016\n |title= What language was ASP.Net originally written in?\n |date= November 28, 2006\n |first= Scott\n |last= Guthrie\n |authorlink= Scott Guthrie\n |accessdate= February 21, 2008\n}}</ref> In January 1999, [[Anders Hejlsberg]] formed a team to build a new language at the time called Cool, which stood for \"[[C-like]] Object Oriented Language\".<ref name=\"computerworld2008\">{{cite magazine\n |url= http://www.computerworld.com.au/article/261958/-z_programming_languages_c\n |title= The A-Z of Programming Languages: C#\n |first= Naomi\n |last= Hamilton\n |magazine= [[Computerworld]]\n |date= October 1, 2008\n |accessdate= October 1, 2008\n}}</ref> Microsoft had considered keeping the name \"Cool\" as the final name of the language, but chose not to do so for trademark reasons. By the time the .NET project was publicly announced at the July 2000 [[Professional Developers Conference]], the language had been renamed C#, and the class libraries and [[ASP.NET]] runtime had been ported to C#.\n\nHejlsberg is C#'s principal designer and lead architect at Microsoft, and was previously involved with the design of [[Turbo Pascal]], [[Embarcadero Delphi]] (formerly CodeGear Delphi, Inprise Delphi and Borland Delphi), and [[Visual J++]]. In interviews and technical papers he has stated that flaws<ref>{{Cite web|url=http://nilsnaegele.com/techreview/Reviews/Details/1|title=Details|website=nilsnaegele.com|access-date=2019-04-07}}</ref> in most major programming languages (e.g. [[C++]], [[Java (programming language)|Java]], [[Embarcadero Delphi|Delphi]], and [[Smalltalk]]) drove the fundamentals of the [[Common Language Runtime]] (CLR), which, in turn, drove the design of the C# language itself.\n\n[[James Gosling]], who created the [[Java (programming language)|Java]] programming language in 1994, and [[Bill Joy]], a co-founder of [[Sun Microsystems]], the originator of Java, called C# an \"imitation\" of Java; Gosling further said that \"[C# is] sort of Java with reliability, productivity and security deleted.\"<ref name=\"gosling\">{{cite web\n |url=http://news.cnet.com/2100-1082-817522.html\n |title=Why Microsoft's C# isn't\n |author=Wylie Wong\n |publisher=CNET: CBS Interactive\n |year=2002\n |accessdate=May 28, 2014\n}}</ref><ref>{{cite web | url = http://news.cnet.com/2010-1071-831385.html | title = Microsoft's blind spot|author=Bill Joy | publisher = cnet.com| date = February 7, 2002| accessdate  = January 12, 2010| author-link = Bill Joy}}</ref> Klaus Kreft and Angelika Langer (authors of a C++ streams book) stated in a blog post that \"Java and C# are almost identical programming languages. Boring repetition that lacks innovation,\"<ref name=\"kreft-langer\">{{cite web\n |url=http://www.artima.com/weblogs/viewpost.jsp?thread=6543\n |title=After Java and C# - what is next?\n |author=Klaus Kreft and Angelika Langer\n |year=2003\n |accessdate=June 18, 2013\n}}</ref> \"Hardly anybody will claim that Java or C# are revolutionary programming languages that changed the way we write programs,\" and  \"C# borrowed a lot from Java - and vice versa. Now that C# supports [[Boxing (Computer Science)|boxing]] and unboxing, we'll have a very similar feature in Java.\"<ref>{{cite web\n |accessdate= January 12, 2010\n |date= July 3, 2003\n |publisher= artima.com\n |title= After Java and C# - what is next?|author= Klaus Kreft and Angelika Langer\n |url= http://www.artima.com/weblogs/viewpost.jsp?thread=6543\n}}</ref>\nIn July 2000, Hejlsberg said that C# is \"not a Java clone\" and is \"much closer to C++\" in its design.<ref name=\"JohnOsborn\">{{Cite journal\n |last= Osborn\n |first= John\n |date= August 1, 2000\n |url= http://windowsdevcenter.com/pub/a/oreilly/windows/news/hejlsberg_0800.html\n |title= Deep Inside C#: An Interview with Microsoft Chief Architect Anders Hejlsberg\n |publisher= O'Reilly Media\n |accessdate= November 14, 2009\n }}</ref>\n\nSince the release of C# 2.0 in November 2005, the C# and Java languages have evolved on increasingly divergent trajectories, becoming two quite different languages. One of the first major departures came with the addition of [[Generic programming|generics]] to both languages, with vastly different implementations. C# makes use of [[Reification (computer science)|reification]] to provide \"first-class\" generic objects that can be used like any other class, with [[code generation (compiler)|code generation]] performed at class-load time.<ref>{{cite web\n | url = http://msdn.microsoft.com/en-us/library/512aeb7t.aspx\n | title = Generics (C# Programming Guide)\n | publisher = Microsoft| accessdate  = March 21, 2011}}</ref>\nFurthermore, C# has added several major features to accommodate functional-style programming, culminating in the [[Language Integrated Query|LINQ]] extensions released with C# 3.0 and its supporting framework of [[lambda expressions]], [[extension method]]s, and [[anonymous type]]s.<ref>{{cite web\n | url = http://msdn.microsoft.com/en-us/library/bb308959.aspx\n | title = LINQ: .NET Language-Integrated Query|author=Don Box and Anders Hejlsberg\n | publisher = Microsoft\n | date = February 2007\n | accessdate  = March 21, 2011}}</ref>  These features enable C# programmers to use functional programming techniques, such as [[Closure (computer science)|closures]], when it is advantageous to their application. The LINQ extensions and the functional imports help developers reduce the amount of [[boilerplate code]] that is included in common tasks like querying a database, parsing an xml file, or searching through a data structure, shifting the emphasis onto the actual program logic to help improve readability and maintainability.<ref>{{cite web\n | url = http://blog.abodit.com/2010/04/why-functional-programming-is-better-linq-c-sharp-than-procedural-code/\n | title = Why functional programming and LINQ is often better than procedural code\n | last = Mercer\n | first = Ian\n | publisher = abodit.com\n | date = April 15, 2010\n | accessdate  = March 21, 2011}}</ref>\n\nC# used to have a [[mascot]] called Andy (named after Anders Hejlsberg). It was retired on January 29, 2004.<ref>{{cite web|url=http://blogs.msdn.com/b/danielfe/archive/2004/01/29/64429.aspx |title=Andy Retires |work=Dan Fernandez's Blog |publisher=Blogs.msdn.com |date=January 29, 2004 |accessdate=October 4, 2012}}</ref>\n\nC# was originally submitted to the ISO subcommittee JTC 1/SC 22 for review,<ref>{{cite web|url=http://www.iso.org/iso/iso_technical_committee.html?commid=45202 |title=Technical committees - JTC 1/SC 22 - Programming languages, their environments and system software interfaces |publisher=ISO |date= |accessdate=October 4, 2012}}</ref> under ISO/IEC 23270:2003,<ref>{{cite web|url=http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=36768 |title=ISO/IEC 23270:2003 - Information technology - C# Language Specification |publisher=Iso.org |date=August 23, 2006 |accessdate=October 4, 2012}}</ref> was withdrawn and was then approved under ISO/IEC 23270:2006.<ref>{{cite web|url=http://www.iso.org/iso/iso_catalogue/catalogue_ics/catalogue_detail_ics.htm?csnumber=42926 |title=ISO/IEC 23270:2006 - Information technology - Programming languages - C# |publisher=Iso.org |date=January 26, 2012 |accessdate=October 4, 2012}}</ref>\n\n===Name===\nMicrosoft first used the name C# in 1988 for a variant of the C language designed for incremental compilation.<ref>{{cite web|last1=Mariani|first1=Rico|title=My History of Visual Studio (Part 1) \u2013 Rico Mariani's Performance Tidbits|url=https://blogs.msdn.microsoft.com/ricom/2009/10/05/my-history-of-visual-studio-part-1/|website=Rico Mariani's Performance Tidbits}}</ref> That project was not completed but the name lives on.\n\n[[File:Treblecsharp5.svg|thumb|100px|right|[[C\u266f (musical note)|C-sharp musical note]]]]\nThe name \"C sharp\" was inspired by the musical notation where a [[Sharp (music)|sharp]] indicates that the written note should be made a [[semitone]] higher in [[Pitch (music)|pitch]].<ref>{{cite web\n |url= http://www.jameskovacs.com/blog/CNETHistoryLesson.aspx\n |title= C#/.NET History Lesson\n |first= James\n |last= Kovacs\n |date= September 7, 2007\n |accessdate= June 18, 2009\n}}</ref>\nThis is similar to the language name of [[C++]], where \"++\" indicates that a variable should be incremented by 1 after being evaluated. The sharp symbol also resembles a [[Typographic ligature|ligature]] of four \"+\" symbols (in a two-by-two grid), further implying that the language is an increment of C++.<ref>{{cite magazine\n|url=http://www.computerworld.com.au/article/261958/a-z_programming_languages_c_/?pp=2\n|title=The A-Z of Programming Languages: C#\n|first= Anders\n|last= Hejlsberg\n|magazine= [[Computerworld]]\n|date= October 1, 2008\n}}</ref>\n\nDue to technical limitations of display (standard fonts, browsers, etc.) and the fact that the sharp symbol ({{unichar|266F|MUSIC SHARP SIGN|html=|nlink=Sharp (music)}}) is not present on most [[keyboard layout]]s, the [[number sign]] ({{unichar|0023|NUMBER SIGN|html=}}) was chosen to approximate the sharp symbol in the written name of the programming language.<ref name=\"MS CSharp FAQ\">{{cite web\n |url=http://msdn.microsoft.com/vcsharp/previous/2002/FAQ/default.aspx \n |title=Microsoft C# FAQ \n |publisher=[[Microsoft]] \n |accessdate=March 25, 2008 \n |url-status=dead \n |archiveurl=https://web.archive.org/web/20060214002638/http://msdn.microsoft.com/vcsharp/previous/2002/FAQ/default.aspx \n |archivedate=February 14, 2006 \n |df=mdy \n}}</ref>\nThis convention is reflected in the ECMA-334 C# Language Specification.<ref name=\"ECMA-334\"/>\n\nThe \"sharp\" suffix has been used by a number of other .NET languages that are variants of existing languages, including [[J Sharp|J#]] (a .NET language also designed by Microsoft that is derived from Java 1.1), [[A Sharp (.NET)|A#]] (from [[Ada (programming language)|Ada]]), and the [[functional programming]] language [[F Sharp (programming language)|F#]].<ref name=\"MS FSharp FAQ\">{{cite web\n |url=http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/faq.aspx \n |title=F# FAQ \n |publisher=Microsoft Research \n |accessdate=June 18, 2009 \n |url-status=dead \n |archiveurl=https://web.archive.org/web/20090218222543/http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/faq.aspx \n |archivedate=February 18, 2009 \n |df=mdy \n}}</ref> The original implementation of [[EiffelStudio|Eiffel for .NET]] was called Eiffel#,<ref>{{cite web\n |url= http://msdn.microsoft.com/en-us/library/ms973898.aspx\n |title= Full Eiffel on the .NET Framework\n |date=June 2002\n |first1= Raphael\n |last1= Simon\n |first2= Emmanuel\n |last2= Stapf\n |first3= Bertrand\n |last3= Meyer\n |publisher= [[Microsoft]]\n |accessdate= June 18, 2009\n}}</ref> a name retired since the full [[Eiffel (programming language)|Eiffel]] language is now supported. The suffix has also been used for [[Library (computing)|libraries]], such as [[Gtk Sharp|Gtk#]] (a .NET [[Wrapper pattern|wrapper]] for [[GTK+]] and other [[GNOME]] libraries) and [[Cocoa Sharp|Cocoa#]] (a wrapper for [[Cocoa (API)|Cocoa]]).\n\n===Versions===\n{| class=\"wikitable\" style=\"margin:0 auto 0 auto;\"\n|-\n! rowspan=\"2\" | Version\n! colspan=\"3\" | Language specification\n! rowspan=\"2\" | Date\n! rowspan=\"2\" | [[.NET Framework|.NET Version]]\n! rowspan=\"2\" | [[Visual Studio]]\n|-\n! [[Ecma International|Ecma]]\n! [[ISO/IEC]]\n! [[Microsoft]]\n|-\n| Version C# 1.0\n| rowspan=\"2\"|[http://www.ecma-international.org/publications/files/ECMA-ST-WITHDRAWN/ECMA-334,%202nd%20edition,%20December%202002.pdf December 2002]\n| rowspan=\"2\"|[http://www.techstreet.com/cgi-bin/pdf/free/378672/ISO+IEC+23270-2003.pdf April 2003]\n| [http://download.microsoft.com/download/a/9/e/a9e229b9-fee5-4c3e-8476-917dee385062/CSharp%20Language%20Specification%20v1.0.doc January 2002]\n| January 2002\n| [[.NET Framework version history#.NET Framework 1.0|.NET Framework 1.0]]\n| [[Visual Studio .NET|Visual Studio .NET 2002]]\n|-\n| Version C# 1.1<br/>C# 1.2\n| [http://download.microsoft.com/download/5/e/5/5e58be0a-b02b-41ac-a4a3-7a22286214ff/csharp%20language%20specification%20v1.2.doc October 2003]\n| April 2003\n| [[.NET Framework 1.1]]\n| [[Visual Studio .NET 2003]]\n|-\n| [[C Sharp 2.0|Version C# 2.0]]\n| [https://web.archive.org/web/20121202194727/http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-334.pdf June 2006]\n| [http://standards.iso.org/ittf/PubliclyAvailableStandards/c042926_ISO_IEC_23270_2006(E).zip September 2006]\n| [http://download.microsoft.com/download/9/8/f/98fdf0c7-2bbd-40d3-9fd1-5a4159fa8044/csharp%202.0%20specification_sept_2005.doc September 2005]{{efn|The Microsoft C# 2.0 specification document only contains the new 2.0 features. For older features, use the 1.2 specification above.}}\n| November 2005\n| [[.NET Framework 2.0]]<br/>[[.NET Framework 3.0]]\n| [[Visual Studio 2005]]<br/>[[Visual Studio 2008]]\n|-\n| [[C Sharp 3.0|Version C# 3.0]]\n| colspan=\"2\" rowspan=\"2\" {{no|None}}\n| [http://download.microsoft.com/download/3/8/8/388e7205-bc10-4226-b2a8-75351c669b09/CSharp%20Language%20Specification.doc August 2007]\n| November 2007\n| .NET Framework 2.0 (Except LINQ)<ref name=\"danielmoth1\">{{cite web|url=http://www.danielmoth.com/Blog/using-c-30-from-net-20.aspx |title=Using C# 3.0 from .NET 2.0 |publisher=Danielmoth.com |date=May 13, 2007 |accessdate=October 4, 2012}}</ref><br/>\n.NET Framework 3.0 (Except LINQ)<ref name=\"danielmoth1\"/><br/>\n[[.NET Framework 3.5]]\n| [[Visual Studio 2008]]\n|-\n| [[C Sharp 4.0|Version C# 4.0]]\n| April 2010\n| April 2010\n| [[.NET Framework 4.0|.NET Framework 4]]\n| [[Visual Studio 2010]]\n|-\n| Version C# 5.0\n| [https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-334.pdf December 2017]\n| [https://standards.iso.org/ittf/PubliclyAvailableStandards/c075178_ISO_IEC_23270_2018.zip December 2018]\n| [https://www.microsoft.com/en-us/download/details.aspx?id=7029 June 2013]\n| August 2012\n| [[.NET Framework 4.5]]\n| [[Visual Studio 2012]]<br/>[[Visual Studio 2013]]\n|-\n| Version C# 6.0\n| colspan=\"2\" rowspan=\"6\" {{no|None}}\n| [https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/ Draft]\n| July 2015\n| [[.NET Framework 4.6]]<br/>.NET Core 1.0<br/>.NET Core 1.1\n| [[Visual Studio 2015]]\n|-\n| Version C# 7.0\n| [https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-7.0/ Specification proposal]\n| March 2017\n| [[.NET Framework 4.7]]\n| [[Visual Studio 2017]] version 15.0\n|-\n| Version C# 7.1\n| [https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-7.1/ Specification proposal]\n| August 2017\n| .NET Core 2.0\n| [[Visual Studio 2017]] version 15.3<ref>{{Cite web|url=https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2017-relnotes-v15.3|title=Visual Studio 2017 15.3 Release Notes|website=docs.microsoft.com}}</ref>\n|-\n| Version C# 7.2\n| [https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-7.2/ Specification proposal]\n| November 2017\n| \n| [[Visual Studio 2017]] version 15.5<ref name=\"visualstudio.com\">{{Cite web|url=https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2017-relnotes|title=Visual Studio 2017 15.9 Release Notes|website=docs.microsoft.com}}</ref>\n|-\n| Version C# 7.3\n| [https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-7.3/ Specification proposal]\n| May 2018\n| .NET Core 2.1<br/>.NET Core 2.2<br/>[[.NET Framework 4.8]]\n| [[Visual Studio 2017]] version 15.7<ref name=\"visualstudio.com\"/>\n|-\n| Version C# 8\n| [https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-8.0/ Specification proposal]\n| September 2019\n| .NET Core 3.0\n| [[Visual Studio 2019]] version 16.3<ref name=\"visualstudio.com\"/>\n|}\n\n===New features===\n;C# 2.0\n{{colbegin}}\n* Generics<ref name=\"csv2_msdn\">{{cite web|title=What's new in the C# 2.0 Language and Compiler|url=http://msdn.microsoft.com/en-us/library/7cz8t42e(v=vs.80).aspx|website=Microsoft Developer Network|publisher=Microsoft|accessdate=11 June 2014}}</ref>\n* Partial types<ref name=\"csv2_msdn\" />\n* [[Anonymous method]]s<ref name=\"csv2_msdn\" />\n* Iterators<ref name=\"csv2_msdn\" />\n* Nullable value types<ref name=\"csv2_msdn\" />\n* Getter/setter separate accessibility<ref name=\"csv2_msdn\" />\n* Method group conversions (delegates)<ref name=\"csv2_msdn\" />\n* Co- and Contra-variance for delegates<ref name=\"csv2_msdn\" />\n* Static classes<ref name=\"csv2_msdn\" />\n* Delegate inference<ref name=\"csv2_msdn\" />\n* [[Null coalescing operator]]<ref name=\"csv2_msdn\" />\n{{colend}}\n\n;C# 3.0\n{{colbegin}}\n* Implicitly typed local variables<ref name=\"csv3_msdn\">{{cite web|last1=Hejlsberg|first1=Anders|last2=Torgersen|first2=Mads|title=Overview of C# 3.0|url=http://msdn.microsoft.com/en-us/library/bb308966.aspx|website=Microsoft Developer Network|publisher=Microsoft|accessdate=11 June 2014}}</ref>\n* Object and collection initializers<ref name=\"csv3_msdn\" />\n* Auto-Implemented properties<ref name=\"csv3_msdn\" />\n* Anonymous types<ref name=\"csv3_msdn\" />\n* [[Extension method]]s<ref name=\"csv3_msdn\" />\n* Query expressions<ref name=\"csv3_msdn\" />\n* [[Anonymous function|Lambda expressions]]<ref name=\"csv3_msdn\" />\n* Expression trees<ref name=\"csv3_msdn\" />\n* Partial methods<ref name=csv3_partmeths>{{cite web|last1=Ghosh|first1=Wriju|title=C# 3.0 : Partial * Garbage Collection Methods|url=http://blogs.msdn.com/b/wriju/archive/2007/12/13/c-3-0-partial-methods.aspx|website=MSDN Blogs|publisher=Microsoft|accessdate=11 June 2014}}</ref>\n{{colend}}\n\n;C# 4.0\n{{colbegin}}\n* Dynamic binding<ref name=\"csv4_msdn\">{{cite web|last1=Burrows|first1=Chris|title=C# 4.0 - New C# Features in the .NET Framework 4|url=http://msdn.microsoft.com/en-us/magazine/ff796223.aspx|website=Microsoft Developer Network|publisher=Microsoft|accessdate=11 June 2014}}</ref>\n* Named and optional arguments<ref name=\"csv4_msdn\" />\n* Generic co- and contravariance<ref name=\"csv4_msdn\" />\n* Embedded interop types (\"NoPIA\")<ref name=\"csv4_msdn\" />\n{{colend}}\n\n;C# 5.0<ref>{{cite web|last=Hejlsberg|first=Anders|title=Future directions for C# and Visual Basic|url=http://channel9.msdn.com/Events/BUILD/BUILD2011/TOOL-816T|work=C# lead architect|publisher=Microsoft|accessdate=September 21, 2011}}</ref>\n{{colbegin}}\n* [[Async/await|Asynchronous methods]]<ref name=\"csv5_msdn\">{{cite web|title=An Introduction to New Features in C# 5.0|url=http://blogs.msdn.com/b/mvpawardprogram/archive/2012/03/26/introduction-of-new-features-in-c-5-0.aspx|website=MSDN Blogs|publisher=Microsoft|accessdate=11 June 2014}}</ref>\n* Caller info attributes<ref name=\"csv5_msdn\" />\n{{colend}}\n\n;C# 6.0\n{{colbegin}}\n* Compiler-as-a-service ([[Microsoft Roslyn|Roslyn]])\n* Import of static type members into namespace<ref name=\"roslyn_6\">{{cite web|title=Language feature implementation status|url=https://github.com/dotnet/roslyn/wiki/Languages-features-in-C%23-6-and-VB-14|website=github|publisher=Microsoft|accessdate=13 February 2015}}</ref>\n* Exception filters<ref name=\"roslyn_6\" />\n* Await in catch/finally blocks<ref name=\"roslyn_6\" />\n* Auto property initializers<ref name=\"roslyn_6\" />\n* Default values for getter-only properties<ref name=\"roslyn_6\" />\n* Expression-bodied members<ref name=\"roslyn_6\" />\n* Null propagator ([[Safe navigation operator|null-conditional operator]], succinct null checking)<ref name=\"roslyn_6\" />\n* String interpolation<ref name=\"roslyn_6\" />\n* nameof operator<ref name=\"roslyn_6\" />\n* Dictionary initializer<ref name=\"roslyn_6\" />\n{{colend}}\n\n;C# 7.0<ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7|title=What's new in C# 7|last=|first=|date=2016-12-21|website=Microsoft Docs|access-date=}}</ref><ref name=\"new_features_in_7\">{{Cite web|title = New Features in C# 7.0|url = https://blogs.msdn.microsoft.com/dotnet/2017/03/09/new-features-in-c-7-0/|website = .NET Blog|access-date = 2017-06-09}}</ref>\n{{colbegin}}\n* Inline out variable declaration\n* [[Pattern matching]]\n* Tuple types and tuple literals\n* Deconstruction\n* [[Local function]]s\n* Digit separators\n* Binary literals\n* Ref returns and locals\n* Generalized async return types\n* Expression bodied constructors and finalizers\n* Expression bodied getters and setters\n* Throw can also be used as expression\n{{colend}}\n\n;C# 7.1<ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7-1|title=What's new in C# 7.1|last=|first=|date=|website=Microsoft Docs|access-date=2017-10-09}}</ref>\n{{colbegin}}\n* Async main\n* Default literal expressions\n* Inferred tuple element names\n{{colend}}\n\n;C# 7.2<ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7-2|title=What's new in C# 7.2|last=|first=|date=|website=Microsoft Docs|access-date=2017-11-26}}</ref>\n{{colbegin}}\n* Reference semantics with value types\n* Non-trailing named arguments\n* Leading underscores in numeric literals\n* private protected access modifier\n{{colend}}\n\n;C# 7.3<ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7-3|title=What's new in C# 7.3|last=|first=|date=|website=Microsoft Docs|access-date=2018-06-23}}</ref>\n{{colbegin}}\n* Accessing fixed fields without pinning\n* Reassigning ref local variables\n* Using initializers on stackalloc arrays\n* Using fixed statements with any type that supports a pattern\n* Using additional generic constraints\n{{colend}}\n\n;C# 8.0<ref name=\"C#8\">{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8|title=What's new in C# 8.0|last=|first=|date=|website=Microsoft Docs}}</ref>\n{{colbegin}}\n* {{code|readonly struct}} members\n* Default interface members\n* {{code|switch}} expressions\n* Property, Tuple, and positional patterns\n* {{code|using}} declarations\n* {{code|static}} local functions\n* Disposable {{code|ref struct}}\n* Nullable reference types\n* Indices and Ranges\n* Null-coalescing assignment\n* Async Streams\n{{colend}}\n\n==Syntax==\n{{Main|C Sharp syntax}}\n{{See also|Syntax (programming languages)}}\nThe core syntax of C# language is similar to that of other C-style languages such as C, C++ and Java. In particular:\n\n* Semicolons are used to denote the end of a statement.\n* [[Curly brackets]] are used to group statements. Statements are commonly grouped into methods (functions), methods into classes, and classes into [[namespaces]].\n* Variables are assigned using an [[equals sign]], but compared using [[==|two consecutive equals signs]].\n* [[Square brackets]] are used with [[Array data structure|arrays]], both to declare them and to get a value at a given index in one of them.\n\n==Distinguishing features==\n{{See also|Comparison of C Sharp and Java}}\nSome notable features of C# that distinguish it from C, C++, and Java where noted, are:\n\n===Portability===\nBy design, C# is the programming language that most directly reflects the underlying [[Common Language Infrastructure]]&nbsp;(CLI).<ref>{{cite book|title=Visual Studio 2010 and .NET 4 Six-in-One|year=2010|publisher=Wrox Press|isbn=978-0470499481}}</ref>  Most of its intrinsic types correspond to value-types implemented by the CLI framework. However, the language specification does not state the code generation requirements of the compiler: that is, it does not state that a C# compiler must target a Common Language Runtime, or generate [[Common Intermediate Language]] (CIL), or generate any other specific format. Theoretically, a C# compiler could generate machine code like traditional compilers of C++ or [[Fortran]].\n\n===Typing===\nC# supports strongly typed implicit variable declarations with the keyword <code>var</code>, and implicitly typed arrays with the keyword <code>new[]</code> followed by a collection initializer.\n\nC# supports a strict [[Boolean data type]], <code>bool</code>. Statements that take conditions, such as <code>while</code> and <code>if</code>, require an expression of a type that implements the <code>true</code> operator, such as the Boolean type. While C++ also has a Boolean type, it can be freely converted to and from integers, and expressions such as <code>if (a)</code> require only that <code>a</code> is convertible to bool, allowing <code>a</code> to be an int, or a pointer. C# disallows this \"integer meaning true or false\" approach, on the grounds that forcing programmers to use expressions that return exactly <code>bool</code> can prevent certain types of programming mistakes such as <code>if (a = b)</code> (use of assignment <code>=</code> instead of equality <code>==</code>).\n\nC# is more [[Type safety|type safe]] than C++. The only [[implicit conversion]]s by default are those that are considered safe, such as widening of integers. This is enforced at compile-time, during [[Just-in-time compilation|JIT]], and, in some cases, at runtime. No implicit conversions occur between Booleans and integers, nor between enumeration members and integers (except for literal 0, which can be implicitly converted to any enumerated type). Any user-defined conversion must be explicitly marked as explicit or implicit, unlike C++ [[copy constructor]]s and conversion operators, which are both implicit by default.\n\nC# has explicit support for [[Covariance and contravariance (computer science)|covariance and contravariance]] in generic types, unlike C++ which has some degree of support for contravariance simply through the semantics of return types on virtual methods.\n\n[[enumerated type|Enumeration]] members are placed in their own [[Scope (programming)|scope]].\n\nThe C# language does not allow for global variables or functions. All methods and members must be declared within classes. Static members of public classes can substitute for global variables and functions.\n\nLocal variables cannot [[Variable shadowing|shadow]] variables of the enclosing block, unlike C and C++.\n<!--NOTE TO EDITORS: Classes do NOT *NEED* to go in a Namespace. Check the spec or try it out yourself before stating otherwise.-->\n\n===Metaprogramming===\n[[Metaprogramming]] via C# attributes is part of the language. Many of these attributes duplicate the functionality of GCC's and VisualC++'s platform-dependent preprocessor directives.\n\n===Methods and functions===\nA method in C# is a member of a class that can be invoked as a function (a sequence of instructions), rather than the mere value-holding capability of a class property. As in other syntactically similar languages, such as C++ and [[ANSI C]], the signature of a method is a declaration comprising in order: any optional scope modifier keywords (such as <code>private</code>), the explicit specification of its return type (such as <code>int</code>, or the keyword <code>void</code> if no value is returned), the name of the method, and finally, a parenthesized sequence of comma-separated parameter specifications, each consisting of a parameter's type, its formal name and optionally, a default value to be used whenever none is provided. Certain specific kinds of methods, such as those that simply get or set a class property by return value or assignment, do not require a full signature, but in the general case, the definition of a class includes the full signature declaration of its methods.\n\nLike C++, and unlike Java, C# programmers must use the scope modifier keyword <code>virtual</code> to allow methods to be overridden by subclasses.<ref>{{cite web|title=virtual (C# Reference)|url=https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/virtual|website=docs.microsoft.com|language=en-us}}</ref>\n\n''Extension methods'' in C# allow programmers to use static methods as if they were methods from a class's method table, allowing programmers to add methods to an object that they feel should exist on that object and its derivatives.\n\nThe type <code>dynamic</code> allows for run-time method binding, allowing for JavaScript-like method calls and run-time object composition.\n\nC# has support for strongly-typed function pointers via the keyword <code>delegate</code>. Like the Qt framework's pseudo-C++ ''signal'' and ''slot'', C# has semantics specifically surrounding publish-subscribe style events, though C# uses delegates to do so.\n\nC# offers Java-like <code>synchronized</code> method calls, via the attribute <code>[MethodImpl(MethodImplOptions.Synchronized)]</code>, and has support for [[Mutual exclusion|mutually-exclusive locks]] via the keyword <code>lock</code>.\n\n===Property===\nC# provides [[property (programming)|properties]] as [[syntactic sugar]] for a common pattern in which a pair of methods, [[Mutator method|accessor (getter) and mutator (setter)]] encapsulate operations on a single [[Attribute (computing)|attribute]] of a class. No redundant method signatures{{Definition needed|The term signature/signatures are used in several places, and without any definition or explanation it is difficult to understand the concepts explained unless you have prior detailed knowledge of how C# define the concept \"Signature\"|date=May 2019}} for the getter/setter implementations need be written, and the property may be accessed using attribute syntax rather than more verbose method calls.\n\n===Namespace===\nA C# <code>namespace</code> provides the same level of code isolation as a Java <code>package</code> or a C++ {{C++|namespace}}, with very similar rules and features to a <code>package</code>. Namespaces can be imported with the \"using\" syntax.<ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/using-directive|title=using directive - C# Reference|last=|first=|date=|website=Microsoft Docs|language=en-us|access-date=2019-04-14}}</ref>\n\n===Memory access===\nIn C#, memory address pointers can only be used within blocks specifically marked as ''unsafe'', and programs with unsafe code need appropriate permissions to run. Most object access is done through safe object references, which always either point to a \"live\" object or have the well-defined [[Nullable type|null]] value; it is impossible to obtain a reference to a \"dead\" object (one that has been garbage collected), or to a random block of memory. An unsafe pointer can point to an instance of an 'unmanaged' value type that does not contain any references to garbage-collected objects, array, string, or a block of stack-allocated memory. Code that is not marked as unsafe can still store and manipulate pointers through the <code>System.IntPtr</code> type, but it cannot dereference them.\n\nManaged memory cannot be explicitly freed; instead, it is automatically garbage collected. Garbage collection addresses the problem of [[memory leak]]s by freeing the programmer of responsibility for releasing memory that is no longer needed.\n\n===Exception===\n[[Checked exceptions]] are not present in C# (in contrast to Java). This has been a conscious decision based on the issues of scalability and versionability.<ref>{{cite web\n| url = http://www.artima.com/intv/handcuffs.html\n| title = The Trouble with Checked Exceptions\n| first1=Bill\n| last1=Venners\n| first2=Bruce\n| last2=Eckel\n| date = August 18, 2003\n| accessdate = March 30, 2010\n}}</ref>\n\n===Polymorphism===\nUnlike [[C++]], C# does not support [[multiple inheritance]], although a class can implement any number of [[Protocol (object-oriented programming)|interfaces]]. This was a design decision by the language's lead architect to avoid complication and simplify architectural requirements throughout CLI. When implementing multiple interfaces that contain a method with the same signature, i. e. two methods with the same name and taking parameters of the same type in the same order, C# allows implementing each method depending on which interface that method is being called through or, like Java, allows implementing the method once, and having that be the one invocation on a call through any of the class's interfaces.\n\nHowever, unlike [[Java (programming language)|Java]], C# supports [[operator overloading]]. Only the most commonly overloaded operators in C++ may be overloaded in C#.\n\n===Language Integrated Query (LINQ)===\nC# has the ability to utilize [[Language Integrated Query|LINQ]] through the .NET Framework. A developer can query any <code>IEnumerable&lt;T&gt;</code> object, XML documents, an ADO.NET dataset, and a SQL database.<ref>X. D. Zhang et al., \"Research of the Database Access Technology Under.NET Framework\", Applied Mechanics and Materials, Vols. 644-650, pp. 3077-3080, 2014</ref> Using LINQ in C# brings advantages like [[Intelligent code completion|Intellisense]] support, strong filtering capabilities, type safety with compile error checking ability, and consistency for querying data over a variety of sources.<ref>Otey, M. (2006, 02). LINQ to the future. SQL Server Magazine, 8, 17-21. Retrieved from https://search.proquest.com/docview/214859896</ref>  There are several different language structures that can be utilized with C# with LINQ and they are query expressions, lambda expressions, anonymous types, implicitly typed variables, extension methods, and object initializers.<ref>Sheldon, W. (2010, 11). New features in LINQ. SQL Server Magazine, 12, 37-40. Retrieved from https://search.proquest.com/docview/770609095</ref>\n\n===Functional programming===\nThough primarily an imperative language, C# 2.0 offered limited support for functional programming through [[first-class functions]] and closures in the form of anonymous delegates. C# 3.0 expanded support for functional programming with the introduction of a lightweight syntax for lambda expressions, extension methods (an affordance for modules), and a [[list comprehension]] syntax in the form of a \"query comprehension\" language. C# 7.0 adds features typically found in functional languages like tuples and pattern matching.<ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7|title=What's New in C# 7.0|last=|first=|date=|website=Microsoft Docs|language=en-us|access-date=2019-04-14}}</ref>\n\n==Common type system==\nC# has a ''unified type system''. This unified type system is called [[Common Type System]] (CTS).<ref name=\"insidecsharpp2ch4\">{{cite book| last = Archer| first = Tom| title = Inside C#| year = 2001| publisher = Microsoft Press|location=Redmond, Washington|isbn=0-7356-1288-9|chapter=Part 2, Chapter 4: The Type System}}</ref>\n\nA unified type system implies that all types, including primitives such as integers, are subclasses of the {{C sharp|System.Object}} class. For example, every type inherits a {{C sharp|ToString()}} method.\n\n===Categories of data types===\nCTS separates data types into two categories:<ref name=\"insidecsharpp2ch4\" />\n\n#  Reference types\n#  Value types\n\nInstances of value types do not have referential identity nor referential comparison semantics - equality and inequality comparisons for value types compare the actual data values within the instances, unless the corresponding operators are overloaded. Value types are derived from {{C sharp|System.ValueType}}, always have a default value, and can always be created and copied. Some other limitations on value types are that they cannot derive from each other (but can implement interfaces) and cannot have an explicit default (parameterless) constructor. Examples of value types are all primitive types, such as {{C sharp|int}} (a signed 32-bit integer), {{C sharp|float}} (a 32-bit IEEE floating-point number), {{C sharp|char}} (a 16-bit Unicode code unit), and {{C sharp|System.DateTime}} (identifies a specific point in time with nanosecond precision). Other examples are {{C sharp|enum}} (enumerations) and {{C sharp|struct}} (user defined structures).\n\nIn contrast, reference types have the notion of referential identity - each instance of a reference type is inherently distinct from every other instance, even if the data within both instances is the same. This is reflected in default equality and inequality comparisons for reference types, which test for referential rather than structural equality, unless the corresponding operators are overloaded (such as the case for {{C sharp|System.String}}). In general, it is not always possible to create an instance of a reference type, nor to copy an existing instance, or perform a value comparison on two existing instances, though specific reference types can provide such services by exposing a public constructor or implementing a corresponding interface (such as {{C sharp|ICloneable}} or {{C sharp|IComparable}}). Examples of reference types are {{C sharp|object}} (the ultimate base class for all other C# classes), {{C sharp|System.String}} (a string of Unicode characters), and {{C sharp|System.Array}} (a base class for all C# arrays).\n\nBoth type categories are extensible with user-defined types.\n\n===Boxing and unboxing===\n''Boxing'' is the operation of converting a value-type object into a value of a corresponding reference type.<ref name=\"insidecsharpp2ch4\" /> Boxing in C# is implicit.\n\n''Unboxing'' is the operation of converting a value of a reference type (previously boxed) into a value of a value type.<ref name=\"insidecsharpp2ch4\" /> Unboxing in C# requires an explicit [[Type conversion|type cast]]. A boxed object of type T can only be unboxed to a T (or a nullable T).<ref>{{cite web|last=Lippert |first=Eric |url=http://blogs.msdn.com/b/ericlippert/archive/2009/03/19/representation-and-identity.aspx |title=Representation and Identity |work=Fabulous Adventures In Coding |publisher=Blogs.msdn.com |date=March 19, 2009 |accessdate=October 4, 2012}}</ref>\n\nExample:\n<syntaxhighlight lang=CSharp>\nint foo = 42;         // Value type.\nobject bar = foo;     // foo is boxed to bar.\nint foo2 = (int)bar;  // Unboxed back to value type.\n</syntaxhighlight>\n\n==Libraries==\nThe C# specification details a minimum set of types and class libraries that the compiler expects to have available. In practice, C# is most often used with some implementation of the [[Common Language Infrastructure]] (CLI), which is standardized as ECMA-335 ''Common Language Infrastructure (CLI)''.\n\nIn addition to the standard CLI specifications, there are many commercial and community class libraries that build on top of the .NET framework libraries to provide additional functionality.<ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/standard/framework-libraries|title=Framework Libraries|website=docs.microsoft.com}}</ref>\n\n==Examples==\nThe following is a very simple C# program, a version of the classic \"[[Hello world]]\" example:\n\n<syntaxhighlight lang=\"csharp\">\nusing System;\n\nclass Program\n{\n    public static void Main(string[] args)\n    {\n        Console.WriteLine(\"Hello, world!\");\n    }\n}\n</syntaxhighlight>\n\nThis code will display this text in the console window:\n\n Hello, world!\n\nEach line has a purpose:\n\n<syntaxhighlight lang=CSharp>\nusing System;\n</syntaxhighlight>\n\nThe above line imports all types in the <code>System</code> namespace. For example, the <code>Console</code> class used later in the source code is defined in the <code>System</code> namespace, meaning it can be used without supplying the full name of the type (which includes the namespace).\n\n<syntaxhighlight lang=CSharp>\nclass Program\n</syntaxhighlight>\n\nAbove is a [[Class (computer science)|class]] definition. Everything between the following pair of braces describes {{C sharp|Program}}.\n\n<syntaxhighlight lang=CSharp>\nstatic void Main()\n</syntaxhighlight>\n\nThis declares the class member method where the program begins execution. The .NET runtime calls the {{C sharp|Main}} method. (Note: {{C sharp|Main}} may also be called from elsewhere, like any other method, e.g. from another method of {{C sharp|Program}}.) The [[Method (computer programming)#Static methods|static keyword]] makes the method accessible without an instance of {{C sharp|Program}}. Each console application's {{C sharp|Main}} entry point must be declared {{C sharp|static}}. Otherwise, the program would require an instance, but any instance would require a program. To avoid that irresolvable [[circular dependency]], C# compilers processing [[console application]]s (like that above) report an error if there is no {{C sharp|static Main}} method. The {{C sharp|void}} keyword declares that {{C sharp|Main}} has no [[return value]].\n\n<syntaxhighlight lang=CSharp>\nConsole.WriteLine(\"Hello, world!\");\n</syntaxhighlight>\n\nThis line writes the output. {{C sharp|Console}} is a static class in the {{C sharp|System}} namespace. It provides an interface to the standard input, output, and error streams for console applications. The program calls the {{C sharp|Console}} method {{C sharp|WriteLine}}, which displays on the console a line with the argument, the string {{C sharp|\"Hello, world!\"}}.\n\nA [[GUI]] example:\n\n<syntaxhighlight lang=\"CSharp\">\nusing System;\nusing System.Windows.Forms;\n\nclass Program\n{\n    static void Main()\n    {\n        MessageBox.Show(\"Hello, World!\");\n        Console.WriteLine(\"Is almost the same argument!\");\n    }\n}\n</syntaxhighlight>\n\nThis example is similar to the previous example, except that it generates a [[dialog box]] that contains the message \"Hello, World!\" instead of writing it to the console.\n\nAnother useful library is the <code>System.Drawing</code> library, which is used to programmatically draw images. For example:<syntaxhighlight lang=\"c#\">\nusing System;\nusing System.Drawing;\n\npublic class Example\n{\n    public static Image img;\n\n    public static void Main()\n    {\n        img = Image.FromFile(\"Image.png\");\n    }\n}\n</syntaxhighlight>This will create an image that is identical to that stored in \"Image.png\".\n\n==Standardization and licensing==\nIn August 2001, Microsoft Corporation, Hewlett-Packard and Intel Corporation co-sponsored the submission of specifications for C# as well as the [[Common Language Infrastructure|Common Language Infrastructure (CLI)]] to the standards organization [[Ecma International]].\nIn December 2001, ECMA released ECMA-334 ''C# Language Specification''. C# became an [[International Organization for Standardization|ISO]] standard in 2003 (ISO/IEC 23270:2003 - ''Information technology \u2014 Programming languages \u2014 C#''). ECMA had previously adopted equivalent specifications as the 2nd edition of C#, in December 2002.\n\nIn June 2005, ECMA approved edition 3 of the C# specification, and updated ECMA-334. Additions included partial classes, anonymous methods, nullable types, and [[Generic programming|generics]] (somewhat similar to C++ [[template (programming)|templates]]).\n\nIn July 2005, ECMA submitted to ISO/IEC JTC 1, via the latter's Fast-Track process, the standards and related TRs. This process usually takes 6\u20139 months.\n\nThe C# language definition and the [[Common Language Infrastructure|CLI]] are standardized under [[International Organization for Standardization|ISO]] and [[Ecma]] standards that provide [[Reasonable and Non Discriminatory Licensing|reasonable and non-discriminatory licensing]] protection from patent claims.\n\nMicrosoft has agreed not to sue open source developers for violating patents in non-profit projects for the part of the framework that is covered by the OSP.<ref>{{cite web| url = https://msdn.microsoft.com/en-us/openspecifications/dn646765| title = Patent Pledge for Open Source Developers}}</ref> Microsoft has also agreed not to enforce patents relating to [[Novell]] products against Novell's paying customers<ref>{{cite web\n |url          = http://www.microsoft.com/interop/msnovellcollab/patent_agreement.mspx\n |title        = Patent Cooperation Agreement - Microsoft & Novell Interoperability Collaboration\n |date         = November 2, 2006\n |publisher    = [[Microsoft]]\n |accessdate   = July 5, 2009\n |quote        = Microsoft, on behalf of itself and its Subsidiaries (collectively \"Microsoft\"), hereby covenants not to sue Novell's Customers and Novell's Subsidiaries' Customers for infringement under Covered Patents of Microsoft on account of such a Customer's use of specific copies of a Covered Product as distributed by Novell or its Subsidiaries (collectively \"Novell\") for which Novell has received Revenue (directly or indirectly) for such specific copies; provided the foregoing covenant is limited to use by such Customer (i) of such specific copies that are authorized by Novell in consideration for such Revenue, and (ii) within the scope authorized by Novell in consideration for such Revenue.\n |archive-url  = https://web.archive.org/web/20090517140252/http://www.microsoft.com/interop/msnovellcollab/patent_agreement.mspx\n |archive-date = May 17, 2009\n |url-status=dead\n |df           = mdy-all\n}}</ref> with the exception of a list of products that do not explicitly mention C#, .NET or Novell's implementation of .NET ([[Mono (software)|The Mono Project]]).<ref>{{cite web\n | url = http://www.microsoft.com/interop/msnovellcollab/definitions2.aspx\n | title = Definitions\n | date = November 2, 2006\n | publisher = [[Microsoft]]\n | accessdate  = July 5, 2009\n}}</ref> However, Novell maintains that Mono does not infringe any Microsoft patents.<ref>{{cite web\n | url = http://www.novell.com/linux/microsoft/faq_opensource.html\n | title = Novell Answers Questions from the Community\n | first = Justin\n | last = Steinman\n | date = November 7, 2006\n | accessdate  = July 5, 2009\n | quote = We maintain that Mono does not infringe any Microsoft patents.\n}}</ref> Microsoft has also made a specific agreement not to enforce patent rights related to the [[Moonlight (runtime)|Moonlight browser plugin]], which depends on Mono, provided it is obtained through [[Novell]].<ref name=\"MsCovenant\">{{cite web\n |url          = http://www.microsoft.com/interop/msnovellcollab/moonlight.mspx\n |title        = Covenant to Downstream Recipients of Moonlight - Microsoft & Novell Interoperability Collaboration\n |publisher    = [[Microsoft]]\n |quote        = \"Downstream Recipient\" means an entity or individual that uses for its intended purpose a Moonlight Implementation obtained directly from Novell or through an Intermediate Recipient... Microsoft reserves the right to update (including discontinue) the foregoing covenant... \"Moonlight Implementation\" means only those specific portions of Moonlight 1.0 or Moonlight 1.1 that run only as a plug-in to a browser on a Personal Computer and are not licensed under GPLv3 or a Similar License.\n |date         = September 28, 2007\n |accessdate   = March 8, 2008\n |archive-url  = https://web.archive.org/web/20100923213336/http://www.microsoft.com/interop/msnovellcollab/moonlight.mspx\n |archive-date = September 23, 2010\n |url-status=dead\n |df           = mdy-all\n}}</ref>\n\n==Implementations==\nMicrosoft is leading the development of the [[Open-source software|open-source]] reference C# compiler and set of tools, previously codenamed \"[[Microsoft Roslyn|Roslyn]]\". The compiler, which is entirely written in [[managed code]] (C#), has been opened up and functionality surfaced as APIs. It is thus enabling developers to create refactoring and diagnostics tools.<ref name=\"auto\"/><ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/|title=C# Guide|website=docs.microsoft.com}}</ref>\n\nOther C# compilers (some of which include an implementation of the [[Common Language Infrastructure]] and .NET class libraries):\n* The [[Mono (software)|Mono]] project provides an open-source C# compiler, a complete open-source implementation of the Common Language Infrastructure including the required framework libraries as they appear in the ECMA specification, and a nearly complete implementation of the Microsoft proprietary .NET class libraries up to .NET 3.5. As of Mono 2.6, no plans exist to implement [[Windows Presentation Foundation|WPF]]; [[Windows Workflow Foundation|WF]] is planned for a later release; and there are only partial implementations of [[Language Integrated Query#LINQ to SQL|LINQ to SQL]] and [[Windows Communication Foundation|WCF]].<ref>{{cite web|url=http://www.mono-project.com/Compatibility |title=Compatibility - Mono |publisher=Mono-project.com |date=December 19, 2011 |accessdate=October 4, 2012}}</ref>\n* The [[DotGNU]] project (now discontinued) also provided an open-source C# compiler, a nearly complete implementation of the Common Language Infrastructure including the required framework libraries as they appear in the ECMA specification, and subset of some of the remaining Microsoft proprietary .NET class libraries up to .NET 2.0 (those not documented or included in the ECMA specification, but included in Microsoft's standard .NET Framework distribution).\n* Microsoft's [[Shared Source Common Language Infrastructure]], codenamed \"Rotor\", provides a [[shared source]] implementation of the CLR runtime and a C# compiler licensed for educational and research use only, and a subset of the required [[Common Language Infrastructure]] framework libraries in the ECMA specification (up to C# 2.0, and supported on Windows XP only).\n* [[Xamarin]] provides tools to develop cross-platform applications for common mobile and desktop operating systems, using C# as a codebase and compiling to native code.\n\nMono is a common choice for game engines due to its cross-platform nature. The [[Unity (game engine)|Unity game engine]] uses Mono C# as its primary scripting language. The [[Godot (game engine)|Godot game engine]] has implemented an optional Mono C# module thanks to a donation of $24,000 from Microsoft.<ref>{{cite news|title=Introducing C# in Godot |work=[[Godot (game engine)|Godot Engine]] |url=https://godotengine.org/article/introducing-csharp-godot |accessdate=October 26, 2018 |url-status=live |archiveurl=https://web.archive.org/web/20181026084022/https://godotengine.org/article/introducing-csharp-godot |archivedate=October 26, 2018 |df= |date=October 21, 2017|first1=Ignacio|last1=Etcheverry}}</ref>\n\n==See also==\n{{Col-begin}}\n{{Col-break}}\n;C# topics\n* [[C Sharp syntax|C# syntax]]\n* [[Comparison of C Sharp and Java|Comparison of C# and Java]]\n* [[Comparison of C Sharp and Visual Basic .NET|Comparison of C# and Visual Basic .NET]]\n* [[Standard Libraries (CLI)|.NET standard libraries]]\n\n{{Col-break}}\n{{Portal|Computer programming}}\n;IDEs\n* [[Microsoft Visual Studio]]\n* [[Microsoft Visual Studio Express]]\n* [[Visual Studio Code]]\n* [[MonoDevelop]]\n* [[Morfik]]\n* [[SharpDevelop]]\n* [[Turbo C Sharp|Turbo C#]]\n* [[JetBrains#Rider|Rider]]\n* [[Xamarin Studio]]\n{{col-end}}\n{{Clear}}\n\n==Notes==\n{{Notelist}}\n\n==References==\n{{Reflist|30em|refs=\n\n<ref name=\"dynamic\">{{cite web |url = http://code.msdn.microsoft.com/csharpfuture/Release/ProjectReleases.aspx?ReleaseId=1686 |title = New features in C# 4.0 |first = Mads |last = Torgersen |date = October 27, 2008 |publisher = [[Microsoft]] |accessdate  = October 28, 2008 }}</ref>\n\n<ref name=\"influenced by CPP\">{{cite journal |last = Naugler |first = David |date=May 2007 |title       = C# 2.0 for C++ and Java programmer: conference workshop |journal = Journal of Computing Sciences in Colleges |volume = 22 |issue = 5 |quote = Although C# has been strongly influenced by Java it has also been strongly influenced by C++ and is best viewed as a descendant of both C++ and Java.}}</ref>\n\n<ref name=\"influenced by op\">{{cite magazine |url = http://www.computerworld.com.au/article/261958/a-z_programming_languages_c_/?pp=7 |title = The A-Z of Programming Languages: C# |date = October 1, 2008 |magazine = [[Computerworld]] |first = Naomi |last = Hamilton |accessdate  = February 12, 2010 |quote = We all stand on the shoulders of giants here and every language builds on what went before it so we owe a lot to C, C++, Java, Delphi, all of these other things that came before us. ([[Anders Hejlsberg]]) }}</ref>\n\n<ref name=\"influenced\">{{cite web |url = http://www.barrycornelius.com/papers/java5/onefile/ |title = Java 5 catches up with C# |date = December 1, 2005 |publisher  = [[University of Oxford]] Computing Services |first = Barry |last = Cornelius |accessdate = June 18, 2014 |quote = In my opinion, it is C# that has caused these radical changes to the Java language. ([[Barry Cornelius]]) }}</ref>\n}}\n\n==Further reading==\n* {{cite book | title = C# Language Pocket Reference| url = https://archive.org/details/clanguagepocketr00pete| url-access = registration| first1=Peter | last1=Drayton | first2=Ben | last2=Albahari | first3=Ted | last3=Neward| year=2002| publisher = O'Reilly| isbn=0-596-00429-X}}\n* {{cite book| title=Programming Microsoft Windows with C#| last=Petzold| first=Charles| year=2002| publisher=Microsoft Press| isbn=0-7356-1370-2| url-access=registration| url=https://archive.org/details/isbn_9780735613706}}\n\n==External links==\n{{Wikibooks|C Sharp Programming}}\n* [https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/ C# Language Specification]\n* [https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/index C# Programming Guide]\n* [https://standards.iso.org/ittf/PubliclyAvailableStandards/c075178_ISO_IEC_23270_2018.zip ISO C# Language Specification]\n* [https://github.com/dotnet/roslyn C# Compiler Platform (\"Roslyn\") source code]\n\n{{Common Language Infrastructure}}\n{{Microsoft FOSS}}\n{{Ecma International Standards}}\n{{ISO standards}}\n{{Programming languages}}\n{{List of International Electrotechnical Commission standards}}\n{{Authority control}}\n\n[[Category:American inventions]]\n[[Category:Programming languages]]\n[[Category:C Sharp programming language family| ]]\n[[Category:.NET programming languages]]\n[[Category:Class-based programming languages]]\n[[Category:Ecma standards]]\n[[Category:Functional languages]]\n[[Category:IEC standards]]\n[[Category:ISO standards]]\n[[Category:Multi-paradigm programming languages]]\n[[Category:Programming languages created in 2000]]\n[[Category:Programming languages with an ISO standard]]\n[[Category:Statically typed programming languages]]\n[[Category:2000 software]]\n", "name_user": "DavidBrooks", "label": "safe", "comment": "\u2192\u200eDesign goals:ce", "url_page": "//en.wikipedia.org/wiki/C_Sharp_(programming_language)"}
