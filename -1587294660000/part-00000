{"title_page": "Wolfram Language", "text_new": "{{cleanup|date=February 2020|reason=It is essentially marketing text, with words like \"elegant\" being out of place.}}\n{{Infobox programming language\n| name = Wolfram Language\n| logo = Wolfram Language Logo 2016.svg\n| paradigm = [[Programming paradigm#Multi-paradigm programming language|Multi-paradigm]]: [[term-rewriting]], [[Functional programming|functional]], [[Procedural programming|procedural]], [[Array programming|array]]\n| year = 1988\n| latest_test_date = \n| typing = [[dynamic typing|Dynamic]], [[strong typing|strong]]\n| designer = [[Stephen Wolfram]]\n| developer = [[Wolfram Research]]\n| latest release version = 12.0<ref>{{cite web |url=https://blog.stephenwolfram.com/2019/04/version-12-launches-today-big-jump-for-wolfram-language-and-mathematica/ |title=Version 12 Launches Today! (And It\u2019s a Big Jump for Wolfram Language and Mathematica) |last=Wolfram |first=Stephen |date=2018-03-08 |website=Wolfram Blog |publisher=Wolfram Research |access-date=2019-04-16 |archive-url=https://web.archive.org/web/20190416163117/https://blog.stephenwolfram.com/2019/04/version-12-launches-today-big-jump-for-wolfram-language-and-mathematica/ |archive-date=2019-04-16}}</ref>\n| latest release date = {{start date and age|2019|04|16}}\n| implementations = [[Wolfram Mathematica|Mathematica]], [http://www.wolfram.com/wolfram-one/ Wolfram&#124;One], [https://github.com/mathics/Mathics Mathics], [https://github.com/corywalker/expreduce Expreduce], [https://web.archive.org/web/20160119224638/http://www.cs.berkeley.edu/~fateman/lisp/mma4max/ MockMMA]\n| dialects = \n| genre = [[Computer algebra system|Computer algebra]], [[List of numerical analysis software|numerical computations]], [[information visualization]], [[List of statistical packages|statistics]], [[Graphical user interface|user interface creation]]\n| influenced_by = {{startflatlist}}\n*[[APL (programming language)|APL]]\n*[[C (programming language)|C]]\n*[[C++]]\n*[[FORTRAN]]\n*[[Lisp (programming language)|Lisp]]\n*[[Pascal (programming language)|Pascal]] \n*[[Prolog]]\n*[[Simula]] \n*[[Smalltalk]]<ref name=\"Maeder\">{{cite book |first=Roman E. |last=Maeder |title=The Mathematica\u00ae Programmer |publisher=Academic Press, Inc. |year=1994 |isbn=978-1-48321-415-3 |page=6}}</ref>\n*[[Symbolic Manipulation Program|SMP]]<ref name=\"Q&A\">{{cite web |url=https://www.wolfram.com/language/faq/  |title=Wolfram Language Q&A |publisher=Wolfram Research |accessdate=2016-12-05}}</ref>{{endflatlist}}\n| influenced = [[Julia (programming language)|Julia]]<ref name=\"Julia\">{{cite web |url=https://julialang.org/blog/2012/02/why-we-created-julia |first1=Jeff |last1=Bezanson |first2=Stefan |last2=Karpinski |first3=Viral |last3=Shah |first4=Alan |last4=Edelman |title=Why We Created Julia  |publisher=Julia Language |date=2012-02-14 |accessdate=2016-12-01}}</ref>\n| operating_system = [[Cross-platform]]\n| license = [[Proprietary license|Proprietary]] (available at no-cost for some platforms)<ref>[https://bits.blogs.nytimes.com/2015/12/14/stephen-wolfram-seeks-to-democratize-his-software/?smid=tw-nytimesbits&smtyp=cur&_r=0 Stephen Wolfram Aims to Democratize His Software] by Steve Lohr, The New York Times, December 14, 2015</ref>\n| website = {{URL|https://www.wolfram.com/language/}}\n| file_ext = .nb, .m, .wl\n}}\n\nThe '''Wolfram Language''' is a general [[multi-paradigm programming language|multi-paradigm computational language]]<ref>{{cite web|url=https://www.wolfram.com/language/for-experts/|title=Notes for Programming Language Experts about Wolfram Language|publisher=Wolfram.com|accessdate=2015-11-05}}</ref> developed by [[Wolfram Research]]. It emphasizes [[symbolic computation]], [[functional programming]], and [[rule-based programming]]<ref name=\"LangName\">{{cite web|url=https://blog.stephenwolfram.com/2013/02/what-should-we-call-the-language-of-mathematica/|title=What Should We Call the Language of Mathematica?\u2014Stephen Wolfram Blog|date=2013-02-12|publisher=Blog.stephenwolfram.com|accessdate=2015-11-05}}</ref> and can employ arbitrary [[data structure|structures]] and data.<ref name=\"LangName\"/> It is the programming language of the mathematical symbolic computation program [[Mathematica]].<ref name=\"25anv\">{{cite web|url=https://blog.wolfram.com/2013/06/23/celebrating-mathematicas-first-quarter-century/|title=Celebrating Mathematica\u2019s First Quarter Century\u2014Wolfram Blog|publisher=Blog.wolfram.com|accessdate=2015-11-05}}</ref>.\n\n==History==\n\n<!-- Genesis -->\nThe 'Wolfram Language' is a part of the initial version of Mathematica from 1988.<ref>Wolfram (1988). Mathematica, a System for Doing Mathematics By Computer.</ref> Judging by MockMMA's 1991 examples, the [[M-expression]] syntax has been there ever since, as are the symbolic, functional, and pattern-matching-by-[[rewriting]] facilities.<ref>{{cite web |title=dubrousky/mockmma: mma.lisp (built-in symbols) |url=https://github.com/dubrousky/mockmma/blob/036e7ba0773e43da50438a4f93774966cf82011f/mma.lisp |website=GitHub |language=en}}</ref> Overall, these make Wolfram a [[Turing complete]] language, with support for meta-algorithms and [[superfunction]]s.\n\nSymbolic aspects of the engine make it a computer algebra system. The language can perform integration, differentiation, and also solve [[differential equation]]s using a set of rules, [[Matrix (mathematics)|matrix]] manipulations. Also there in 1988 was the notebook model and the ability to embed sound and images, at least according to [[Theodore Gray]]'s patent.<ref>{{Cite news|url=http://bit-player.org/wp-content/extras/bph-publications/Pixel-1990-01-Hayes-Mathematica.pdf|title=Thoughts on Mathematica|last=Hayes|first=Brian|date=1990-01-01|work=Pixel|access-date=|via=}}</ref> \n\nAn online frontend for the language, [[Wolfram Alpha]], was released in 2009. Wolfram implemented this website by translating [[natural language]] statements into Wolfram-language queries that link to its database. This frontend greatly enlarged the audience of the language, and the work leading to Wolfram Alpha also means that Wolfram's implementation of the language now has built-in access to a knowledge-base as well as natural language processing functions. Wolfram also added features for more complex tasks, such as 3D modelling.<ref>{{cite web|url=https://reference.wolfram.com/language/|title=Wolfram Language & System Documentation Center|publisher=Reference.wolfram.com|accessdate=2015-11-05}}</ref>\n\nA name was finally decided for the language in 2013, as Wolfram Research decided to make a version of the language engine free for [[Raspberry Pi]] users, and they needed to come up with a name for it.<ref>{{cite web|url=https://blog.wolfram.com/2013/11/21/putting-the-wolfram-language-and-mathematica-on-every-raspberry-pi/|title=Putting the Wolfram Language (and Mathematica) on Every Raspberry Pi\u2014Wolfram Blog|publisher=Blog.wolfram.com|accessdate=2015-11-05}}</ref> It was included in the recommended software bundle that the [[Raspberry Pi Foundation]] provides for beginners, which caused some controversy due to the Wolfram language's [[Non-free software|proprietary]] nature.<ref>{{cite web|url=https://www.cnet.com/news/premium-mathematica-software-free-on-budget-raspberry-pi/|title=Premium Mathematica software free on budget Raspberry Pi - CNET|last=Sherr|first=Ian|date=2013-11-22|publisher=News.cnet.com|accessdate=2015-11-05}}</ref> Plans to port the Wolfram language to the [[Intel Edison]] were announced after the board's introduction at [[CES 2014]].<ref>{{cite web|url=https://www.heise.de/newsticker/meldung/Intels-Edison-Pentium-System-im-Format-einer-SD-Karte-2076917.html|title=Intels Edison: Pentium-System im Format einer SD-Karte &#124; heise online|author=Daniel AJ Sokolov|date=2014-11-22|publisher=Heise.de|accessdate=2015-11-05}}</ref> In 2019, a link was added to make Wolfram libraries compatible with the [[Unity (game engine)|Unity]] game engine, giving game developers access to the language's high level functions.<ref>{{cite web|url=https://gamasutra.com/view/news/212709/The_Wolfram_Language_will_soon_be_integrated_into_Unity|title=The Wolfram Language will soon be integrated into Unity|date=2014-03-10|publisher=Gamasutra|accessdate=2015-11-05}}</ref><ref>{{cite web|url=https://community.wolfram.com/groups/-/m/t/312155|title=Is there a way to use Wolfram Language in Unity3D?|year=2017|publisher=Wolfram|accessdate=2017-04-11}}</ref>\n\n== Syntax ==\n\nThe Wolfram Language syntax is overall similar to the [[M-expression]] of 1960s [[LISP]], with support for [[infix operator]]s and \"function-notation\" function calls. \n\n=== Basics ===\nThe wolfram language writes basic arithmetic expressions using [[infix operator]]s.\n\n<source lang=mathematica>\n(* This is a comment. *)\n\n4 + 3\n(* = 7 *)\n\n1 + 2 * (3 + 4)\n(* = 15 *)\n(* Note that Multiplication can be omitted: 1 + 2 (3 + 4) *)\n\n(* Divisions return rational numbers: *)\n3 / 2\n(* = 3/2 *)\n</source>\n\nFunction calls are denoted with square brackets:\n\n<source lang=mathematica>\nSin[Pi]\n(* = 0 *)\n\n(* This is the function to convert rationals to floating points: *)\nN[3 / 2]\n(* = 1.5 *)\n\n\n</source>\n\nLists are enclosed in curly brackets:\n\n=== Syntax sugar ===\nThe language may deviate from the M-expression paradigm when an alternative, more human-friendly way of showing an expression is available:\n\n* A number of formatting rules are used in this language, including {{code|TeXForm}} for typeset expressions and {{code|InputForm}} for language input.\n* Functions can also be applied using the prefix expression {{code|@}} and the postfix expression {{code|//}}.\n* Derivatives can be denoted with an apostrophe {{code|'}}.\n* The infix operators themselves are considered \"sugar\" for the [[function notation]] system.\n\nA {{code|FullForm}} formatter desugars the input:<ref>{{cite web |title=FullForm |url=https://reference.wolfram.com/language/ref/FullForm.html |website=Wolfram Language Documentation}}</ref>\n\n<source lang=mathematica>\nFullForm[1+2]\n(* = Plus[1, 2] *)\n</source>\n\n=== Functional programming ===\n[[Currying]] is supported.\n\n=== Pattern matching ===\nFunctions in the Wolfram Language are basically a case of simple patterns for replacement:\n\n<source lang=mathematica>\nF[x_] := x ^ 0\n</source>\n\nThe {{code|1=:=}} is a \"SetDelayed operator\", so that the x is not immediately looked for. {{code|x_}} is syntax sugar for {{code|Pattern[x, Blank[]]}}, i.e. a \"blank\" for any value to replace x in the rest of the evaluation.\n\nAn iteration of [[bubble sort]] is expressed as:\n<source lang=mathematica>\nsortRule := {x___,y_,z_,k___} /; y>z -> {x,z,y,k}\n(* Rule[Condition[List[PatternSequence[x, BlankNullSequence[]], Pattern[y, Blank[]], Pattern[z, Blank[]], PatternSequence[k, BlankNullSequence[]]], Greater[y, z]], List[x, z, y, k]] *)\n</source>\nThe {{code|/;}} operator is \"condition\", so that the rule only applies when {{code|y>z}}. The three underscores are an syntax for a {{code|BlankNullSequence[]}}, for a sequence that can be null.\n\nA ReplaceRepeated {{code|//.}} operator can be used to apply this rule repeatedly, until no more change happens:\n<source lang=mathematica>\n{ 9, 5, 3, 1, 2, 4 } //. sortRule\n(* = ReplaceRepeated[{ 9, 5, 3, 1, 2, 4 }, sortRule] *)\n(* = {1, 2, 3, 4, 5, 9} *)\n</source>\n\nThe pattern matching system also easily gives rise to rule-based integration and derivation. The following are excerpts from the Rubi package of rules:<ref>{{cite web |title=Welcome to Rubi, the Rule-based Integrator |url=https://rulebasedintegration.org/ |website=Rule-based Integration}}</ref>\n<source lang=mathematica>\n(* Reciprocal rule *)\nInt[1/x_,x_Symbol] :=\n  Log[x];\n(* Power rule *)\nInt[x_^m_.,x_Symbol] :=\n  x^(m+1)/(m+1) /;\nFreeQ[m,x] && NeQ[m,-1]\n</source>\n\n=== Online features ===\n<!-- Yeah, this is when it gets wishy-wishy. -->\n\n== Implementations ==\nThe official, and reference, implementation of the Wolfram Language lies in Mathematica and associated online services. These are closed source.<ref>{{cite web |last1=McLoone |first1=J |title=Why Wolfram Tech Isn\u2019t Open Source\u2014A Dozen Reasons\u2014Wolfram Blog |url=https://blog.wolfram.com/2019/04/02/why-wolfram-tech-isnt-open-source-a-dozen-reasons/ |language=en}}</ref> Wolfram Research has, however, released a [[C++]] parser of the language under the [[open source]] [[MIT License]].<ref>{{cite web |title=codeparser: Parse Wolfram Language source code as abstract syntax trees (ASTs) or concrete syntax trees (CSTs) |url=https://github.com/WolframResearch/codeparser |website=GitHub |publisher=Wolfram Research, Inc. |date=13 April 2020}}</ref> A number of libraries and functions written in this language are open source, and the reference book itself is [[open access]].<ref>{{cite web |title=Open Materials from Wolfram: Open Code, Open Source, Open Data, Open Resources |url=https://www.wolfram.com/open-materials/ |website=www.wolfram.com |language=en}}</ref>\n\nIn the three-decade-long existence of the Wolfram language, a number of [[open source]] third party implementations have also been developed. Richard Fateman's MockMMA from 1991 is of historical note. Modern ones still being maintained {{as of|2020|04|lc=yes}} include symja in [[Java]], expreduce in [[Golang]] and the [[SymPy]]-based Mathics.<ref>{{cite web |author1=Simon |title=Is there an open source implementation of Mathematica-the-language? |url=https://mathematica.stackexchange.com/a/4456 |website=Mathematica Stack Exchange}}</ref> These implementations focus on the core language and the [[computer algebra system]] that it implies, not on the online \"knowledgebase\" features of  Wolfram.\n\n==Naming==\nThe language was officially named in June 2013 although, as the backend of the computing system [[Mathematica]], it has been in use in various forms for over 30 years since Mathematica's initial release.<ref name=\"25anv\"/><ref>{{cite web|url=https://readwrite.com/2013/03/11/stephen-wolfram-has-an-algorithm-for-everything-literally/#awesm=~oekpXL21gq1fST|title=Stephen Wolfram Says He Has An Algorithm For Everything \u2014 Literally|publisher=Readwrite.com|accessdate=2015-11-05}}</ref> Before 2013, it was internally referred to by several names, such as \"M\" and \"Wolfram Language.\" Other possible names Wolfram Research considered include \"Lingua\" and \"Express.\"<ref name=\"LangName\"/>\n\n==See also==\n{{Portal|Computer programming|Mathematics}}\n* [[Stephen Wolfram]]\n* [[Wolfram Mathematica (software)|Wolfram Mathematica]]\n* [[Notebook interface]]\n* [[Wolfram Research]]\n* [[Wolfram Alpha]]\n* [[Wolfram Demonstrations Project]]\n\n==References==\n{{Reflist|30em}}\n\n==External links==\n*[https://reference.wolfram.com/language/ Documentation for the Wolfram Language]\n*[https://www.wolfram.com/language/elementary-introduction/2nd-ed/ An Elementary Introduction to the Wolfram Language]\n*[https://www.wolframcloud.com/ The Wolfram Programming Cloud]\n*[https://wolframlanguage.org/ WolframLanguage.org]: a guide to community resources about Wolfram Language\n*[https://blog.stephenwolfram.com/2013/11/something-very-big-is-coming-our-most-important-technology-project-yet/ Something Very Big Is Coming: Our Most Important Technology Project Yet]: first announcement of the Wolfram Language in Stephen Wolfram's blog\n\n{{Wolfram Research}}\n{{authority control}}\n\n[[Category:Array programming languages]]\n[[Category:Audio programming languages]]\n[[Category:Cloud platforms]]\n[[Category:Computational notebook]]\n[[Category:Computer algebra systems]]\n[[Category:Computer vision software]]\n[[Category:Concatenative programming languages]]\n[[Category:Constructed languages]]\n[[Category:Cross-platform software]]\n[[Category:Data mining and machine learning software]]\n[[Category:Data visualization software]]\n[[Category:Data-centric programming languages]]\n[[Category:Declarative programming languages]]\n[[Category:Dynamically typed programming languages]]\n[[Category:Educational programming languages]]\n[[Category:Finite element software]]\n[[Category:Formula editors]]\n[[Category:Formula manipulation languages]]\n[[Category:Functional languages]]\n[[Category:Functional programming]]\n[[Category:High-level programming languages]]\n[[Category:Homoiconic programming languages]]\n[[Category:Image processing software]]\n[[Category:Linear algebra]]\n[[Category:Literate programming]]\n[[Category:Multi-paradigm programming languages]]\n[[Category:Neural network software]]\n[[Category:Numerical linear algebra]]\n[[Category:Numerical programming languages]]\n[[Category:Object-oriented programming languages]]\n[[Category:Ontology languages]]\n[[Category:Parallel computing]]\n[[Category:Pattern matching programming languages]]\n[[Category:Programming languages created in 1988]]\n[[Category:Simulation programming languages]]\n[[Category:Social network analysis software]]\n[[Category:Software modeling language]]\n[[Category:SQL data access]]\n[[Category:Statistical programming languages]]\n[[Category:Technical analysis software]]\n[[Category:Term-rewriting programming languages]]\n[[Category:Theorem proving software systems]]\n[[Category:Wolfram Research]]\n", "text_old": "{{cleanup|date=February 2020|reason=It is essentially marketing text, with words like \"elegant\" being out of place.}}\n{{Infobox programming language\n| name = Wolfram Language\n| logo = Wolfram Language Logo 2016.svg\n| paradigm = [[Programming paradigm#Multi-paradigm programming language|Multi-paradigm]]: [[term-rewriting]], [[Functional programming|functional]], [[Procedural programming|procedural]], [[Array programming|array]]\n| year = 1988\n| latest_test_date = \n| typing = [[dynamic typing|Dynamic]], [[strong typing|strong]]\n| designer = [[Stephen Wolfram]]\n| developer = [[Wolfram Research]]\n| latest release version = 12.0<ref>{{cite web |url=https://blog.stephenwolfram.com/2019/04/version-12-launches-today-big-jump-for-wolfram-language-and-mathematica/ |title=Version 12 Launches Today! (And It\u2019s a Big Jump for Wolfram Language and Mathematica) |last=Wolfram |first=Stephen |date=2018-03-08 |website=Wolfram Blog |publisher=Wolfram Research |access-date=2019-04-16 |archive-url=https://web.archive.org/web/20190416163117/https://blog.stephenwolfram.com/2019/04/version-12-launches-today-big-jump-for-wolfram-language-and-mathematica/ |archive-date=2019-04-16}}</ref>\n| latest release date = {{start date and age|2019|04|16}}\n| implementations = [[Wolfram Mathematica|Mathematica]], [http://www.wolfram.com/wolfram-one/ Wolfram&#124;One], [https://github.com/mathics/Mathics Mathics], [https://github.com/corywalker/expreduce Expreduce], [https://web.archive.org/web/20160119224638/http://www.cs.berkeley.edu/~fateman/lisp/mma4max/ MockMMA]\n| dialects = \n| genre = [[Computer algebra system|Computer algebra]], [[List of numerical analysis software|numerical computations]], [[information visualization]], [[List of statistical packages|statistics]], [[Graphical user interface|user interface creation]]\n| influenced_by = {{startflatlist}}\n*[[APL (programming language)|APL]]\n*[[C (programming language)|C]]\n*[[C++]]\n*[[FORTRAN]]\n*[[Lisp (programming language)|Lisp]]\n*[[Pascal (programming language)|Pascal]] \n*[[Prolog]]\n*[[Simula]] \n*[[Smalltalk]]<ref name=\"Maeder\">{{cite book |first=Roman E. |last=Maeder |title=The Mathematica\u00ae Programmer |publisher=Academic Press, Inc. |year=1994 |isbn=978-1-48321-415-3 |page=6}}</ref>\n*[[Symbolic Manipulation Program|SMP]]<ref name=\"Q&A\">{{cite web |url=https://www.wolfram.com/language/faq/  |title=Wolfram Language Q&A |publisher=Wolfram Research |accessdate=2016-12-05}}</ref>{{endflatlist}}\n| influenced = [[Julia (programming language)|Julia]]<ref name=\"Julia\">{{cite web |url=https://julialang.org/blog/2012/02/why-we-created-julia |first1=Jeff |last1=Bezanson |first2=Stefan |last2=Karpinski |first3=Viral |last3=Shah |first4=Alan |last4=Edelman |title=Why We Created Julia  |publisher=Julia Language |date=2012-02-14 |accessdate=2016-12-01}}</ref>\n| operating_system = [[Cross-platform]]\n| license = [[Proprietary license|Proprietary]] (available at no-cost for some platforms)<ref>[https://bits.blogs.nytimes.com/2015/12/14/stephen-wolfram-seeks-to-democratize-his-software/?smid=tw-nytimesbits&smtyp=cur&_r=0 Stephen Wolfram Aims to Democratize His Software] by Steve Lohr, The New York Times, December 14, 2015</ref>\n| website = {{URL|https://www.wolfram.com/language/}}\n| file_ext = .nb, .m, .wl\n}}\n\nThe '''Wolfram Language''' is a general [[multi-paradigm programming language|multi-paradigm computational language]]<ref>{{cite web|url=https://www.wolfram.com/language/for-experts/|title=Notes for Programming Language Experts about Wolfram Language|publisher=Wolfram.com|accessdate=2015-11-05}}</ref> developed by [[Wolfram Research]]. It emphasizes [[symbolic computation]], [[functional programming]], and [[rule-based programming]]<ref name=\"LangName\">{{cite web|url=https://blog.stephenwolfram.com/2013/02/what-should-we-call-the-language-of-mathematica/|title=What Should We Call the Language of Mathematica?\u2014Stephen Wolfram Blog|date=2013-02-12|publisher=Blog.stephenwolfram.com|accessdate=2015-11-05}}</ref> and can employ arbitrary [[data structure|structures]] and data.<ref name=\"LangName\"/> It is the programming language of the mathematical symbolic computation program [[Mathematica]].<ref name=\"25anv\">{{cite web|url=https://blog.wolfram.com/2013/06/23/celebrating-mathematicas-first-quarter-century/|title=Celebrating Mathematica\u2019s First Quarter Century\u2014Wolfram Blog|publisher=Blog.wolfram.com|accessdate=2015-11-05}}</ref>.\n\n==History==\n\n<!-- Genesis -->\nThe 'Wolfram Language' is a part of the initial version of Mathematica from 1988.<ref>Wolfram (1988). Mathematica, a System for Doing Mathematics By Computer.</ref> Judging by MockMMA's 1991 examples, the [[M-expression]] syntax has been there ever since, as are the symbolic, functional, and pattern-matching-by-[[rewriting]] facilities.<ref>{{cite web |title=dubrousky/mockmma: mma.lisp (built-in symbols) |url=https://github.com/dubrousky/mockmma/blob/036e7ba0773e43da50438a4f93774966cf82011f/mma.lisp |website=GitHub |language=en}}</ref> Overall, these make Wolfram a [[Turing complete]] language, with support for meta-algorithms and [[superfunction]]s.\n\nSymbolic aspects of the engine make it a computer algebra system. The language can perform integration, differentiation, and also solve [[differential equation]]s using a set of rules, [[Matrix (mathematics)|matrix]] manipulations. Also there in 1988 was the notebook model and the ability to embed sound and images, at least according to [[Theodore Gray]]'s patent.<ref>{{Cite news|url=http://bit-player.org/wp-content/extras/bph-publications/Pixel-1990-01-Hayes-Mathematica.pdf|title=Thoughts on Mathematica|last=Hayes|first=Brian|date=1990-01-01|work=Pixel|access-date=|via=}}</ref> \n\nAn online frontend for the language, [[Wolfram Alpha]], was released in 2009. Wolfram implemented this website by translating [[natural language]] statements into Wolfram-language queries that link to its database. This frontend greatly enlarged the audience of the language, and the work leading to Wolfram Alpha also means that Wolfram's implementation of the language now has built-in access to a knowledge-base as well as natural language processing functions. Wolfram also added features for more complex tasks, such as 3D modelling.<ref>{{cite web|url=https://reference.wolfram.com/language/|title=Wolfram Language & System Documentation Center|publisher=Reference.wolfram.com|accessdate=2015-11-05}}</ref>\n\nA name was finally decided for the language in 2013, as Wolfram Research decided to make a version of the language engine free for [[Raspberry Pi]] users, and they needed to come up with a name for it.<ref>{{cite web|url=https://blog.wolfram.com/2013/11/21/putting-the-wolfram-language-and-mathematica-on-every-raspberry-pi/|title=Putting the Wolfram Language (and Mathematica) on Every Raspberry Pi\u2014Wolfram Blog|publisher=Blog.wolfram.com|accessdate=2015-11-05}}</ref> It was included in the recommended software bundle that the [[Raspberry Pi Foundation]] provides for beginners, which caused some controversy due to the Wolfram language's [[Non-free software|proprietary]] nature.<ref>{{cite web|url=https://www.cnet.com/news/premium-mathematica-software-free-on-budget-raspberry-pi/|title=Premium Mathematica software free on budget Raspberry Pi - CNET|last=Sherr|first=Ian|date=2013-11-22|publisher=News.cnet.com|accessdate=2015-11-05}}</ref> Plans to port the Wolfram language to the [[Intel Edison]] were announced after the board's introduction at [[CES 2014]].<ref>{{cite web|url=https://www.heise.de/newsticker/meldung/Intels-Edison-Pentium-System-im-Format-einer-SD-Karte-2076917.html|title=Intels Edison: Pentium-System im Format einer SD-Karte &#124; heise online|author=Daniel AJ Sokolov|date=2014-11-22|publisher=Heise.de|accessdate=2015-11-05}}</ref> In 2019, a link was added to make Wolfram libraries compatible with the [[Unity (game engine)|Unity]] game engine, giving game developers access to the language's high level functions.<ref>{{cite web|url=https://gamasutra.com/view/news/212709/The_Wolfram_Language_will_soon_be_integrated_into_Unity|title=The Wolfram Language will soon be integrated into Unity|date=2014-03-10|publisher=Gamasutra|accessdate=2015-11-05}}</ref><ref>{{cite web|url=https://community.wolfram.com/groups/-/m/t/312155|title=Is there a way to use Wolfram Language in Unity3D?|year=2017|publisher=Wolfram|accessdate=2017-04-11}}</ref>\n\n== Syntax ==\n\nThe Wolfram Language syntax is overall similar to the [[M-expression]] of 1960s [[LISP]], with support for [[infix operator]]s and \"function-notation\" function calls. \n\n=== Basics ===\nThe wolfram language writes basic arithmetic expressions using [[infix operator]]s.\n\n<source lang=mathematica>\n(* This is a comment. *)\n\n4 + 3\n(* = 7 *)\n\n1 + 2 * (3 + 4)\n(* = 15 *)\n(* Note that Multiplication can be omitted: 1 + 2 (3 + 4) *)\n\n(* Divisions return rational numbers: *)\n3 / 2\n(* = 3/2 *)\n</source>\n\nFunction calls are denoted with square brackets:\n\n<source lang=mathematica>\nSin[Pi]\n(* = 0 *)\n\n(* This is the function to convert rationals to floating points: *)\nN[3 / 2]\n(* = 1.5 *)\n\n\n</source>\n\nLists are enclosed in curly brackets:\n\n=== Syntax sugar ===\nThe language may deviate from the M-expression paradigm when an alternative, more human-friendly way of showing an expression is available:\n\n* A number of formatting rules are used in this language, including {{code|TeXForm}} for typeset expressions and {{code|InputForm}} for language input.\n* Functions can also be applied using the prefix expression {{code|@}} and the postfix expression {{code|//}}.\n* Derivatives can be denoted with an apostrophe {{code|'}}.\n* The infix operators themselves are considered \"sugar\" for the [[function notation]] system.\n\nA {{code|FullForm}} formatter desugars the input:<ref>{{cite web |title=FullForm |url=https://reference.wolfram.com/language/ref/FullForm.html |website=Wolfram Language Documentation}}</ref>\n\n<source lang=mathematica>\nFullForm[1+2]\n(* = Plus[1, 2] *)\n</source>\n\n=== Functional programming ===\n[[Currying]] is supported.\n\n=== Pattern matching ===\nFunctions in the Wolfram Language are basically a case of simple patterns for replacement:\n\n<source lang=mathematica>\nF[x_] := x ^ 0\n</source>\n\nThe {{code|1=:=}} is a \"SetDelayed operator\", so that the x is not immediately looked for. {{code|x_}} is syntax sugar for {{code|Pattern[x, Blank[]]}}, i.e. a \"blank\" for any value to replace x in the rest of the evaluation.\n\nAn iteration of [[bubble sort]] is expressed as:\n<source lang=mathematica>\nsortRule := {x___,y_,z_,k___} /; y>z -> {x,z,y,k}\n(* Rule[Condition[List[PatternSequence[x, BlankNullSequence[]], Pattern[y, Blank[]], Pattern[z, Blank[]], PatternSequence[k, BlankNullSequence[]]], Greater[y, z]], List[x, z, y, k]] *)\n</source>\nThe {{code|/;}} operator is \"condition\", so that the rule only applies when {{code|y>z}}. The three underscores are an syntax for a {{code|BlankNullSequence[]}}, for a sequence that can be null.\n\nA ReplaceRepeated {{code|//.}} operator can be used to apply this rule repeatedly, until no more change happens:\n<source lang=mathematica>\n{ 9, 5, 3, 1, 2, 4 } //. sortRule\n(* = ReplaceRepeated[{ 9, 5, 3, 1, 2, 4 }, sortRule] *)\n(* = {1, 2, 3, 4, 5, 9} *)\n</source>\n\nThe pattern matching system also easily gives rise to rule-based integration and derivation. The following are excerpts from the Rubi package of rules:<ref>{{cite web |title=Welcome to Rubi, the Rule-based Integrator |url=https://rulebasedintegration.org/ |website=Rule-based Integration}}</ref>\n<source lang=mathematica>\n(* Reciprocal rule *)\nInt[1/x_,x_Symbol] :=\n  Log[x];\n(* Power rule *)\nInt[x_^m_.,x_Symbol] :=\n  x^(m+1)/(m+1) /;\nFreeQ[m,x] && NeQ[m,-1]\n</source>\n\n=== Online features ===\n<!-- Yeah, this is when it gets wishy-wishy. -->\n\n== Implementations ==\nThe official, and reference, implementation of the Wolfram Language lies in Mathematica and associated online services. These are closed source.<ref>{{cite web |last1=McLoone |first1=J |title=Why Wolfram Tech Isn\u2019t Open Source\u2014A Dozen Reasons\u2014Wolfram Blog |url=https://blog.wolfram.com/2019/04/02/why-wolfram-tech-isnt-open-source-a-dozen-reasons/ |language=en}}</ref> Wolfram Research has, however, released a [[C++]] parser of the language under the [[open source]] [[MIT License]].<ref>{{cite web |title=codeparser: Parse Wolfram Language source code as abstract syntax trees (ASTs) or concrete syntax trees (CSTs) |url=https://github.com/WolframResearch/codeparser |website=GitHub |publisher=Wolfram Research, Inc. |date=13 April 2020}}</ref> A number of libraries and functions written in this language is open source, and the reference book itself is [[open access]].<ref>{{cite web |title=Open Materials from Wolfram: Open Code, Open Source, Open Data, Open Resources |url=https://www.wolfram.com/open-materials/ |website=www.wolfram.com |language=en}}</ref>\n\nIn the three-decade-long existence of the Wolfram language, a number of [[open source]] third party implementations have also been developed. Richard Fateman's MockMMA from 1991 is of historical note. Modern ones still being maintained {{as of|2020|04|lc=yes}} include symja in [[Java]], expreduce in [[Golang]] and the [[SymPy]]-based Mathics.<ref>{{cite web |author1=Simon |title=Is there an open source implementation of Mathematica-the-language? |url=https://mathematica.stackexchange.com/a/4456 |website=Mathematica Stack Exchange}}</ref> These implementations focus on the core language and the [[computer algebra system]] that it implies, not on the online \"knowledgebase\" features of  Wolfram.\n\n==Naming==\nThe language was officially named in June 2013 although, as the backend of the computing system [[Mathematica]], it has been in use in various forms for over 30 years since Mathematica's initial release.<ref name=\"25anv\"/><ref>{{cite web|url=https://readwrite.com/2013/03/11/stephen-wolfram-has-an-algorithm-for-everything-literally/#awesm=~oekpXL21gq1fST|title=Stephen Wolfram Says He Has An Algorithm For Everything \u2014 Literally|publisher=Readwrite.com|accessdate=2015-11-05}}</ref> Before 2013, it was internally referred to by several names, such as \"M\" and \"Wolfram Language.\" Other possible names Wolfram Research considered include \"Lingua\" and \"Express.\"<ref name=\"LangName\"/>\n\n==See also==\n{{Portal|Computer programming|Mathematics}}\n* [[Stephen Wolfram]]\n* [[Wolfram Mathematica (software)|Wolfram Mathematica]]\n* [[Notebook interface]]\n* [[Wolfram Research]]\n* [[Wolfram Alpha]]\n* [[Wolfram Demonstrations Project]]\n\n==References==\n{{Reflist|30em}}\n\n==External links==\n*[https://reference.wolfram.com/language/ Documentation for the Wolfram Language]\n*[https://www.wolfram.com/language/elementary-introduction/2nd-ed/ An Elementary Introduction to the Wolfram Language]\n*[https://www.wolframcloud.com/ The Wolfram Programming Cloud]\n*[https://wolframlanguage.org/ WolframLanguage.org]: a guide to community resources about Wolfram Language\n*[https://blog.stephenwolfram.com/2013/11/something-very-big-is-coming-our-most-important-technology-project-yet/ Something Very Big Is Coming: Our Most Important Technology Project Yet]: first announcement of the Wolfram Language in Stephen Wolfram's blog\n\n{{Wolfram Research}}\n{{authority control}}\n\n[[Category:Array programming languages]]\n[[Category:Audio programming languages]]\n[[Category:Cloud platforms]]\n[[Category:Computational notebook]]\n[[Category:Computer algebra systems]]\n[[Category:Computer vision software]]\n[[Category:Concatenative programming languages]]\n[[Category:Constructed languages]]\n[[Category:Cross-platform software]]\n[[Category:Data mining and machine learning software]]\n[[Category:Data visualization software]]\n[[Category:Data-centric programming languages]]\n[[Category:Declarative programming languages]]\n[[Category:Dynamically typed programming languages]]\n[[Category:Educational programming languages]]\n[[Category:Finite element software]]\n[[Category:Formula editors]]\n[[Category:Formula manipulation languages]]\n[[Category:Functional languages]]\n[[Category:Functional programming]]\n[[Category:High-level programming languages]]\n[[Category:Homoiconic programming languages]]\n[[Category:Image processing software]]\n[[Category:Linear algebra]]\n[[Category:Literate programming]]\n[[Category:Multi-paradigm programming languages]]\n[[Category:Neural network software]]\n[[Category:Numerical linear algebra]]\n[[Category:Numerical programming languages]]\n[[Category:Object-oriented programming languages]]\n[[Category:Ontology languages]]\n[[Category:Parallel computing]]\n[[Category:Pattern matching programming languages]]\n[[Category:Programming languages created in 1988]]\n[[Category:Simulation programming languages]]\n[[Category:Social network analysis software]]\n[[Category:Software modeling language]]\n[[Category:SQL data access]]\n[[Category:Statistical programming languages]]\n[[Category:Technical analysis software]]\n[[Category:Term-rewriting programming languages]]\n[[Category:Theorem proving software systems]]\n[[Category:Wolfram Research]]\n", "name_user": "Jackhynes", "label": "safe", "comment": "\u2192\u200eImplementations:Spelling/grammar/punctuation/typographical correction", "url_page": "//en.wikipedia.org/wiki/Wolfram_Language"}
