{"title_page": "Dunbar baronets", "text_new": "There have been five '''Dunbar Baronetcies'''; the first four in the [[Baronetage of Nova Scotia]], and the last in the [[Baronetage of the United Kingdom]]. There is also a [[Hope-Dunbar baronets|Hope-Dunbar Baronetcy of Baldoon]].\n\nThe Dunbar baronets of [[Mochrum]] are notable as the 11th Baronet held that title for only two days before his death. The Dunbar baronets of Hempriggs are notable as the 8th Baronetess was one of only four (or possibly five) baronetesses in history; i.e. the title passes to heirs whomsoever rather than heirs male.\n\n==Dunbar of Mochrum (29 March 1694)==\n[[File:Blason_George_Dunbar.svg|thumb|[[Coat of arms|Arms]] of the [[Clan chief|chief]] of [[Clan Dunbar]]: The baronet of Mochrum.<ref>[http://www.scotarmigers.net/ssagallery/displayimage.php?album=2&pos=34 scotarmigers.net]</ref>]]\nThe baronetcy was created  for James Dunbar of Mochrum, Wigtownshire on 29 March 1694<ref name=Cokayne94>{{Citation| editor-last=Cokayne| editor-first=George Edward |year=1904 | title= Complete Baronetage volume 4 (1665-1707) | url= https://archive.org/stream/cu31924092524408#page/n383/mode/2up   |volume=4| location=Exeter | publisher=William Pollard and Co| pages= 364| accessdate = 10 November 2018}}</ref>\n\n* [[Sir James Dunbar, 1st Baronet]] (died 1718)\n* [[Sir George Dunbar, 2nd Baronet]] (died 1747)\n* [[Sir James Dunbar, 3rd Baronet]] (died 1782)\n* [[Sir George Dunbar, 4th Baronet]] (died 1799)\n* [[Sir George Dunbar, 5th Baronet]] ({{circa|1750}}\u20131811)\n* [[Sir William Rowe Dunbar, 6th Baronet]] (1776\u20131841)\n* [[Sir William Dunbar, 7th Baronet]] (1812\u20131889)\n* [[Sir Uthred James Hay Dunbar, 8th Baronet]] (1843\u20131904)\n* [[Sir William Cospatrick Dunbar, 9th Baronet]] (1844\u20131931)\n* [[Sir James George Hawker Roland Dunbar, 10th Baronet]] (1862\u20131953)\n* [[Sir Richard Sutherland Dunbar, 11th Baronet]] (1873\u20131953), a photographer's artist, first cousin once removed of Sir James Dunbar, 10th Baronet. He held the title for only two days before his death; issue two daughters.<ref>My Forty Years with Debrett, Cyril Hankinson, Robert Hale Ltd, 1963, p. 164-5</ref>\n* [[Sir Adrian Ivor Dunbar, 12th Baronet]] (1893\u20131977), who was working as a handyman in [[Upper Fairmount, Maryland]] before inheriting the title from his distant cousin.<ref>{{cite encyclopedia\n  | encyclopedia = World Book Encyclopedia: 1954 Annual Supplement \n  | title = Personalities of 1953\n  | year = 1954\n  | publisher = Field Enterprises \n  | pages = 191, 193\n}}</ref>\n* [[Sir Jean Ivor Dunbar, 13th Baronet]] (1918\u20131993)\n* [[Sir James Michael Dunbar, 14th Baronet]] (born 1950)\n\nThe [[heir apparent]] is the eldest son of the 14th Baronet, Michael Joseph Dunbar of Mochrum, younger (born 1980)\n\n== Dunbar of Durn (29 January 1698) ==\nThe baronetcy was created for William Dunbar of Durne Fordyce, Banffshire on 29 January 1698.<ref name=Cokayne98>{{Citation| editor-last=Cokayne| editor-first=George Edward |year=1904 | title= Complete Baronetage volume 4 (1665-1707) | url=https://archive.org/stream/cu31924092524408#page/n395/mode/2up   |volume=4| location=Exeter | publisher=William Pollard and Co| pages= 377| accessdate = 10 November 2018}}</ref>\n\n* [[Sir William Dunbar, 1st Baronet]] (died c. 1710)\n* [[Sir James Dunbar, 2nd Baronet]] (1668\u20131737)\n* [[Sir William Dunbar, 3rd Baronet]] (died 1786)\n* [[Sir James Dunbar, 4th Baronet]] (died 1812)\n* [[Sir Robert Dunbar, 5th Baronet]] (1780\u20131813)\n* [[Sir William Dunbar, 6th Baronet]] (1804\u20131881)\n* [[Sir Drummond Miles Dunbar, 7th Baronet]] (1845\u20131903)\n* [[Sir George Alexander Drummond Dunbar, 8th Baronet]] (1879\u20131949)\n* [[Sir Drummond Cospatrick Ninian Dunbar, 9th Baronet]] (1917\u20132000)\n* [[Sir Robert Drummond Cospatrick Dunbar, 10th Baronet]] (born 1958)\n\nThe [[heir apparent]] to the baronetcy is Alexander William Drummond Dunbar of Durn, younger (born 1995), only son of the 10th Baronet.\n\n== Dunbar of Northfield (10 April 1700) ==\nThe baronetcy was created for William  Dunbar of Hempriggs, Caithness on 10 April 1700. <ref name=Cokayne00>{{Citation| editor-last=Cokayne| editor-first=George Edward |year=1904 | title= Complete Baronetage volume 4 (1665-1707) | url=   https://archive.org/stream/cu31924092524408#page/n409/mode/2up | volume=4| location=Exeter | publisher=William Pollard and Co| pages= 390| accessdate = 10 November  2018}}</ref>\n\n* [[Sir William Dunbar, 1st Baronet]] (died 1711)\n* [[Sir Robert Dunbar, 2nd Baronet]] (died 1742)\n* [[Sir Patrick Dunbar, 3rd Baronet]] (c. 1676\u20131763)\n* [[Sir Archibald Dunbar, 4th Baronet]] (c. 1693\u20131769)\n* [[Sir Alexander Dunbar, 5th Baronet]] (1742\u20131791)\n* [[Sir Archibald Dunbar, 6th Baronet]] (1772\u20131847)\n* [[Sir Archibald Dunbar, 7th Baronet]] (1803\u20131898)\n* [[Sir Archibald Hamilton Dunbar, 8th Baronet]] (1828\u20131910)\n* [[Sir Charles Gordon-Cumming-Dunbar, 9th Baronet]] (1844\u20131916)\n* [[Sir Archibald Edward Dunbar, 10th Baronet]] (1889\u20131969)\n* [[Sir Archibald Ranulph Dunbar, 11th Baronet]] (1927\u20132015)\n* [[Sir Edward Horace Dunbar, 12th Baronet]] (b. 1977)\n\nThe [[heir apparent]] to the baronetcy is Samuel Isaac Dunbar (b. 2011).\n\n==Dunbar of Hempriggs (21 December 1706)==\nThe baronetcy was created for Hon. James Dunbar, formerly Sutherland, of Hempriggs, Caithness on 10 or 21 December 1706. <ref name=Cokayne06>{{Citation| editor-last=Cokayne| editor-first=George Edward |year=1904 | title= Complete Baronetage volume 4 (1665-1707) | url= https://archive.org/stream/cu31924092524408#page/n461/mode/2up   |volume=4| location=Exeter | publisher=William Pollard and Co| pages= 442| accessdate = 10 November 2018}}</ref>\n\n* [[Sir James Dunbar, 1st Baronet (died 1724)|Sir James Dunbar, 1st Baronet]] (died 1724) a younger son of [[James Sutherland, 2nd Lord Duffus]] and his wife Lady Margaret Mackenzie. He was Shire Commissioner for [[Caithness (Parliament of Scotland constituency)|Caithness]] in the Parliament of Scotland 1706-07 and for [[Caithness (UK Parliament constituency)|Caithness]] in the [[British House of Commons]] 1710-13. He married Elizabeth Dunbar, daughter and heiress of [[Sir William Dunbar, 1st Baronet]], and had issue, the male line in remainder to the [[Lord Duffus|Lords Duffus]] until succeeding in 1827 and falling extinct in 1875.\n\n* [[Sir William Dunbar, 2nd Baronet]] (died 1793). He married three times. By his third wife Henrietta Rose, daughter of Hugh Rose, 16th of Kilvarock, he had a son and heir:\n* [[Sir Benjamin Dunbar, 3rd Baronet]] (1761\u20131843) also claimed to be 6th [[Lord Duffus]] from 1827 although his rights were not established by the House of Lords despite his petition 1838;.<ref>[http://thepeerage.com/p23352.htm#i233511 \"Sir Benjamin Dunbar, 3rd Bt.\"]. Retrieved 15 March 2009.</ref> He married Janet Mackay, and was succeeded by his son\n* [[Sir George Sutherland Dunbar, 4th Baronet]] (1799\u20131875), also claimed to be 7th and last [[Lord Duffus]].<ref>[http://thepeerage.com/p23352.htm#i233514 \"Sir George Sutherland Dunbar, 4th Bt.\"]. Retrieved 15 March 2009.</ref> The title then passed to a cousin\n* [[Sir Benjamin Duff Dunbar, 5th Baronet]] (1808\u20131897)\n* [[Sir George Duff-Sutherland-Dunbar, 6th Baronet]] (1878\u20131962)\n* [[Sir George Cospatrick Duff-Sutherland-Dunbar, 7th Baronet]] (1906\u20131963)\n* [[Lady Dunbar of Hempriggs|Dame Maureen Daisy Helen Dunbar, 8th Baronetess]] (1906\u20131997)\n* [[Sir Richard Francis Dunbar, 9th Baronet]] (born 1945)\n\nheiress presumptive: Sir Richard's daughter [[Emma Katherine Dunbar]] (born 1977)\n\n== Dunbar of Boath (19 September 1814) ==\n\n* [[Sir James Dunbar, 1st Baronet]] (1770\u20131836)\n* [[Sir Frederic William Dunbar, 2nd Baronet]] (1819\u20131851)\n* [[Sir James Alexander Dunbar, 3rd Baronet]] (1821\u20131883)\n* [[Sir Alexander James Dunbar, 4th Baronet]] (1870\u20131900)\n* [[Sir Frederick George Dunbar, 5th Baronet]] (1875\u20131937)\n\n==See also==\n* [[Hope-Dunbar baronets]]\n\n==References==\n<references/>\n* {{Rayment-bt|date=March 2012}}\n*Daniel J.J. Sutherland. [http://www.duffus.com/ashort.htm \"A Short History of Clan Sutherland, The Families of Sutherland, Forse and Duffus, 12th\u201319th century\"]. Retrieved 15 March 2009.\n\n{{Use dmy dates|date=March 2012}}\n\n{{DEFAULTSORT:Dunbar}}\n[[Category:Baronetcies in the Baronetage of Nova Scotia]]\n[[Category:Extinct baronetcies in the Baronetage of the United Kingdom]]\n[[Category:1694 establishments in Nova Scotia]]\n[[Category:1814 establishments in the United Kingdom]]\n", "text_old": "There have been five '''Dunbar Baronetcies'''; the first four in the [[Baronetage of Nova Scotia]], and the last in the [[Baronetage of the United Kingdom]]. There is also a [[Hope-Dunbar baronets|Hope-Dunbar Baronetcy of Baldoon]].\n\nThe Dunbar baronets of [[Mochrum]] are notable as the 11th Baronet held that title for only two days before his death. The Dunbar baronets of Hempriggs are notable as the 8th Baronetess was one of only four (or possibly five) baronetesses in history; i.e. the title passes to heirs whomsoever rather than heirs male.\n\n==Dunbar of Mochrum (29 March 1694)==\n[[File:Blason_George_Dunbar.svg|thumb|[[Coat of arms|Arms]] of the [[Clan chief|chief]] of [[Clan Dunbar]]: The baronet of Mochrum.<ref>[http://www.scotarmigers.net/ssagallery/displayimage.php?album=2&pos=34 scotarmigers.net]</ref>]]\nThe baronetcy was created  for James Dunbar of Mochrum, Wigtownshire on 29 March 1694<ref name=Cokayne94>{{Citation| editor-last=Cokayne| editor-first=George Edward |year=1904 | title= Complete Baronetage volume 4 (1665-1707) | url= https://archive.org/stream/cu31924092524408#page/n383/mode/2up   |volume=4| location=Exeter | publisher=William Pollard and Co| pages= 364| accessdate = 10 November 2018}}</ref>\n\n* [[Sir James Dunbar, 1st Baronet]] (died 1718)\n* [[Sir George Dunbar, 2nd Baronet]] (died 1747)\n* [[Sir James Dunbar, 3rd Baronet]] (died 1782)\n* [[Sir George Dunbar, 4th Baronet]] (died 1799)\n* [[Sir George Dunbar, 5th Baronet]] ({{circa|1750}}\u20131811)\n* [[Sir William Rowe Dunbar, 6th Baronet]] (1776\u20131841)\n* [[Sir William Dunbar, 7th Baronet]] (1812\u20131889)\n* [[Sir Uthred James Hay Dunbar, 8th Baronet]] (1843\u20131904)\n* [[Sir William Cospatrick Dunbar, 9th Baronet]] (1844\u20131931)\n* [[Sir James George Hawker Roland Dunbar, 10th Baronet]] (1862\u20131953)\n* [[Sir Richard Sutherland Dunbar, 11th Baronet]] (1873\u20131953), a photographer's artist, first cousin once removed of Sir James Dunbar, 10th Baronet. He held the title for only two days before his death; issue two daughters.<ref>My Forty Years with Debrett, Cyril Hankinson, Robert Hale Ltd, 1963, p. 164-5</ref>\n* [[Sir Adrian Ivor Dunbar, 12th Baronet]] (1893\u20131977), who was working as a handyman in [[Upper Fairmount, Maryland]] before inheriting the title from his distant cousin.<ref>{{cite encyclopedia\n  | encyclopedia = World Book Encyclopedia: 1954 Annual Supplement \n  | title = Personalities of 1953\n  | year = 1954\n  | publisher = Field Enterprises \n  | pages = 191, 193\n}}</ref>\n* [[Sir Jean Ivor Dunbar, 13th Baronet]] (1918\u20131993)\n* [[Sir James Michael Dunbar, 14th Baronet]] (born 1950)\n\nThe [[heir apparent]] is the eldest son of the 14th Baronet, Michael Joseph Dunbar of Mochrum, younger (born 1980)\n\n== Dunbar of Durn (29 January 1698) ==\nThe baronetcy was created for William Dunbar of Durne Fordyce, Banffshire on 29 January 1698.<ref name=Cokayne98>{{Citation| editor-last=Cokayne| editor-first=George Edward |year=1904 | title= Complete Baronetage volume 4 (1665-1707) | url=https://archive.org/stream/cu31924092524408#page/n395/mode/2up   |volume=4| location=Exeter | publisher=William Pollard and Co| pages= 377| accessdate = 10 November 2018}}</ref>\n\n* [[Sir William Dunbar, 1st Baronet]] (died c. 1710)\n* [[Sir James Dunbar, 2nd Baronet]] (1668\u20131737)\n* [[Sir William Dunbar, 3rd Baronet]] (died 1786)\n* [[Sir James Dunbar, 4th Baronet]] (died 1812)\n* [[Sir Robert Dunbar, 5th Baronet]] (1780\u20131813)\n* [[Sir William Dunbar, 6th Baronet]] (1804\u20131881)\n* [[Sir Drummond Miles Dunbar, 7th Baronet]] (1845\u20131903)\n* [[Sir George Alexander Drummond Dunbar, 8th Baronet]] (1879\u20131949)\n* [[Sir Drummond Cospatrick Ninian Dunbar, 9th Baronet]] (1917\u20132000)\n* [[Sir Robert Drummond Cospatrick Dunbar, 10th Baronet]] (born 1958)\n\nThe [[heir apparent]] to the baronetcy is Alexander William Drummond Dunbar of Durn, younger (born 1995), only son of the 10th Baronet.\n\n== Dunbar of Northfield (10 April 1700) ==\nThe baronetcy was created for William  Dunbar of Hempriggs, Caithness on 10 April 1700. <ref name=Cokayne00>{{Citation| editor-last=Cokayne| editor-first=George Edward |year=1904 | title= Complete Baronetage volume 4 (1665-1707) | url=   https://archive.org/stream/cu31924092524408#page/n409/mode/2up | volume=4| location=Exeter | publisher=William Pollard and Co| pages= 390| accessdate = 10 November  2018}}</ref>\n\n* [[Sir William Dunbar, 1st Baronet]] (died 1711)\n* [[Sir Robert Dunbar, 2nd Baronet]] (died 1742)\n* [[Sir Patrick Dunbar, 3rd Baronet]] (c. 1676\u20131763)\n* [[Sir Archibald Dunbar, 4th Baronet]] (c. 1693\u20131769)\n* [[Sir Alexander Dunbar, 5th Baronet]] (1742\u20131791)\n* [[Sir Archibald Dunbar, 6th Baronet]] (1772\u20131847)\n* [[Sir Archibald Dunbar, 7th Baronet]] (1803\u20131898)\n* [[Sir Archibald Hamilton Dunbar, 8th Baronet]] (1828\u20131910)\n* [[Sir Charles Gordon-Cumming-Dunbar, 9th Baronet]] (1844\u20131916)\n* [[Sir Archibald Edward Dunbar, 10th Baronet]] (1889\u20131969)\n* [[Sir Archibald Ranulph Dunbar, 11th Baronet]] (1927\u20132015)\n* [[Sir Edward Horace Dunbar, 12th Baronet]] (b. 1977)\n\nThe [[heir apparent]] to the baronetcy is Samuel Isaac Dunbar (b. 2011).\n\n==Dunbar of Hempriggs (21 December 1706)==\nThe baronetcy was created for Hon. James Dunbar, formerly Sutherland, of Hempriggs, Caithness on 10 or 21 December 1706. <ref name=Cokayne06>{{Citation| editor-last=Cokayne| editor-first=George Edward |year=1904 | title= Complete Baronetage volume 4 (1665-1707) | url= https://archive.org/stream/cu31924092524408#page/n461/mode/2up   |volume=4| location=Exeter | publisher=William Pollard and Co| pages= 442| accessdate = 10 November 2018}}</ref>\n\n* [[Sir James Dunbar, 1st Baronet]] (died 1724) a younger son of [[James Sutherland, 2nd Lord Duffus]] and his wife Lady Margaret Mackenzie. He was Shire Commissioner for [[Caithness (Parliament of Scotland constituency)|Caithness]] in the Parliament of Scotland 1706-07 and for [[Caithness (UK Parliament constituency)|Caithness]] in the [[British House of Commons]] 1710-13. He married Elizabeth Dunbar, daughter and heiress of [[Sir William Dunbar, 1st Baronet]], and had issue, the male line in remainder to the [[Lord Duffus|Lords Duffus]] until succeeding in 1827 and falling extinct in 1875.\n\n* [[Sir William Dunbar, 2nd Baronet]] (died 1793). He married three times. By his third wife Henrietta Rose, daughter of Hugh Rose, 16th of Kilvarock, he had a son and heir:\n* [[Sir Benjamin Dunbar, 3rd Baronet]] (1761\u20131843) also claimed to be 6th [[Lord Duffus]] from 1827 although his rights were not established by the House of Lords despite his petition 1838;.<ref>[http://thepeerage.com/p23352.htm#i233511 \"Sir Benjamin Dunbar, 3rd Bt.\"]. Retrieved 15 March 2009.</ref> He married Janet Mackay, and was succeeded by his son\n* [[Sir George Sutherland Dunbar, 4th Baronet]] (1799\u20131875), also claimed to be 7th and last [[Lord Duffus]].<ref>[http://thepeerage.com/p23352.htm#i233514 \"Sir George Sutherland Dunbar, 4th Bt.\"]. Retrieved 15 March 2009.</ref> The title then passed to a cousin\n* [[Sir Benjamin Duff Dunbar, 5th Baronet]] (1808\u20131897)\n* [[Sir George Duff-Sutherland-Dunbar, 6th Baronet]] (1878\u20131962)\n* [[Sir George Cospatrick Duff-Sutherland-Dunbar, 7th Baronet]] (1906\u20131963)\n* [[Lady Dunbar of Hempriggs|Dame Maureen Daisy Helen Dunbar, 8th Baronetess]] (1906\u20131997)\n* [[Sir Richard Francis Dunbar, 9th Baronet]] (born 1945)\n\nheiress presumptive: Sir Richard's daughter [[Emma Katherine Dunbar]] (born 1977)\n\n== Dunbar of Boath (19 September 1814) ==\n\n* [[Sir James Dunbar, 1st Baronet]] (1770\u20131836)\n* [[Sir Frederic William Dunbar, 2nd Baronet]] (1819\u20131851)\n* [[Sir James Alexander Dunbar, 3rd Baronet]] (1821\u20131883)\n* [[Sir Alexander James Dunbar, 4th Baronet]] (1870\u20131900)\n* [[Sir Frederick George Dunbar, 5th Baronet]] (1875\u20131937)\n\n==See also==\n* [[Hope-Dunbar baronets]]\n\n==References==\n<references/>\n* {{Rayment-bt|date=March 2012}}\n*Daniel J.J. Sutherland. [http://www.duffus.com/ashort.htm \"A Short History of Clan Sutherland, The Families of Sutherland, Forse and Duffus, 12th\u201319th century\"]. Retrieved 15 March 2009.\n\n{{Use dmy dates|date=March 2012}}\n\n{{DEFAULTSORT:Dunbar}}\n[[Category:Baronetcies in the Baronetage of Nova Scotia]]\n[[Category:Extinct baronetcies in the Baronetage of the United Kingdom]]\n[[Category:1694 establishments in Nova Scotia]]\n[[Category:1814 establishments in the United Kingdom]]\n", "name_user": "WatermillockCommon", "label": "safe", "comment": "\u2192\u200eDunbar of Hempriggs (21 December 1706)", "url_page": "//en.wikipedia.org/wiki/Dunbar_baronets"}
{"title_page": "Locality of reference", "text_new": "{{more citations needed|date=July 2008}}\nIn [[computer science]], '''locality of reference''', also known as the '''principle of locality''',<ref>Not to be confused with the [[principle of locality]] in physics.</ref> is the tendency of a processor to access the same set of memory locations repetitively over a short period of time.<ref>{{Cite book|title=Computer organization and architecture : designing for performance|last=William.|first=Stallings|date=2010|publisher=Prentice Hall|isbn=9780136073734|edition= 8th|location=Upper Saddle River, NJ|oclc=268788976}}</ref> There are two basic types of reference locality{{snd}} temporal and spatial locality. Temporal locality refers to the reuse of specific data, and/or resources, within a relatively small time duration. Spatial locality (also termed ''data locality''<ref name=\"NistBig1\">\"NIST Big Data Interoperability Framework: Volume 1\", [https://doi.org/10.6028/NIST.SP.1500-1r2 urn:doi:10.6028/NIST.SP.1500-1r2</ref>) refers to the use of data elements within relatively close storage locations. Sequential locality, a special case of spatial locality, occurs when data elements are arranged and accessed linearly, such as, traversing the elements in a one-dimensional [[Array data structure|array]].\n\nLocality is a type of [[predictability|predictable]] behavior that occurs in computer systems. Systems that exhibit strong ''locality of reference'' are great candidates for performance optimization through the use of techniques such as the [[CPU cache|caching]], [[prefetch instruction|prefetching]] for memory and advanced [[branch predictor]]s at the [[Pipeline (computing)|pipelining]] stage of a processor core.\n\n== Types of locality ==\nThere are several different types of locality of reference:\n\n* '''Temporal locality''': If at one point a particular memory location is referenced, then it is likely that the same location will be referenced again in the near future. There is a temporal proximity between the adjacent references to the same memory location. In this case it is common to make efforts to store a copy of the referenced data in faster memory storage, to reduce the latency of subsequent references. Temporal locality is a special case of spatial locality (see below), namely when the prospective location is identical to the present location.\n* '''Spatial locality''': If a particular storage location is referenced at a particular time, then it is likely that nearby memory locations will be referenced in the near future. In this case it is common to attempt to guess the size and shape of the area around the current reference for which it is worthwhile to prepare faster access for subsequent reference.\n** '''Memory locality''' (or ''data locality''<ref name=\"Shwe pan kone\"/>):  Spatial locality explicitly relating to [[computer memory|memory]].\n* '''[[Branch (computer science)|Branch]] locality''': If there are only a few possible alternatives for the prospective part of the path in the spatial-temporal coordinate space. This is the case when an instruction loop has a simple structure, or the possible outcome of a small system of conditional branching instructions is restricted to a small set of possibilities.  Branch locality is typically not a spatial locality since the few possibilities can be located far away from each other.\n* '''Equidistant locality''': It is halfway between the spatial locality and the branch locality.  Consider a loop accessing locations in an equidistant pattern, i.e., the path in the spatial-temporal coordinate space is a dotted line.  In this case, a simple linear function can predict which location will be accessed in the near future.\n\nIn order to benefit from the very frequently occurring temporal and spatial locality, most of the information storage systems are [[Computer data storage#Hierarchy of storage|hierarchical]]. The equidistant locality is usually supported by the diverse nontrivial increment instructions of the processors. For branch locality, the contemporary processors have sophisticated branch predictors, and on the basis of this prediction the memory manager of the processor tries to collect and preprocess the data of the plausible alternatives.\n\n==Relevance==\nThere are several reasons for locality.  These reasons are either goals to achieve or circumstances to accept, depending on the aspect.  The reasons below are not [[Disjoint sets|disjoint]]; in fact, the list below goes from the most general case to special cases:\n\n* '''Predictability''': Locality is merely one type of predictable behavior in computer systems.\n* '''Structure of the program''': Locality occurs often because of the way in which computer programs are created, for handling decidable problems.  Generally, related data is stored in nearby locations in storage.  One common pattern in computing involves the processing of several items, one at a time. This means that if a lot of processing is done, the single item will be accessed more than once, thus leading to temporal locality of reference.  Furthermore, moving to the next item implies that the next item will be read, hence spatial locality of reference, since memory locations are typically read in batches.\n* '''Linear data structures''': Locality often occurs because code contains loops that tend to reference arrays or other data structures by indices. Sequential locality, a special case of spatial locality, occurs when relevant data elements are arranged and accessed linearly. For example, the simple traversal of elements in a one-dimensional array, from the base address to the highest element would exploit the sequential locality of the array in memory.<ref>Aho, Lam, Sethi, and Ullman. \"Compilers: Principles, Techniques & Tools\" 2nd ed. Pearson Education, Inc. 2007</ref> Equidistant locality occurs when the linear traversal is over a longer area of adjacent [[data structure]]s with identical structure and size, accessing mutually corresponding elements of each structure rather than each entire structure.  This is the case when a [[Matrix (mathematics)|matrix]] is represented as a sequential matrix of rows and the requirement is to access a single column of the matrix.\n* '''Efficiency of memory hierarchy use''': Although [[random access memory]] presents the programmer with the ability to read or write anywhere at any time, in practice [[latency (engineering)|latency]] and throughput are affected by the efficiency of the [[Cache (computing)|cache]], which is improved by increasing the locality of reference. Poor locality of reference results in cache [[Thrashing (computer science)|thrashing]] and [[cache pollution]] and to avoid it, data elements with poor locality can be bypassed from cache.<ref>\"[https://www.academia.edu/24842555/A_Survey_of_Cache_Bypassing_Techniques A Survey Of Cache Bypassing Techniques]\", JLPEA, vol. 6, no. 2, 2016</ref>\n\n== General usage ==\nIf most of the time the substantial portion of the references aggregate into clusters, and if the shape of this system of clusters can be well predicted, then it can be used for performance optimization. There are several ways to benefit from locality using [[optimization (computer science)|optimization]] techniques. Common techniques are:\n\n* Increasing the locality of references (generally on the software side)\n* Exploiting the locality of references: Generally achieved on the hardware side, temporal and spatial locality can be capitalized by hierarchical storage hardware. The equidistant locality can be used by the appropriately specialized instructions of the processors, this possibility is not only the responsibility of hardware, but the software as well, whether its structure is suitable for compiling a binary program that calls the specialized instructions in question.  The branch locality is a more elaborate possibility, hence more developing effort is needed, but there is much larger reserve for future exploration in this kind of locality than in all the remaining ones.\n\n== Spatial and temporal locality usage ==\n\n=== Hierarchial memory ===\n{{main|Memory hierarchy}}\n\nHierarchical memory is a hardware optimization that takes the benefits of spatial and temporal locality and can be used on several levels of the memory hierarchy. [[Paging]] obviously benefits from temporal and spatial locality.  A cache is a simple example of exploiting temporal locality, because it is a specially designed, faster but smaller memory area, generally used to keep recently referenced data and data near recently referenced data, which can lead to potential performance increases.\n\nData elements in a cache do not necessarily correspond to data elements that are spatially close in the main memory; however, data elements are brought into cache one [[cache line]] at a time. This means that spatial locality is again important: if one element is referenced, a few neighboring elements will also be brought into cache. Finally, temporal locality plays a role on the lowest level, since results that are referenced very closely together can be kept in the [[Processor register|machine registers]]. Some programming languages (such as [[C (programming language)|C]]) allow the programmer to suggest that certain variables be kept in registers.\n\nData locality is a typical memory reference feature of regular programs (though many irregular memory access patterns exist). It makes the hierarchical memory layout profitable. In computers, memory is divided into a hierarchy in order to speed up data accesses.  The lower levels of the memory hierarchy tend to be slower, but larger.  Thus, a program will achieve greater performance if it uses memory while it is cached in the upper levels of the memory hierarchy and avoids bringing other data into the upper levels of the hierarchy that will displace data that will be used shortly in the future.  This is an ideal, and sometimes cannot be achieved.\n\nTypical memory hierarchy (access times and cache sizes are approximations of typical values used {{As of|2013|lc=on}} for the purpose of discussion; actual values and actual numbers of levels in the hierarchy vary):\n* [[CPU register]]s (8-256 registers) &ndash; immediate access, with the speed of the innermost core of the processor\n* L1 [[CPU cache]]s (32&nbsp;KiB to 512&nbsp;[[KiB]]) &ndash; fast access, with the speed of the innermost memory bus owned exclusively by each core\n* L2 CPU caches (128&nbsp;KiB to 24&nbsp;[[MiB]]) &ndash; slightly slower access, with the speed of the [[memory bus]] shared between twins of cores\n* L3 CPU caches (2&nbsp;MiB to 32&nbsp;[[MiB]]) &ndash; even slower access, with the speed of the memory bus shared between even more cores of the same processor\n* Main [[physical memory]] ([[RAM]]) (256&nbsp;MiB to 64&nbsp;[[GiB]]) &ndash; slow access, the speed of which is limited by the spatial distances and general hardware interfaces between the processor and the memory modules on the [[motherboard]]\n* Disk ([[virtual memory]], [[file system]]) (1&nbsp;GiB to 256&nbsp;[[TiB]]) &ndash; very slow, due to the narrower (in bit width), physically much longer data channel between the main board of the computer and the disk devices, and due to the extraneous software protocol needed on the top of the slow hardware interface\n* Remote memory (other computers or the cloud) (practically unlimited) &ndash; speed varies from very slow to extremely slow\n\nModern machines tend to read blocks of lower memory into the next level of the memory hierarchy.  If this displaces used memory, the [[operating system]] tries to predict which data will be accessed least (or latest) and move it down the memory hierarchy.  Prediction algorithms tend to be simple to reduce hardware complexity, though they are becoming somewhat more complicated.\n\n=== Matrix multiplication ===\nA common example is [[Matrix multiplication algorithm|matrix multiplication]]:\n\n<syntaxhighlight lang=\"pascal\" line=\"1\">\nfor i in 0..n\n  for j in 0..m\n    for k in 0..p\n      C[i][j] = C[i][j] + A[i][k] * B[k][j];\n</syntaxhighlight>\n\nBy switching the looping order for <code>j</code> and <code>k</code>, the speedup in large matrix multiplications becomes dramatic, at least for languages that put contiguous array elements in the last dimension.  This will not change the mathematical result, but it improves efficiency.  In this case, \"large\" means, approximately, more than 100,000 elements in each matrix, or enough addressable memory such that the matrices will not fit in L1 and L2 caches.\n\n<syntaxhighlight lang=\"pascal\" line=\"1\">\nfor i in 0..n\n  for k in 0..p\n    for j in 0..m\n      C[i][j] = C[i][j] + A[i][k] * B[k][j];\n</syntaxhighlight>\n\nThe reason for this speedup is that in the first case, the reads of <code>A[i][k]</code> are in cache (since the <code>k</code> index is the contiguous, last dimension), but <code>B[k][j]</code> is not, so there is a cache miss penalty on <code>B[k][j]</code>. <code>C[i][j]</code> is irrelevant, because it can be factored out of the inner loop{{why?|date=December 2019}}. In the second case, the reads and writes of <code>C[i][j]</code> are both in cache, the reads of <code>B[k][j]</code> are in cache, and the read of <code>A[i][k]</code> can be factored out of the inner loop{{Explain|date=December 2019}}. Thus, the second example has no cache miss penalty in the inner loop while the first example has a cache penalty.\n\nOn a year 2014 processor, the second case is approximately five times faster than the first case, when written in [[C (programming language)|C]] and compiled with <code>gcc -O3</code>.  (A careful examination of the disassembled code shows that in the first case, [[GNU Compiler Collection|GCC]] uses [[SIMD]] instructions and in the second case it does not, but the cache penalty is much worse than the SIMD gain.){{Citation needed|date=September 2014}}\n\nTemporal locality can also be improved in the above example by using a technique called [[Loop blocking|blocking]]. The larger matrix can be divided into evenly sized sub-matrices, so that the smaller blocks can be referenced (multiplied) several times while in memory.\n\n<syntaxhighlight lang=\"pascal\" line=\"1\">\nfor (ii = 0; ii < SIZE; ii += BLOCK_SIZE)\n  for (kk = 0; kk < SIZE; kk += BLOCK_SIZE)\n    for (jj = 0; jj < SIZE; jj += BLOCK_SIZE)\n      maxi = min(ii + BLOCK_SIZE, SIZE);\n      for (i = ii; i < maxi; i++)\n        maxk = min(kk + BLOCK_SIZE, SIZE);\n        for (k = kk; k < maxk; k++)\n          maxj = min(jj + BLOCK_SIZE, SIZE);\n          for (j = jj; j < maxj; j++)\n            C[i][j] = C[i][j] + A[i][k] * B[k][j];\n</syntaxhighlight>\n\nThe temporal locality of the above solution is provided because a block can be used several times before moving on, so that it is moved in and out of memory less often.  Spatial locality is improved because elements with consecutive memory addresses tend to be pulled up the memory hierarchy together.\n\n== See also ==\n{{Portal|Computer programming}}\n\n* [[Cache-oblivious algorithm]]\n* [[File system fragmentation]]\n* [[Partitioned global address space]]\n* [[Row- and column-major order]]\n* [[Scalable locality]]\n* [[Scratchpad memory]]\n* [[Working set]]\n\n== References ==\n{{Reflist}}\n\n== Bibliography ==\n* [[Peter J. Denning]], [http://denninginstitute.com/pjd/PUBS/CACMcols/cacmJul05.pdf \"The Locality Principle\"], ''Communications of the ACM'', Volume 48, Issue 7, (2005), Pages 19\u201324\n* Peter J. Denning, Stuart C. Schwartz, [http://denninginstitute.com/pjd/PUBS/WSProp_1972.pdf \"Properties of the Working-Set Model\"], ''Communications of the ACM'',  Volume 15,  Issue 3  (March 1972), Pages 191-198\n\n{{DEFAULTSORT:Locality Of Reference}}\n[[Category:Computer memory]]\n[[Category:Cache (computing)]]\n[[Category:Software optimization]]\n", "text_old": "{{more citations needed|date=July 2008}}\nIn [[computer science]], '''locality of reference''', also known as the '''principle of locality''',<ref>Not to be confused with the [[principle of locality]] in physics.</ref> is the tendency of a processor to access the same set of memory locations repetitively over a short period of time.<ref>{{Cite book|title=Computer organization and architecture : designing for performance|last=William.|first=Stallings|date=2010|publisher=Prentice Hall|isbn=9780136073734|edition= 8th|location=Upper Saddle River, NJ|oclc=268788976}}</ref> There are two basic types of reference locality{{snd}} temporal and spatial locality. Temporal locality refers to the reuse of specific data, and/or resources, within a relatively small time duration. Spatial locality (also termed ''data locality''<ref name=\"NistBig1\">\"NIST Big Data Interoperability Framework: Volume 1\", [https://doi.org/10.6028/NIST.SP.1500-1r2 urn:doi:10.6028/NIST.SP.1500-1r2</ref>) refers to the use of data elements within relatively close storage locations. Sequential locality, a special case of spatial locality, occurs when data elements are arranged and accessed linearly, such as, traversing the elements in a one-dimensional [[Array data structure|array]].\n\nLocality is a type of [[predictability|predictable]] behavior that occurs in computer systems. Systems that exhibit strong ''locality of reference'' are great candidates for performance optimization through the use of techniques such as the [[CPU cache|caching]], [[prefetch instruction|prefetching]] for memory and advanced [[branch predictor]]s at the [[Pipeline (computing)|pipelining]] stage of a processor core.\n\n== Types of locality ==\nThere are several different types of locality of reference:\n\n* '''Temporal locality''': If at one point a particular memory location is referenced, then it is likely that the same location will be referenced again in the near future. There is a temporal proximity between the adjacent references to the same memory location. In this case it is common to make efforts to store a copy of the referenced data in faster memory storage, to reduce the latency of subsequent references. Temporal locality is a special case of spatial locality (see below), namely when the prospective location is identical to the present location.\n* '''Spatial locality''': If a particular storage location is referenced at a particular time, then it is likely that nearby memory locations will be referenced in the near future. In this case it is common to attempt to guess the size and shape of the area around the current reference for which it is worthwhile to prepare faster access for subsequent reference.\n** '''Memory locality''' (or ''data locality''<ref name=\"NistBig1\"/>):  Spatial locality explicitly relating to [[computer memory|memory]].\n* '''[[Branch (computer science)|Branch]] locality''': If there are only a few possible alternatives for the prospective part of the path in the spatial-temporal coordinate space. This is the case when an instruction loop has a simple structure, or the possible outcome of a small system of conditional branching instructions is restricted to a small set of possibilities.  Branch locality is typically not a spatial locality since the few possibilities can be located far away from each other.\n* '''Equidistant locality''': It is halfway between the spatial locality and the branch locality.  Consider a loop accessing locations in an equidistant pattern, i.e., the path in the spatial-temporal coordinate space is a dotted line.  In this case, a simple linear function can predict which location will be accessed in the near future.\n\nIn order to benefit from the very frequently occurring temporal and spatial locality, most of the information storage systems are [[Computer data storage#Hierarchy of storage|hierarchical]]. The equidistant locality is usually supported by the diverse nontrivial increment instructions of the processors. For branch locality, the contemporary processors have sophisticated branch predictors, and on the basis of this prediction the memory manager of the processor tries to collect and preprocess the data of the plausible alternatives.\n\n==Relevance==\nThere are several reasons for locality.  These reasons are either goals to achieve or circumstances to accept, depending on the aspect.  The reasons below are not [[Disjoint sets|disjoint]]; in fact, the list below goes from the most general case to special cases:\n\n* '''Predictability''': Locality is merely one type of predictable behavior in computer systems.\n* '''Structure of the program''': Locality occurs often because of the way in which computer programs are created, for handling decidable problems.  Generally, related data is stored in nearby locations in storage.  One common pattern in computing involves the processing of several items, one at a time. This means that if a lot of processing is done, the single item will be accessed more than once, thus leading to temporal locality of reference.  Furthermore, moving to the next item implies that the next item will be read, hence spatial locality of reference, since memory locations are typically read in batches.\n* '''Linear data structures''': Locality often occurs because code contains loops that tend to reference arrays or other data structures by indices. Sequential locality, a special case of spatial locality, occurs when relevant data elements are arranged and accessed linearly. For example, the simple traversal of elements in a one-dimensional array, from the base address to the highest element would exploit the sequential locality of the array in memory.<ref>Aho, Lam, Sethi, and Ullman. \"Compilers: Principles, Techniques & Tools\" 2nd ed. Pearson Education, Inc. 2007</ref> Equidistant locality occurs when the linear traversal is over a longer area of adjacent [[data structure]]s with identical structure and size, accessing mutually corresponding elements of each structure rather than each entire structure.  This is the case when a [[Matrix (mathematics)|matrix]] is represented as a sequential matrix of rows and the requirement is to access a single column of the matrix.\n* '''Efficiency of memory hierarchy use''': Although [[random access memory]] presents the programmer with the ability to read or write anywhere at any time, in practice [[latency (engineering)|latency]] and throughput are affected by the efficiency of the [[Cache (computing)|cache]], which is improved by increasing the locality of reference. Poor locality of reference results in cache [[Thrashing (computer science)|thrashing]] and [[cache pollution]] and to avoid it, data elements with poor locality can be bypassed from cache.<ref>\"[https://www.academia.edu/24842555/A_Survey_of_Cache_Bypassing_Techniques A Survey Of Cache Bypassing Techniques]\", JLPEA, vol. 6, no. 2, 2016</ref>\n\n== General usage ==\nIf most of the time the substantial portion of the references aggregate into clusters, and if the shape of this system of clusters can be well predicted, then it can be used for performance optimization. There are several ways to benefit from locality using [[optimization (computer science)|optimization]] techniques. Common techniques are:\n\n* Increasing the locality of references (generally on the software side)\n* Exploiting the locality of references: Generally achieved on the hardware side, temporal and spatial locality can be capitalized by hierarchical storage hardware. The equidistant locality can be used by the appropriately specialized instructions of the processors, this possibility is not only the responsibility of hardware, but the software as well, whether its structure is suitable for compiling a binary program that calls the specialized instructions in question.  The branch locality is a more elaborate possibility, hence more developing effort is needed, but there is much larger reserve for future exploration in this kind of locality than in all the remaining ones.\n\n== Spatial and temporal locality usage ==\n\n=== Hierarchial memory ===\n{{main|Memory hierarchy}}\n\nHierarchical memory is a hardware optimization that takes the benefits of spatial and temporal locality and can be used on several levels of the memory hierarchy. [[Paging]] obviously benefits from temporal and spatial locality.  A cache is a simple example of exploiting temporal locality, because it is a specially designed, faster but smaller memory area, generally used to keep recently referenced data and data near recently referenced data, which can lead to potential performance increases.\n\nData elements in a cache do not necessarily correspond to data elements that are spatially close in the main memory; however, data elements are brought into cache one [[cache line]] at a time. This means that spatial locality is again important: if one element is referenced, a few neighboring elements will also be brought into cache. Finally, temporal locality plays a role on the lowest level, since results that are referenced very closely together can be kept in the [[Processor register|machine registers]]. Some programming languages (such as [[C (programming language)|C]]) allow the programmer to suggest that certain variables be kept in registers.\n\nData locality is a typical memory reference feature of regular programs (though many irregular memory access patterns exist). It makes the hierarchical memory layout profitable. In computers, memory is divided into a hierarchy in order to speed up data accesses.  The lower levels of the memory hierarchy tend to be slower, but larger.  Thus, a program will achieve greater performance if it uses memory while it is cached in the upper levels of the memory hierarchy and avoids bringing other data into the upper levels of the hierarchy that will displace data that will be used shortly in the future.  This is an ideal, and sometimes cannot be achieved.\n\nTypical memory hierarchy (access times and cache sizes are approximations of typical values used {{As of|2013|lc=on}} for the purpose of discussion; actual values and actual numbers of levels in the hierarchy vary):\n* [[CPU register]]s (8-256 registers) &ndash; immediate access, with the speed of the innermost core of the processor\n* L1 [[CPU cache]]s (32&nbsp;KiB to 512&nbsp;[[KiB]]) &ndash; fast access, with the speed of the innermost memory bus owned exclusively by each core\n* L2 CPU caches (128&nbsp;KiB to 24&nbsp;[[MiB]]) &ndash; slightly slower access, with the speed of the [[memory bus]] shared between twins of cores\n* L3 CPU caches (2&nbsp;MiB to 32&nbsp;[[MiB]]) &ndash; even slower access, with the speed of the memory bus shared between even more cores of the same processor\n* Main [[physical memory]] ([[RAM]]) (256&nbsp;MiB to 64&nbsp;[[GiB]]) &ndash; slow access, the speed of which is limited by the spatial distances and general hardware interfaces between the processor and the memory modules on the [[motherboard]]\n* Disk ([[virtual memory]], [[file system]]) (1&nbsp;GiB to 256&nbsp;[[TiB]]) &ndash; very slow, due to the narrower (in bit width), physically much longer data channel between the main board of the computer and the disk devices, and due to the extraneous software protocol needed on the top of the slow hardware interface\n* Remote memory (other computers or the cloud) (practically unlimited) &ndash; speed varies from very slow to extremely slow\n\nModern machines tend to read blocks of lower memory into the next level of the memory hierarchy.  If this displaces used memory, the [[operating system]] tries to predict which data will be accessed least (or latest) and move it down the memory hierarchy.  Prediction algorithms tend to be simple to reduce hardware complexity, though they are becoming somewhat more complicated.\n\n=== Matrix multiplication ===\nA common example is [[Matrix multiplication algorithm|matrix multiplication]]:\n\n<syntaxhighlight lang=\"pascal\" line=\"1\">\nfor i in 0..n\n  for j in 0..m\n    for k in 0..p\n      C[i][j] = C[i][j] + A[i][k] * B[k][j];\n</syntaxhighlight>\n\nBy switching the looping order for <code>j</code> and <code>k</code>, the speedup in large matrix multiplications becomes dramatic, at least for languages that put contiguous array elements in the last dimension.  This will not change the mathematical result, but it improves efficiency.  In this case, \"large\" means, approximately, more than 100,000 elements in each matrix, or enough addressable memory such that the matrices will not fit in L1 and L2 caches.\n\n<syntaxhighlight lang=\"pascal\" line=\"1\">\nfor i in 0..n\n  for k in 0..p\n    for j in 0..m\n      C[i][j] = C[i][j] + A[i][k] * B[k][j];\n</syntaxhighlight>\n\nThe reason for this speedup is that in the first case, the reads of <code>A[i][k]</code> are in cache (since the <code>k</code> index is the contiguous, last dimension), but <code>B[k][j]</code> is not, so there is a cache miss penalty on <code>B[k][j]</code>. <code>C[i][j]</code> is irrelevant, because it can be factored out of the inner loop{{why?|date=December 2019}}. In the second case, the reads and writes of <code>C[i][j]</code> are both in cache, the reads of <code>B[k][j]</code> are in cache, and the read of <code>A[i][k]</code> can be factored out of the inner loop{{Explain|date=December 2019}}. Thus, the second example has no cache miss penalty in the inner loop while the first example has a cache penalty.\n\nOn a year 2014 processor, the second case is approximately five times faster than the first case, when written in [[C (programming language)|C]] and compiled with <code>gcc -O3</code>.  (A careful examination of the disassembled code shows that in the first case, [[GNU Compiler Collection|GCC]] uses [[SIMD]] instructions and in the second case it does not, but the cache penalty is much worse than the SIMD gain.){{Citation needed|date=September 2014}}\n\nTemporal locality can also be improved in the above example by using a technique called [[Loop blocking|blocking]]. The larger matrix can be divided into evenly sized sub-matrices, so that the smaller blocks can be referenced (multiplied) several times while in memory.\n\n<syntaxhighlight lang=\"pascal\" line=\"1\">\nfor (ii = 0; ii < SIZE; ii += BLOCK_SIZE)\n  for (kk = 0; kk < SIZE; kk += BLOCK_SIZE)\n    for (jj = 0; jj < SIZE; jj += BLOCK_SIZE)\n      maxi = min(ii + BLOCK_SIZE, SIZE);\n      for (i = ii; i < maxi; i++)\n        maxk = min(kk + BLOCK_SIZE, SIZE);\n        for (k = kk; k < maxk; k++)\n          maxj = min(jj + BLOCK_SIZE, SIZE);\n          for (j = jj; j < maxj; j++)\n            C[i][j] = C[i][j] + A[i][k] * B[k][j];\n</syntaxhighlight>\n\nThe temporal locality of the above solution is provided because a block can be used several times before moving on, so that it is moved in and out of memory less often.  Spatial locality is improved because elements with consecutive memory addresses tend to be pulled up the memory hierarchy together.\n\n== See also ==\n{{Portal|Computer programming}}\n\n* [[Cache-oblivious algorithm]]\n* [[File system fragmentation]]\n* [[Partitioned global address space]]\n* [[Row- and column-major order]]\n* [[Scalable locality]]\n* [[Scratchpad memory]]\n* [[Working set]]\n\n== References ==\n{{Reflist}}\n\n== Bibliography ==\n* [[Peter J. Denning]], [http://denninginstitute.com/pjd/PUBS/CACMcols/cacmJul05.pdf \"The Locality Principle\"], ''Communications of the ACM'', Volume 48, Issue 7, (2005), Pages 19\u201324\n* Peter J. Denning, Stuart C. Schwartz, [http://denninginstitute.com/pjd/PUBS/WSProp_1972.pdf \"Properties of the Working-Set Model\"], ''Communications of the ACM'',  Volume 15,  Issue 3  (March 1972), Pages 191-198\n\n{{DEFAULTSORT:Locality Of Reference}}\n[[Category:Computer memory]]\n[[Category:Cache (computing)]]\n[[Category:Software optimization]]\n", "name_user": "Shwe pan kone", "label": "unsafe", "comment": "(\u2192\u200eTypes of locality)", "url_page": "//en.wikipedia.org/wiki/Locality_of_reference"}
{"title_page": "1992\u201393 Divizia A", "text_new": "{{Infobox football league season\n| competition                = [[Divizia A]]\n| season                     = 1992\u201393\n| winners                    = [[FC Steaua Bucure\u015fti|Steaua Bucure\u015fti]]<ref>[http://www.romaniansoccer.ro/divizia_a/tables/1992_93.shtml 1992\u201393 Divizia A]</ref>\n| matches                    = 306\n| total goals                = 805\n| biggest home win           = [[FC Steaua Bucure\u0219ti|Steaua]] 9\u20130 [[CSM \u0218colar Re\u0219i\u021ba|Re\u0219i\u021ba]]\n| biggest away win           = [[FC Universitatea Cluj|U Cluj]] 1\u20135 [[AF Gloria Bistri\u021ba|Bistri\u021ba]]\n| highest scoring            = [[FC Bra\u0219ov|Bra\u0219ov]] 5\u20134 [[Farul Constan\u021ba|Farul]]<br/>[[Farul Constan\u021ba|Farul]] 6\u20133 [[FC O\u021belul Gala\u021bi|O\u021belul]]<br/>[[FC Steaua Bucure\u0219ti|Steaua]] 9\u20130 [[CSM \u0218colar Re\u0219i\u021ba|Re\u0219i\u021ba]]\n| continentalcup1            = [[1993\u201394 UEFA Champions League|Champions League]]\n| continentalcup1 qualifiers = [[FC Steaua Bucure\u0219ti|Steaua Bucure\u0219ti]]\n| continentalcup3            = [[1993\u201394 UEFA Cup|UEFA Cup]]\n| continentalcup3 qualifiers = [[FC Dinamo Bucure\u0219ti|Dinamo Bucure\u0219ti]]<br />[[FC Rapid Bucure\u0219ti|Rapid Bucure\u0219ti]]<br />[[AF Gloria Bistri\u021ba|Gloria Bistri\u021ba]]\n| league topscorer            = [[Ilie Dumitrescu]] (24)\n| longest wins               = [[FC Steaua Bucure\u0219ti|Steaua]] (9)\n| longest unbeaten           = [[FC Dinamo Bucure\u0219ti|Dinamo]], [[FC Steaua Bucure\u0219ti|Steaua]] (15)\n| longest losses             = [[CSM \u0218colar Re\u0219i\u021ba|Re\u0219i\u021ba]], [[FC Petrolul Ploie\u0219ti|Ploie\u0219ti]] (5)\n| longest winless            = [[CSM \u0218colar Re\u0219i\u021ba|Re\u0219i\u021ba]], [[FCM Bac\u0103u|Bac\u0103u]] (9)\n| prevseason                 = [[1991\u201392 Divizia A|1991\u201392]]\n| nextseason                 = [[1993\u201394 Divizia A|1993\u201394]]\n}}\n\nThe '''1992\u201393 Divizia A''' was the seventy-fifth season of [[Divizia A]], the top-level [[association football|football]] league of [[Romania]].\n\n==League table==\nThe country obtained a third place for the UEFA Cup following the [[UN]] ban of Yugoslavia.\n<onlyinclude>{{#invoke:Sports table|main|style=WDL\n|source=[http://www.labtof.ro/romania/1992-1993/liga1/ LT]\n<!--Team positions-->\n|team1=STE |team2=DIN |team3=FCU |team4=RAP |team5=BIS |team6=ELE |team7=SSB |team8=ISB |team9=FAR |team10=OTE |team11=UCJ |team12=BRA |team13=PTM |team14=DUB |team15=PRO |team16=PET |team17=BAC |team18=RES \n\n<!-- Team qualifications here (defined below)-->\n|result1=UCL\n|result2=UC\n|result3=CWC\n|result4=UIC\n|result5=UC\n|result10=IC\n\n|result17=REL |result18=REL\n\n<!--Team results here-->\n|update=complete\n|winpoints=2\n|win_STE=25 |draw_STE=7  |loss_STE=2  |gf_STE=84 |ga_STE=22 <!-- Steaua Bucure\u0219ti -->\n|win_DIN=23 |draw_DIN=7  |loss_DIN=4  |gf_DIN=81 |ga_DIN=24 <!-- Dinamo Bucure\u0219ti -->\n|win_FCU=16 |draw_FCU=10 |loss_FCU=8  |gf_FCU=50 |ga_FCU=36 <!-- FC U Craiova -->\n|win_RAP=15 |draw_RAP=9  |loss_RAP=10 |gf_RAP=40 |ga_RAP=33 <!-- Rapid Bucure\u0219ti -->\n|win_BIS=15 |draw_BIS=5  |loss_BIS=14 |gf_BIS=45 |ga_BIS=41 <!-- Gloria Bistri\u021ba -->\n|win_ELE=13 |draw_ELE=9  |loss_ELE=12 |gf_ELE=35 |ga_ELE=32 <!-- Electroputere Craiova -->\n|win_SSB=13 |draw_SSB=8  |loss_SSB=13 |gf_SSB=40 |ga_SSB=43 <!-- Sportul Studen\u0163esc Bucure\u015fti -->\n|win_ISB=11 |draw_ISB=11 |loss_ISB=12 |gf_ISB=41 |ga_ISB=47 <!-- Inter Sibiu -->\n|win_FAR=14 |draw_FAR=4  |loss_FAR=16 |gf_FAR=57 |ga_FAR=66 <!-- Farul Constan\u021ba -->\n|win_OTE=13 |draw_OTE=6  |loss_OTE=15 |gf_OTE=40 |ga_OTE=49 <!-- O\u021belul Gala\u021bi -->\n|win_UCJ=14 |draw_UCJ=2  |loss_UCJ=18 |gf_UCJ=43 |ga_UCJ=51 <!-- Universitatea Cluj -->\n|win_BRA=12 |draw_BRA=6  |loss_BRA=16 |gf_BRA=36 |ga_BRA=45 <!-- FC Bra\u0219ov -->\n|win_PTM=8  |draw_PTM=13 |loss_PTM=13 |gf_PTM=34 |ga_PTM=46 <!-- Politehnica Timi\u0219oara -->\n|win_DUB=10 |draw_DUB=9  |loss_DUB=15 |gf_DUB=36 |ga_DUB=51 <!-- Dacia Unirea Br\u0103ila -->\n|win_PRO=9  |draw_PRO=11 |loss_PRO=14 |gf_PRO=38 |ga_PRO=53 <!-- Progresul Bucure\u015fti -->\n|win_PET=12 |draw_PET=3  |loss_PET=19 |gf_PET=47 |ga_PET=50 <!-- FC Ploie\u0219ti -->\n|win_BAC=8  |draw_BAC=9  |loss_BAC=17 |gf_BAC=24 |ga_BAC=44 <!-- Selena Bac\u0103u -->\n|win_RES=9  |draw_RES=3  |loss_RES=22 |gf_RES=34 |ga_RES=72 <!-- CSM Re\u0219i\u021ba -->\n\n<!--Team definitions (wikilinks in table)-->\n|name_STE = [[FC Steaua Bucure\u0219ti|Steaua Bucure\u0219ti]]\n|name_DIN = [[FC Dinamo Bucure\u0219ti|Dinamo Bucure\u0219ti]]\n|name_FCU = [[FC Universitatea Craiova|FC U Craiova]]\n|name_RAP = [[FC Rapid Bucure\u0219ti|Rapid Bucure\u0219ti]]\n|name_BIS = [[AF Gloria Bistri\u021ba|Gloria Bistri\u021ba]]\n|name_ELE = [[FC Caracal (2004)|Electroputere Craiova]]\n|name_SSB = [[FC Sportul Studen\u021besc Bucure\u0219ti|Sportul Studen\u0163esc Bucure\u015fti]]\n|name_ISB = [[FC Inter Sibiu|Inter Sibiu]]\n|name_FAR = [[Farul Constan\u021ba]]\n|name_OTE = [[FC O\u021belul Gala\u021bi|O\u021belul Gala\u021bi]]\n|name_UCJ = [[FC Universitatea Cluj|Universitatea Cluj]]\n|name_BRA = [[FC Bra\u0219ov]]\n|name_PTM = [[FC Politehnica Timi\u0219oara|Politehnica Timi\u0219oara]]\n|name_DUB = [[ACS Dacia Unirea Br\u0103ila|Dacia Unirea Br\u0103ila]]\n|name_PRO = [[AS Progresul Bucure\u0219ti|Progresul Bucure\u015fti]]\n|name_PET = [[FC Petrolul Ploie\u0219ti|FC Ploie\u0219ti]]\n|name_BAC = [[FCM Bac\u0103u|Selena Bac\u0103u]]\n|name_RES = [[CSM \u0218colar Re\u0219i\u021ba|CSM Re\u0219i\u021ba]]\n\n<!--Status-->\n|status_STE=C\n|status_BAC=R\n|status_RES=R\n\n<!--Table settings and rules-->\n|show_limit=5\n|class_rules=Rules for classification: 1) points; 2) goal difference; 3) number of goals scored\n\n<!--Qualification and relegation column definitions-->\n|res_col_header=QR\n|col_UCL = green1     |text_UCL = Qualification to [[1993\u201394 UEFA Champions League#First round|Champions League first round]]\n|col_CWC = yellow1    |text_CWC = Qualification to [[1993\u201394 European Cup Winners' Cup#First round|Cup Winners' Cup first round]]\n|col_UC  = blue1      |text_UC  = Qualification to [[1993\u201394 UEFA Cup#First round|UEFA Cup first round]]\n|col_UIC = blue1      |text_UIC = Qualification to [[1993\u201394 UEFA Cup#First round|UEFA Cup first round]]<br/>Qualification to [[1993 Intertoto Cup|Intertoto Cup]]\n<!--\n|col_BK  = lightgreen |text_BK  = Qualification to [[1993 Balkans Cup|Balkans Cup]]\n-->\n|col_IC  = #ccccff    |text_IC  = Qualification to [[1993 Intertoto Cup|Intertoto Cup]]\n|col_REL = red1       |text_REL = Relegation to [[1993\u201394 Divizia B|Divizia B]]\n}}</onlyinclude>\n\n==Top goalscorers==\n{| class=\"wikitable\"\n|-\n! style=\"width:28px\"| Pos\n! Player\n! Club\n! Goals\n|-\n| rowspan=\"1\" align=\"center\"| 1\n| [[Ilie Dumitrescu]]\n| [[FC Steaua Bucure\u015fti|Steaua Bucure\u015fti]]\n| align=\"center\"| 24\n|-\n| rowspan=\"1\" align=\"center\"| 2\n| [[Ilie Stan]]\n| [[FC Steaua Bucure\u015fti|Steaua Bucure\u015fti]]\n| align=\"center\"| 20\n|-\n| rowspan=\"1\" align=\"center\"| 3\n| [[Dorinel Munteanu]]\n| [[FC Dinamo Bucure\u015fti|Dinamo Bucure\u015fti]]\n| align=\"center\"| 15\n|}\n\n==References==\n\n{{Reflist}}\n\n{{Liga I seasons}}\n{{1992\u201393 in European football (UEFA)}}\n\n{{DEFAULTSORT:1992-93 Divizia A}}\n[[Category:Liga I seasons]]\n[[Category:1992\u201393 in European association football leagues|Romania]]\n[[Category:1992\u201393 in Romanian football]]\n", "text_old": "{{Infobox football league season\n| competition                = [[Divizia A]]\n| season                     = 1992\u201393\n| winners                    = [[FC Steaua Bucure\u015fti|Steaua Bucure\u015fti]]<ref>[http://www.romaniansoccer.ro/divizia_a/tables/1992_93.shtml 1992\u201393 Divizia A]</ref>\n| matches                    = 306\n| total goals                = 805\n| biggest home win           = [[FC Steaua Bucure\u0219ti|Steaua]] 9\u20130 [[CSM \u0218colar Re\u0219i\u021ba|Re\u0219i\u021ba]]\n| biggest away win           = [[FC Universitatea Cluj|U Cluj]] 1\u20135 [[AF Gloria Bistri\u021ba|Bistri\u021ba]]\n| highest scoring            = [[FC Bra\u0219ov|Bra\u0219ov]] 5\u20134 [[Farul Constan\u021ba|Farul]]<br/>[[Farul Constan\u021ba|Farul]] 6\u20133 [[FC O\u021belul Gala\u021bi|O\u021belul]]<br/>[[FC Steaua Bucure\u0219ti|Steaua]] 9\u20130 [[CSM \u0218colar Re\u0219i\u021ba|Re\u0219i\u021ba]]\n| continentalcup1            = [[1993\u201394 UEFA Champions League|Champions League]]\n| continentalcup1 qualifiers = [[FC Steaua Bucure\u0219ti|Steaua Bucure\u0219ti]]\n| continentalcup3            = [[1993\u201394 UEFA Cup|UEFA Cup]]\n| continentalcup3 qualifiers = [[FC Dinamo Bucure\u0219ti|Dinamo Bucure\u0219ti]]<br />[[FC Rapid Bucure\u0219ti|Rapid Bucure\u0219ti]]<br />[[AF Gloria Bistri\u021ba|Gloria Bistri\u021ba]]\n| league topscorer            = [[Ilie Dumitrescu]] (24)\n| longest wins               = [[FC Steaua Bucure\u0219ti|Steaua]] (9)\n| longest unbeaten           = [[FC Dinamo Bucure\u0219ti|Dinamo]], [[FC Steaua Bucure\u0219ti|Steaua]] (15)\n| longest losses             = [[CSM \u0218colar Re\u0219i\u021ba|Re\u0219i\u021ba]], [[FC Petrolul Ploie\u0219ti|Ploie\u0219ti]] (5)\n| longest winless            = [[CSM \u0218colar Re\u0219i\u021ba|Re\u0219i\u021ba]], [[FCM Bac\u0103u|Bac\u0103u]] (9)\n| prevseason                 = [[1991\u201392 Divizia A|1991\u201392]]\n| nextseason                 = [[1993\u201394 Divizia A|1993\u201394]]\n}}\n\nThe '''1992\u201393 Divizia A''' was the seventy-fifth season of [[Divizia A]], the top-level [[association football|football]] league of [[Romania]].\n\n==League table==\nThe country obtained a third place for the UEFA Cup following the [[UN]] ban of Yugoslavia.\n<onlyinclude>{{#invoke:Sports table|main|style=WDL\n|source=[http://www.labtof.ro/romania/1992-1993/liga1/ LT]\n<!--Team positions-->\n|team1=STE |team2=DIN |team3=FCU |team4=RAP |team5=BIS |team6=ELE |team7=SSB |team8=ISB |team9=FAR |team10=OTE |team11=UCJ |team12=BRA |team13=PTM |team14=DUB |team15=PRO |team16=PET |team17=BAC |team18=RES \n\n<!-- Team qualifications here (defined below)-->\n|result1=UCL\n|result2=UC\n|result3=CWC\n|result4=UIC\n|result5=UC\n|result10=IC\n\n|result17=REL |result18=REL\n\n<!--Team results here-->\n|update=complete\n|winpoints=2\n|win_STE=25 |draw_STE=7  |loss_STE=2  |gf_STE=84 |ga_STE=22 <!-- Steaua Bucure\u0219ti -->\n|win_DIN=23 |draw_DIN=7  |loss_DIN=4  |gf_DIN=81 |ga_DIN=24 <!-- Dinamo Bucure\u0219ti -->\n|win_FCU=16 |draw_FCU=10 |loss_FCU=8  |gf_FCU=50 |ga_FCU=36 <!-- FC U Craiova -->\n|win_RAP=15 |draw_RAP=9  |loss_RAP=10 |gf_RAP=40 |ga_RAP=33 <!-- Rapid Bucure\u0219ti -->\n|win_BIS=15 |draw_BIS=5  |loss_BIS=14 |gf_BIS=45 |ga_BIS=41 <!-- Gloria Bistri\u021ba -->\n|win_ELE=13 |draw_ELE=9  |loss_ELE=12 |gf_ELE=35 |ga_ELE=32 <!-- Electroputere Craiova -->\n|win_SSB=13 |draw_SSB=8  |loss_SSB=13 |gf_SSB=40 |ga_SSB=43 <!-- Sportul Studen\u0163esc Bucure\u015fti -->\n|win_ISB=11 |draw_ISB=11 |loss_ISB=12 |gf_ISB=41 |ga_ISB=47 <!-- Inter Sibiu -->\n|win_FAR=14 |draw_FAR=4  |loss_FAR=16 |gf_FAR=57 |ga_FAR=66 <!-- Farul Constan\u021ba -->\n|win_OTE=13 |draw_OTE=6  |loss_OTE=15 |gf_OTE=40 |ga_OTE=49 <!-- O\u021belul Gala\u021bi -->\n|win_UCJ=14 |draw_UCJ=2  |loss_UCJ=18 |gf_UCJ=43 |ga_UCJ=51 <!-- Universitatea Cluj -->\n|win_BRA=12 |draw_BRA=6  |loss_BRA=16 |gf_BRA=36 |ga_BRA=45 <!-- FC Bra\u0219ov -->\n|win_PTM=8  |draw_PTM=13 |loss_PTM=13 |gf_PTM=34 |ga_PTM=46 <!-- Politehnica Timi\u0219oara -->\n|win_DUB=10 |draw_DUB=9  |loss_DUB=15 |gf_DUB=36 |ga_DUB=51 <!-- Dacia Unirea Br\u0103ila -->\n|win_PRO=9  |draw_PRO=11 |loss_PRO=14 |gf_PRO=38 |ga_PRO=53 <!-- Progresul Bucure\u015fti -->\n|win_PET=12 |draw_PET=3  |loss_PET=19 |gf_PET=47 |ga_PET=50 <!-- FC Ploie\u0219ti -->\n|win_BAC=8  |draw_BAC=9  |loss_BAC=17 |gf_BAC=24 |ga_BAC=44 <!-- Selena Bac\u0103u -->\n|win_RES=9  |draw_RES=3  |loss_RES=22 |gf_RES=34 |ga_RES=72 <!-- CSM Re\u0219i\u021ba -->\n\n<!--Team definitions (wikilinks in table)-->\n|name_STE = [[FC Steaua Bucure\u0219ti|Steaua Bucure\u0219ti]]\n|name_DIN = [[FC Dinamo Bucure\u0219ti|Dinamo Bucure\u0219ti]]\n|name_FCU = [[FC Universitatea Craiova|FC U Craiova]]\n|name_RAP = [[FC Rapid Bucure\u0219ti|Rapid Bucure\u0219ti]]\n|name_BIS = [[AF Gloria Bistri\u021ba|Gloria Bistri\u021ba]]\n|name_ELE = [[FC Caracal (2004)|Electroputere Craiova]]\n|name_SSB = [[FC Sportul Studen\u021besc Bucure\u0219ti|Sportul Studen\u0163esc Bucure\u015fti]]\n|name_ISB = [[FC Inter Sibiu|Inter Sibiu]]\n|name_FAR = [[Farul Constan\u021ba]]\n|name_OTE = [[FC O\u021belul Gala\u021bi|O\u021belul Gala\u021bi]]\n|name_UCJ = [[FC Universitatea Cluj|Universitatea Cluj]]\n|name_BRA = [[FC Bra\u0219ov]]\n|name_PTM = [[FC Politehnica Timi\u0219oara|Politehnica Timi\u0219oara]]\n|name_DUB = [[ACS Dacia Unirea Br\u0103ila|Dacia Unirea Br\u0103ila]]\n|name_PRO = [[AS Progresul Bucure\u0219ti|Progresul Bucure\u015fti]]\n|name_PET = [[FC Petrolul Ploie\u0219ti|FC Ploie\u0219ti]]\n|name_BAC = [[FCM Bac\u0103u|Selena Bac\u0103u]]\n|name_RES = [[CSM \u0218colar Re\u0219i\u021ba|CSM Re\u0219i\u021ba]]\n\n<!--Status-->\n|status_STE=C\n|status_BAC=R\n|status_RES=R\n\n<!--Table settings and rules-->\n|show_limit=5\n|class_rules=Rules for classification: 1) points; 2) goal difference; 3) number of goals scored\n\n<!--Qualification and relegation column definitions-->\n|res_col_header=QR\n|col_UCL = #D0F0C0    |text_UCL = [[1993\u201394 UEFA Champions League#First round|1993\u201394 UEFA Champions League First round]]\n|col_CWC = #FFFF75    |text_CWC = [[1993\u201394 European Cup Winners' Cup#First round|1993\u201394 European Cup Winners' Cup First round]]\n|col_UC  = #A9ECFF    |text_UC  = [[1993\u201394 UEFA Cup#First round|1993\u201394 UEFA Cup First round]]\n|col_UIC = #A9ECFF    |text_UIC = [[1993\u201394 UEFA Cup#First round|1993\u201394 UEFA Cup First round]]<br/>[[1993 Intertoto Cup]]\n<!--\n|col_BK  = lightgreen |text_BK  = [[1993 Balkans Cup]]\n-->\n|col_IC  = #ccccff    |text_IC  = [[1993 Intertoto Cup]]\n|col_REL = red1       |text_REL = Relegation to [[1993\u201394 Divizia B|Divizia B]]\n}}</onlyinclude>\n\n==Top goalscorers==\n{| class=\"wikitable\"\n|-\n! style=\"width:28px\"| Pos\n! Player\n! Club\n! Goals\n|-\n| rowspan=\"1\" align=\"center\"| 1\n| [[Ilie Dumitrescu]]\n| [[FC Steaua Bucure\u015fti|Steaua Bucure\u015fti]]\n| align=\"center\"| 24\n|-\n| rowspan=\"1\" align=\"center\"| 2\n| [[Ilie Stan]]\n| [[FC Steaua Bucure\u015fti|Steaua Bucure\u015fti]]\n| align=\"center\"| 20\n|-\n| rowspan=\"1\" align=\"center\"| 3\n| [[Dorinel Munteanu]]\n| [[FC Dinamo Bucure\u015fti|Dinamo Bucure\u015fti]]\n| align=\"center\"| 15\n|}\n\n==References==\n\n{{Reflist}}\n\n{{Liga I seasons}}\n{{1992\u201393 in European football (UEFA)}}\n\n{{DEFAULTSORT:1992-93 Divizia A}}\n[[Category:Liga I seasons]]\n[[Category:1992\u201393 in European association football leagues|Romania]]\n[[Category:1992\u201393 in Romanian football]]\n", "name_user": "Jolicnikola", "label": "safe", "comment": "\u2192\u200eLeague table", "url_page": "//en.wikipedia.org/wiki/1992%E2%80%9393_Divizia_A"}
{"title_page": "Cheesemonger", "text_new": "'''Cheesemonger''' may refer to:\n*[[Cheesemonger (job)]], a tradesperson who specializes in [[cheese]]\n* A nickname for a member of the [[1st Regiment of Life Guards]], a regiment in the British Army\n{{Disambig}}\n", "text_old": "'''Cheesemonger''' may refer to:\n*[[Cheesemonger (work)]], a tradesperson who specializes in [[cheese]]\n* A nickname for a member of the [[1st Regiment of Life Guards]], a regiment in the British Army\n{{Disambig}}\n", "name_user": "Mezze stagioni", "label": "safe", "comment": "typo", "url_page": "//en.wikipedia.org/wiki/Cheesemonger"}
