{"title_page": "Hampton Falls, New Hampshire", "text_new": "{{Infobox settlement\n|official_name            = Hampton Falls, New Hampshire\n|nickname                 =\n|motto                    =\n|image_skyline            = HamptonFallsNH TownHall.jpg\n|image_seal               = Hampton Falls, NH Town Seal.png\n|imagesize                =\n|image_caption            = Town Hall\n|image_flag               =\n|image_map                = Rockingham County New Hampshire incorporated and unincorporated areas Hampton Falls highlighted.svg\n|mapsize                  = 260px\n|map_caption              = Location in [[Rockingham County, New Hampshire|Rockingham County]] and the state of [[New Hampshire]].\n|subdivision_type         = [[List of sovereign states|Country]]\n|subdivision_name         = United States\n|subdivision_type1        = [[U.S. state|State]]\n|subdivision_name1        = [[New Hampshire]]\n|subdivision_type2        = [[List of counties in New Hampshire|County]]\n|subdivision_name2        = [[Rockingham County, New Hampshire|Rockingham]]\n|government_type          =\n|leader_title             = [[Board of Selectmen]]\n|leader_name              = Larry M. Smith, Chair<br/>Edward B. Beattie<br/>Louis Gargiulo\n|leader_title1            = [[Town Administrator]]\n|leader_name1             = Lori A. Ruest\n|established_title        = [[Incorporation (municipal government)|Incorporated]]\n|established_date         = 1726\n|area_magnitude           = 1 E8\n|area_total_km2           = 32.4\n|area_total_sq_mi         = 12.5\n|area_land_km2            = 31.6\n|area_land_sq_mi          = 12.2\n|area_water_km2           = 0.8\n|area_water_sq_mi         = 0.3\n|area_water_percent       = 2.4\n|population_as_of         = [[2010 United States Census|2010]]\n|population_note          =\n|population_total         = 2236\n|population_density_km2   = \n|population_density_sq_mi = auto\n|timezone                 = [[Eastern Standard Time Zone|Eastern]]\n|utc_offset               = -5\n|timezone_DST             = [[Eastern Daylight Time Zone|Eastern]]\n|utc_offset_DST           = -4\n|coordinates              = {{coord|42|54|58|N|70|51|49|W|region:US-NH|display=inline,title}}\n|elevation_m              = 20\n|elevation_ft             = 66\n|website                  = {{URL|www.hamptonfalls.org}}\n|postal_code_type         = [[ZIP code]]\n|postal_code              = 03844\n|area_code                = [[Area code 603|603]]\n|blank_name               = [[Federal Information Processing Standard|FIPS code]]\n|blank_info               = 33-33460\n|blank1_name              = [[Geographic Names Information System|GNIS]] feature ID\n|blank1_info              = 0873617\n|footnotes                =\n}}\n'''Hampton Falls''' (formerly the Third Parish and Hampton falls) is a [[New England town]] in [[Rockingham County, New Hampshire|Rockingham County]], [[New Hampshire]], United States. The population was 2,236 at the [[2010 United States Census|2010 census]].<ref name=2010Census>United States Census Bureau, [https://www.census.gov U.S. Census website], 2010 Census figures. Retrieved March 23, 2011.</ref>\n\n==History==\n<!-- some stuff http://www.seacoastonline.com/apps/pbcs.dll/article?AID=/20080311/NEWS/803110378 -->\n[[Image:Hampton Falls old map.gif|thumb|left|A map of the center of what is now Hampton Falls in 1638]]\nThe land of Hampton Falls was first settled by [[European ethnic groups|European]]s in 1638, the same time as [[Hampton, New Hampshire|Hampton]], which it was then part of. The settlement of Hampton joined [[Norfolk County, Massachusetts Colony]], in 1643, along with [[Exeter, New Hampshire|Exeter]], [[Dover, New Hampshire|Dover]], [[Portsmouth, New Hampshire|Portsmouth]], and [[Salisbury, Massachusetts|Salisbury]] and [[Haverhill, New Hampshire|Haverhill]] of [[Massachusetts]]. The county existed until 1679, when the modern-day New Hampshire towns separated from [[Massachusetts Bay Colony]].<ref name=Coolidge>{{Cite book| last = Coolidge| first = Austin J.| author2=John B. Mansfield| title = A History and Description of New England| publisher = A.J. Coolidge| year = 1859| location = Boston, Massachusetts| page = [https://archive.org/details/bub_gb_OcoMAAAAYAAJ/page/n555 515]| url = https://archive.org/details/bub_gb_OcoMAAAAYAAJ| quote = coolidge mansfield history description new england 1859.}}</ref>\n\nRecords indicate a building that became a church may have existed near where the Weare Monument now is in 1665, but when it was first built is unknown. It was not until 1709 that the town was officially established as the Third Parish of [[Hampton, New Hampshire|Hampton]]. The Third Parish originally consisted of all land south of the [[Taylor River (New Hampshire)|Taylor River]] and north of the New Hampshire/[[Massachusetts]] border, or the modern-day towns of [[Seabrook, New Hampshire|Seabrook]], [[Kensington, New Hampshire|Kensington]], and Hampton Falls. A meeting house was built shortly after and [[Thomas Crosby (New Hampshire)|Thomas Crosby]] became the town's minister for the church. Forty-nine members of the Hampton Church were dismissed late in 1711, only to become members of the new church in the Third Parish. Parish officers and a representative were chosen in 1718. The first town meeting was held and town records began that year also. The {{convert|7400|acre|km2|adj=on}} town received its grant as an independent town with the name \"Hampton falls\" in 1726, but was still referred to as a parish until the [[American Revolutionary War|Revolutionary War]]. Those who did use its actual name in writing spelled it with a lowercase f until around the same time.<ref name=\"Hist. of Hampton Falls I\">{{cite book|last=Brown|first=Warren|year=1900|title=History of Hampton Falls Vol. I|publisher=John E. Clarke Co.|location=Manchester, New Hampshire}}</ref>\n\nAn attempt was made in 1732 to separate the western portion of Hampton falls and make it a parish of [[Kingston, New Hampshire|Kingston]]. The proposal failed in a way, yet succeeded in another; the land was separated, but it did not become part of Kingston, but became a town of its own, Kensington.<ref name=\"Hist. of Hampton Falls II\">{{cite book|last=Brown|first=Warren|year=1918|title=History of Hampton Falls Vol. II|publisher=The Rumford Press|location=Concord, New Hampshire}}</ref>\n\nA disease known as the [[Throat Distemper]] (now thought to have been a malignant form of [[diphtheria]]) infected the town with its symptoms in 1735 and 1736. Two-hundred and fourteen people of Hampton Falls perished, 96 of them being under the age of ten. Only two homes in town were throat distemper free. It passed through the town again in 1754, with far fewer casualties, but still many.<ref name=\"Hist. of Hampton Falls I\"/>\n\n[[File:John Hall, Hampton Falls, N.H, by Hobbs, W. N. (William N.), 1830-1881.jpg|thumb|left|Town Hall, completed in 1877, designed by Portsmouth architect Isaiah Wilson]]\n[[File:Fidelity Jumper Classic.jpg|thumb|left|2008 Fidelity Jumper Classic, held at the Silver Oak Equestrian Center]]\nSeventy-two people wanted Hampton Falls (which then included Seabrook and Kensington) to become a part of Massachusetts in 1739, including Meshech Weare, but the proposal failed in the end. In 1765, the [[Presbyterian]]s of the town wanted to form a new parish in the southern portion of the town, where a church of their religion existed. A town meeting was held on December 30 when the rest of the villagers learned of the Presbyterians' plans, and it was decided that the town would be separated into two. The new parish was formed in 1768, and became incorporated under the name [[Seabrook, New Hampshire|Seabrook]] shortly after. Hampton Falls was considered one of the leading manufacturing towns in the entire state of New Hampshire around the time of 1770.<ref name=\"Hist. of Hampton Falls I\"/>\n\nA plan to unite Seabrook and portions of Hampton Falls together was thought up in 1782. The town would've been called [[New Hampton Falls, New Hampshire|New Hampton Falls]], but Hampton Falls was successful in making the proposal fail. In 1835, the town of Hampton Falls had a new meeting-house erected. Where in town it existed is unknown.<ref name=\"Hist. of Hampton Falls I\"/>\n\nOn the night between October 29 and October 30 in 1827, an [[New England Earthquake of 1827|earthquake]] struck the small town. A flash of light from a fault in the southern region of the town occurred, with violent trembling shortly following. It caused at least three chimneys to collapse partially or completely, with several others cracked. Another, more severe earthquake also struck Hampton Falls on November 18, 1755, causing more, but not a lot of damage.<ref name=\"Hist. of Hampton Falls I\"/>\n\nOn May 21, 2006, an F2<ref name=\"wunderground\">[http://www.wunderground.com/US/NH/North_Hampton.html North Hampton, New Hampshire (03862) Conditions & Forecast : Weather Underground<!-- Bot generated title -->]</ref> tornado formed in the town at around 6:30&nbsp;p.m. EST.<ref name=\"spc\">[http://www.spc.noaa.gov/climo/reports/060521_rpts.html Storm Prediction Center 20060521's Storm Reports<!-- Bot generated title -->]</ref> It was near [[Interstate 95 in New Hampshire|Interstate 95]] where it overturned a truck, leaving two injured men and a kayak in a tree.<ref name=\"ncdc\">[http://www4.ncdc.noaa.gov/cgi-win/wwcgi.dll?wwevent~ShowEvent~623895 NCDC: Event Details]</ref>\n<!-- Some good info at http://www.city-data.com/city/Hampton-Falls-New-Hampshire.html mention stats, the other tornadoes. Also add info on Wakeda Bow Echo -->\n\n==Geography==\nThe city of [[Boston, Massachusetts|Boston]], [[Massachusetts]] is only {{convert|45|mi|km}} away, and [[Portsmouth, New Hampshire|Portsmouth]], [[New Hampshire]] is a mere {{convert|15|mi|km}} to the north.<ref name=\"hamptonfalls\">[http://www.hamptonfalls.org/ Town of Hampton Falls, New Hampshire<!-- Bot generated title -->] {{webarchive|url=https://web.archive.org/web/20060804033353/http://www.hamptonfalls.org/ |date=2006-08-04 }}</ref>\n\nThe highest point in town is the summit of Great Hill, at {{convert|230|ft|m}} above [[sea level]]), just north of the Weare mills on the [[Hampton Falls River]], at an altitude of {{convert|61|ft|m}} above sea level.<ref name=\"Hist. of Hampton Falls I\"/> According to the [[United States Census Bureau]], the town has a total area of {{convert|12.5|sqmi|km2|1}}, of which {{convert|12.2|sqmi|km2|abbr=on|1}} is land and {{convert|0.3|sqmi|km2|abbr=on}} is water, comprising 2.4% of the town. Hampton Falls lies fully within the [[Piscataqua River]] (Coastal) [[Drainage basin|watershed]].<ref name=watershed>{{cite book |title=Water Use in New Hampshire: An Activities Guide for Teachers |url=http://nh.water.usgs.gov/Publications/nh.intro.html |last=Foster |first=Debra H. |author2=Batorfalvy, Tatianna N. |author3= Medalie, Laura  |publisher=U.S. Department of the Interior and U.S. Geological Survey |year=1995}}</ref>\n\nThe town is served by [[Interstate 95 in New Hampshire|Interstate 95]], [[U.S. Route 1 in New Hampshire|U.S. Route 1]], [[New Hampshire Route 84]] and [[New Hampshire Route 88]].\n\n===Adjacent municipalities===\n* [[Hampton, New Hampshire]] (north)\n* [[Seabrook, New Hampshire]] (south)\n* [[Kensington, New Hampshire]] (west)\n* [[Exeter, New Hampshire]] (northwest)\n\n==Demographics==\n{{US Census population\n|1790= 541\n|1800= 519\n|1810= 570\n|1820= 572\n|1830= 582\n|1840= 656\n|1850= 640\n|1860= 621\n|1870= 679\n|1880= 678\n|1890= 623\n|1900= 560\n|1910= 552\n|1920= 483\n|1930= 481\n|1940= 493\n|1950= 629\n|1960= 885\n|1970= 1254\n|1980= 1372\n|1990= 1467\n|2000= 1890\n|2010= 2236\n|estyear=2017\n|estimate=2348\n|estref=<ref name=\"USCensusEst2017\">{{cite web|url=https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US33.06100|title=Annual Estimates of the Resident Population: April 1, 2010 to July 1, 2017 (PEPANNRES): Minor Civil Divisions \u2013 New Hampshire|accessdate=November 15, 2018|archive-url=https://archive.today/20200213183945/https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US33.06100|archive-date=February 13, 2020|url-status=dead}}</ref>\n|footnote=Sources:<ref name=2010Census/><ref name=\"Hist. of Hampton Falls I\"/><ref name=\"nhes\"/>\n}}\nAs of the [[census]]<ref name=\"GR2\">{{cite web|url=https://www.census.gov|publisher=[[United States Census Bureau]]|accessdate=2008-01-31|title=U.S. Census website}}</ref> of 2000, there were 1,890 people, 704 households, and 546 families residing in the town.  The [[population density]] was 153.9 people per square mile (59.4/km\u00b2).  There were 729 housing units at an average density of 59.7 per square mile (23.0/km\u00b2).  The racial makeup of the town was 98.46% [[White (U.S. Census)|White]], 0.05% [[African American (U.S. Census)|African American]], 0.74% [[Asian (U.S. Census)|Asian]], 0.05% from [[Race (United States Census)|other races]], and 0.69% from two or more races. [[Hispanic (U.S. Census)|Hispanic]] or [[Latino (U.S. Census)|Latino]] of any race were 0.69% of the population.\n\nThere were 704 households out of which 34.7% had children under the age of 18 living with them, 70.5% were [[Marriage|married couples]] living together, 5.1% had a female householder with no husband present, and 22.4% were non-families. 16.5% of all households were made up of individuals and 7.8% had someone living alone who was 65 years of age or older. The average household size was 2.67 and the average family size was 3.03.\n\nIn the town, the population was spread out with 25.7% under the age of 18, 4.0% from 18 to 24, 27.1% from 25 to 44, 30.4% from 45 to 64, and 12.8% who were 65 years of age or older.  The median age was 42 years. For every 100 females, there were 102.8 males. For every 100 females age 18 and over, there were 96.3 males.\n\nThe median income for a household in the town was $76,348, and the median income for a family was $86,229. Males had a median income of $60,250 versus $36,750 for females. The [[per capita income]] for the town was $35,060. About 2.2% of families and 2.9% of the population were below the [[poverty line]], including 3.1% of those under age 18 and 3.3% of those age 65 or over.\n\nAccording to State figures, \"Population in Hampton Falls tripled over the last fifty years, growing above the statewide average rate in three of the five decades. Decennial growth rates ranged from a nine percent increase between 1970-1980 to a 42 percent increase between 1960-1970. Population in Hampton Falls grew by a total of 1,251 residents, going from 629 in 1950 to 1,880 residents in 2000.\"<ref name=\"nhes\"/>\n\n==Government==\nLike many [[New England town]]s, Hampton Falls has a [[town meeting]]/[[board of selectmen]] form of government. The current selectmen are Ed Beatty, Mark Lane, and Lou Gargiola . Town meeting is held annually in the school auditorium, and elections are conducted using a New Hampshire Senate Bill 2 system.{{citation needed|date=November 2014}}\n\n==Economy==\n[[Image:HamptonFallsNH EastSchool.jpg|thumb|right|The old East School, adjacent to the public library]]\nOnce a [[farming]] and [[lumber]]ing community, the numerous falls on the Taylor River provided [[water power]] for mills operating within the town. Today it is largely residential, with numerous antique shops along [[U.S. Route 1 in New Hampshire|U.S. 1]].<ref name=\"nhes\">{{cite web|url=http://www.nhes.state.nh.us/elmi/htmlprofiles/hamptonfalls.html |title=Hampton Falls, New Hampshire |publisher=NH Dept. of Employment Security |access-date=2008-07-22 |url-status=dead |archive-url=https://web.archive.org/web/20071009145531/http://www.nhes.state.nh.us/elmi/htmlprofiles/hamptonfalls.html |archive-date=2007-10-09 |df= }}</ref> [[Applecrest Farm Orchards]], established in 1913, is the town's largest employer, with 18 employees.<ref name=\"applecrest\">[http://www.applecrest.com/ Applecrest Orchards] official site</ref>\n\n==Education==\nCurrently, the Lincoln Akerman School is the only public school in town. But at one point, five public schools existed, the North, South, West, and two East schools. One of the East Schools, founded around the time of the [[American Civil War|Civil War]], burned down in 1947 when its furnace exploded, and the Lincoln Akerman School replaced it in 1949. While a new school was being built, students had to travel to the neighboring town of [[Seabrook, New Hampshire]] to attend school. The other East School was moved to an area near the new library. Another school was turned into a home, and another was crushed by a boulder one winter when students pushed it off a hill.{{citation needed|date=November 2014}}\n\nHigh school students attend [[Winnacunnet High School]] in the neighboring town of [[Hampton, New Hampshire|Hampton]].<ref name=\"nhes\"/>\n\nHeronfield Academy, a private [[Episcopal Church (United States)|Episcopal]] middle school, is located on Exeter Road on the border of Hampton Falls and Exeter.<ref>[http://heronfield.org Heronfield Academy]</ref>\n\n===Lincoln Akerman School===\n[[File:lasschoolfront.jpg|thumb|right|Lincoln Akerman School]]\n'''Lincoln H. Akerman School''' ({{Coord|42|54|59|N|70|52|01|W|type:edu|display=inline}}) is a kindergarten through 8th grade [[elementary school]] and [[middle school]]. The school was constructed in 1949 and named after Lincoln Akerman (1916\u20131942), a local war hero and member of the prominent New Hampshire Akerman family. Akerman was the first Hampton Falls soldier reported to lose his life in [[World War II]].<ref>{{cite web|title=Pvt Lincoln Herbert Ackerman|url=https://www.findagrave.com/memorial/42431504}}</ref> Another famous Akerman from the area was [[Amos T. Akerman]] (1821\u20131880), [[United States Attorney General]] from 1870-1871.\n\nIn 1993, kindergarten was added to the school, though it is not required in the state of New Hampshire.\n\nIn the mid-1990s [[Dan Brown]], future best-selling author of ''[[The Da Vinci Code]]'', taught Spanish to the school's 6th, 7th, and 8th graders.\n\nIn 2003, Lincoln Akerman was cited in ''The Hampton Union'' for, according to the New Hampshire Educational Improvement and Assessment Program (NHEIAP), being notable for having scores that were \"significantly above the state average\" and climbing. Specific subjects cited were [[social studies]], [[language arts]], and [[math]].<ref name=\"Lincoln Akerman sees higher language, math scores\">[http://www.seacoastonline.com/2003news/hampton/09192003/news/51010.htm Hampton Union Local News: Lincoln Akerman sees higher language, math scores<!-- Bot generated title -->] {{webarchive|url=https://web.archive.org/web/20041231093818/http://www.seacoastonline.com/2003news/hampton/09192003/news/51010.htm |date=2004-12-31 }}</ref>\n\nThe current [[Principal (school)|principal]] is Beth Raucci, who has held that position since 2018.<ref name=\"LAS Staff\">{{cite web|url=http://www.sau21.org/las/index.php/our-staff/certified-staff |title=Certified Staff |publisher=Lincoln Akerman School |accessdate=Feb 4, 2013 |url-status=dead |archiveurl=https://web.archive.org/web/20121222130011/http://www.sau21.org/las/index.php/our-staff/certified-staff |archivedate=2012-12-22 }}</ref> The previous principal was Mark Deblois who, for various reasons, was not rehired.<ref name=\"$40K water treatment plan for Lincoln Akerman\">[http://www.seacoastonline.com/news/hampton/01102006/news/82201.htm Hampton Union Local News: $40K water treatment plan for Lincoln Akerman<!-- Bot generated title -->] {{webarchive|url=https://web.archive.org/web/20090109200236/http://www.seacoastonline.com/news/hampton/01102006/news/82201.htm |date=2009-01-09 }}</ref>\n\n== Notable people ==\n[[Image:Elmfield, Hampton Falls, NH.jpg|thumb|right|''Elmfield,'' built in 1787, where summer resident [[John Greenleaf Whittier]] died in 1892.  Image c. 1910]]\n<!-- Note:\n\u00b7 Only people who already have a Wikipedia article may appear here. This establishes notability.\n\u00b7 The article must mention how they are associated with Hampton Falls, whether born, raised, or residing.\n\u00b7 The fact of their association should have a reliable source cited.\n\u00b7 Alphabetical by last name please.\n\u00b7 All others will be deleted.\n-->\n\n* [[Alice Brown (writer)|Alice Brown]] (1857-1948), novelist, poet and playwright<ref>{{cite web|title=Alice Brown|url=http://www.britannica.com/EBchecked/topic/81471/Alice-Brown|publisher=2014 Encyclop\u00e6dia Britannica, Inc.|accessdate=26 January 2014}}</ref> \n* [[Warren Brown (politician)|Warren Brown]] (1836\u20131919), politician<ref>{{cite book|last=Brown|first=Warren|title=The Granite Monthly: A Magazine of Literature, History and State ..., Volume 51|publisher=New England Agricultural Society|accessdate=January 27, 2014|pages=483\u2013484|url=https://books.google.com/books?id=NRoXAAAAYAAJ&pg=PA483&lpg=PA483&dq=warren+brown+(politician)+New+England+Agricultural+Society&source=bl&ots=S793WsTaqv&sig=QbnomZ3-mupqLCjjTmeOMurwSwM&hl=en&sa=X&ei=1vjmUsqMIIeS2QWSqoHgBg&ved=0CDIQ6AEwAw#v=onepage&q=warren%20brown%20(politician)%20New%20England%20Agricultural%20Society&f=false}}</ref> \n* [[Ralph Adams Cram]] (1863\u20131942), architect<ref>{{cite web|title=Ralph Adams Cram|url=http://ncarchitects.lib.ncsu.edu/people/P000305|publisher=North Carolina State University|accessdate=28 January 2014}}</ref> \n* [[Scotty Lago]] (1987-), Olympic gold medalist snowboarder{{citation needed|date=November 2014}}\n* [[Benson Leavitt]] (1797&ndash;1869), acting mayor of [[Boston, Massachusetts]]<ref>{{cite book|last=Leavitt|first=Benson|title=Proceedings of the New England Historic Genealogical Society|publisher=New England Historic Genealogical Society|accessdate=January 27, 2014|pages=35|url=https://books.google.com/books?id=IhEyAQAAIAAJ&pg=RA1-PR85&lpg=RA1-PR85&dq=Benson+Leavitt+-++Hampton+Falls&source=bl&ots=c7GFqPvbZq&sig=yIDDOwIod7ro5aSxXXnvtTUYK7Y&hl=en&sa=X&ei=lgbnUvrsJanY2AXnqYHgDQ&ved=0CDkQ6AEwBA#v=onepage&q=Benson%20Leavitt%20-%20%20Hampton%20Falls&f=false}}</ref> \n* [[Jonathan Leavitt (publisher)|Jonathan Leavitt]], publisher<ref>{{cite book|last=Leavitt|first=Jonathan|title=History of Hampton Falls, N.H.|publisher=Warren Brown|accessdate=January 27, 2014|pages=452|url=https://books.google.com/books?id=X7oMAAAAYAAJ&pg=PA452&dq=Jonathan+Leavitt+Hampton+falls&hl=en&sa=X&ei=-QnnUvO6Eof22gXqoYDoDg&ved=0CCkQ6AEwAA#v=onepage&q=Jonathan%20Leavitt%20Hampton%20falls&f=false}}</ref> \n* [[Wesley Powell]] (1915\u20131981), 70th [[List of Governors of New Hampshire|Governor of New Hampshire]]<ref>{{cite web|title=Wesley Powell|url=http://www.nga.org/cms/home/governors/past-governors-bios/page_new_hampshire/col2-content/main-content-list/title_powell_wesley.html|publisher=National Governors Association|accessdate=28 January 2014}}</ref> \n* [[Andy Pratt (singer-songwriter)|Andy Pratt]] (1947-), singer-songwriter\n* [[Florence Ryerson]] (1892-1965), screenwriter and playwright; co-author of script for [[The Wizard of Oz (1939 film)]]{{citation needed|date=November 2014}}\n* [[Franklin Benjamin Sanborn]], journalist, author, historian, abolitionist and social reformer<ref>{{cite web|title=Franklin Benjamin Sanborn|url=http://www.britannica.com/EBchecked/topic/521730/Franklin-Benjamin-Sanborn|publisher=2014 Encyclop\u00e6dia Britannica, Inc.|accessdate=28 January 2014}}</ref> \n* [[John H. Sununu]] (b. 1939), White House chief of staff and the 75th [[List of Governors of New Hampshire|governor of New Hampshire]]<ref>{{cite web|title=John H. Sununu|url=http://newsok.com/sununu-named-n.h.-towns-hog-wrangler/article/3031549|publisher=NewsOK.com|accessdate=28 January 2014}}</ref> \n* [[Meshech Weare]] (1713\u20131786), first [[List of Governors of New Hampshire|president of New Hampshire]]<ref>{{cite web|title=Meshech Weare|url=http://www.nga.org/cms/home/governors/past-governors-bios/page_new_hampshire/col2-content/main-content-list/title_weare_meshech.html|publisher=National Governors Association|accessdate=28 January 2014}}</ref> \n* [[John Greenleaf Whittier]] (1807\u20131892), poet and activist<ref>{{cite web|title=John Greenleaf Whittier|url=http://www.britannica.com/EBchecked/topic/642946/John-Greenleaf-Whittier|publisher=2014 Encyclop\u00e6dia Britannica, Inc.|accessdate=28 January 2014}}</ref> \n* [[Paine Wingate]] (1739\u20131838), preacher, US senator<ref>{{cite web|url=http://bioguide.congress.gov/scripts/biodisplay.pl?index=W000633 |title=WINGATE, Paine, (1739 - 1838) |publisher= Biographical Directory of the United States Congress|accessdate= January 16, 2014}}</ref>\n\n==References==\n{{Commons category}}\n{{Reflist|30em}}\n\n==External links==\n* [http://www.hamptonfalls.org/ Town of Hampton Falls official website]\n* [http://www.hamptonfallslibrary.org/ Hampton Falls Free Library]\n* [http://www.museumsusa.org/museums/info/2508169 Hampton Falls Historical Society]\n* [http://www.nhes.nh.gov/elmi/products/cp/profiles-htm/hamptonfalls.htm New Hampshire Economic and Labor Market Information Bureau Profile]\n* [http://www.sau21.org/las/ Lincoln Akerman School official website]\n\n{{Geographic location\n | Centre    = Hampton Falls\n | North     = [[Hampton, New Hampshire|Hampton]]\n | Northeast = [[Hampton, New Hampshire|Hampton]]\n | East      = [[Hampton, New Hampshire|Hampton]]\n | Southeast = [[Seabrook, New Hampshire|Seabrook]]\n | South     = [[Seabrook, New Hampshire|Seabrook]]\n | Southwest = [[Kensington, New Hampshire|Kensington]]\n | West      = [[Kensington, New Hampshire|Kensington]]\n | Northwest = [[Exeter, New Hampshire|Exeter]]\n}}\n\n{{Rockingham County, New Hampshire}}\n\n{{authority control}}\n\n[[Category:Towns in Rockingham County, New Hampshire]]\n[[Category:Populated places established in 1726]]\n[[Category:1726 establishments in the Thirteen Colonies]]\n[[Category:Towns in New Hampshire]]\n[[Category:Populated coastal places in New Hampshire]]\n[[Category:Hampton Falls, New Hampshire| ]]\n", "text_old": "{{Infobox settlement\n|official_name            = Hampton Falls, New Hampshire\n|nickname                 =\n|motto                    =\n|image_skyline            = HamptonFallsNH TownHall.jpg\n|image_seal               = Hampton Falls, NH Town Seal.png\n|imagesize                =\n|image_caption            = Town Hall\n|image_flag               =\n|image_map                = Rockingham County New Hampshire incorporated and unincorporated areas Hampton Falls highlighted.svg\n|mapsize                  = 260px\n|map_caption              = Location in [[Rockingham County, New Hampshire|Rockingham County]] and the state of [[New Hampshire]].\n|subdivision_type         = [[List of sovereign states|Country]]\n|subdivision_name         = United States\n|subdivision_type1        = [[U.S. state|State]]\n|subdivision_name1        = [[New Hampshire]]\n|subdivision_type2        = [[List of counties in New Hampshire|County]]\n|subdivision_name2        = [[Rockingham County, New Hampshire|Rockingham]]\n|government_type          =\n|leader_title             = [[Board of Selectmen]]\n|leader_name              = Larry M. Smith, Chair<br/>Edward B. Beattie<br/>Louis Gargiulo\n|leader_title1            = [[Town Administrator]]\n|leader_name1             = Lori A. Ruest\n|established_title        = [[Incorporation (municipal government)|Incorporated]]\n|established_date         = 1726\n|area_magnitude           = 1 E8\n|area_total_km2           = 32.4\n|area_total_sq_mi         = 12.5\n|area_land_km2            = 31.6\n|area_land_sq_mi          = 12.2\n|area_water_km2           = 0.8\n|area_water_sq_mi         = 0.3\n|area_water_percent       = 2.4\n|population_as_of         = [[2010 United States Census|2010]]\n|population_note          =\n|population_total         = 2236\n|population_density_km2   = \n|population_density_sq_mi = auto\n|timezone                 = [[Eastern Standard Time Zone|Eastern]]\n|utc_offset               = -5\n|timezone_DST             = [[Eastern Daylight Time Zone|Eastern]]\n|utc_offset_DST           = -4\n|coordinates              = {{coord|42|54|58|N|70|51|49|W|region:US-NH|display=inline,title}}\n|elevation_m              = 20\n|elevation_ft             = 66\n|website                  = {{URL|www.hamptonfalls.org}}\n|postal_code_type         = [[ZIP code]]\n|postal_code              = 03844\n|area_code                = [[Area code 603|603]]\n|blank_name               = [[Federal Information Processing Standard|FIPS code]]\n|blank_info               = 33-33460\n|blank1_name              = [[Geographic Names Information System|GNIS]] feature ID\n|blank1_info              = 0873617\n|footnotes                =\n}}\n'''Hampton Falls''' (formerly the Third Parish and Hampton falls) is a [[New England town]] in [[Rockingham County, New Hampshire|Rockingham County]], [[New Hampshire]], United States. The population was 2,236 at the [[2010 United States Census|2010 census]].<ref name=2010Census>United States Census Bureau, [https://www.census.gov U.S. Census website], 2010 Census figures. Retrieved March 23, 2011.</ref>\n\n==History==\n<!-- some stuff http://www.seacoastonline.com/apps/pbcs.dll/article?AID=/20080311/NEWS/803110378 -->\n[[Image:Hampton Falls old map.gif|thumb|left|A map of the center of what is now Hampton Falls in 1638]]\nThe land of Hampton Falls was first settled by [[European ethnic groups|European]]s in 1638, the same time as [[Hampton, New Hampshire|Hampton]], which it was then part of. The settlement of Hampton joined [[Norfolk County, Massachusetts Colony]], in 1643, along with [[Exeter, New Hampshire|Exeter]], [[Dover, New Hampshire|Dover]], [[Portsmouth, New Hampshire|Portsmouth]], and [[Salisbury, Massachusetts|Salisbury]] and [[Haverhill, New Hampshire|Haverhill]] of [[Massachusetts]]. The county existed until 1679, when the modern-day New Hampshire towns separated from [[Massachusetts Bay Colony]].<ref name=Coolidge>{{Cite book| last = Coolidge| first = Austin J.| author2=John B. Mansfield| title = A History and Description of New England| publisher = A.J. Coolidge| year = 1859| location = Boston, Massachusetts| page = [https://archive.org/details/bub_gb_OcoMAAAAYAAJ/page/n555 515]| url = https://archive.org/details/bub_gb_OcoMAAAAYAAJ| quote = coolidge mansfield history description new england 1859.}}</ref>\n\nRecords indicate a building that became a church may have existed near where the Weare Monument now is in 1665, but when it was first built is unknown. It was not until 1709 that the town was officially established as the Third Parish of [[Hampton, New Hampshire|Hampton]]. The Third Parish originally consisted of all land south of the [[Taylor River (New Hampshire)|Taylor River]] and north of the New Hampshire/[[Massachusetts]] border, or the modern-day towns of [[Seabrook, New Hampshire|Seabrook]], [[Kensington, New Hampshire|Kensington]], and Hampton Falls. A meeting house was built shortly after and [[Thomas Crosby (New Hampshire)|Thomas Crosby]] became the town's minister for the church. Forty-nine members of the Hampton Church were dismissed late in 1711, only to become members of the new church in the Third Parish. Parish officers and a representative were chosen in 1718. The first town meeting was held and town records began that year also. The {{convert|7400|acre|km2|adj=on}} town received its grant as an independent town with the name \"Hampton falls\" in 1726, but was still referred to as a parish until the [[American Revolutionary War|Revolutionary War]]. Those who did use its actual name in writing spelled it with a lowercase f until around the same time.<ref name=\"Hist. of Hampton Falls I\">{{cite book|last=Brown|first=Warren|year=1900|title=History of Hampton Falls Vol. I|publisher=John E. Clarke Co.|location=Manchester, New Hampshire}}</ref>\n\nAn attempt was made in 1732 to separate the western portion of Hampton falls and make it a parish of [[Kingston, New Hampshire|Kingston]]. The proposal failed in a way, yet succeeded in another; the land was separated, but it did not become part of Kingston, but became a town of its own, Kensington.<ref name=\"Hist. of Hampton Falls II\">{{cite book|last=Brown|first=Warren|year=1918|title=History of Hampton Falls Vol. II|publisher=The Rumford Press|location=Concord, New Hampshire}}</ref>\n\nA disease known as the [[Throat Distemper]] (now thought to have been a malignant form of [[diphtheria]]) infected the town with its symptoms in 1735 and 1736. Two-hundred and fourteen people of Hampton Falls perished, 96 of them being under the age of ten. Only two homes in town were throat distemper free. It passed through the town again in 1754, with far fewer casualties, but still many.<ref name=\"Hist. of Hampton Falls I\"/>\n\n[[File:John Hall, Hampton Falls, N.H, by Hobbs, W. N. (William N.), 1830-1881.jpg|thumb|left|Town Hall, completed in 1877, designed by Portsmouth architect Isaiah Wilson]]\n[[File:Fidelity Jumper Classic.jpg|thumb|left|2008 Fidelity Jumper Classic, held at the Silver Oak Equestrian Center]]\nSeventy-two people wanted Hampton Falls (which then included Seabrook and Kensington) to become a part of Massachusetts in 1739, including Meshech Weare, but the proposal failed in the end. In 1765, the [[Presbyterian]]s of the town wanted to form a new parish in the southern portion of the town, where a church of their religion existed. A town meeting was held on December 30 when the rest of the villagers learned of the Presbyterians' plans, and it was decided that the town would be separated into two. The new parish was formed in 1768, and became incorporated under the name [[Seabrook, New Hampshire|Seabrook]] shortly after. Hampton Falls was considered one of the leading manufacturing towns in the entire state of New Hampshire around the time of 1770.<ref name=\"Hist. of Hampton Falls I\"/>\n\nA plan to unite Seabrook and portions of Hampton Falls together was thought up in 1782. The town would've been called [[New Hampton Falls, New Hampshire|New Hampton Falls]], but Hampton Falls was successful in making the proposal fail. In 1835, the town of Hampton Falls had a new meeting-house erected. Where in town it existed is unknown.<ref name=\"Hist. of Hampton Falls I\"/>\n\nOn the night between October 29 and October 30 in 1827, an [[New England Earthquake of 1827|earthquake]] struck the small town. A flash of light from a fault in the southern region of the town occurred, with violent trembling shortly following. It caused at least three chimneys to collapse partially or completely, with several others cracked. Another, more severe earthquake also struck Hampton Falls on November 18, 1755, causing more, but not a lot of damage.<ref name=\"Hist. of Hampton Falls I\"/>\n\nOn May 21, 2006, an F2<ref name=\"wunderground\">[http://www.wunderground.com/US/NH/North_Hampton.html North Hampton, New Hampshire (03862) Conditions & Forecast : Weather Underground<!-- Bot generated title -->]</ref> tornado formed in the town at around 6:30&nbsp;p.m. EST.<ref name=\"spc\">[http://www.spc.noaa.gov/climo/reports/060521_rpts.html Storm Prediction Center 20060521's Storm Reports<!-- Bot generated title -->]</ref> It was near [[Interstate 95 in New Hampshire|Interstate 95]] where it overturned a truck, leaving two injured men and a kayak in a tree.<ref name=\"ncdc\">[http://www4.ncdc.noaa.gov/cgi-win/wwcgi.dll?wwevent~ShowEvent~623895 NCDC: Event Details]</ref>\n<!-- Some good info at http://www.city-data.com/city/Hampton-Falls-New-Hampshire.html mention stats, the other tornadoes. Also add info on Wakeda Bow Echo -->\n\n==Geography==\nThe city of [[Boston, Massachusetts|Boston]], [[Massachusetts]] is only {{convert|45|mi|km}} away, and [[Portsmouth, New Hampshire|Portsmouth]], [[New Hampshire]] is a mere {{convert|15|mi|km}} to the north.<ref name=\"hamptonfalls\">[http://www.hamptonfalls.org/ Town of Hampton Falls, New Hampshire<!-- Bot generated title -->] {{webarchive|url=https://web.archive.org/web/20060804033353/http://www.hamptonfalls.org/ |date=2006-08-04 }}</ref>\n\nThe highest point in town is the summit of Great Hill, at {{convert|230|ft|m}} above [[sea level]]), just north of the Weare mills on the [[Hampton Falls River]], at an altitude of {{convert|61|ft|m}} above sea level.<ref name=\"Hist. of Hampton Falls I\"/> According to the [[United States Census Bureau]], the town has a total area of {{convert|12.5|sqmi|km2|1}}, of which {{convert|12.2|sqmi|km2|abbr=on|1}} is land and {{convert|0.3|sqmi|km2|abbr=on}} is water, comprising 2.4% of the town. Hampton Falls lies fully within the [[Piscataqua River]] (Coastal) [[Drainage basin|watershed]].<ref name=watershed>{{cite book |title=Water Use in New Hampshire: An Activities Guide for Teachers |url=http://nh.water.usgs.gov/Publications/nh.intro.html |last=Foster |first=Debra H. |author2=Batorfalvy, Tatianna N. |author3= Medalie, Laura  |publisher=U.S. Department of the Interior and U.S. Geological Survey |year=1995}}</ref>\n\nThe town is served by [[Interstate 95 in New Hampshire|Interstate 95]], [[U.S. Route 1 in New Hampshire|U.S. Route 1]], [[New Hampshire Route 84]] and [[New Hampshire Route 88]].\n\n===Adjacent municipalities===\n* [[Hampton, New Hampshire]] (north)\n* [[Seabrook, New Hampshire]] (south)\n* [[Kensington, New Hampshire]] (west)\n* [[Exeter, New Hampshire]] (northwest)\n\n==Demographics==\n{{US Census population\n|1790= 541\n|1800= 519\n|1810= 570\n|1820= 572\n|1830= 582\n|1840= 656\n|1850= 640\n|1860= 621\n|1870= 679\n|1880= 678\n|1890= 623\n|1900= 560\n|1910= 552\n|1920= 483\n|1930= 481\n|1940= 493\n|1950= 629\n|1960= 885\n|1970= 1254\n|1980= 1372\n|1990= 1467\n|2000= 1890\n|2010= 2236\n|estyear=2017\n|estimate=2348\n|estref=<ref name=\"USCensusEst2017\">{{cite web|url=https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US33.06100|title=Annual Estimates of the Resident Population: April 1, 2010 to July 1, 2017 (PEPANNRES): Minor Civil Divisions \u2013 New Hampshire|accessdate=November 15, 2018|archive-url=https://archive.today/20200213183945/https://factfinder.census.gov/bkmk/table/1.0/en/PEP/2017/PEPANNRES/0400000US33.06100|archive-date=February 13, 2020|url-status=dead}}</ref>\n|footnote=Sources:<ref name=2010Census/><ref name=\"Hist. of Hampton Falls I\"/><ref name=\"nhes\"/>\n}}\nAs of the [[census]]<ref name=\"GR2\">{{cite web|url=https://www.census.gov|publisher=[[United States Census Bureau]]|accessdate=2008-01-31|title=U.S. Census website}}</ref> of 2000, there were 1,890 people, 704 households, and 546 families residing in the town.  The [[population density]] was 153.9 people per square mile (59.4/km\u00b2).  There were 729 housing units at an average density of 59.7 per square mile (23.0/km\u00b2).  The racial makeup of the town was 98.46% [[White (U.S. Census)|White]], 0.05% [[African American (U.S. Census)|African American]], 0.74% [[Asian (U.S. Census)|Asian]], 0.05% from [[Race (United States Census)|other races]], and 0.69% from two or more races. [[Hispanic (U.S. Census)|Hispanic]] or [[Latino (U.S. Census)|Latino]] of any race were 0.69% of the population.\n\nThere were 704 households out of which 34.7% had children under the age of 18 living with them, 70.5% were [[Marriage|married couples]] living together, 5.1% had a female householder with no husband present, and 22.4% were non-families. 16.5% of all households were made up of individuals and 7.8% had someone living alone who was 65 years of age or older. The average household size was 2.67 and the average family size was 3.03.\n\nIn the town, the population was spread out with 25.7% under the age of 18, 4.0% from 18 to 24, 27.1% from 25 to 44, 30.4% from 45 to 64, and 12.8% who were 65 years of age or older.  The median age was 42 years. For every 100 females, there were 102.8 males. For every 100 females age 18 and over, there were 96.3 males.\n\nThe median income for a household in the town was $76,348, and the median income for a family was $86,229. Males had a median income of $60,250 versus $36,750 for females. The [[per capita income]] for the town was $35,060. About 2.2% of families and 2.9% of the population were below the [[poverty line]], including 3.1% of those under age 18 and 3.3% of those age 65 or over.\n\nAccording to State figures, \"Population in Hampton Falls tripled over the last fifty years, growing above the statewide average rate in three of the five decades. Decennial growth rates ranged from a nine percent increase between 1970-1980 to a 42 percent increase between 1960-1970. Population in Hampton Falls grew by a total of 1,251 residents, going from 629 in 1950 to 1,880 residents in 2000.\"<ref name=\"nhes\"/>\n\n==Government==\nLike many [[New England town]]s, Hampton Falls has a [[town meeting]]/[[board of selectmen]] form of government. The current selectmen are Micheal Farinola, Richard P. McDermott and Maryann Kasprzak . Town meeting is held annually in the school auditorium, and elections are conducted using a New Hampshire Senate Bill 2 system.{{citation needed|date=November 2014}}\n\n==Economy==\n[[Image:HamptonFallsNH EastSchool.jpg|thumb|right|The old East School, adjacent to the public library]]\nOnce a [[farming]] and [[lumber]]ing community, the numerous falls on the Taylor River provided [[water power]] for mills operating within the town. Today it is largely residential, with numerous antique shops along [[U.S. Route 1 in New Hampshire|U.S. 1]].<ref name=\"nhes\">{{cite web|url=http://www.nhes.state.nh.us/elmi/htmlprofiles/hamptonfalls.html |title=Hampton Falls, New Hampshire |publisher=NH Dept. of Employment Security |access-date=2008-07-22 |url-status=dead |archive-url=https://web.archive.org/web/20071009145531/http://www.nhes.state.nh.us/elmi/htmlprofiles/hamptonfalls.html |archive-date=2007-10-09 |df= }}</ref> [[Applecrest Farm Orchards]], established in 1913, is the town's largest employer, with 18 employees.<ref name=\"applecrest\">[http://www.applecrest.com/ Applecrest Orchards] official site</ref>\n\n==Education==\nCurrently, the Lincoln Akerman School is the only public school in town. But at one point, five public schools existed, the North, South, West, and two East schools. One of the East Schools, founded around the time of the [[American Civil War|Civil War]], burned down in 1947 when its furnace exploded, and the Lincoln Akerman School replaced it in 1949. While a new school was being built, students had to travel to the neighboring town of [[Seabrook, New Hampshire]] to attend school. The other East School was moved to an area near the new library. Another school was turned into a home, and another was crushed by a boulder one winter when students pushed it off a hill.{{citation needed|date=November 2014}}\n\nHigh school students attend [[Winnacunnet High School]] in the neighboring town of [[Hampton, New Hampshire|Hampton]].<ref name=\"nhes\"/>\n\nHeronfield Academy, a private [[Episcopal Church (United States)|Episcopal]] middle school, is located on Exeter Road on the border of Hampton Falls and Exeter.<ref>[http://heronfield.org Heronfield Academy]</ref>\n\n===Lincoln Akerman School===\n[[File:lasschoolfront.jpg|thumb|right|Lincoln Akerman School]]\n'''Lincoln H. Akerman School''' ({{Coord|42|54|59|N|70|52|01|W|type:edu|display=inline}}) is a kindergarten through 8th grade [[elementary school]] and [[middle school]]. The school was constructed in 1949 and named after Lincoln Akerman (1916\u20131942), a local war hero and member of the prominent New Hampshire Akerman family. Akerman was the first Hampton Falls soldier reported to lose his life in [[World War II]].<ref>{{cite web|title=Pvt Lincoln Herbert Ackerman|url=https://www.findagrave.com/memorial/42431504}}</ref> Another famous Akerman from the area was [[Amos T. Akerman]] (1821\u20131880), [[United States Attorney General]] from 1870-1871.\n\nIn 1993, kindergarten was added to the school, though it is not required in the state of New Hampshire.\n\nIn the mid-1990s [[Dan Brown]], future best-selling author of ''[[The Da Vinci Code]]'', taught Spanish to the school's 6th, 7th, and 8th graders.\n\nIn 2003, Lincoln Akerman was cited in ''The Hampton Union'' for, according to the New Hampshire Educational Improvement and Assessment Program (NHEIAP), being notable for having scores that were \"significantly above the state average\" and climbing. Specific subjects cited were [[social studies]], [[language arts]], and [[math]].<ref name=\"Lincoln Akerman sees higher language, math scores\">[http://www.seacoastonline.com/2003news/hampton/09192003/news/51010.htm Hampton Union Local News: Lincoln Akerman sees higher language, math scores<!-- Bot generated title -->] {{webarchive|url=https://web.archive.org/web/20041231093818/http://www.seacoastonline.com/2003news/hampton/09192003/news/51010.htm |date=2004-12-31 }}</ref>\n\nThe current [[Principal (school)|principal]] is Mark Deblois, who has held that position since 2010.<ref name=\"LAS Staff\">{{cite web|url=http://www.sau21.org/las/index.php/our-staff/certified-staff |title=Certified Staff |publisher=Lincoln Akerman School |accessdate=Feb 4, 2013 |url-status=dead |archiveurl=https://web.archive.org/web/20121222130011/http://www.sau21.org/las/index.php/our-staff/certified-staff |archivedate=2012-12-22 }}</ref> The previous principal was Judith A. Deshaies.<ref name=\"$40K water treatment plan for Lincoln Akerman\">[http://www.seacoastonline.com/news/hampton/01102006/news/82201.htm Hampton Union Local News: $40K water treatment plan for Lincoln Akerman<!-- Bot generated title -->] {{webarchive|url=https://web.archive.org/web/20090109200236/http://www.seacoastonline.com/news/hampton/01102006/news/82201.htm |date=2009-01-09 }}</ref>\n\n== Notable people ==\n[[Image:Elmfield, Hampton Falls, NH.jpg|thumb|right|''Elmfield,'' built in 1787, where summer resident [[John Greenleaf Whittier]] died in 1892.  Image c. 1910]]\n<!-- Note:\n\u00b7 Only people who already have a Wikipedia article may appear here. This establishes notability.\n\u00b7 The article must mention how they are associated with Hampton Falls, whether born, raised, or residing.\n\u00b7 The fact of their association should have a reliable source cited.\n\u00b7 Alphabetical by last name please.\n\u00b7 All others will be deleted.\n-->\n\n* [[Alice Brown (writer)|Alice Brown]] (1857-1948), novelist, poet and playwright<ref>{{cite web|title=Alice Brown|url=http://www.britannica.com/EBchecked/topic/81471/Alice-Brown|publisher=2014 Encyclop\u00e6dia Britannica, Inc.|accessdate=26 January 2014}}</ref> \n* [[Warren Brown (politician)|Warren Brown]] (1836\u20131919), politician<ref>{{cite book|last=Brown|first=Warren|title=The Granite Monthly: A Magazine of Literature, History and State ..., Volume 51|publisher=New England Agricultural Society|accessdate=January 27, 2014|pages=483\u2013484|url=https://books.google.com/books?id=NRoXAAAAYAAJ&pg=PA483&lpg=PA483&dq=warren+brown+(politician)+New+England+Agricultural+Society&source=bl&ots=S793WsTaqv&sig=QbnomZ3-mupqLCjjTmeOMurwSwM&hl=en&sa=X&ei=1vjmUsqMIIeS2QWSqoHgBg&ved=0CDIQ6AEwAw#v=onepage&q=warren%20brown%20(politician)%20New%20England%20Agricultural%20Society&f=false}}</ref> \n* [[Ralph Adams Cram]] (1863\u20131942), architect<ref>{{cite web|title=Ralph Adams Cram|url=http://ncarchitects.lib.ncsu.edu/people/P000305|publisher=North Carolina State University|accessdate=28 January 2014}}</ref> \n* [[Scotty Lago]] (1987-), Olympic gold medalist snowboarder{{citation needed|date=November 2014}}\n* [[Benson Leavitt]] (1797&ndash;1869), acting mayor of [[Boston, Massachusetts]]<ref>{{cite book|last=Leavitt|first=Benson|title=Proceedings of the New England Historic Genealogical Society|publisher=New England Historic Genealogical Society|accessdate=January 27, 2014|pages=35|url=https://books.google.com/books?id=IhEyAQAAIAAJ&pg=RA1-PR85&lpg=RA1-PR85&dq=Benson+Leavitt+-++Hampton+Falls&source=bl&ots=c7GFqPvbZq&sig=yIDDOwIod7ro5aSxXXnvtTUYK7Y&hl=en&sa=X&ei=lgbnUvrsJanY2AXnqYHgDQ&ved=0CDkQ6AEwBA#v=onepage&q=Benson%20Leavitt%20-%20%20Hampton%20Falls&f=false}}</ref> \n* [[Jonathan Leavitt (publisher)|Jonathan Leavitt]], publisher<ref>{{cite book|last=Leavitt|first=Jonathan|title=History of Hampton Falls, N.H.|publisher=Warren Brown|accessdate=January 27, 2014|pages=452|url=https://books.google.com/books?id=X7oMAAAAYAAJ&pg=PA452&dq=Jonathan+Leavitt+Hampton+falls&hl=en&sa=X&ei=-QnnUvO6Eof22gXqoYDoDg&ved=0CCkQ6AEwAA#v=onepage&q=Jonathan%20Leavitt%20Hampton%20falls&f=false}}</ref> \n* [[Wesley Powell]] (1915\u20131981), 70th [[List of Governors of New Hampshire|Governor of New Hampshire]]<ref>{{cite web|title=Wesley Powell|url=http://www.nga.org/cms/home/governors/past-governors-bios/page_new_hampshire/col2-content/main-content-list/title_powell_wesley.html|publisher=National Governors Association|accessdate=28 January 2014}}</ref> \n* [[Andy Pratt (singer-songwriter)|Andy Pratt]] (1947-), singer-songwriter\n* [[Florence Ryerson]] (1892-1965), screenwriter and playwright; co-author of script for [[The Wizard of Oz (1939 film)]]{{citation needed|date=November 2014}}\n* [[Franklin Benjamin Sanborn]], journalist, author, historian, abolitionist and social reformer<ref>{{cite web|title=Franklin Benjamin Sanborn|url=http://www.britannica.com/EBchecked/topic/521730/Franklin-Benjamin-Sanborn|publisher=2014 Encyclop\u00e6dia Britannica, Inc.|accessdate=28 January 2014}}</ref> \n* [[John H. Sununu]] (b. 1939), White House chief of staff and the 75th [[List of Governors of New Hampshire|governor of New Hampshire]]<ref>{{cite web|title=John H. Sununu|url=http://newsok.com/sununu-named-n.h.-towns-hog-wrangler/article/3031549|publisher=NewsOK.com|accessdate=28 January 2014}}</ref> \n* [[Meshech Weare]] (1713\u20131786), first [[List of Governors of New Hampshire|president of New Hampshire]]<ref>{{cite web|title=Meshech Weare|url=http://www.nga.org/cms/home/governors/past-governors-bios/page_new_hampshire/col2-content/main-content-list/title_weare_meshech.html|publisher=National Governors Association|accessdate=28 January 2014}}</ref> \n* [[John Greenleaf Whittier]] (1807\u20131892), poet and activist<ref>{{cite web|title=John Greenleaf Whittier|url=http://www.britannica.com/EBchecked/topic/642946/John-Greenleaf-Whittier|publisher=2014 Encyclop\u00e6dia Britannica, Inc.|accessdate=28 January 2014}}</ref> \n* [[Paine Wingate]] (1739\u20131838), preacher, US senator<ref>{{cite web|url=http://bioguide.congress.gov/scripts/biodisplay.pl?index=W000633 |title=WINGATE, Paine, (1739 - 1838) |publisher= Biographical Directory of the United States Congress|accessdate= January 16, 2014}}</ref>\n\n==References==\n{{Commons category}}\n{{Reflist|30em}}\n\n==External links==\n* [http://www.hamptonfalls.org/ Town of Hampton Falls official website]\n* [http://www.hamptonfallslibrary.org/ Hampton Falls Free Library]\n* [http://www.museumsusa.org/museums/info/2508169 Hampton Falls Historical Society]\n* [http://www.nhes.nh.gov/elmi/products/cp/profiles-htm/hamptonfalls.htm New Hampshire Economic and Labor Market Information Bureau Profile]\n* [http://www.sau21.org/las/ Lincoln Akerman School official website]\n\n{{Geographic location\n | Centre    = Hampton Falls\n | North     = [[Hampton, New Hampshire|Hampton]]\n | Northeast = [[Hampton, New Hampshire|Hampton]]\n | East      = [[Hampton, New Hampshire|Hampton]]\n | Southeast = [[Seabrook, New Hampshire|Seabrook]]\n | South     = [[Seabrook, New Hampshire|Seabrook]]\n | Southwest = [[Kensington, New Hampshire|Kensington]]\n | West      = [[Kensington, New Hampshire|Kensington]]\n | Northwest = [[Exeter, New Hampshire|Exeter]]\n}}\n\n{{Rockingham County, New Hampshire}}\n\n{{authority control}}\n\n[[Category:Towns in Rockingham County, New Hampshire]]\n[[Category:Populated places established in 1726]]\n[[Category:1726 establishments in the Thirteen Colonies]]\n[[Category:Towns in New Hampshire]]\n[[Category:Populated coastal places in New Hampshire]]\n[[Category:Hampton Falls, New Hampshire| ]]\n", "name_user": "Baxterraxter", "label": "safe", "comment": "", "url_page": "//en.wikipedia.org/wiki/Hampton_Falls,_New_Hampshire"}
{"title_page": "Dependency hell", "text_new": "'''Dependency hell''' is a [[Colloquialism|colloquial term]] for the frustration of some software users who have installed [[Package manager|software packages]] which have [[Coupling (computer programming)|dependencies]] on specific [[Software versioning|version]]s of other software packages.<ref name=\"Dependency Hell\">{{cite book\n| title = Linux annoyances for geeks\n| author = Michael Jang\n| url = https://archive.org/details/linuxannoyancesf0000jang\n| url-access = registration\n| page = [https://archive.org/details/linuxannoyancesf0000jang/page/325 325]\n| publisher = O'Reilly Media\n| isbn = 9780596552244\n| year = 2006\n| accessdate = 2012-02-16}}</ref>\n\nThe dependency issue arises around ''shared'' packages or libraries on which several other packages have dependencies but where they depend on different and incompatible versions of the shared packages. If the shared package or library can only be installed in a single version, the user may need to address the problem by obtaining newer or older versions of the dependent packages. This, in turn, may break other dependencies and push the problem to another set of packages.\n\n== Problems ==\nDependency hell takes several forms:\n\n; Many dependencies\n: An application depends on many [[Library (computing)|libraries]], requiring lengthy downloads, large amounts of disk space, and being very portable (all libraries are already ported enabling the application itself to be ported easily). It can also be difficult to locate all the dependencies, which can be fixed by having a repository (see below). This is partly inevitable; an application built on a given [[computing platform]] (such as [[Java (software platform)|Java]]) requires that platform to be installed, but further applications do not require it. This is a particular problem if an application uses a small part of a big library (which can be solved by [[code refactoring]]), or a simple application relies on many libraries.<ref name=\"jamesdonald\">{{Cite journal\n| last = Donald\n| first = James\n| title = Improved Portability of Shared Libraries\n| archiveurl=https://web.archive.org/web/20070926130800/http://www.princeton.edu/~jdonald/research/shared_libraries/cs518_report.pdf\n| archivedate=2007-09-26\n| publisher = Princeton University\n| date = 2003-01-25\n| url = http://www.princeton.edu/~jdonald/research/shared_libraries/cs518_report.pdf\n| accessdate = 2010-04-09}}</ref>\n\n; Long chains of dependencies\n: If {{code|app}} depends on {{code|liba}}, which depends on {{code|libb}}, ..., which depends on {{code|libz}}. This is distinct from \"many dependencies\" if the dependencies must be resolved manually (e.g., on attempting to install {{code|app}}, the user is prompted to install {{code|liba}} first. On attempting to install {{code|liba}}, the user is then prompted to install {{code|libb}}, and so on.). Sometimes, however, during this long chain of dependencies, conflicts arise where two different versions of the same package are required<ref name=\"Dependency-Carousel\">{{cite journal\n| title = It's Good Work When You Can Find It; The Dependency Carousel\n| last = Stevens\n| first = Al\n| journal = J-DDJ\n| volume = 26\n| issue = 5\n| pages = 121\u2013124\n| issn = 1044-789X\n| url = http://www.drdobbs.com/blog/archives/2008/12/its_good_work_w.html\n| archiveurl=https://web.archive.org/web/20110811080730/http://drdobbs.com/blogs/architecture-and-design/228700267\n| archivedate=2011-08-11\n| publisher = www.drdobbs.com/blog\n| date = 2001-05-01\n| accessdate = 2010-04-10}}</ref> (see '''conflicting dependencies''' below). These long chains of dependencies can be solved by having a package manager that resolves all dependencies automatically. Other than being a hassle (to resolve all the dependencies manually), manual resolution can mask dependency cycles or conflicts.\n\n; Conflicting dependencies\n: If {{code|app1}} depends on {{code|libfoo 1.2}}, and {{code|app2}} depends on {{code|libfoo 1.3}}, and different versions of {{code|libfoo}} cannot be simultaneously installed, then {{code|app1}} and {{code|app2}} cannot simultaneously be used (or installed, if the installer checks dependencies). When possible, this is solved by allowing simultaneous installations of the different dependencies. Alternatively, the existing dependency, along with all software that depends on it, must be uninstalled in order to install the new dependency. A problem on Linux systems with installing packages from a different distributor (which is not recommended or even supposed to work) is that the resulting long chain of dependencies may lead to a conflicting version of the [[C standard library]] (e.g. the [[GNU C Library]]), on which thousands of packages depend. If this happens, the user will be prompted to uninstall all those packages.\n\n; Circular dependencies\n: If {{code|application A}} depends upon and can't run without a specific version of {{code|application B}}, but {{code|application B}}, in turn, depends upon and can't run without a specific version of {{code|application A}}. Upgrading any application will break another. This scheme can be deeper in branching. Its impact can be quite heavy, if it affects core systems or update software itself: a package manager(A), which requires specific run-time library(B) to function, may brick itself(A) in the middle of the process when upgrading this library(B) to next version. Due to incorrect library (B) version, the package manager(A) is now broken- thus no rollback or downgrade of library(B) is possible. The usual solution is to download and deploy both applications, sometimes from within a temporary environment.\n\n; Package Manager Dependencies\n: It is possible<ref name=\"linuxdependencyhell\"/> for dependency hell to result from installing a prepared package via a package manager (e.g. [[APT (Debian)|APT]]), but is unlikely since major package managers have matured and official repositories are well maintained. This is the case with current releases of [[Debian]] and major derivates such as [[Ubuntu (operating system)|Ubuntu]]. Dependency hell, however, can result from installing a package directly via a package installer (e.g. [[RPM Package Manager|RPM]] or [[dpkg]]).\n\n;Diamond dependency\n:When a library A depends on libraries B and C, both B and C depend on library D, but B requires version D.1 and C requires version D.2. The build fails because only one version of D can exist in the final executable\n\n: Package managers like [[yum (software)|yum]],<ref>{{Cite web |url=http://www.techbrown.com/fix-centos-rhel-fedora-yum-dependencies-hell-problem.shtml |title=Yum Dependency Hell |access-date=2015-12-28 |archive-url=https://web.archive.org/web/20161219072303/http://www.techbrown.com/fix-centos-rhel-fedora-yum-dependencies-hell-problem.shtml |archive-date=2016-12-19 |url-status=dead }}</ref> are prone to have conflicts between packages of their repositories, causing dependency hell in Linux distributions such as [[CentOS]] and [[Red Hat Enterprise Linux]].\n\n== Solutions ==\n\n; Version numbering\n: A very common solution to this problem is to have a standardized numbering system, wherein software uses a specific number for each version (aka ''[[Software versioning|major version]]''), and also a subnumber for each revision (aka ''[[Maintenance release|minor version]]''), e.g.: '''10'''.1, or 5.'''7'''. The major version only changes when programs that used that version will no longer be compatible. The minor version might change with even a simple revision that does not prevent other software from working with it. In cases like this, software packages can then simply request a component that has a particular major version, and ''any'' minor version (greater than or equal to a particular minor version). As such, they will continue to work, and dependencies will be resolved successfully, even if the minor version changes. Semantic Versioning (aka \"SemVer\" <ref>{{cite web|url=https://semver.org|title=Project website: semver.org}}</ref>) is one example of an effort to generate a technical specification that employs specifically formatted numbers to create a software versioning scheme.\n\n;Private per application versions\n: [[Windows File Protection]] introduced in [[Windows 2000]] prevented applications from overwriting system DLLs. Developers were instead encouraged to use \"Private DLLs\", copies of libraries per application in the directory of the application. This uses the Windows search path characteristic that the local path is always prioritized before the system directory with the system wide libraries. This allows easy and effective shadowing of library versions by specific application ones, therefore preventing dependency hell.<ref name=\"endofdllhell\">{{cite web\n| url=http://msdn.microsoft.com/library/techart/dlldanger1.htm\n| title=The End of DLL Hell\n| date=2000-01-11\n| archiveurl=https://web.archive.org/web/20010605023737/http://msdn.microsoft.com/library/techart/dlldanger1.htm\n| archivedate=2001-06-05\n| last=Anderson\n| first=Rick\n| publisher=microsoft.com\n| accessdate=2010-07-07\n}}</ref>\n\n; Side-by-side installation of multiple versions\n: The version numbering solution can be improved upon by elevating the version numbering to an operating system supported feature. This allows an application to request a module/library by a unique name ''and'' version number constraints, effectively transferring the responsibility for brokering library/module versions from the applications to the operating system. A shared module can then be placed in a central repository without the risk of breaking applications which are dependent on previous or later versions of the module. Each version gets its own entry, side by side with other versions of the same module.\n: This solution is used in [[Microsoft Windows]] operating systems since Windows Vista, where the [[Global Assembly Cache]] is an implementation of such a central registry with associated services and integrated with the installation system/package manager. [[Gentoo Linux]] solves this problem with a concept called slotting, which allows multiple versions of shared libraries to be installed.<ref>[https://devmanual.gentoo.org/general-concepts/slotting/index.html Slotting] on gentoo.org</ref>\n\n; Smart package management\n: Some [[package manager]]s can perform smart upgrades, in which interdependent software components are upgraded at the same time, thereby resolving the major number incompatibility issue too.\n: Many current [[Linux]] distributions have also implemented [[Version control|repository]]-based package management systems to try to solve the dependency problem. These systems are a layer on top of the [[RPM Package Manager|RPM]], [[dpkg]], or other packaging systems that are designed to automatically resolve dependencies by searching in predefined [[software repository|software repositories]]. Examples of these systems include [[Advanced Packaging Tool|Apt]], [[yum (software)|Yum]], [[Urpmi]], [[ZYpp]], [[Portage (software)|Portage]], [[Arch Linux#Pacman|Pacman]] and others. Typically, the software repositories are [[File Transfer Protocol|FTP]] sites or websites, [[Directory (computing)|directories]] on the local computer or shared across a [[computer network|network]] or, much less commonly, directories on removable media such as CDs or DVDs. This eliminates dependency hell for software packaged in those repositories, which are typically maintained by the Linux distribution provider and [[Website#mirror site|mirrored]] worldwide. Although these repositories are often huge, it is not possible to have every piece of software in them, so dependency hell can still occur. In all cases, dependency hell is still faced by the repository maintainers.<ref name=\"linuxdependencyhell\">{{cite web |url=http://archive09.linux.com/feature/155922 |title=Nix fixes dependency hell on all Linux distributions |author=Pjotr Prins |author2=Jeeva Suresh |author3=Eelco Dolstra |last-author-amp=yes |date=2008-12-22 |accessdate=2013-05-22 |publisher=linux.com |quote=''All popular package managers, including APT, RPM and the FreeBSD Ports Collection, suffer from the problem of destructive upgrades. When you perform an upgrade -- whether for a single application or your entire operating system -- the package manager will overwrite the files that are currently on your system with newer versions. As long as packages are always perfectly backward-compatible, this is not a problem, but in the real world, packages are anything but perfectly backward-compatible. Suppose you upgrade Firefox, and your package manager decides that you need a newer version of GTK as well. If the new GTK is not quite backward-compatible, then other applications on your system might suddenly break. In the Windows world a similar problem is known as the DLL hell, but dependency hell is just as much a problem in the Unix world, if not a bigger one, because Unix programs tend to have many external dependencies.'' |archive-url=https://web.archive.org/web/20150708101023/http://archive09.linux.com/feature/155922 |archive-date=2015-07-08 |url-status=dead }}</ref>\n: PC-BSD, up to and including version 8.2, a predecessor of [[TrueOS]] (an operating system based on [[FreeBSD]]) avoids dependency hell by placing packages and dependencies into self-contained directories in ''/Programs'', which avoids breakage if system libraries are upgraded or changed. It uses its own \"PBI\" (Push Button Installer) for package management.<ref>[https://web.archive.org/web/20130327233344/http://www.pbidir.com/ pbiDIR]</ref>\n\n; Installer options\n: Because different pieces of software have different dependencies, it is possible to get into a [[Virtuous circle and vicious circle|vicious circle]] of dependency [[requirement]]s, or an ever-expanding [[Tree structure|tree]] of requirements, as each new package demands several more be installed. Systems such as Debian's [[Advanced Packaging Tool]] can resolve this by presenting the user with a range of solutions, and allowing the user to accept or reject the solutions, as desired.\n\n; Easy adaptability in programming\n: If application software is designed in such a way that its programmers are able to easily adapt the interface layer that deals with the OS, window manager or desktop environment to new or changing standards, then the programmers would only have to monitor notifications from the environment creators or component library designers and quickly adjust their software with updates for their users, all with minimal effort and a lack of costly and time-consuming redesign. This method would encourage programmers to pressure those upon whom they depend to maintain a reasonable notification process that is not onerous to anyone involved.\n\n; Strict compatibility requirement in code development and maintenance\n: If the applications and libraries are developed and maintained with guaranteed downward compatibility in mind, any application or library can be replaced with a newer version at any time without breaking anything. While this does not alleviate the multitude of dependency, it does make the jobs of package managers or installers much easier.\n\n; [[Software appliance]]s\n: Another approach to avoiding dependency issues is to deploy applications as a [[software appliance]]. A software appliance encapsulates dependencies in a pre-integrated self-contained unit such that users no longer have to worry about resolving software dependencies. Instead the burden is shifted to developers of the software appliance.\n\n; [[Portable application]]s\n: An application (or version of an existing conventional application) that is completely self-contained and requires nothing to be already installed. It is coded to have all necessary components included, or is designed to keep all necessary files within its own directory, and will not create a dependency problem. These are often able to run independently of the system to which they are connected. Applications in [[RISC OS]] and the [[ROX Desktop]] for Linux use [[application directory|application directories]], which work in much the same way: programs and their dependencies are self-contained in their own directories (folders).<ref>{{cite web\n| url=http://rox.sourceforge.net/desktop/AppDirs.html\n| title=Application directories\n| accessdate=7 September 2013\n}}</ref>\n: This method of distribution has also proven useful when porting applications designed for Unix-like platforms to Windows, the most noticeable drawback being multiple installations of the same [[Library (computing)#Shared libraries|shared libraries]]. For example, Windows installers for [[gedit]], [[GIMP]], and [[XChat]] all include identical copies of the [[GTK+]] toolkit, which these programs use to render widgets. On the other hand, if different versions of GTK+ are required by each application, then this is the correct behavior and successfully avoids dependency hell.\n\n==Platform-specific==\nOn specific [[computing platform]]s, \"dependency hell\" often goes by a local specific name, generally the name of components.\n\n* [[DLL Hell]]{{snd}} a form of dependency hell occurring on [[Microsoft Windows]].\n* [[Extension conflict]]{{snd}} a form of dependency hell occurring on the [[classic Mac OS]].\n* [[Java Classloader#JAR hell|JAR hell]]{{snd}} a form of dependency hell occurring in the [[Java virtual machine|Java Runtime Environment]] before build tools like [[Apache Maven]] solved this problem back in 2004.{{citation needed|date=March 2017}}\n* RPM hell{{snd}} a form of dependency hell occurring in the [[Red Hat]] distribution of [[Linux]] and other distributions that use [[rpm (software)|RPM]] as a package manager.<ref name=\"linuxcompa\">{{cite web\n| title = Is Linux Annoying?\n| last = Weinstein\n| first = Paul\n| url = http://linuxdevcenter.com/pub/a/linux/2003/09/11/linux_annoyances.html\n| publisher = linuxdevcenter.com\n| date = 2003-09-11\n| accessdate = 2010-04-10}}</ref>\n\n== See also ==\n* [[Configuration management]]{{snd}} techniques and tools for managing software versions\n* [[Coupling (computer programming)|Coupling]]{{snd}} forms of dependency among software artifacts\n* [[Dynamic dead code elimination]]\n* [[Package manager]]\n* [[TrueOS#History|PBI]]\n* [[Software appliance]]\n* [[Nix package manager]]\n* [[Left-pad]]\n\n== References ==\n{{reflist|30em}}\n\n== External links ==\n* [http://c2.com/cgi/wiki?ContextIndependence Context independence]\n* [http://www.dependencywalker.com/ Dependency walker]\n* [http://www.scons.org/doc/0.97/HTML/scons-user/x933.html Implicit dependency]\n* [https://archive.today/20130102230355/http://macdependency.googlecode.com/ MacDependency]\n\n{{DEFAULTSORT:Dependency Hell}}\n[[Category:Anti-patterns]]\n[[Category:Package management systems]]\n[[Category:Version control systems]]\n[[Category:Computer errors]]\n[[Category:Software engineering folklore]]\n", "text_old": "'''Dependency hell''' is a [[Colloquialism|colloquial term]] for the frustration of some software users who have installed [[Package manager|software packages]] which have [[Coupling (computer programming)|dependencies]] on specific [[Software versioning|version]]s of other software packages.<ref name=\"Dependency Hell\">{{cite book\n| title = Linux annoyances for geeks\n| author = Michael Jang\n| url = https://archive.org/details/linuxannoyancesf0000jang\n| url-access = registration\n| page = [https://archive.org/details/linuxannoyancesf0000jang/page/325 325]\n| publisher = O'Reilly Media\n| isbn = 9780596552244\n| year = 2006\n| accessdate = 2012-02-16}}</ref>\n\nThe dependency issue arises around ''shared'' packages or libraries on which several other packages have dependencies but where they depend on different and incompatible versions of the shared packages. If the shared package or library can only be installed in a single version, the user may need to address the problem by obtaining newer or older versions of the dependent packages. This, in turn, may break other dependencies and push the problem to another set of packages.\n\n== Problems ==\nDependency hell takes several forms:\n\n; Many dependencies\n: An application depends on many [[Library (computing)|libraries]], requiring lengthy downloads, large amounts of disk space, and being very portable (all libraries are already ported enabling the application itself to be ported easily). It can also be difficult to locate all the dependencies, which can be fixed by having a repository (see below). This is partly inevitable; an application built on a given [[computing platform]] (such as [[Java (software platform)|Java]]) requires that platform to be installed, but further applications do not require it. This is a particular problem if an application uses a small part of a big library (which can be solved by [[code refactoring]]), or a simple application relies on many libraries.<ref name=\"jamesdonald\">{{Cite journal\n| last = Donald\n| first = James\n| title = Improved Portability of Shared Libraries\n| archiveurl=https://web.archive.org/web/20070926130800/http://www.princeton.edu/~jdonald/research/shared_libraries/cs518_report.pdf\n| archivedate=2007-09-26\n| publisher = Princeton University\n| date = 2003-01-25\n| url = http://www.princeton.edu/~jdonald/research/shared_libraries/cs518_report.pdf\n| accessdate = 2010-04-09}}</ref>\n\n; Long chains of dependencies\n: If {{code|app}} depends on {{code|liba}}, which depends on {{code|libb}}, ..., which depends on {{code|libz}}. This is distinct from \"many dependencies\" if the dependencies must be resolved manually (e.g., on attempting to install {{code|app}}, the user is prompted to install {{code|liba}} first. On attempting to install {{code|liba}}, the user is then prompted to install {{code|libb}}, and so on.). Sometimes, however, during this long chain of dependencies, conflicts arise where two different versions of the same package are required<ref name=\"Dependency-Carousel\">{{cite journal\n| title = It's Good Work When You Can Find It; The Dependency Carousel\n| last = Stevens\n| first = Al\n| journal = J-DDJ\n| volume = 26\n| issue = 5\n| pages = 121\u2013124\n| issn = 1044-789X\n| url = http://www.drdobbs.com/blog/archives/2008/12/its_good_work_w.html\n| archiveurl=https://web.archive.org/web/20110811080730/http://drdobbs.com/blogs/architecture-and-design/228700267\n| archivedate=2011-08-11\n| publisher = www.drdobbs.com/blog\n| date = 2001-05-01\n| accessdate = 2010-04-10}}</ref> (see '''conflicting dependencies''' below). These long chains of dependencies can be solved by having a package manager that resolves all dependencies automatically. Other than being a hassle (to resolve all the dependencies manually), manual resolution can mask dependency cycles or conflicts.\n\n; Conflicting dependencies\n: If {{code|app1}} depends on {{code|libfoo 1.2}}, and {{code|app2}} depends on {{code|libfoo 1.3}}, and different versions of {{code|libfoo}} cannot be simultaneously installed, then {{code|app1}} and {{code|app2}} cannot simultaneously be used (or installed, if the installer checks dependencies). When possible, this is solved by allowing simultaneous installations of the different dependencies. Alternatively, the existing dependency, along with all software that depends on it, must be uninstalled in order to install the new dependency. A problem on Linux systems with installing packages from a different distributor (which is not recommended or even supposed to work) is that the resulting long chain of dependencies may lead to a conflicting version of the [[C standard library]] (e.g. the [[GNU C Library]]), on which thousands of packages depend. If this happens, the user will be prompted to uninstall all those packages.\n\n; Circular dependencies\n: If {{code|application A}} depends upon and can't run without a specific version of {{code|application B}}, but {{code|application B}}, in turn, depends upon and can't run without a specific version of {{code|application A}}. Upgrading any application will break another. This scheme can be deeper in branching. Its impact can be quite heavy, if it affects core systems or update software itself: a package manager(A), which requires specific run-time library(B) to function, may brick itself(A) in the middle of the process when upgrading this library(B) to next version. Due to incorrect library (B) version, the package manager(A) is now broken- thus no rollback or downgrade of library(B) is possible. The usual solution is to download and deploy both applications, sometimes from within a temporary environment.\n\n; Package Manager Dependencies\n: Dependency hell is unlikely but possible<ref name=\"linuxdependencyhell\"/> to result from installing a prepared package via a package manager (e.g. [[APT (Debian)|APT]]), because major package managers have matured and official repositories are well maintained. This is the case with current releases of [[Debian]] and major derivates such as [[Ubuntu (operating system)|Ubuntu]]. Dependency hell, however, can result from installing a package directly via a package installer (e.g. [[RPM Package Manager|RPM]] or [[dpkg]]).\n\n;Diamond dependency\n:When a library A depends on libraries B and C, both B and C depend on library D, but B requires version D.1 and C requires version D.2. The build fails because only one version of D can exist in the final executable\n\n: Package managers like [[yum (software)|yum]],<ref>{{Cite web |url=http://www.techbrown.com/fix-centos-rhel-fedora-yum-dependencies-hell-problem.shtml |title=Yum Dependency Hell |access-date=2015-12-28 |archive-url=https://web.archive.org/web/20161219072303/http://www.techbrown.com/fix-centos-rhel-fedora-yum-dependencies-hell-problem.shtml |archive-date=2016-12-19 |url-status=dead }}</ref> are prone to have conflicts between packages of their repositories, causing dependency hell in Linux distributions such as [[CentOS]] and [[Red Hat Enterprise Linux]].\n\n== Solutions ==\n\n; Version numbering\n: A very common solution to this problem is to have a standardized numbering system, wherein software uses a specific number for each version (aka ''[[Software versioning|major version]]''), and also a subnumber for each revision (aka ''[[Maintenance release|minor version]]''), e.g.: '''10'''.1, or 5.'''7'''. The major version only changes when programs that used that version will no longer be compatible. The minor version might change with even a simple revision that does not prevent other software from working with it. In cases like this, software packages can then simply request a component that has a particular major version, and ''any'' minor version (greater than or equal to a particular minor version). As such, they will continue to work, and dependencies will be resolved successfully, even if the minor version changes. Semantic Versioning (aka \"SemVer\" <ref>{{cite web|url=https://semver.org|title=Project website: semver.org}}</ref>) is one example of an effort to generate a technical specification that employs specifically formatted numbers to create a software versioning scheme.\n\n;Private per application versions\n: [[Windows File Protection]] introduced in [[Windows 2000]] prevented applications from overwriting system DLLs. Developers were instead encouraged to use \"Private DLLs\", copies of libraries per application in the directory of the application. This uses the Windows search path characteristic that the local path is always prioritized before the system directory with the system wide libraries. This allows easy and effective shadowing of library versions by specific application ones, therefore preventing dependency hell.<ref name=\"endofdllhell\">{{cite web\n| url=http://msdn.microsoft.com/library/techart/dlldanger1.htm\n| title=The End of DLL Hell\n| date=2000-01-11\n| archiveurl=https://web.archive.org/web/20010605023737/http://msdn.microsoft.com/library/techart/dlldanger1.htm\n| archivedate=2001-06-05\n| last=Anderson\n| first=Rick\n| publisher=microsoft.com\n| accessdate=2010-07-07\n}}</ref>\n\n; Side-by-side installation of multiple versions\n: The version numbering solution can be improved upon by elevating the version numbering to an operating system supported feature. This allows an application to request a module/library by a unique name ''and'' version number constraints, effectively transferring the responsibility for brokering library/module versions from the applications to the operating system. A shared module can then be placed in a central repository without the risk of breaking applications which are dependent on previous or later versions of the module. Each version gets its own entry, side by side with other versions of the same module.\n: This solution is used in [[Microsoft Windows]] operating systems since Windows Vista, where the [[Global Assembly Cache]] is an implementation of such a central registry with associated services and integrated with the installation system/package manager. [[Gentoo Linux]] solves this problem with a concept called slotting, which allows multiple versions of shared libraries to be installed.<ref>[https://devmanual.gentoo.org/general-concepts/slotting/index.html Slotting] on gentoo.org</ref>\n\n; Smart package management\n: Some [[package manager]]s can perform smart upgrades, in which interdependent software components are upgraded at the same time, thereby resolving the major number incompatibility issue too.\n: Many current [[Linux]] distributions have also implemented [[Version control|repository]]-based package management systems to try to solve the dependency problem. These systems are a layer on top of the [[RPM Package Manager|RPM]], [[dpkg]], or other packaging systems that are designed to automatically resolve dependencies by searching in predefined [[software repository|software repositories]]. Examples of these systems include [[Advanced Packaging Tool|Apt]], [[yum (software)|Yum]], [[Urpmi]], [[ZYpp]], [[Portage (software)|Portage]], [[Arch Linux#Pacman|Pacman]] and others. Typically, the software repositories are [[File Transfer Protocol|FTP]] sites or websites, [[Directory (computing)|directories]] on the local computer or shared across a [[computer network|network]] or, much less commonly, directories on removable media such as CDs or DVDs. This eliminates dependency hell for software packaged in those repositories, which are typically maintained by the Linux distribution provider and [[Website#mirror site|mirrored]] worldwide. Although these repositories are often huge, it is not possible to have every piece of software in them, so dependency hell can still occur. In all cases, dependency hell is still faced by the repository maintainers.<ref name=\"linuxdependencyhell\">{{cite web |url=http://archive09.linux.com/feature/155922 |title=Nix fixes dependency hell on all Linux distributions |author=Pjotr Prins |author2=Jeeva Suresh |author3=Eelco Dolstra |last-author-amp=yes |date=2008-12-22 |accessdate=2013-05-22 |publisher=linux.com |quote=''All popular package managers, including APT, RPM and the FreeBSD Ports Collection, suffer from the problem of destructive upgrades. When you perform an upgrade -- whether for a single application or your entire operating system -- the package manager will overwrite the files that are currently on your system with newer versions. As long as packages are always perfectly backward-compatible, this is not a problem, but in the real world, packages are anything but perfectly backward-compatible. Suppose you upgrade Firefox, and your package manager decides that you need a newer version of GTK as well. If the new GTK is not quite backward-compatible, then other applications on your system might suddenly break. In the Windows world a similar problem is known as the DLL hell, but dependency hell is just as much a problem in the Unix world, if not a bigger one, because Unix programs tend to have many external dependencies.'' |archive-url=https://web.archive.org/web/20150708101023/http://archive09.linux.com/feature/155922 |archive-date=2015-07-08 |url-status=dead }}</ref>\n: PC-BSD, up to and including version 8.2, a predecessor of [[TrueOS]] (an operating system based on [[FreeBSD]]) avoids dependency hell by placing packages and dependencies into self-contained directories in ''/Programs'', which avoids breakage if system libraries are upgraded or changed. It uses its own \"PBI\" (Push Button Installer) for package management.<ref>[https://web.archive.org/web/20130327233344/http://www.pbidir.com/ pbiDIR]</ref>\n\n; Installer options\n: Because different pieces of software have different dependencies, it is possible to get into a [[Virtuous circle and vicious circle|vicious circle]] of dependency [[requirement]]s, or an ever-expanding [[Tree structure|tree]] of requirements, as each new package demands several more be installed. Systems such as Debian's [[Advanced Packaging Tool]] can resolve this by presenting the user with a range of solutions, and allowing the user to accept or reject the solutions, as desired.\n\n; Easy adaptability in programming\n: If application software is designed in such a way that its programmers are able to easily adapt the interface layer that deals with the OS, window manager or desktop environment to new or changing standards, then the programmers would only have to monitor notifications from the environment creators or component library designers and quickly adjust their software with updates for their users, all with minimal effort and a lack of costly and time-consuming redesign. This method would encourage programmers to pressure those upon whom they depend to maintain a reasonable notification process that is not onerous to anyone involved.\n\n; Strict compatibility requirement in code development and maintenance\n: If the applications and libraries are developed and maintained with guaranteed downward compatibility in mind, any application or library can be replaced with a newer version at any time without breaking anything. While this does not alleviate the multitude of dependency, it does make the jobs of package managers or installers much easier.\n\n; [[Software appliance]]s\n: Another approach to avoiding dependency issues is to deploy applications as a [[software appliance]]. A software appliance encapsulates dependencies in a pre-integrated self-contained unit such that users no longer have to worry about resolving software dependencies. Instead the burden is shifted to developers of the software appliance.\n\n; [[Portable application]]s\n: An application (or version of an existing conventional application) that is completely self-contained and requires nothing to be already installed. It is coded to have all necessary components included, or is designed to keep all necessary files within its own directory, and will not create a dependency problem. These are often able to run independently of the system to which they are connected. Applications in [[RISC OS]] and the [[ROX Desktop]] for Linux use [[application directory|application directories]], which work in much the same way: programs and their dependencies are self-contained in their own directories (folders).<ref>{{cite web\n| url=http://rox.sourceforge.net/desktop/AppDirs.html\n| title=Application directories\n| accessdate=7 September 2013\n}}</ref>\n: This method of distribution has also proven useful when porting applications designed for Unix-like platforms to Windows, the most noticeable drawback being multiple installations of the same [[Library (computing)#Shared libraries|shared libraries]]. For example, Windows installers for [[gedit]], [[GIMP]], and [[XChat]] all include identical copies of the [[GTK+]] toolkit, which these programs use to render widgets. On the other hand, if different versions of GTK+ are required by each application, then this is the correct behavior and successfully avoids dependency hell.\n\n==Platform-specific==\nOn specific [[computing platform]]s, \"dependency hell\" often goes by a local specific name, generally the name of components.\n\n* [[DLL Hell]]{{snd}} a form of dependency hell occurring on [[Microsoft Windows]].\n* [[Extension conflict]]{{snd}} a form of dependency hell occurring on the [[classic Mac OS]].\n* [[Java Classloader#JAR hell|JAR hell]]{{snd}} a form of dependency hell occurring in the [[Java virtual machine|Java Runtime Environment]] before build tools like [[Apache Maven]] solved this problem back in 2004.{{citation needed|date=March 2017}}\n* RPM hell{{snd}} a form of dependency hell occurring in the [[Red Hat]] distribution of [[Linux]] and other distributions that use [[rpm (software)|RPM]] as a package manager.<ref name=\"linuxcompa\">{{cite web\n| title = Is Linux Annoying?\n| last = Weinstein\n| first = Paul\n| url = http://linuxdevcenter.com/pub/a/linux/2003/09/11/linux_annoyances.html\n| publisher = linuxdevcenter.com\n| date = 2003-09-11\n| accessdate = 2010-04-10}}</ref>\n\n== See also ==\n* [[Configuration management]]{{snd}} techniques and tools for managing software versions\n* [[Coupling (computer programming)|Coupling]]{{snd}} forms of dependency among software artifacts\n* [[Dynamic dead code elimination]]\n* [[Package manager]]\n* [[TrueOS#History|PBI]]\n* [[Software appliance]]\n* [[Nix package manager]]\n* [[Left-pad]]\n\n== References ==\n{{reflist|30em}}\n\n== External links ==\n* [http://c2.com/cgi/wiki?ContextIndependence Context independence]\n* [http://www.dependencywalker.com/ Dependency walker]\n* [http://www.scons.org/doc/0.97/HTML/scons-user/x933.html Implicit dependency]\n* [https://archive.today/20130102230355/http://macdependency.googlecode.com/ MacDependency]\n\n{{DEFAULTSORT:Dependency Hell}}\n[[Category:Anti-patterns]]\n[[Category:Package management systems]]\n[[Category:Version control systems]]\n[[Category:Computer errors]]\n[[Category:Software engineering folklore]]\n", "name_user": "Rabbitflyer", "label": "safe", "comment": "\u2192\u200eProblems:Confusing word order in subsection \"Package Manager Dependencies\".", "url_page": "//en.wikipedia.org/wiki/Dependency_hell"}
{"title_page": "Raymond A. Vonderlehr", "text_new": "{{Use mdy dates|date=April 2018}}\n{{Infobox officeholder\n| name                = Raymond A. Vonderlehr\n| image               = Raymond_A._Vonderlehr.jpg\n| office              = Director of the [[Centers for Disease Control and Prevention]]\n| president           = \n| term_start          = 1947\n| term_end            = 1951\n| predecessor         = [[Mark D. Hollis]]\n| successor           = [[Justin M. Andrews]]\n| birth_name          = \n| birth_date          = \n| birth_place         = \n| death_date          = \n| death_place         = \n}}\n\n'''Raymond A. Vonderlehr''' was the director of the [[Centers for Disease Control and Prevention]] from 1947 to 1951.<ref>{{Cite web|url=https://www.cdc.gov/about/history/pastdirectors.htm|title=Past CDC Directors/Administrators {{!}} About {{!}} CDC|date=2018-07-20|website=www.cdc.gov|language=en-us|access-date=2020-04-15}}</ref>\n<references />\n\n{{Uncategorized|date=April 2020}}\n", "text_old": "{{Use mdy dates|date=April 2018}}\n{{Infobox officeholder\n| name                = Raymond A. Vonderlehr\n| image               = Raymond_A._Vonderlehr.jpg\n| office              = Director of the [[Centers for Disease Control and Prevention]]\n| president           = \n| term_start          = 1947\n| term_end            = 1951\n| predecessor         = [[Mark D. Hollis]]\n| successor           = [[Justin M. Andrews]]\n| birth_name          = \n| birth_date          = \n| birth_place         = \n| death_date          = \n| death_place         = \n}}\n\n'''Raymond A. Vonderlehr''' was the director of the [[Centers for Disease Control and Prevention]] from 1947 to 1951.<ref>{{Cite web|url=https://www.cdc.gov/about/history/pastdirectors.htm|title=Past CDC Directors/Administrators {{!}} About {{!}} CDC|date=2018-07-20|website=www.cdc.gov|language=en-us|access-date=2020-04-15}}</ref>\n<references />\n", "name_user": "CAPTAIN RAJU", "label": "safe", "comment": "\u2192\u200etop:clean up, addeduncategorisedtag", "url_page": "//en.wikipedia.org/wiki/Raymond_A._Vonderlehr"}
